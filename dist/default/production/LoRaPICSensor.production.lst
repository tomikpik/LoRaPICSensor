

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Mar 20 22:35:38 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           	psect	idataCOMRAM
    73  0012D0                     __pidataCOMRAM:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _randx
    77  0012D0  0001               	dw	1
    78  0012D2  0000               	dw	0
    79                           
    80                           	psect	mediumconst
    81  00FEA2                     __pmediumconst:
    82                           	opt stack 0
    83  00FEA2  00                 	db	0
    84  00FEA3                     _dpowers:
    85                           	opt stack 0
    86  00FEA3  0001               	dw	1
    87  00FEA5  000A               	dw	10
    88  00FEA7  0064               	dw	100
    89  00FEA9  03E8               	dw	1000
    90  00FEAB  2710               	dw	10000
    91  00FEAD                     __end_of_dpowers:
    92                           	opt stack 0
    93  00FEAD                     _hexpowers:
    94                           	opt stack 0
    95  00FEAD  0001               	dw	1
    96  00FEAF  0010               	dw	16
    97  00FEB1  0100               	dw	256
    98  00FEB3  1000               	dw	4096
    99  00FEB5                     __end_of_hexpowers:
   100                           	opt stack 0
   101  00FEB5                     STR_22:
   102  00FEB5  73                 	db	115	;'s'
   103  00FEB6  79                 	db	121	;'y'
   104  00FEB7  73                 	db	115	;'s'
   105  00FEB8  20                 	db	32
   106  00FEB9  73                 	db	115	;'s'
   107  00FEBA  6C                 	db	108	;'l'
   108  00FEBB  65                 	db	101	;'e'
   109  00FEBC  65                 	db	101	;'e'
   110  00FEBD  70                 	db	112	;'p'
   111  00FEBE  20                 	db	32
   112  00FEBF  31                 	db	49	;'1'
   113  00FEC0  30                 	db	48	;'0'
   114  00FEC1  30                 	db	48	;'0'
   115  00FEC2  30                 	db	48	;'0'
   116  00FEC3  30                 	db	48	;'0'
   117  00FEC4  30                 	db	48	;'0'
   118  00FEC5  0D                 	db	13
   119  00FEC6  0A                 	db	10
   120  00FEC7  00                 	db	0
   121  00FEC8                     STR_17:
   122  00FEC8  72                 	db	114	;'r'
   123  00FEC9  61                 	db	97	;'a'
   124  00FECA  64                 	db	100	;'d'
   125  00FECB  69                 	db	105	;'i'
   126  00FECC  6F                 	db	111	;'o'
   127  00FECD  20                 	db	32
   128  00FECE  73                 	db	115	;'s'
   129  00FECF  65                 	db	101	;'e'
   130  00FED0  74                 	db	116	;'t'
   131  00FED1  20                 	db	32
   132  00FED2  62                 	db	98	;'b'
   133  00FED3  77                 	db	119	;'w'
   134  00FED4  20                 	db	32
   135  00FED5  35                 	db	53	;'5'
   136  00FED6  30                 	db	48	;'0'
   137  00FED7  30                 	db	48	;'0'
   138  00FED8  0D                 	db	13
   139  00FED9  0A                 	db	10
   140  00FEDA  00                 	db	0
   141  00FEDB                     STR_16:
   142  00FEDB  72                 	db	114	;'r'
   143  00FEDC  61                 	db	97	;'a'
   144  00FEDD  64                 	db	100	;'d'
   145  00FEDE  69                 	db	105	;'i'
   146  00FEDF  6F                 	db	111	;'o'
   147  00FEE0  20                 	db	32
   148  00FEE1  73                 	db	115	;'s'
   149  00FEE2  65                 	db	101	;'e'
   150  00FEE3  74                 	db	116	;'t'
   151  00FEE4  20                 	db	32
   152  00FEE5  70                 	db	112	;'p'
   153  00FEE6  77                 	db	119	;'w'
   154  00FEE7  72                 	db	114	;'r'
   155  00FEE8  20                 	db	32
   156  00FEE9  2D                 	db	45
   157  00FEEA  32                 	db	50	;'2'
   158  00FEEB  0D                 	db	13
   159  00FEEC  0A                 	db	10
   160  00FEED  00                 	db	0
   161  00FEEE                     STR_18:
   162  00FEEE  72                 	db	114	;'r'
   163  00FEEF  61                 	db	97	;'a'
   164  00FEF0  64                 	db	100	;'d'
   165  00FEF1  69                 	db	105	;'i'
   166  00FEF2  6F                 	db	111	;'o'
   167  00FEF3  20                 	db	32
   168  00FEF4  73                 	db	115	;'s'
   169  00FEF5  65                 	db	101	;'e'
   170  00FEF6  74                 	db	116	;'t'
   171  00FEF7  20                 	db	32
   172  00FEF8  73                 	db	115	;'s'
   173  00FEF9  66                 	db	102	;'f'
   174  00FEFA  20                 	db	32
   175  00FEFB  73                 	db	115	;'s'
   176  00FEFC  66                 	db	102	;'f'
   177  00FEFD  37                 	db	55	;'7'
   178  00FEFE  0D                 	db	13
   179  00FEFF  0A                 	db	10
   180  00FF00  00                 	db	0
   181  00FF01                     STR_19:
   182  00FF01  72                 	db	114	;'r'
   183  00FF02  61                 	db	97	;'a'
   184  00FF03  64                 	db	100	;'d'
   185  00FF04  69                 	db	105	;'i'
   186  00FF05  6F                 	db	111	;'o'
   187  00FF06  20                 	db	32
   188  00FF07  73                 	db	115	;'s'
   189  00FF08  65                 	db	101	;'e'
   190  00FF09  74                 	db	116	;'t'
   191  00FF0A  20                 	db	32
   192  00FF0B  63                 	db	99	;'c'
   193  00FF0C  72                 	db	114	;'r'
   194  00FF0D  20                 	db	32
   195  00FF0E  34                 	db	52	;'4'
   196  00FF0F  2F                 	db	47
   197  00FF10  38                 	db	56	;'8'
   198  00FF11  0D                 	db	13
   199  00FF12  0A                 	db	10
   200  00FF13  00                 	db	0
   201  00FF14                     STR_21:
   202  00FF14  72                 	db	114	;'r'
   203  00FF15  61                 	db	97	;'a'
   204  00FF16  64                 	db	100	;'d'
   205  00FF17  69                 	db	105	;'i'
   206  00FF18  6F                 	db	111	;'o'
   207  00FF19  20                 	db	32
   208  00FF1A  73                 	db	115	;'s'
   209  00FF1B  65                 	db	101	;'e'
   210  00FF1C  74                 	db	116	;'t'
   211  00FF1D  20                 	db	32
   212  00FF1E  77                 	db	119	;'w'
   213  00FF1F  64                 	db	100	;'d'
   214  00FF20  74                 	db	116	;'t'
   215  00FF21  20                 	db	32
   216  00FF22  25                 	db	37
   217  00FF23  64                 	db	100	;'d'
   218  00FF24  0D                 	db	13
   219  00FF25  0A                 	db	10
   220  00FF26  00                 	db	0
   221  00FF27                     STR_20:
   222  00FF27  72                 	db	114	;'r'
   223  00FF28  61                 	db	97	;'a'
   224  00FF29  64                 	db	100	;'d'
   225  00FF2A  69                 	db	105	;'i'
   226  00FF2B  6F                 	db	111	;'o'
   227  00FF2C  20                 	db	32
   228  00FF2D  73                 	db	115	;'s'
   229  00FF2E  65                 	db	101	;'e'
   230  00FF2F  74                 	db	116	;'t'
   231  00FF30  20                 	db	32
   232  00FF31  63                 	db	99	;'c'
   233  00FF32  72                 	db	114	;'r'
   234  00FF33  63                 	db	99	;'c'
   235  00FF34  20                 	db	32
   236  00FF35  6F                 	db	111	;'o'
   237  00FF36  6E                 	db	110	;'n'
   238  00FF37  0D                 	db	13
   239  00FF38  0A                 	db	10
   240  00FF39  00                 	db	0
   241  00FF3A                     STR_13:
   242  00FF3A  72                 	db	114	;'r'
   243  00FF3B  61                 	db	97	;'a'
   244  00FF3C  64                 	db	100	;'d'
   245  00FF3D  69                 	db	105	;'i'
   246  00FF3E  6F                 	db	111	;'o'
   247  00FF3F  20                 	db	32
   248  00FF40  67                 	db	103	;'g'
   249  00FF41  65                 	db	101	;'e'
   250  00FF42  74                 	db	116	;'t'
   251  00FF43  20                 	db	32
   252  00FF44  70                 	db	112	;'p'
   253  00FF45  72                 	db	114	;'r'
   254  00FF46  6C                 	db	108	;'l'
   255  00FF47  65                 	db	101	;'e'
   256  00FF48  6E                 	db	110	;'n'
   257  00FF49  0D                 	db	13
   258  00FF4A  0A                 	db	10
   259  00FF4B  00                 	db	0
   260  00FF4C                     STR_23:
   261  00FF4C  30                 	db	48	;'0'
   262  00FF4D  31                 	db	49	;'1'
   263  00FF4E  32                 	db	50	;'2'
   264  00FF4F  33                 	db	51	;'3'
   265  00FF50  34                 	db	52	;'4'
   266  00FF51  35                 	db	53	;'5'
   267  00FF52  36                 	db	54	;'6'
   268  00FF53  37                 	db	55	;'7'
   269  00FF54  38                 	db	56	;'8'
   270  00FF55  39                 	db	57	;'9'
   271  00FF56  61                 	db	97	;'a'
   272  00FF57  62                 	db	98	;'b'
   273  00FF58  63                 	db	99	;'c'
   274  00FF59  64                 	db	100	;'d'
   275  00FF5A  65                 	db	101	;'e'
   276  00FF5B  66                 	db	102	;'f'
   277  00FF5C  00                 	db	0
   278  00FF5D                     STR_5:
   279  00FF5D  73                 	db	115	;'s'
   280  00FF5E  79                 	db	121	;'y'
   281  00FF5F  73                 	db	115	;'s'
   282  00FF60  20                 	db	32
   283  00FF61  67                 	db	103	;'g'
   284  00FF62  65                 	db	101	;'e'
   285  00FF63  74                 	db	116	;'t'
   286  00FF64  20                 	db	32
   287  00FF65  68                 	db	104	;'h'
   288  00FF66  77                 	db	119	;'w'
   289  00FF67  65                 	db	101	;'e'
   290  00FF68  75                 	db	117	;'u'
   291  00FF69  69                 	db	105	;'i'
   292  00FF6A  0D                 	db	13
   293  00FF6B  0A                 	db	10
   294  00FF6C  00                 	db	0
   295  00FF6D                     STR_14:
   296  00FF6D  72                 	db	114	;'r'
   297  00FF6E  61                 	db	97	;'a'
   298  00FF6F  64                 	db	100	;'d'
   299  00FF70  69                 	db	105	;'i'
   300  00FF71  6F                 	db	111	;'o'
   301  00FF72  20                 	db	32
   302  00FF73  67                 	db	103	;'g'
   303  00FF74  65                 	db	101	;'e'
   304  00FF75  74                 	db	116	;'t'
   305  00FF76  20                 	db	32
   306  00FF77  70                 	db	112	;'p'
   307  00FF78  77                 	db	119	;'w'
   308  00FF79  72                 	db	114	;'r'
   309  00FF7A  0D                 	db	13
   310  00FF7B  0A                 	db	10
   311  00FF7C  00                 	db	0
   312  00FF7D                     STR_10:
   313  00FF7D  72                 	db	114	;'r'
   314  00FF7E  61                 	db	97	;'a'
   315  00FF7F  64                 	db	100	;'d'
   316  00FF80  69                 	db	105	;'i'
   317  00FF81  6F                 	db	111	;'o'
   318  00FF82  20                 	db	32
   319  00FF83  67                 	db	103	;'g'
   320  00FF84  65                 	db	101	;'e'
   321  00FF85  74                 	db	116	;'t'
   322  00FF86  20                 	db	32
   323  00FF87  73                 	db	115	;'s'
   324  00FF88  66                 	db	102	;'f'
   325  00FF89  0D                 	db	13
   326  00FF8A  0A                 	db	10
   327  00FF8B  00                 	db	0
   328  00FF8C                     STR_12:
   329  00FF8C  72                 	db	114	;'r'
   330  00FF8D  61                 	db	97	;'a'
   331  00FF8E  64                 	db	100	;'d'
   332  00FF8F  69                 	db	105	;'i'
   333  00FF90  6F                 	db	111	;'o'
   334  00FF91  20                 	db	32
   335  00FF92  67                 	db	103	;'g'
   336  00FF93  65                 	db	101	;'e'
   337  00FF94  74                 	db	116	;'t'
   338  00FF95  20                 	db	32
   339  00FF96  63                 	db	99	;'c'
   340  00FF97  72                 	db	114	;'r'
   341  00FF98  0D                 	db	13
   342  00FF99  0A                 	db	10
   343  00FF9A  00                 	db	0
   344  00FF9B                     STR_11:
   345  00FF9B  72                 	db	114	;'r'
   346  00FF9C  61                 	db	97	;'a'
   347  00FF9D  64                 	db	100	;'d'
   348  00FF9E  69                 	db	105	;'i'
   349  00FF9F  6F                 	db	111	;'o'
   350  00FFA0  20                 	db	32
   351  00FFA1  67                 	db	103	;'g'
   352  00FFA2  65                 	db	101	;'e'
   353  00FFA3  74                 	db	116	;'t'
   354  00FFA4  20                 	db	32
   355  00FFA5  62                 	db	98	;'b'
   356  00FFA6  77                 	db	119	;'w'
   357  00FFA7  0D                 	db	13
   358  00FFA8  0A                 	db	10
   359  00FFA9  00                 	db	0
   360  00FFAA                     STR_9:
   361  00FFAA  73                 	db	115	;'s'
   362  00FFAB  79                 	db	121	;'y'
   363  00FFAC  73                 	db	115	;'s'
   364  00FFAD  20                 	db	32
   365  00FFAE  67                 	db	103	;'g'
   366  00FFAF  65                 	db	101	;'e'
   367  00FFB0  74                 	db	116	;'t'
   368  00FFB1  20                 	db	32
   369  00FFB2  76                 	db	118	;'v'
   370  00FFB3  65                 	db	101	;'e'
   371  00FFB4  72                 	db	114	;'r'
   372  00FFB5  0D                 	db	13
   373  00FFB6  0A                 	db	10
   374  00FFB7  00                 	db	0
   375  00FFB8                     STR_15:
   376  00FFB8  6D                 	db	109	;'m'
   377  00FFB9  61                 	db	97	;'a'
   378  00FFBA  63                 	db	99	;'c'
   379  00FFBB  20                 	db	32
   380  00FFBC  70                 	db	112	;'p'
   381  00FFBD  61                 	db	97	;'a'
   382  00FFBE  75                 	db	117	;'u'
   383  00FFBF  73                 	db	115	;'s'
   384  00FFC0  65                 	db	101	;'e'
   385  00FFC1  0D                 	db	13
   386  00FFC2  0A                 	db	10
   387  00FFC3  00                 	db	0
   388  00FFC4                     STR_8:
   389  00FFC4  73                 	db	115	;'s'
   390  00FFC5  79                 	db	121	;'y'
   391  00FFC6  73                 	db	115	;'s'
   392  00FFC7  20                 	db	32
   393  00FFC8  72                 	db	114	;'r'
   394  00FFC9  65                 	db	101	;'e'
   395  00FFCA  73                 	db	115	;'s'
   396  00FFCB  65                 	db	101	;'e'
   397  00FFCC  74                 	db	116	;'t'
   398  00FFCD  0D                 	db	13
   399  00FFCE  0A                 	db	10
   400  00FFCF  00                 	db	0
   401  00FFD0                     STR_3:
   402  00FFD0  72                 	db	114	;'r'
   403  00FFD1  61                 	db	97	;'a'
   404  00FFD2  64                 	db	100	;'d'
   405  00FFD3  69                 	db	105	;'i'
   406  00FFD4  6F                 	db	111	;'o'
   407  00FFD5  5F                 	db	95	;'_'
   408  00FFD6  74                 	db	116	;'t'
   409  00FFD7  78                 	db	120	;'x'
   410  00FFD8  5F                 	db	95	;'_'
   411  00FFD9  6F                 	db	111	;'o'
   412  00FFDA  6B                 	db	107	;'k'
   413  00FFDB  00                 	db	0
   414  00FFDC                     STR_1:
   415  00FFDC  72                 	db	114	;'r'
   416  00FFDD  61                 	db	97	;'a'
   417  00FFDE  64                 	db	100	;'d'
   418  00FFDF  69                 	db	105	;'i'
   419  00FFE0  6F                 	db	111	;'o'
   420  00FFE1  5F                 	db	95	;'_'
   421  00FFE2  65                 	db	101	;'e'
   422  00FFE3  72                 	db	114	;'r'
   423  00FFE4  72                 	db	114	;'r'
   424  00FFE5  00                 	db	0
   425  00FFE6                     STR_2:
   426  00FFE6  72                 	db	114	;'r'
   427  00FFE7  61                 	db	97	;'a'
   428  00FFE8  64                 	db	100	;'d'
   429  00FFE9  69                 	db	105	;'i'
   430  00FFEA  6F                 	db	111	;'o'
   431  00FFEB  5F                 	db	95	;'_'
   432  00FFEC  72                 	db	114	;'r'
   433  00FFED  78                 	db	120	;'x'
   434  00FFEE  00                 	db	0
   435  00FFEF                     STR_7:
   436  00FFEF  25                 	db	37
   437  00FFF0  78                 	db	120	;'x'
   438  00FFF1  20                 	db	32
   439  00FFF2  25                 	db	37
   440  00FFF3  78                 	db	120	;'x'
   441  00FFF4  0D                 	db	13
   442  00FFF5  0A                 	db	10
   443  00FFF6  00                 	db	0
   444  00FFF7                     STR_6:
   445  00FFF7  3E                 	db	62	;'>'
   446  00FFF8  20                 	db	32
   447  00FFF9  25                 	db	37
   448  00FFFA  64                 	db	100	;'d'
   449  00FFFB  0D                 	db	13
   450  00FFFC  0A                 	db	10
   451  00FFFD  00                 	db	0
   452  0000                     
   453                           ; #config settings
   454  00FFFE  00                 	db	0	; dummy byte at the end
   455  0000                     
   456                           	psect	nvCOMRAM
   457  00003A                     __pnvCOMRAM:
   458                           	opt stack 0
   459  00003A                     _eusart1TxBufferRemaining:
   460                           	opt stack 0
   461  00003A                     	ds	1
   462  0000                     _ANSELA	set	3896
   463  0000                     _ANSELB	set	3897
   464  0000                     _ANSELC	set	3898
   465  0000                     _ANSELCbits	set	3898
   466  0000                     _CCPTMRS0bits	set	3913
   467  0000                     _BAUDCON1	set	4024
   468  0000                     _CCP1CON	set	4029
   469  0000                     _CCPR1H	set	4031
   470  0000                     _CCPR1L	set	4030
   471  0000                     _ECCP1AS	set	4022
   472  0000                     _INTCON2bits	set	4081
   473  0000                     _INTCONbits	set	4082
   474  0000                     _IPR1bits	set	3999
   475  0000                     _LATA	set	3977
   476  0000                     _LATB	set	3978
   477  0000                     _LATC	set	3979
   478  0000                     _OSCCON	set	4051
   479  0000                     _OSCCON2	set	4050
   480  0000                     _OSCTUNE	set	3995
   481  0000                     _PIE1bits	set	3997
   482  0000                     _PIR1bits	set	3998
   483  0000                     _PORTCbits	set	3970
   484  0000                     _PR2	set	4027
   485  0000                     _PSTR1CON	set	4025
   486  0000                     _PWM1CON	set	4023
   487  0000                     _RCONbits	set	4048
   488  0000                     _RCREG1	set	4014
   489  0000                     _RCSTA1	set	4011
   490  0000                     _RCSTA1bits	set	4011
   491  0000                     _SPBRG1	set	4015
   492  0000                     _SPBRGH1	set	4016
   493  0000                     _T2CON	set	4026
   494  0000                     _T2CONbits	set	4026
   495  0000                     _TMR2	set	4028
   496  0000                     _TRISA	set	3986
   497  0000                     _TRISB	set	3987
   498  0000                     _TRISC	set	3988
   499  0000                     _TXREG1	set	4013
   500  0000                     _TXSTA1	set	4012
   501  0000                     _WPUB	set	3937
   502  0000                     _LATC3	set	31835
   503  0000                     _LATC4	set	31836
   504  0000                     _TRISC3	set	31907
   505  0000                     _TRISC4	set	31908
   506                           
   507                           	psect	cinit
   508  000E7E                     __pcinit:
   509                           	opt stack 0
   510  000E7E                     start_initialization:
   511                           	opt stack 0
   512  000E7E                     __initialization:
   513                           	opt stack 0
   514                           
   515                           ; Clear objects allocated to BANK2 (128 bytes)
   516  000E7E  EE02  F000         	lfsr	0,__pbssBANK2
   517  000E82  0E80               	movlw	128
   518  000E84                     clear_0:
   519  000E84  6AEE               	clrf	postinc0,c
   520  000E86  06E8               	decf	wreg,f,c
   521  000E88  E1FD               	bnz	clear_0
   522                           
   523                           ; Clear objects allocated to BANK1 (168 bytes)
   524  000E8A  EE01  F000         	lfsr	0,__pbssBANK1
   525  000E8E  0EA8               	movlw	168
   526  000E90                     clear_1:
   527  000E90  6AEE               	clrf	postinc0,c
   528  000E92  06E8               	decf	wreg,f,c
   529  000E94  E1FD               	bnz	clear_1
   530                           
   531                           ; Clear objects allocated to BANK0 (128 bytes)
   532  000E96  EE00  F060         	lfsr	0,__pbssBANK0
   533  000E9A  0E80               	movlw	128
   534  000E9C                     clear_2:
   535  000E9C  6AEE               	clrf	postinc0,c
   536  000E9E  06E8               	decf	wreg,f,c
   537  000EA0  E1FD               	bnz	clear_2
   538                           
   539                           ; Clear objects allocated to COMRAM (11 bytes)
   540  000EA2  EE00  F02B         	lfsr	0,__pbssCOMRAM
   541  000EA6  0E0B               	movlw	11
   542  000EA8                     clear_3:
   543  000EA8  6AEE               	clrf	postinc0,c
   544  000EAA  06E8               	decf	wreg,f,c
   545  000EAC  E1FD               	bnz	clear_3
   546                           
   547                           ; Initialize objects allocated to COMRAM (4 bytes)
   548                           ; load TBLPTR registers with __pidataCOMRAM
   549  000EAE  0ED0               	movlw	low __pidataCOMRAM
   550  000EB0  6EF6               	movwf	tblptrl,c
   551  000EB2  0E12               	movlw	high __pidataCOMRAM
   552  000EB4  6EF7               	movwf	tblptrh,c
   553  000EB6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   554  000EB8  6EF8               	movwf	tblptru,c
   555  000EBA  EE00  F036         	lfsr	0,__pdataCOMRAM
   556  000EBE  EE10 F004          	lfsr	1,4
   557  000EC2                     copy_data0:
   558  000EC2  0009               	tblrd		*+
   559  000EC4  CFF5 FFEE          	movff	tablat,postinc0
   560  000EC8  50E5               	movf	postdec1,w,c
   561  000ECA  50E1               	movf	fsr1l,w,c
   562  000ECC  E1FA               	bnz	copy_data0
   563  000ECE                     end_of_initialization:
   564                           	opt stack 0
   565  000ECE                     __end_of__initialization:
   566                           	opt stack 0
   567  000ECE  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   568  000ED0  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   569  000ED2  0100               	movlb	0
   570  000ED4  EFB1  F004         	goto	_main	;jump to C main() function
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           postdec1	equ	0xFE5
   578                           fsr1l	equ	0xFE1
   579                           
   580                           	psect	bssCOMRAM
   581  00002B                     __pbssCOMRAM:
   582                           	opt stack 0
   583  00002B                     _index:
   584                           	opt stack 0
   585  00002B                     	ds	2
   586  00002D                     _eusart1RxCount:
   587                           	opt stack 0
   588  00002D                     	ds	1
   589  00002E                     _eusart1RxHead:
   590                           	opt stack 0
   591  00002E                     	ds	1
   592  00002F                     _eusart1RxTail:
   593                           	opt stack 0
   594  00002F                     	ds	1
   595  000030                     _eusart1TxHead:
   596                           	opt stack 0
   597  000030                     	ds	1
   598  000031                     _eusart1TxTail:
   599                           	opt stack 0
   600  000031                     	ds	1
   601  000032                     _inc:
   602                           	opt stack 0
   603  000032                     	ds	1
   604  000033                     _ready:
   605                           	opt stack 0
   606  000033                     	ds	1
   607  000034                     _uartState:
   608                           	opt stack 0
   609  000034                     	ds	1
   610  000035                     _val:
   611                           	opt stack 0
   612  000035                     	ds	1
   613                           tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           postinc0	equ	0xFEE
   618                           wreg	equ	0xFE8
   619                           postdec1	equ	0xFE5
   620                           fsr1l	equ	0xFE1
   621                           
   622                           	psect	dataCOMRAM
   623  000036                     __pdataCOMRAM:
   624                           	opt stack 0
   625  000036                     _randx:
   626                           	opt stack 0
   627  000036                     	ds	4
   628                           tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           postinc0	equ	0xFEE
   633                           wreg	equ	0xFE8
   634                           postdec1	equ	0xFE5
   635                           fsr1l	equ	0xFE1
   636                           
   637                           	psect	bssBANK0
   638  000060                     __pbssBANK0:
   639                           	opt stack 0
   640  000060                     _line:
   641                           	opt stack 0
   642  000060                     	ds	128
   643                           tblptru	equ	0xFF8
   644                           tblptrh	equ	0xFF7
   645                           tblptrl	equ	0xFF6
   646                           tablat	equ	0xFF5
   647                           postinc0	equ	0xFEE
   648                           wreg	equ	0xFE8
   649                           postdec1	equ	0xFE5
   650                           fsr1l	equ	0xFE1
   651                           
   652                           	psect	bssBANK1
   653  000100                     __pbssBANK1:
   654                           	opt stack 0
   655  000100                     _eusart1TxBuffer:
   656                           	opt stack 0
   657  000100                     	ds	128
   658  000180                     _uuid:
   659                           	opt stack 0
   660  000180                     	ds	40
   661                           tblptru	equ	0xFF8
   662                           tblptrh	equ	0xFF7
   663                           tblptrl	equ	0xFF6
   664                           tablat	equ	0xFF5
   665                           postinc0	equ	0xFEE
   666                           wreg	equ	0xFE8
   667                           postdec1	equ	0xFE5
   668                           fsr1l	equ	0xFE1
   669                           
   670                           	psect	bssBANK2
   671  000200                     __pbssBANK2:
   672                           	opt stack 0
   673  000200                     _eusart1RxBuffer:
   674                           	opt stack 0
   675  000200                     	ds	128
   676                           tblptru	equ	0xFF8
   677                           tblptrh	equ	0xFF7
   678                           tblptrl	equ	0xFF6
   679                           tablat	equ	0xFF5
   680                           postinc0	equ	0xFEE
   681                           wreg	equ	0xFE8
   682                           postdec1	equ	0xFE5
   683                           fsr1l	equ	0xFE1
   684                           
   685                           	psect	cstackBANK1
   686  0001A8                     __pcstackBANK1:
   687                           	opt stack 0
   688  0001A8                     process_data_opt@msb:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x0
   692  0001A8                     	ds	1
   693  0001A9                     process_data_opt@exponent:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x1
   697  0001A9                     	ds	2
   698  0001AB                     process_data_opt@raw:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x3
   702  0001AB                     	ds	2
   703  0001AD                     process_data_opt@Illumination:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x5
   707  0001AD                     	ds	4
   708  0001B1                     process_data_opt@result:
   709                           	opt stack 0
   710                           
   711                           ; 4 bytes @ 0x9
   712  0001B1                     	ds	4
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           postinc0	equ	0xFEE
   718                           wreg	equ	0xFE8
   719                           postdec1	equ	0xFE5
   720                           fsr1l	equ	0xFE1
   721                           
   722                           	psect	cstackBANK0
   723  0000E0                     __pcstackBANK0:
   724                           	opt stack 0
   725  0000E0                     ?___lmul:
   726                           	opt stack 0
   727  0000E0                     ___lwdiv@counter:
   728                           	opt stack 0
   729  0000E0                     ___lmul@multiplier:
   730                           	opt stack 0
   731                           
   732                           ; 4 bytes @ 0x0
   733  0000E0                     	ds	1
   734  0000E1                     ___lwdiv@quotient:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x1
   738  0000E1                     	ds	2
   739  0000E3                     ?___lwmod:
   740                           	opt stack 0
   741  0000E3                     ___lwmod@dividend:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x3
   745  0000E3                     	ds	1
   746  0000E4                     ___lmul@multiplicand:
   747                           	opt stack 0
   748                           
   749                           ; 4 bytes @ 0x4
   750  0000E4                     	ds	1
   751  0000E5                     ___lwmod@divisor:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x5
   755  0000E5                     	ds	2
   756  0000E7                     ?_printf:
   757                           	opt stack 0
   758  0000E7                     printf@f:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x7
   762  0000E7                     	ds	1
   763  0000E8                     ?___awmod:
   764                           	opt stack 0
   765  0000E8                     ?_strtol:
   766                           	opt stack 0
   767  0000E8                     ___awmod@dividend:
   768                           	opt stack 0
   769  0000E8                     strtol@s:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x8
   773  0000E8                     	ds	2
   774  0000EA                     ___awmod@divisor:
   775                           	opt stack 0
   776  0000EA                     strtol@endptr:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0xA
   780  0000EA                     	ds	2
   781  0000EC                     ___awmod@counter:
   782                           	opt stack 0
   783  0000EC                     strtol@base:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0xC
   787  0000EC                     	ds	1
   788  0000ED                     printf@idx:
   789                           	opt stack 0
   790  0000ED                     ___awmod@sign:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0xD
   794  0000ED                     	ds	1
   795  0000EE                     ??_strtol:
   796  0000EE                     printf@ap:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0xE
   800  0000EE                     	ds	2
   801  0000F0                     printf@prec:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x10
   805  0000F0                     	ds	1
   806  0000F1                     printf@flag:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x11
   810  0000F1                     	ds	1
   811  0000F2                     strtol@sign:
   812                           	opt stack 0
   813  0000F2                     printf@val:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x12
   817  0000F2                     	ds	1
   818  0000F3                     strtol@a:
   819                           	opt stack 0
   820                           
   821                           ; 4 bytes @ 0x13
   822  0000F3                     	ds	1
   823  0000F4                     printf@c:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x14
   827  0000F4                     	ds	1
   828  0000F5                     process_data_opt@lsb:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0x15
   832  0000F5                     	ds	1
   833  0000F6                     ??_process_data_opt:
   834                           
   835                           ; 1 bytes @ 0x16
   836  0000F6                     	ds	1
   837  0000F7                     strtol@c:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x17
   841  0000F7                     	ds	1
   842  0000F8                     srand@x:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x18
   846  0000F8                     	ds	2
   847  0000FA                     ??_main:
   848                           
   849                           ; 1 bytes @ 0x1A
   850  0000FA                     	ds	1
   851  0000FB                     main@delay:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x1B
   855  0000FB                     	ds	2
   856  0000FD                     main@msb:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x1D
   860  0000FD                     	ds	1
   861  0000FE                     main@lsb:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0x1E
   865  0000FE                     	ds	1
   866                           tblptru	equ	0xFF8
   867                           tblptrh	equ	0xFF7
   868                           tblptrl	equ	0xFF6
   869                           tablat	equ	0xFF5
   870                           postinc0	equ	0xFEE
   871                           wreg	equ	0xFE8
   872                           postdec1	equ	0xFE5
   873                           fsr1l	equ	0xFE1
   874                           
   875                           	psect	cstackCOMRAM
   876  000001                     __pcstackCOMRAM:
   877                           	opt stack 0
   878  000001                     ?_strcmp:
   879                           	opt stack 0
   880  000001                     ?_strlen:
   881                           	opt stack 0
   882  000001                     ?_strchr:
   883                           	opt stack 0
   884  000001                     EUSART1_Read@readValue:
   885                           	opt stack 0
   886  000001                     strcmp@s1:
   887                           	opt stack 0
   888  000001                     strchr@ptr:
   889                           	opt stack 0
   890  000001                     strlen@s:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x0
   894  000001                     	ds	2
   895  000003                     ??_strlen:
   896  000003                     strcmp@s2:
   897                           	opt stack 0
   898  000003                     strchr@chr:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x2
   902  000003                     	ds	2
   903  000005                     ??_strcmp:
   904  000005                     strlen@cp:
   905                           	opt stack 0
   906                           
   907                           ; 2 bytes @ 0x4
   908  000005                     	ds	1
   909  000006                     strcmp@r:
   910                           	opt stack 0
   911                           
   912                           ; 1 bytes @ 0x5
   913  000006                     	ds	1
   914  000007                     ?_strncmp:
   915                           	opt stack 0
   916  000007                     strncmp@s1:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x6
   920  000007                     	ds	2
   921  000009                     strncmp@s2:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x8
   925  000009                     	ds	2
   926  00000B                     strncmp@len:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0xA
   930  00000B                     	ds	2
   931  00000D                     ??_strncmp:
   932                           
   933                           ; 1 bytes @ 0xC
   934  00000D                     	ds	3
   935  000010                     ?_strstr:
   936                           	opt stack 0
   937  000010                     strstr@s1:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0xF
   941  000010                     	ds	2
   942  000012                     strstr@s2:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0x11
   946  000012                     	ds	2
   947  000014                     ??_EUSART1_Receive_ISR:
   948  000014                     
   949                           ; 1 bytes @ 0x13
   950  000014                     	ds	1
   951  000015                     EUSART1_Receive_ISR@state:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x14
   955  000015                     	ds	2
   956  000017                     ??_INTERRUPT_InterruptManager:
   957                           
   958                           ; 1 bytes @ 0x16
   959  000017                     	ds	14
   960  000025                     ??_I2C_Init:
   961  000025                     ??_isspace:
   962  000025                     ??_isdigit:
   963  000025                     ??_isupper:
   964  000025                     ?___lwdiv:
   965                           	opt stack 0
   966  000025                     EUSART1_Write@txData:
   967                           	opt stack 0
   968  000025                     I2C_Write_Byte@byt:
   969                           	opt stack 0
   970  000025                     I2C_Read_Byte@ack:
   971                           	opt stack 0
   972  000025                     toupper@c:
   973                           	opt stack 0
   974  000025                     wait_5ms@j:
   975                           	opt stack 0
   976  000025                     ___lwdiv@dividend:
   977                           	opt stack 0
   978  000025                     strcpy@to:
   979                           	opt stack 0
   980  000025                     ___lmul@product:
   981                           	opt stack 0
   982                           
   983                           ; 4 bytes @ 0x24
   984  000025                     	ds	1
   985  000026                     putch@txData:
   986                           	opt stack 0
   987  000026                     I2C_Write_Byte@i:
   988                           	opt stack 0
   989  000026                     I2C_Read_Byte@val:
   990                           	opt stack 0
   991  000026                     _isdigit$1480:
   992                           	opt stack 0
   993  000026                     _isspace$1483:
   994                           	opt stack 0
   995  000026                     _isupper$1486:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x25
   999  000026                     	ds	1
  1000  000027                     ??_wait_5ms:
  1001  000027                     I2C_Read_Byte@i:
  1002                           	opt stack 0
  1003  000027                     isdigit@c:
  1004                           	opt stack 0
  1005  000027                     isspace@c:
  1006                           	opt stack 0
  1007  000027                     isupper@c:
  1008                           	opt stack 0
  1009  000027                     ___lwdiv@divisor:
  1010                           	opt stack 0
  1011  000027                     strcpy@from:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x26
  1015  000027                     	ds	1
  1016  000028                     ??_isalpha:
  1017                           
  1018                           ; 1 bytes @ 0x27
  1019  000028                     	ds	1
  1020  000029                     ?_rand:
  1021                           	opt stack 0
  1022  000029                     ___lwmod@counter:
  1023                           	opt stack 0
  1024  000029                     _isalpha$1477:
  1025                           	opt stack 0
  1026  000029                     strcpy@cp:
  1027                           	opt stack 0
  1028                           
  1029                           ; 2 bytes @ 0x28
  1030  000029                     	ds	1
  1031  00002A                     ??_printf:
  1032  00002A                     wait_5ms@i:
  1033                           	opt stack 0
  1034  00002A                     isalpha@c:
  1035                           	opt stack 0
  1036                           
  1037                           ; 1 bytes @ 0x29
  1038  00002A                     	ds	1
  1039  00002B                     tblptru	equ	0xFF8
  1040                           tblptrh	equ	0xFF7
  1041                           tblptrl	equ	0xFF6
  1042                           tablat	equ	0xFF5
  1043                           postinc0	equ	0xFEE
  1044                           wreg	equ	0xFE8
  1045                           postdec1	equ	0xFE5
  1046                           fsr1l	equ	0xFE1
  1047                           
  1048                           ; 1 bytes @ 0x2A
  1049 ;;
  1050 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1051 ;;
  1052 ;; *************** function _main *****************
  1053 ;; Defined at:
  1054 ;;		line 111 in file "main.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  lsb             1   30[BANK0 ] unsigned char 
  1059 ;;  msb             1   29[BANK0 ] unsigned char 
  1060 ;;  delay           2   27[BANK0 ] int 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;Total ram usage:        5 bytes
  1075 ;; Hardware stack levels required when called:    8
  1076 ;; This function calls:
  1077 ;;		_I2C_Init
  1078 ;;		_I2C_Read_Byte
  1079 ;;		_I2C_Start
  1080 ;;		_I2C_Stop
  1081 ;;		_I2C_Write_Byte
  1082 ;;		_SYSTEM_Initialize
  1083 ;;		___awmod
  1084 ;;		_getUUID
  1085 ;;		_printf
  1086 ;;		_process_data_opt
  1087 ;;		_rand
  1088 ;;		_read_line
  1089 ;;		_srand
  1090 ;;		_strtol
  1091 ;;		_wait_5ms
  1092 ;; This function is called by:
  1093 ;;		Startup code after reset
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text0
  1098  000962                     __ptext0:
  1099                           	opt stack 0
  1100  000962                     _main:
  1101                           	opt stack 23
  1102                           
  1103                           ;main.c: 112: SYSTEM_Initialize();
  1104                           
  1105                           ;incstack = 0
  1106  000962  EC24  F009         	call	_SYSTEM_Initialize	;wreg free
  1107                           
  1108                           ;main.c: 113: (INTCONbits.GIE = 1);
  1109  000966  8EF2               	bsf	intcon,7,c	;volatile
  1110                           
  1111                           ;main.c: 114: (INTCONbits.PEIE = 1);
  1112  000968  8CF2               	bsf	intcon,6,c	;volatile
  1113                           
  1114                           ;main.c: 115: ANSELCbits.ANSC4=0;
  1115  00096A  010F               	movlb	15	; () banked
  1116  00096C  993A               	bcf	58,4,b	;volatile
  1117                           
  1118                           ; BSR set to: 15
  1119                           ;main.c: 117: I2C_Init();
  1120  00096E  ECE7  F008         	call	_I2C_Init	;wreg free
  1121                           
  1122                           ;main.c: 119: I2C_Start();
  1123  000972  EC6D  F008         	call	_I2C_Start	;wreg free
  1124                           
  1125                           ;main.c: 120: I2C_Write_Byte(0x88);
  1126  000976  0E88               	movlw	136
  1127  000978  EC74  F006         	call	_I2C_Write_Byte
  1128                           
  1129                           ;main.c: 121: I2C_Write_Byte(0x01);
  1130  00097C  0E01               	movlw	1
  1131  00097E  EC74  F006         	call	_I2C_Write_Byte
  1132                           
  1133                           ;main.c: 122: I2C_Write_Byte(0xC4);
  1134  000982  0EC4               	movlw	196
  1135  000984  EC74  F006         	call	_I2C_Write_Byte
  1136                           
  1137                           ;main.c: 123: I2C_Write_Byte(0x10);
  1138  000988  0E10               	movlw	16
  1139  00098A  EC74  F006         	call	_I2C_Write_Byte
  1140                           
  1141                           ;main.c: 124: I2C_Stop();
  1142  00098E  EC15  F009         	call	_I2C_Stop	;wreg free
  1143                           
  1144                           ;main.c: 126: _delay((unsigned long)((1)*(64000000/4000.0)));
  1145  000992  0E15               	movlw	21
  1146  000994  0100               	movlb	0	; () banked
  1147  000996  6FFA               	movwf	??_main& (0+255),b
  1148  000998  0EC6               	movlw	198
  1149  00099A                     u2827:
  1150  00099A  2EE8               	decfsz	wreg,f,c
  1151  00099C  D7FE               	goto	u2827
  1152  00099E  2FFA               	decfsz	??_main& (0+255),f,b
  1153  0009A0  D7FC               	goto	u2827
  1154  0009A2  D000               	nop2	
  1155  0009A4                     l3313:
  1156                           
  1157                           ;main.c: 130: I2C_Start();
  1158  0009A4  EC6D  F008         	call	_I2C_Start	;wreg free
  1159                           
  1160                           ;main.c: 131: I2C_Write_Byte(0x88);
  1161  0009A8  0E88               	movlw	136
  1162  0009AA  EC74  F006         	call	_I2C_Write_Byte
  1163                           
  1164                           ;main.c: 132: I2C_Write_Byte(0x7E);
  1165  0009AE  0E7E               	movlw	126
  1166  0009B0  EC74  F006         	call	_I2C_Write_Byte
  1167                           
  1168                           ;main.c: 133: I2C_Start();
  1169  0009B4  EC6D  F008         	call	_I2C_Start	;wreg free
  1170                           
  1171                           ;main.c: 134: I2C_Write_Byte(0x89);
  1172  0009B8  0E89               	movlw	137
  1173  0009BA  EC74  F006         	call	_I2C_Write_Byte
  1174                           
  1175                           ;main.c: 135: uint8_t msb = I2C_Read_Byte(1);
  1176  0009BE  0E01               	movlw	1
  1177  0009C0  EC59  F005         	call	_I2C_Read_Byte
  1178  0009C4  0100               	movlb	0	; () banked
  1179  0009C6  6FFD               	movwf	main@msb& (0+255),b
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;main.c: 136: uint8_t lsb = I2C_Read_Byte(0);
  1183  0009C8  0E00               	movlw	0
  1184  0009CA  EC59  F005         	call	_I2C_Read_Byte
  1185  0009CE  0100               	movlb	0	; () banked
  1186  0009D0  6FFE               	movwf	main@lsb& (0+255),b
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;main.c: 137: I2C_Stop();
  1190  0009D2  EC15  F009         	call	_I2C_Stop	;wreg free
  1191                           
  1192                           ;main.c: 138: printf("%x %x\r\n",msb,lsb);
  1193  0009D6  0EEF               	movlw	low STR_7
  1194  0009D8  0100               	movlb	0	; () banked
  1195  0009DA  6FE7               	movwf	printf@f& (0+255),b
  1196  0009DC  0EFF               	movlw	high STR_7
  1197  0009DE  0100               	movlb	0	; () banked
  1198  0009E0  6FE8               	movwf	(printf@f+1)& (0+255),b
  1199  0009E2  C0FD  F0E9         	movff	main@msb,?_printf+2
  1200  0009E6  0100               	movlb	0	; () banked
  1201  0009E8  6BEA               	clrf	(?_printf+3)& (0+255),b
  1202  0009EA  C0FE  F0EB         	movff	main@lsb,?_printf+4
  1203  0009EE  0100               	movlb	0	; () banked
  1204  0009F0  6BEC               	clrf	(?_printf+5)& (0+255),b
  1205  0009F2  ECC2  F001         	call	_printf	;wreg free
  1206                           
  1207                           ;main.c: 139: process_data_opt(msb,lsb);
  1208  0009F6  C0FE  F0F5         	movff	main@lsb,process_data_opt@lsb
  1209  0009FA  0100               	movlb	0	; () banked
  1210  0009FC  51FD               	movf	main@msb& (0+255),w,b
  1211  0009FE  EC4C  F000         	call	_process_data_opt
  1212                           
  1213                           ;main.c: 141: wait_5ms(200);
  1214  000A02  0E00               	movlw	0
  1215  000A04  6E26               	movwf	wait_5ms@j+1,c
  1216  000A06  0EC8               	movlw	200
  1217  000A08  6E25               	movwf	wait_5ms@j,c
  1218  000A0A  ECEE  F007         	call	_wait_5ms	;wreg free
  1219  000A0E  D7CA               	goto	l3313
  1220  000A10                     __end_of_main:
  1221                           	opt stack 0
  1222                           tblptru	equ	0xFF8
  1223                           tblptrh	equ	0xFF7
  1224                           tblptrl	equ	0xFF6
  1225                           tablat	equ	0xFF5
  1226                           intcon	equ	0xFF2
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           postdec1	equ	0xFE5
  1230                           fsr1l	equ	0xFE1
  1231                           
  1232 ;; *************** function _wait_5ms *****************
  1233 ;; Defined at:
  1234 ;;		line 42 in file "main.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  j               2   36[COMRAM] int 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  i               1   41[COMRAM] unsigned char 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;Total ram usage:        6 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    4
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text1
  1263  000FDC                     __ptext1:
  1264                           	opt stack 0
  1265  000FDC                     _wait_5ms:
  1266                           	opt stack 26
  1267                           
  1268                           ;main.c: 43: for(uint8_t i=0;i<j;i++) { _delay((unsigned long)((5)*(64000000/4000.0))); 
      +                          }
  1269                           
  1270                           ;incstack = 0
  1271  000FDC  0E00               	movlw	0
  1272  000FDE  6E2A               	movwf	wait_5ms@i,c
  1273  000FE0  D009               	goto	l284
  1274  000FE2                     l2539:
  1275  000FE2  0E68               	movlw	104
  1276  000FE4  6E27               	movwf	??_wait_5ms& (0+255),c
  1277  000FE6  0EE4               	movlw	228
  1278  000FE8                     u2837:
  1279  000FE8  2EE8               	decfsz	wreg,f,c
  1280  000FEA  D7FE               	goto	u2837
  1281  000FEC  2E27               	decfsz	??_wait_5ms& (0+255),f,c
  1282  000FEE  D7FC               	goto	u2837
  1283  000FF0  D000               	nop2	
  1284  000FF2  2A2A               	incf	wait_5ms@i,f,c
  1285  000FF4                     l284:
  1286  000FF4  502A               	movf	wait_5ms@i,w,c
  1287  000FF6  6E27               	movwf	??_wait_5ms& (0+255),c
  1288  000FF8  6A28               	clrf	(??_wait_5ms+1)& (0+255),c
  1289  000FFA  5025               	movf	wait_5ms@j,w,c
  1290  000FFC  5C27               	subwf	??_wait_5ms,w,c
  1291  000FFE  5028               	movf	??_wait_5ms+1,w,c
  1292  001000  0A80               	xorlw	128
  1293  001002  6E29               	movwf	(??_wait_5ms+2)& (0+255),c
  1294  001004  5026               	movf	wait_5ms@j+1,w,c
  1295  001006  0A80               	xorlw	128
  1296  001008  5829               	subwfb	(??_wait_5ms+2)& (0+255),w,c
  1297  00100A  B0D8               	btfsc	status,0,c
  1298  00100C  0012               	return	
  1299  00100E  D7E9               	goto	l2539
  1300  001010                     __end_of_wait_5ms:
  1301                           	opt stack 0
  1302                           tblptru	equ	0xFF8
  1303                           tblptrh	equ	0xFF7
  1304                           tblptrl	equ	0xFF6
  1305                           tablat	equ	0xFF5
  1306                           intcon	equ	0xFF2
  1307                           postinc0	equ	0xFEE
  1308                           wreg	equ	0xFE8
  1309                           postdec1	equ	0xFE5
  1310                           fsr1l	equ	0xFE1
  1311                           status	equ	0xFD8
  1312                           
  1313 ;; *************** function _strtol *****************
  1314 ;; Defined at:
  1315 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strtol.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  1318 ;;		 -> uuid(40), 
  1319 ;;  endptr          2   10[BANK0 ] PTR PTR unsigned char 
  1320 ;;		 -> NULL(0), 
  1321 ;;  base            2   12[BANK0 ] int 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  a               4   19[BANK0 ] long 
  1324 ;;  c               1   23[BANK0 ] unsigned char 
  1325 ;;  sign            1   18[BANK0 ] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  4    8[BANK0 ] long 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1335 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;Total ram usage:       16 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    6
  1342 ;; This function calls:
  1343 ;;		___lmul
  1344 ;;		_isalpha
  1345 ;;		_isdigit
  1346 ;;		_isspace
  1347 ;;		_toupper
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text2
  1354  0005DA                     __ptext2:
  1355                           	opt stack 0
  1356  0005DA                     _strtol:
  1357                           	opt stack 24
  1358  0005DA  C0E8  FFD9         	movff	strtol@s,fsr2l
  1359  0005DE  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  1360  0005E2  50DF               	movf	indf2,w,c
  1361  0005E4  0100               	movlb	0	; () banked
  1362  0005E6  6FF7               	movwf	strtol@c& (0+255),b
  1363                           
  1364                           ; BSR set to: 0
  1365  0005E8  0100               	movlb	0	; () banked
  1366  0005EA  4BE8               	infsnz	strtol@s& (0+255),f,b
  1367  0005EC  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  1368                           
  1369                           ; BSR set to: 0
  1370  0005EE  0100               	movlb	0	; () banked
  1371  0005F0  51F7               	movf	strtol@c& (0+255),w,b
  1372  0005F2  ECC4  F008         	call	_isspace
  1373  0005F6  B0D8               	btfsc	status,0,c
  1374  0005F8  D7F0               	goto	l3167
  1375  0005FA  0E00               	movlw	0
  1376  0005FC  0100               	movlb	0	; () banked
  1377  0005FE  6FF3               	movwf	strtol@a& (0+255),b
  1378  000600  0E00               	movlw	0
  1379  000602  6FF4               	movwf	(strtol@a+1)& (0+255),b
  1380  000604  0E00               	movlw	0
  1381  000606  6FF5               	movwf	(strtol@a+2)& (0+255),b
  1382  000608  0E00               	movlw	0
  1383  00060A  6FF6               	movwf	(strtol@a+3)& (0+255),b
  1384  00060C  0E00               	movlw	0
  1385  00060E  0100               	movlb	0	; () banked
  1386  000610  6FF2               	movwf	strtol@sign& (0+255),b
  1387                           
  1388                           ; BSR set to: 0
  1389  000612  0E2D               	movlw	45
  1390  000614  0100               	movlb	0	; () banked
  1391  000616  19F7               	xorwf	strtol@c& (0+255),w,b
  1392  000618  A4D8               	btfss	status,2,c
  1393  00061A  D008               	goto	l3183
  1394                           
  1395                           ; BSR set to: 0
  1396  00061C  0E01               	movlw	1
  1397  00061E  0100               	movlb	0	; () banked
  1398  000620  6FF2               	movwf	strtol@sign& (0+255),b
  1399  000622  D009               	goto	l3185
  1400  000624                     l3181:
  1401                           
  1402                           ; BSR set to: 0
  1403  000624  0100               	movlb	0	; () banked
  1404  000626  4BE8               	infsnz	strtol@s& (0+255),f,b
  1405  000628  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  1406  00062A  D00D               	goto	l3189
  1407  00062C                     l3183:
  1408                           
  1409                           ; BSR set to: 0
  1410  00062C  0E2B               	movlw	43
  1411  00062E  0100               	movlb	0	; () banked
  1412  000630  19F7               	xorwf	strtol@c& (0+255),w,b
  1413  000632  A4D8               	btfss	status,2,c
  1414  000634  D008               	goto	l3189
  1415  000636                     l3185:
  1416                           
  1417                           ; BSR set to: 0
  1418  000636  C0E8  FFD9         	movff	strtol@s,fsr2l
  1419  00063A  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  1420  00063E  50DF               	movf	indf2,w,c
  1421  000640  0100               	movlb	0	; () banked
  1422  000642  6FF7               	movwf	strtol@c& (0+255),b
  1423  000644  D7EF               	goto	l3181
  1424  000646                     l3189:
  1425                           
  1426                           ; BSR set to: 0
  1427  000646  0E30               	movlw	48
  1428  000648  0100               	movlb	0	; () banked
  1429  00064A  19F7               	xorwf	strtol@c& (0+255),w,b
  1430  00064C  A4D8               	btfss	status,2,c
  1431  00064E  D03C               	goto	l3213
  1432                           
  1433                           ; BSR set to: 0
  1434  000650  C0E8  FFD9         	movff	strtol@s,fsr2l
  1435  000654  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  1436  000658  50DF               	movf	indf2,w,c
  1437  00065A  0100               	movlb	0	; () banked
  1438  00065C  6FF7               	movwf	strtol@c& (0+255),b
  1439                           
  1440                           ; BSR set to: 0
  1441  00065E  0100               	movlb	0	; () banked
  1442  000660  4BE8               	infsnz	strtol@s& (0+255),f,b
  1443  000662  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  1444                           
  1445                           ; BSR set to: 0
  1446  000664  0100               	movlb	0	; () banked
  1447  000666  51EC               	movf	strtol@base& (0+255),w,b
  1448  000668  0100               	movlb	0	; () banked
  1449  00066A  11ED               	iorwf	(strtol@base+1)& (0+255),w,b
  1450  00066C  B4D8               	btfsc	status,2,c
  1451  00066E  D007               	goto	l3199
  1452                           
  1453                           ; BSR set to: 0
  1454  000670  0E10               	movlw	16
  1455  000672  0100               	movlb	0	; () banked
  1456  000674  19EC               	xorwf	strtol@base& (0+255),w,b
  1457  000676  0100               	movlb	0	; () banked
  1458  000678  11ED               	iorwf	(strtol@base+1)& (0+255),w,b
  1459  00067A  A4D8               	btfss	status,2,c
  1460  00067C  D01A               	goto	l3209
  1461  00067E                     l3199:
  1462                           
  1463                           ; BSR set to: 0
  1464  00067E  0E78               	movlw	120
  1465  000680  0100               	movlb	0	; () banked
  1466  000682  19F7               	xorwf	strtol@c& (0+255),w,b
  1467  000684  B4D8               	btfsc	status,2,c
  1468  000686  D005               	goto	l3203
  1469                           
  1470                           ; BSR set to: 0
  1471  000688  0E58               	movlw	88
  1472  00068A  0100               	movlb	0	; () banked
  1473  00068C  19F7               	xorwf	strtol@c& (0+255),w,b
  1474  00068E  A4D8               	btfss	status,2,c
  1475  000690  D010               	goto	l3209
  1476  000692                     l3203:
  1477                           
  1478                           ; BSR set to: 0
  1479  000692  0E00               	movlw	0
  1480  000694  0100               	movlb	0	; () banked
  1481  000696  6FED               	movwf	(strtol@base+1)& (0+255),b
  1482  000698  0E10               	movlw	16
  1483  00069A  6FEC               	movwf	strtol@base& (0+255),b
  1484                           
  1485                           ; BSR set to: 0
  1486  00069C  C0E8  FFD9         	movff	strtol@s,fsr2l
  1487  0006A0  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  1488  0006A4  50DF               	movf	indf2,w,c
  1489  0006A6  0100               	movlb	0	; () banked
  1490  0006A8  6FF7               	movwf	strtol@c& (0+255),b
  1491                           
  1492                           ; BSR set to: 0
  1493  0006AA  0100               	movlb	0	; () banked
  1494  0006AC  4BE8               	infsnz	strtol@s& (0+255),f,b
  1495  0006AE  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  1496  0006B0  D00B               	goto	l3213
  1497  0006B2                     l3209:
  1498                           
  1499                           ; BSR set to: 0
  1500  0006B2  0100               	movlb	0	; () banked
  1501  0006B4  51EC               	movf	strtol@base& (0+255),w,b
  1502  0006B6  0100               	movlb	0	; () banked
  1503  0006B8  11ED               	iorwf	(strtol@base+1)& (0+255),w,b
  1504  0006BA  A4D8               	btfss	status,2,c
  1505  0006BC  D005               	goto	l3213
  1506                           
  1507                           ; BSR set to: 0
  1508  0006BE  0E00               	movlw	0
  1509  0006C0  0100               	movlb	0	; () banked
  1510  0006C2  6FED               	movwf	(strtol@base+1)& (0+255),b
  1511  0006C4  0E08               	movlw	8
  1512  0006C6  6FEC               	movwf	strtol@base& (0+255),b
  1513  0006C8                     l3213:
  1514                           
  1515                           ; BSR set to: 0
  1516  0006C8  0100               	movlb	0	; () banked
  1517  0006CA  51EC               	movf	strtol@base& (0+255),w,b
  1518  0006CC  0100               	movlb	0	; () banked
  1519  0006CE  11ED               	iorwf	(strtol@base+1)& (0+255),w,b
  1520  0006D0  A4D8               	btfss	status,2,c
  1521  0006D2  D005               	goto	l3217
  1522                           
  1523                           ; BSR set to: 0
  1524  0006D4  0E00               	movlw	0
  1525  0006D6  0100               	movlb	0	; () banked
  1526  0006D8  6FED               	movwf	(strtol@base+1)& (0+255),b
  1527  0006DA  0E0A               	movlw	10
  1528  0006DC  6FEC               	movwf	strtol@base& (0+255),b
  1529  0006DE                     l3217:
  1530                           
  1531                           ; BSR set to: 0
  1532  0006DE  0100               	movlb	0	; () banked
  1533  0006E0  51F7               	movf	strtol@c& (0+255),w,b
  1534  0006E2  ECB0  F008         	call	_isalpha
  1535  0006E6  A0D8               	btfss	status,0,c
  1536  0006E8  D008               	goto	l3221
  1537  0006EA  0100               	movlb	0	; () banked
  1538  0006EC  51F7               	movf	strtol@c& (0+255),w,b
  1539  0006EE  EC31  F009         	call	_toupper
  1540  0006F2  0FC9               	addlw	201
  1541  0006F4  0100               	movlb	0	; () banked
  1542  0006F6  6FF7               	movwf	strtol@c& (0+255),b
  1543  0006F8  D009               	goto	l3225
  1544  0006FA                     l3221:
  1545  0006FA  0100               	movlb	0	; () banked
  1546  0006FC  51F7               	movf	strtol@c& (0+255),w,b
  1547  0006FE  ECF7  F008         	call	_isdigit
  1548  000702  A0D8               	btfss	status,0,c
  1549  000704  D04C               	goto	l3235
  1550  000706  0E30               	movlw	48
  1551  000708  0100               	movlb	0	; () banked
  1552  00070A  5FF7               	subwf	strtol@c& (0+255),f,b
  1553  00070C                     l3225:
  1554                           
  1555                           ; BSR set to: 0
  1556  00070C  0100               	movlb	0	; () banked
  1557  00070E  51F7               	movf	strtol@c& (0+255),w,b
  1558  000710  0100               	movlb	0	; () banked
  1559  000712  6FEE               	movwf	??_strtol& (0+255),b
  1560  000714  6BEF               	clrf	(??_strtol+1)& (0+255),b
  1561  000716  0100               	movlb	0	; () banked
  1562  000718  51EC               	movf	strtol@base& (0+255),w,b
  1563  00071A  0100               	movlb	0	; () banked
  1564  00071C  5DEE               	subwf	??_strtol& (0+255),w,b
  1565  00071E  0100               	movlb	0	; () banked
  1566  000720  51EF               	movf	(??_strtol+1)& (0+255),w,b
  1567  000722  0A80               	xorlw	128
  1568  000724  0100               	movlb	0	; () banked
  1569  000726  6FF0               	movwf	(??_strtol+2)& (0+255),b
  1570  000728  0100               	movlb	0	; () banked
  1571  00072A  51ED               	movf	(strtol@base+1)& (0+255),w,b
  1572  00072C  0A80               	xorlw	128
  1573  00072E  0100               	movlb	0	; () banked
  1574  000730  59F0               	subwfb	(??_strtol+2)& (0+255),w,b
  1575  000732  B0D8               	btfsc	status,0,c
  1576  000734  D034               	goto	l3235
  1577                           
  1578                           ; BSR set to: 0
  1579                           
  1580                           ; BSR set to: 0
  1581                           
  1582                           ; BSR set to: 0
  1583  000736  C0EC  F0E0         	movff	strtol@base,___lmul@multiplier
  1584  00073A  C0ED  F0E1         	movff	strtol@base+1,___lmul@multiplier+1
  1585  00073E  0100               	movlb	0	; () banked
  1586  000740  0E00               	movlw	0
  1587  000742  BFE1               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  1588  000744  0EFF               	movlw	-1
  1589  000746  6FE2               	movwf	(___lmul@multiplier+2)& (0+255),b
  1590  000748  6FE3               	movwf	(___lmul@multiplier+3)& (0+255),b
  1591  00074A  C0F3  F0E4         	movff	strtol@a,___lmul@multiplicand
  1592  00074E  C0F4  F0E5         	movff	strtol@a+1,___lmul@multiplicand+1
  1593  000752  C0F5  F0E6         	movff	strtol@a+2,___lmul@multiplicand+2
  1594  000756  C0F6  F0E7         	movff	strtol@a+3,___lmul@multiplicand+3
  1595  00075A  ECAC  F006         	call	___lmul	;wreg free
  1596  00075E  0100               	movlb	0	; () banked
  1597  000760  51F7               	movf	strtol@c& (0+255),w,b
  1598  000762  0100               	movlb	0	; () banked
  1599  000764  25E0               	addwf	?___lmul& (0+255),w,b
  1600  000766  0100               	movlb	0	; () banked
  1601  000768  6FF3               	movwf	strtol@a& (0+255),b
  1602  00076A  0E00               	movlw	0
  1603  00076C  0100               	movlb	0	; () banked
  1604  00076E  21E1               	addwfc	(?___lmul+1)& (0+255),w,b
  1605  000770  0100               	movlb	0	; () banked
  1606  000772  6FF4               	movwf	(strtol@a+1)& (0+255),b
  1607  000774  0E00               	movlw	0
  1608  000776  0100               	movlb	0	; () banked
  1609  000778  21E2               	addwfc	(?___lmul+2)& (0+255),w,b
  1610  00077A  0100               	movlb	0	; () banked
  1611  00077C  6FF5               	movwf	(strtol@a+2)& (0+255),b
  1612  00077E  0E00               	movlw	0
  1613  000780  0100               	movlb	0	; () banked
  1614  000782  21E3               	addwfc	(?___lmul+3)& (0+255),w,b
  1615  000784  0100               	movlb	0	; () banked
  1616  000786  6FF6               	movwf	(strtol@a+3)& (0+255),b
  1617                           
  1618                           ; BSR set to: 0
  1619  000788  C0E8  FFD9         	movff	strtol@s,fsr2l
  1620  00078C  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  1621  000790  50DF               	movf	indf2,w,c
  1622  000792  0100               	movlb	0	; () banked
  1623  000794  6FF7               	movwf	strtol@c& (0+255),b
  1624                           
  1625                           ; BSR set to: 0
  1626  000796  0100               	movlb	0	; () banked
  1627  000798  4BE8               	infsnz	strtol@s& (0+255),f,b
  1628  00079A  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  1629  00079C  D7A0               	goto	l3217
  1630  00079E                     l3235:
  1631  00079E  0100               	movlb	0	; () banked
  1632  0007A0  51EA               	movf	strtol@endptr& (0+255),w,b
  1633  0007A2  0100               	movlb	0	; () banked
  1634  0007A4  11EB               	iorwf	(strtol@endptr+1)& (0+255),w,b
  1635  0007A6  B4D8               	btfsc	status,2,c
  1636  0007A8  D012               	goto	l3239
  1637                           
  1638                           ; BSR set to: 0
  1639  0007AA  0EFF               	movlw	255
  1640  0007AC  0100               	movlb	0	; () banked
  1641  0007AE  25E8               	addwf	strtol@s& (0+255),w,b
  1642  0007B0  0100               	movlb	0	; () banked
  1643  0007B2  6FEE               	movwf	??_strtol& (0+255),b
  1644  0007B4  0EFF               	movlw	255
  1645  0007B6  0100               	movlb	0	; () banked
  1646  0007B8  21E9               	addwfc	(strtol@s+1)& (0+255),w,b
  1647  0007BA  0100               	movlb	0	; () banked
  1648  0007BC  6FEF               	movwf	(??_strtol+1)& (0+255),b
  1649  0007BE  C0EA  FFD9         	movff	strtol@endptr,fsr2l
  1650  0007C2  C0EB  FFDA         	movff	strtol@endptr+1,fsr2h
  1651  0007C6  C0EE  FFDE         	movff	??_strtol,postinc2
  1652  0007CA  C0EF  FFDD         	movff	??_strtol+1,postdec2
  1653  0007CE                     l3239:
  1654                           
  1655                           ; BSR set to: 0
  1656  0007CE  0100               	movlb	0	; () banked
  1657  0007D0  51F2               	movf	strtol@sign& (0+255),w,b
  1658  0007D2  0100               	movlb	0	; () banked
  1659  0007D4  B4D8               	btfsc	status,2,c
  1660  0007D6  D01B               	goto	l1042
  1661                           
  1662                           ; BSR set to: 0
  1663  0007D8  C0F3  F0EE         	movff	strtol@a,??_strtol
  1664  0007DC  C0F4  F0EF         	movff	strtol@a+1,??_strtol+1
  1665  0007E0  C0F5  F0F0         	movff	strtol@a+2,??_strtol+2
  1666  0007E4  C0F6  F0F1         	movff	strtol@a+3,??_strtol+3
  1667  0007E8  0100               	movlb	0	; () banked
  1668  0007EA  1FEE               	comf	??_strtol& (0+255),f,b
  1669  0007EC  1FEF               	comf	(??_strtol+1)& (0+255),f,b
  1670  0007EE  1FF0               	comf	(??_strtol+2)& (0+255),f,b
  1671  0007F0  1FF1               	comf	(??_strtol+3)& (0+255),f,b
  1672  0007F2  2BEE               	incf	??_strtol& (0+255),f,b
  1673  0007F4  0E00               	movlw	0
  1674  0007F6  23EF               	addwfc	(??_strtol+1)& (0+255),f,b
  1675  0007F8  23F0               	addwfc	(??_strtol+2)& (0+255),f,b
  1676  0007FA  23F1               	addwfc	(??_strtol+3)& (0+255),f,b
  1677  0007FC  C0EE  F0E8         	movff	??_strtol,?_strtol
  1678  000800  C0EF  F0E9         	movff	??_strtol+1,?_strtol+1
  1679  000804  C0F0  F0EA         	movff	??_strtol+2,?_strtol+2
  1680  000808  C0F1  F0EB         	movff	??_strtol+3,?_strtol+3
  1681                           
  1682                           ; BSR set to: 0
  1683  00080C  0012               	return	
  1684  00080E                     l1042:
  1685                           
  1686                           ; BSR set to: 0
  1687  00080E  C0F3  F0E8         	movff	strtol@a,?_strtol
  1688  000812  C0F4  F0E9         	movff	strtol@a+1,?_strtol+1
  1689  000816  C0F5  F0EA         	movff	strtol@a+2,?_strtol+2
  1690  00081A  C0F6  F0EB         	movff	strtol@a+3,?_strtol+3
  1691                           
  1692                           ; BSR set to: 0
  1693  00081E  0012               	return		;funcret
  1694  000820                     __end_of_strtol:
  1695                           	opt stack 0
  1696                           tblptru	equ	0xFF8
  1697                           tblptrh	equ	0xFF7
  1698                           tblptrl	equ	0xFF6
  1699                           tablat	equ	0xFF5
  1700                           intcon	equ	0xFF2
  1701                           postinc0	equ	0xFEE
  1702                           wreg	equ	0xFE8
  1703                           postdec1	equ	0xFE5
  1704                           fsr1l	equ	0xFE1
  1705                           indf2	equ	0xFDF
  1706                           postinc2	equ	0xFDE
  1707                           postdec2	equ	0xFDD
  1708                           fsr2h	equ	0xFDA
  1709                           fsr2l	equ	0xFD9
  1710                           status	equ	0xFD8
  1711                           
  1712 ;; *************** function _toupper *****************
  1713 ;; Defined at:
  1714 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\toupper.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  c               1    wreg     unsigned char 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  c               1   36[COMRAM] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      unsigned char 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;Total ram usage:        1 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    4
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_strtol
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text3
  1743  001262                     __ptext3:
  1744                           	opt stack 0
  1745  001262                     _toupper:
  1746                           	opt stack 25
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;incstack = 0
  1750                           ;toupper@c stored from wreg
  1751  001262  6E25               	movwf	toupper@c,c
  1752  001264  0E7B               	movlw	123
  1753  001266  6025               	cpfslt	toupper@c,c
  1754  001268  D004               	goto	l2439
  1755  00126A  0E60               	movlw	96
  1756  00126C  6425               	cpfsgt	toupper@c,c
  1757  00126E  D001               	goto	l2439
  1758  001270  9A25               	bcf	toupper@c,5,c
  1759  001272                     l2439:
  1760  001272  5025               	movf	toupper@c,w,c
  1761  001274  0012               	return	
  1762  001276                     __end_of_toupper:
  1763                           	opt stack 0
  1764                           tblptru	equ	0xFF8
  1765                           tblptrh	equ	0xFF7
  1766                           tblptrl	equ	0xFF6
  1767                           tablat	equ	0xFF5
  1768                           intcon	equ	0xFF2
  1769                           postinc0	equ	0xFEE
  1770                           wreg	equ	0xFE8
  1771                           postdec1	equ	0xFE5
  1772                           fsr1l	equ	0xFE1
  1773                           indf2	equ	0xFDF
  1774                           postinc2	equ	0xFDE
  1775                           postdec2	equ	0xFDD
  1776                           fsr2h	equ	0xFDA
  1777                           fsr2l	equ	0xFD9
  1778                           status	equ	0xFD8
  1779                           
  1780 ;; *************** function _isspace *****************
  1781 ;; Defined at:
  1782 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isspace.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  c               1    wreg     unsigned char 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  c               1   38[COMRAM] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;		None               void
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;Total ram usage:        3 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    4
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_strtol
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text4
  1811  001188                     __ptext4:
  1812                           	opt stack 0
  1813  001188                     _isspace:
  1814                           	opt stack 25
  1815                           
  1816                           ;incstack = 0
  1817                           ;isspace@c stored from wreg
  1818  001188  6E27               	movwf	isspace@c,c
  1819  00118A  0E01               	movlw	1
  1820  00118C  6E26               	movwf	_isspace$1483,c
  1821  00118E  0E20               	movlw	32
  1822  001190  1827               	xorwf	isspace@c,w,c
  1823  001192  B4D8               	btfsc	status,2,c
  1824  001194  D008               	goto	l2415
  1825  001196  0E0E               	movlw	14
  1826  001198  6027               	cpfslt	isspace@c,c
  1827  00119A  D003               	goto	l2413
  1828  00119C  0E09               	movlw	9
  1829  00119E  6027               	cpfslt	isspace@c,c
  1830  0011A0  D002               	goto	l2415
  1831  0011A2                     l2413:
  1832  0011A2  0E00               	movlw	0
  1833  0011A4  6E26               	movwf	_isspace$1483,c
  1834  0011A6                     l2415:
  1835  0011A6  C026  F025         	movff	_isspace$1483,??_isspace
  1836  0011AA  3025               	rrcf	??_isspace,w,c
  1837  0011AC  0012               	return	
  1838  0011AE                     __end_of_isspace:
  1839                           	opt stack 0
  1840                           tblptru	equ	0xFF8
  1841                           tblptrh	equ	0xFF7
  1842                           tblptrl	equ	0xFF6
  1843                           tablat	equ	0xFF5
  1844                           intcon	equ	0xFF2
  1845                           postinc0	equ	0xFEE
  1846                           wreg	equ	0xFE8
  1847                           postdec1	equ	0xFE5
  1848                           fsr1l	equ	0xFE1
  1849                           indf2	equ	0xFDF
  1850                           postinc2	equ	0xFDE
  1851                           postdec2	equ	0xFDD
  1852                           fsr2h	equ	0xFDA
  1853                           fsr2l	equ	0xFD9
  1854                           status	equ	0xFD8
  1855                           
  1856 ;; *************** function _isdigit *****************
  1857 ;; Defined at:
  1858 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  c               1    wreg     unsigned char 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  c               1   38[COMRAM] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;		None               void
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;Total ram usage:        3 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    4
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_strtol
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text5
  1887  0011EE                     __ptext5:
  1888                           	opt stack 0
  1889  0011EE                     _isdigit:
  1890                           	opt stack 25
  1891                           
  1892                           ;incstack = 0
  1893                           ;isdigit@c stored from wreg
  1894  0011EE  6E27               	movwf	isdigit@c,c
  1895  0011F0  0E00               	movlw	0
  1896  0011F2  6E26               	movwf	_isdigit$1480,c
  1897  0011F4  0E3A               	movlw	58
  1898  0011F6  6027               	cpfslt	isdigit@c,c
  1899  0011F8  D005               	goto	l2451
  1900  0011FA  0E2F               	movlw	47
  1901  0011FC  6427               	cpfsgt	isdigit@c,c
  1902  0011FE  D002               	goto	l2451
  1903  001200  0E01               	movlw	1
  1904  001202  6E26               	movwf	_isdigit$1480,c
  1905  001204                     l2451:
  1906  001204  C026  F025         	movff	_isdigit$1480,??_isdigit
  1907  001208  3025               	rrcf	??_isdigit,w,c
  1908  00120A  0012               	return	
  1909  00120C                     __end_of_isdigit:
  1910                           	opt stack 0
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           intcon	equ	0xFF2
  1916                           postinc0	equ	0xFEE
  1917                           wreg	equ	0xFE8
  1918                           postdec1	equ	0xFE5
  1919                           fsr1l	equ	0xFE1
  1920                           indf2	equ	0xFDF
  1921                           postinc2	equ	0xFDE
  1922                           postdec2	equ	0xFDD
  1923                           fsr2h	equ	0xFDA
  1924                           fsr2l	equ	0xFD9
  1925                           status	equ	0xFD8
  1926                           
  1927 ;; *************** function _isalpha *****************
  1928 ;; Defined at:
  1929 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isalpha.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  c               1    wreg     unsigned char 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  c               1   41[COMRAM] unsigned char 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;		None               void
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;Total ram usage:        3 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    5
  1950 ;; This function calls:
  1951 ;;		_isupper
  1952 ;; This function is called by:
  1953 ;;		_strtol
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text6
  1958  001160                     __ptext6:
  1959                           	opt stack 0
  1960  001160                     _isalpha:
  1961                           	opt stack 24
  1962                           
  1963                           ;incstack = 0
  1964                           ;isalpha@c stored from wreg
  1965  001160  6E2A               	movwf	isalpha@c,c
  1966  001162  0E01               	movlw	1
  1967  001164  6E29               	movwf	_isalpha$1477,c
  1968  001166  0E7B               	movlw	123
  1969  001168  602A               	cpfslt	isalpha@c,c
  1970  00116A  D003               	goto	l2425
  1971  00116C  0E61               	movlw	97
  1972  00116E  602A               	cpfslt	isalpha@c,c
  1973  001170  D007               	goto	l2429
  1974  001172                     l2425:
  1975  001172  502A               	movf	isalpha@c,w,c
  1976  001174  EC06  F009         	call	_isupper
  1977  001178  B0D8               	btfsc	status,0,c
  1978  00117A  D002               	goto	l2429
  1979  00117C  0E00               	movlw	0
  1980  00117E  6E29               	movwf	_isalpha$1477,c
  1981  001180                     l2429:
  1982  001180  C029  F028         	movff	_isalpha$1477,??_isalpha
  1983  001184  3028               	rrcf	??_isalpha,w,c
  1984  001186  0012               	return	
  1985  001188                     __end_of_isalpha:
  1986                           	opt stack 0
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           intcon	equ	0xFF2
  1992                           postinc0	equ	0xFEE
  1993                           wreg	equ	0xFE8
  1994                           postdec1	equ	0xFE5
  1995                           fsr1l	equ	0xFE1
  1996                           indf2	equ	0xFDF
  1997                           postinc2	equ	0xFDE
  1998                           postdec2	equ	0xFDD
  1999                           fsr2h	equ	0xFDA
  2000                           fsr2l	equ	0xFD9
  2001                           status	equ	0xFD8
  2002                           
  2003 ;; *************** function _isupper *****************
  2004 ;; Defined at:
  2005 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isupper.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  c               1    wreg     unsigned char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  c               1   38[COMRAM] unsigned char 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;		None               void
  2012 ;; Registers used:
  2013 ;;		wreg, status,2, status,0
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;Total ram usage:        3 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    4
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_isalpha
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text7
  2034  00120C                     __ptext7:
  2035                           	opt stack 0
  2036  00120C                     _isupper:
  2037                           	opt stack 24
  2038                           
  2039                           ;incstack = 0
  2040                           ;isupper@c stored from wreg
  2041  00120C  6E27               	movwf	isupper@c,c
  2042  00120E  0E00               	movlw	0
  2043  001210  6E26               	movwf	_isupper$1486,c
  2044  001212  0E5B               	movlw	91
  2045  001214  6027               	cpfslt	isupper@c,c
  2046  001216  D005               	goto	l2201
  2047  001218  0E40               	movlw	64
  2048  00121A  6427               	cpfsgt	isupper@c,c
  2049  00121C  D002               	goto	l2201
  2050  00121E  0E01               	movlw	1
  2051  001220  6E26               	movwf	_isupper$1486,c
  2052  001222                     l2201:
  2053  001222  C026  F025         	movff	_isupper$1486,??_isupper
  2054  001226  3025               	rrcf	??_isupper,w,c
  2055  001228  0012               	return	
  2056  00122A                     __end_of_isupper:
  2057                           	opt stack 0
  2058                           tblptru	equ	0xFF8
  2059                           tblptrh	equ	0xFF7
  2060                           tblptrl	equ	0xFF6
  2061                           tablat	equ	0xFF5
  2062                           intcon	equ	0xFF2
  2063                           postinc0	equ	0xFEE
  2064                           wreg	equ	0xFE8
  2065                           postdec1	equ	0xFE5
  2066                           fsr1l	equ	0xFE1
  2067                           indf2	equ	0xFDF
  2068                           postinc2	equ	0xFDE
  2069                           postdec2	equ	0xFDD
  2070                           fsr2h	equ	0xFDA
  2071                           fsr2l	equ	0xFD9
  2072                           status	equ	0xFD8
  2073                           
  2074 ;; *************** function _srand *****************
  2075 ;; Defined at:
  2076 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  x               2   24[BANK0 ] unsigned int 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		status,2
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;Total ram usage:        2 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    4
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_main
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	text8
  2105  001288                     __ptext8:
  2106                           	opt stack 0
  2107  001288                     _srand:
  2108                           	opt stack 26
  2109                           
  2110                           ;incstack = 0
  2111  001288  C0F8  F036         	movff	srand@x,_randx
  2112  00128C  C0F9  F037         	movff	srand@x+1,_randx+1
  2113  001290  6A38               	clrf	_randx+2,c
  2114  001292  6A39               	clrf	_randx+3,c
  2115  001294  0012               	return		;funcret
  2116  001296                     __end_of_srand:
  2117                           	opt stack 0
  2118                           tblptru	equ	0xFF8
  2119                           tblptrh	equ	0xFF7
  2120                           tblptrl	equ	0xFF6
  2121                           tablat	equ	0xFF5
  2122                           intcon	equ	0xFF2
  2123                           postinc0	equ	0xFEE
  2124                           wreg	equ	0xFE8
  2125                           postdec1	equ	0xFE5
  2126                           fsr1l	equ	0xFE1
  2127                           indf2	equ	0xFDF
  2128                           postinc2	equ	0xFDE
  2129                           postdec2	equ	0xFDD
  2130                           fsr2h	equ	0xFDA
  2131                           fsr2l	equ	0xFD9
  2132                           status	equ	0xFD8
  2133                           
  2134 ;; *************** function _rand *****************
  2135 ;; Defined at:
  2136 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  2   40[COMRAM] int 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;Total ram usage:        2 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    5
  2157 ;; This function calls:
  2158 ;;		___lmul
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text9
  2165  000ED8                     __ptext9:
  2166                           	opt stack 0
  2167  000ED8                     _rand:
  2168                           	opt stack 25
  2169                           
  2170                           ;incstack = 0
  2171  000ED8  C036  F0E0         	movff	_randx,___lmul@multiplier
  2172  000EDC  C037  F0E1         	movff	_randx+1,___lmul@multiplier+1
  2173  000EE0  C038  F0E2         	movff	_randx+2,___lmul@multiplier+2
  2174  000EE4  C039  F0E3         	movff	_randx+3,___lmul@multiplier+3
  2175  000EE8  0E6D               	movlw	109
  2176  000EEA  0100               	movlb	0	; () banked
  2177  000EEC  6FE4               	movwf	___lmul@multiplicand& (0+255),b
  2178  000EEE  0E4E               	movlw	78
  2179  000EF0  6FE5               	movwf	(___lmul@multiplicand+1)& (0+255),b
  2180  000EF2  0EC6               	movlw	198
  2181  000EF4  6FE6               	movwf	(___lmul@multiplicand+2)& (0+255),b
  2182  000EF6  0E41               	movlw	65
  2183  000EF8  6FE7               	movwf	(___lmul@multiplicand+3)& (0+255),b
  2184  000EFA  ECAC  F006         	call	___lmul	;wreg free
  2185  000EFE  C0E0  F036         	movff	?___lmul,_randx
  2186  000F02  C0E1  F037         	movff	?___lmul+1,_randx+1
  2187  000F06  C0E2  F038         	movff	?___lmul+2,_randx+2
  2188  000F0A  C0E3  F039         	movff	?___lmul+3,_randx+3
  2189  000F0E  0E39               	movlw	57
  2190  000F10  2636               	addwf	_randx,f,c
  2191  000F12  0E30               	movlw	48
  2192  000F14  2237               	addwfc	_randx+1,f,c
  2193  000F16  0E00               	movlw	0
  2194  000F18  2238               	addwfc	_randx+2,f,c
  2195  000F1A  0E00               	movlw	0
  2196  000F1C  2239               	addwfc	_randx+3,f,c
  2197  000F1E  0EFF               	movlw	255
  2198  000F20  1438               	andwf	_randx+2,w,c
  2199  000F22  6E29               	movwf	?_rand,c
  2200  000F24  0E7F               	movlw	127
  2201  000F26  1439               	andwf	_randx+3,w,c
  2202  000F28  6E2A               	movwf	?_rand+1,c
  2203  000F2A  0012               	return	
  2204  000F2C                     __end_of_rand:
  2205                           	opt stack 0
  2206                           tblptru	equ	0xFF8
  2207                           tblptrh	equ	0xFF7
  2208                           tblptrl	equ	0xFF6
  2209                           tablat	equ	0xFF5
  2210                           intcon	equ	0xFF2
  2211                           postinc0	equ	0xFEE
  2212                           wreg	equ	0xFE8
  2213                           postdec1	equ	0xFE5
  2214                           fsr1l	equ	0xFE1
  2215                           indf2	equ	0xFDF
  2216                           postinc2	equ	0xFDE
  2217                           postdec2	equ	0xFDD
  2218                           fsr2h	equ	0xFDA
  2219                           fsr2l	equ	0xFD9
  2220                           status	equ	0xFD8
  2221                           
  2222 ;; *************** function ___lmul *****************
  2223 ;; Defined at:
  2224 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul32.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2227 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  product         4   36[COMRAM] unsigned long 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  4    0[BANK0 ] unsigned long 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2239 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;Total ram usage:       12 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    4
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_rand
  2250 ;;		_strtol
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text10
  2255  000D58                     __ptext10:
  2256                           	opt stack 0
  2257  000D58                     ___lmul:
  2258                           	opt stack 25
  2259                           
  2260                           ;incstack = 0
  2261  000D58  0E00               	movlw	0
  2262  000D5A  6E25               	movwf	___lmul@product,c
  2263  000D5C  0E00               	movlw	0
  2264  000D5E  6E26               	movwf	___lmul@product+1,c
  2265  000D60  0E00               	movlw	0
  2266  000D62  6E27               	movwf	___lmul@product+2,c
  2267  000D64  0E00               	movlw	0
  2268  000D66  6E28               	movwf	___lmul@product+3,c
  2269  000D68                     l3111:
  2270  000D68  0100               	movlb	0	; () banked
  2271  000D6A  A1E0               	btfss	___lmul@multiplier& (0+255),0,b
  2272  000D6C  D00C               	goto	l3115
  2273                           
  2274                           ; BSR set to: 0
  2275  000D6E  0100               	movlb	0	; () banked
  2276  000D70  51E4               	movf	___lmul@multiplicand& (0+255),w,b
  2277  000D72  2625               	addwf	___lmul@product,f,c
  2278  000D74  0100               	movlb	0	; () banked
  2279  000D76  51E5               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  2280  000D78  2226               	addwfc	___lmul@product+1,f,c
  2281  000D7A  0100               	movlb	0	; () banked
  2282  000D7C  51E6               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  2283  000D7E  2227               	addwfc	___lmul@product+2,f,c
  2284  000D80  0100               	movlb	0	; () banked
  2285  000D82  51E7               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  2286  000D84  2228               	addwfc	___lmul@product+3,f,c
  2287  000D86                     l3115:
  2288                           
  2289                           ; BSR set to: 0
  2290  000D86  0100               	movlb	0	; () banked
  2291  000D88  90D8               	bcf	status,0,c
  2292  000D8A  37E4               	rlcf	___lmul@multiplicand& (0+255),f,b
  2293  000D8C  37E5               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  2294  000D8E  37E6               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  2295  000D90  37E7               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  2296                           
  2297                           ; BSR set to: 0
  2298  000D92  0100               	movlb	0	; () banked
  2299  000D94  90D8               	bcf	status,0,c
  2300  000D96  33E3               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  2301  000D98  33E2               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  2302  000D9A  33E1               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  2303  000D9C  33E0               	rrcf	___lmul@multiplier& (0+255),f,b
  2304  000D9E  0100               	movlb	0	; () banked
  2305  000DA0  51E0               	movf	___lmul@multiplier& (0+255),w,b
  2306  000DA2  0100               	movlb	0	; () banked
  2307  000DA4  11E1               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  2308  000DA6  0100               	movlb	0	; () banked
  2309  000DA8  11E2               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  2310  000DAA  0100               	movlb	0	; () banked
  2311  000DAC  11E3               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  2312  000DAE  A4D8               	btfss	status,2,c
  2313  000DB0  D7DB               	goto	l3111
  2314                           
  2315                           ; BSR set to: 0
  2316  000DB2  C025  F0E0         	movff	___lmul@product,?___lmul
  2317  000DB6  C026  F0E1         	movff	___lmul@product+1,?___lmul+1
  2318  000DBA  C027  F0E2         	movff	___lmul@product+2,?___lmul+2
  2319  000DBE  C028  F0E3         	movff	___lmul@product+3,?___lmul+3
  2320                           
  2321                           ; BSR set to: 0
  2322  000DC2  0012               	return		;funcret
  2323  000DC4                     __end_of___lmul:
  2324                           	opt stack 0
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           intcon	equ	0xFF2
  2330                           postinc0	equ	0xFEE
  2331                           wreg	equ	0xFE8
  2332                           postdec1	equ	0xFE5
  2333                           fsr1l	equ	0xFE1
  2334                           indf2	equ	0xFDF
  2335                           postinc2	equ	0xFDE
  2336                           postdec2	equ	0xFDD
  2337                           fsr2h	equ	0xFDA
  2338                           fsr2l	equ	0xFD9
  2339                           status	equ	0xFD8
  2340                           
  2341 ;; *************** function _process_data_opt *****************
  2342 ;; Defined at:
  2343 ;;		line 56 in file "main.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  msb             1    wreg     unsigned char 
  2346 ;;  lsb             1   21[BANK0 ] unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  msb             1    0[BANK1 ] unsigned char 
  2349 ;;  result          4    9[BANK1 ] unsigned long 
  2350 ;;  Illumination    4    5[BANK1 ] unsigned long 
  2351 ;;  raw             2    3[BANK1 ] int 
  2352 ;;  exponent        2    1[BANK1 ] unsigned int 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2362 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Totals:         0       5      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;Total ram usage:       18 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    7
  2369 ;; This function calls:
  2370 ;;		_printf
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text11
  2377  000098                     __ptext11:
  2378                           	opt stack 0
  2379  000098                     _process_data_opt:
  2380                           	opt stack 23
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;incstack = 0
  2384                           ;process_data_opt@msb stored from wreg
  2385  000098  0101               	movlb	1	; () banked
  2386  00009A  6FA8               	movwf	process_data_opt@msb& (0+255),b
  2387                           
  2388                           ;main.c: 57: int16_t raw;
  2389                           ;main.c: 58: uint16_t exponent = 0;
  2390  00009C  0E00               	movlw	0
  2391  00009E  0101               	movlb	1	; () banked
  2392  0000A0  6FAA               	movwf	(process_data_opt@exponent+1)& (0+255),b
  2393  0000A2  0E00               	movlw	0
  2394  0000A4  6FA9               	movwf	process_data_opt@exponent& (0+255),b
  2395                           
  2396                           ;main.c: 59: uint32_t result = 0;
  2397  0000A6  0E00               	movlw	0
  2398  0000A8  0101               	movlb	1	; () banked
  2399  0000AA  6FB1               	movwf	process_data_opt@result& (0+255),b
  2400  0000AC  0E00               	movlw	0
  2401  0000AE  6FB2               	movwf	(process_data_opt@result+1)& (0+255),b
  2402  0000B0  0E00               	movlw	0
  2403  0000B2  6FB3               	movwf	(process_data_opt@result+2)& (0+255),b
  2404  0000B4  0E00               	movlw	0
  2405  0000B6  6FB4               	movwf	(process_data_opt@result+3)& (0+255),b
  2406                           
  2407                           ;main.c: 60: uint32_t Illumination = 0;
  2408  0000B8  0E00               	movlw	0
  2409  0000BA  0101               	movlb	1	; () banked
  2410  0000BC  6FAD               	movwf	process_data_opt@Illumination& (0+255),b
  2411  0000BE  0E00               	movlw	0
  2412  0000C0  6FAE               	movwf	(process_data_opt@Illumination+1)& (0+255),b
  2413  0000C2  0E00               	movlw	0
  2414  0000C4  6FAF               	movwf	(process_data_opt@Illumination+2)& (0+255),b
  2415  0000C6  0E00               	movlw	0
  2416  0000C8  6FB0               	movwf	(process_data_opt@Illumination+3)& (0+255),b
  2417                           
  2418                           ; BSR set to: 1
  2419                           ;main.c: 63: raw = ((msb << 8) | lsb);
  2420  0000CA  0100               	movlb	0	; () banked
  2421  0000CC  51F5               	movf	process_data_opt@lsb& (0+255),w,b
  2422  0000CE  C1A8  F0F6         	movff	process_data_opt@msb,??_process_data_opt
  2423  0000D2  0100               	movlb	0	; () banked
  2424  0000D4  6BF7               	clrf	(??_process_data_opt+1)& (0+255),b
  2425  0000D6  C0F6  F0F7         	movff	??_process_data_opt,??_process_data_opt+1
  2426  0000DA  0100               	movlb	0	; () banked
  2427  0000DC  6BF6               	clrf	??_process_data_opt& (0+255),b
  2428  0000DE  0100               	movlb	0	; () banked
  2429  0000E0  11F6               	iorwf	??_process_data_opt& (0+255),w,b
  2430  0000E2  0101               	movlb	1	; () banked
  2431  0000E4  6FAB               	movwf	process_data_opt@raw& (0+255),b
  2432  0000E6  0100               	movlb	0	; () banked
  2433  0000E8  51F7               	movf	(??_process_data_opt+1)& (0+255),w,b
  2434  0000EA  0101               	movlb	1	; () banked
  2435  0000EC  6FAC               	movwf	(process_data_opt@raw+1)& (0+255),b
  2436                           
  2437                           ; BSR set to: 1
  2438                           ;main.c: 65: result = raw&0x0FFF;
  2439  0000EE  0EFF               	movlw	255
  2440  0000F0  0100               	movlb	0	; () banked
  2441  0000F2  6FF6               	movwf	??_process_data_opt& (0+255),b
  2442  0000F4  0E0F               	movlw	15
  2443  0000F6  0100               	movlb	0	; () banked
  2444  0000F8  6FF7               	movwf	(??_process_data_opt+1)& (0+255),b
  2445  0000FA  C1AB  F0F8         	movff	process_data_opt@raw,??_process_data_opt+2
  2446  0000FE  C1AC  F0F9         	movff	process_data_opt@raw+1,??_process_data_opt+3
  2447  000102  0100               	movlb	0	; () banked
  2448  000104  51F6               	movf	??_process_data_opt& (0+255),w,b
  2449  000106  0100               	movlb	0	; () banked
  2450  000108  17F8               	andwf	(??_process_data_opt+2)& (0+255),f,b
  2451  00010A  0100               	movlb	0	; () banked
  2452  00010C  51F7               	movf	(??_process_data_opt+1)& (0+255),w,b
  2453  00010E  0100               	movlb	0	; () banked
  2454  000110  17F9               	andwf	(??_process_data_opt+3)& (0+255),f,b
  2455  000112  C0F8  F1B1         	movff	??_process_data_opt+2,process_data_opt@result
  2456  000116  C0F9  F1B2         	movff	??_process_data_opt+3,process_data_opt@result+1
  2457  00011A  0101               	movlb	1	; () banked
  2458  00011C  0E00               	movlw	0
  2459  00011E  BFB2               	btfsc	(process_data_opt@result+1)& (0+255),7,b
  2460  000120  0EFF               	movlw	-1
  2461  000122  6FB3               	movwf	(process_data_opt@result+2)& (0+255),b
  2462  000124  6FB4               	movwf	(process_data_opt@result+3)& (0+255),b
  2463                           
  2464                           ; BSR set to: 1
  2465                           ;main.c: 66: exponent = (raw>>12)&0x000F;
  2466  000126  C1AB  F0F6         	movff	process_data_opt@raw,??_process_data_opt
  2467  00012A  C1AC  F0F7         	movff	process_data_opt@raw+1,??_process_data_opt+1
  2468  00012E  0E0C               	movlw	12
  2469  000130  0100               	movlb	0	; () banked
  2470  000132  6FF8               	movwf	(??_process_data_opt+2)& (0+255),b
  2471  000134                     u2515:
  2472  000134  0100               	movlb	0	; () banked
  2473  000136  35F7               	rlcf	(??_process_data_opt+1)& (0+255),w,b
  2474  000138  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  2475  00013A  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  2476  00013C  0100               	movlb	0	; () banked
  2477  00013E  2FF8               	decfsz	(??_process_data_opt+2)& (0+255),f,b
  2478  000140  D7F9               	goto	u2515
  2479  000142  0E0F               	movlw	15
  2480  000144  0100               	movlb	0	; () banked
  2481  000146  15F6               	andwf	??_process_data_opt& (0+255),w,b
  2482  000148  0101               	movlb	1	; () banked
  2483  00014A  6FA9               	movwf	process_data_opt@exponent& (0+255),b
  2484  00014C  0101               	movlb	1	; () banked
  2485  00014E  6BAA               	clrf	(process_data_opt@exponent+1)& (0+255),b
  2486                           
  2487                           ;main.c: 68: switch(exponent){
  2488  000150  D0D9               	goto	l3157
  2489  000152                     l3133:
  2490                           
  2491                           ;main.c: 70: Illumination = result>>6;
  2492  000152  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  2493  000156  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  2494  00015A  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  2495  00015E  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  2496  000162  0E07               	movlw	7
  2497  000164  D006               	goto	u2520
  2498  000166                     u2525:
  2499  000166  0100               	movlb	0	; () banked
  2500  000168  90D8               	bcf	status,0,c
  2501  00016A  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  2502  00016C  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  2503  00016E  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  2504  000170  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  2505  000172                     u2520:
  2506  000172  2EE8               	decfsz	wreg,f,c
  2507  000174  D7F8               	goto	u2525
  2508  000176  D0BD               	goto	L9
  2509  000178                     l3135:
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;main.c: 73: Illumination = result>>5;
  2513  000178  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  2514  00017C  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  2515  000180  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  2516  000184  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  2517  000188  0E06               	movlw	6
  2518  00018A  D006               	goto	u2530
  2519  00018C                     u2535:
  2520  00018C  0100               	movlb	0	; () banked
  2521  00018E  90D8               	bcf	status,0,c
  2522  000190  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  2523  000192  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  2524  000194  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  2525  000196  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  2526  000198                     u2530:
  2527  000198  2EE8               	decfsz	wreg,f,c
  2528  00019A  D7F8               	goto	u2535
  2529  00019C  D0AA               	goto	L9
  2530  00019E                     l3137:
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;main.c: 76: Illumination = result>>4;
  2534  00019E  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  2535  0001A2  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  2536  0001A6  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  2537  0001AA  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  2538  0001AE  0E05               	movlw	5
  2539  0001B0  D006               	goto	u2540
  2540  0001B2                     u2545:
  2541  0001B2  0100               	movlb	0	; () banked
  2542  0001B4  90D8               	bcf	status,0,c
  2543  0001B6  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  2544  0001B8  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  2545  0001BA  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  2546  0001BC  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  2547  0001BE                     u2540:
  2548  0001BE  2EE8               	decfsz	wreg,f,c
  2549  0001C0  D7F8               	goto	u2545
  2550  0001C2  D097               	goto	L9
  2551  0001C4                     l3139:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;main.c: 79: Illumination = result>>3;
  2555  0001C4  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  2556  0001C8  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  2557  0001CC  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  2558  0001D0  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  2559  0001D4  0E04               	movlw	4
  2560  0001D6  D006               	goto	u2550
  2561  0001D8                     u2555:
  2562  0001D8  0100               	movlb	0	; () banked
  2563  0001DA  90D8               	bcf	status,0,c
  2564  0001DC  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  2565  0001DE  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  2566  0001E0  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  2567  0001E2  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  2568  0001E4                     u2550:
  2569  0001E4  2EE8               	decfsz	wreg,f,c
  2570  0001E6  D7F8               	goto	u2555
  2571  0001E8  D084               	goto	L9
  2572  0001EA                     l3141:
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;main.c: 82: Illumination = result>>2;
  2576  0001EA  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  2577  0001EE  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  2578  0001F2  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  2579  0001F6  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  2580  0001FA  0E03               	movlw	3
  2581  0001FC  D006               	goto	u2560
  2582  0001FE                     u2565:
  2583  0001FE  0100               	movlb	0	; () banked
  2584  000200  90D8               	bcf	status,0,c
  2585  000202  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  2586  000204  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  2587  000206  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  2588  000208  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  2589  00020A                     u2560:
  2590  00020A  2EE8               	decfsz	wreg,f,c
  2591  00020C  D7F8               	goto	u2565
  2592  00020E  D071               	goto	L9
  2593  000210                     l3143:
  2594                           
  2595                           ; BSR set to: 0
  2596                           ;main.c: 85: Illumination = result>>1;
  2597  000210  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  2598  000214  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  2599  000218  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  2600  00021C  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  2601  000220  0100               	movlb	0	; () banked
  2602  000222  90D8               	bcf	status,0,c
  2603  000224  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  2604  000226  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  2605  000228  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  2606  00022A  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  2607  00022C  D062               	goto	L9
  2608  00022E                     l307:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;main.c: 88: Illumination = result;
  2612  00022E  C1B1  F1AD         	movff	process_data_opt@result,process_data_opt@Illumination
  2613  000232  C1B2  F1AE         	movff	process_data_opt@result+1,process_data_opt@Illumination+1
  2614  000236  C1B3  F1AF         	movff	process_data_opt@result+2,process_data_opt@Illumination+2
  2615  00023A  C1B4  F1B0         	movff	process_data_opt@result+3,process_data_opt@Illumination+3
  2616                           
  2617                           ;main.c: 89: break;
  2618  00023E  D091               	goto	l3159
  2619  000240                     l3145:
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;main.c: 91: Illumination = result<<1;
  2623  000240  90D8               	bcf	status,0,c
  2624  000242  0101               	movlb	1	; () banked
  2625  000244  35B1               	rlcf	process_data_opt@result& (0+255),w,b
  2626  000246  0101               	movlb	1	; () banked
  2627  000248  6FAD               	movwf	process_data_opt@Illumination& (0+255),b
  2628  00024A  0101               	movlb	1	; () banked
  2629  00024C  35B2               	rlcf	(process_data_opt@result+1)& (0+255),w,b
  2630  00024E  0101               	movlb	1	; () banked
  2631  000250  6FAE               	movwf	(process_data_opt@Illumination+1)& (0+255),b
  2632  000252  0101               	movlb	1	; () banked
  2633  000254  35B3               	rlcf	(process_data_opt@result+2)& (0+255),w,b
  2634  000256  0101               	movlb	1	; () banked
  2635  000258  6FAF               	movwf	(process_data_opt@Illumination+2)& (0+255),b
  2636  00025A  0101               	movlb	1	; () banked
  2637  00025C  35B4               	rlcf	(process_data_opt@result+3)& (0+255),w,b
  2638  00025E  0101               	movlb	1	; () banked
  2639  000260  6FB0               	movwf	(process_data_opt@Illumination+3)& (0+255),b
  2640                           
  2641                           ;main.c: 92: break;
  2642  000262  D07F               	goto	l3159
  2643  000264                     l3147:
  2644                           
  2645                           ;main.c: 94: Illumination = result<<2;
  2646  000264  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  2647  000268  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  2648  00026C  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  2649  000270  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  2650  000274  0E02               	movlw	2
  2651  000276                     u2575:
  2652  000276  90D8               	bcf	status,0,c
  2653  000278  0100               	movlb	0	; () banked
  2654  00027A  37F6               	rlcf	??_process_data_opt& (0+255),f,b
  2655  00027C  37F7               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  2656  00027E  37F8               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  2657  000280  37F9               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  2658  000282  2EE8               	decfsz	wreg,f,c
  2659  000284  D7F8               	goto	u2575
  2660  000286  D035               	goto	L9
  2661  000288                     l3149:
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;main.c: 97: Illumination = result<<3;
  2665  000288  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  2666  00028C  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  2667  000290  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  2668  000294  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  2669  000298  0E03               	movlw	3
  2670  00029A                     u2585:
  2671  00029A  90D8               	bcf	status,0,c
  2672  00029C  0100               	movlb	0	; () banked
  2673  00029E  37F6               	rlcf	??_process_data_opt& (0+255),f,b
  2674  0002A0  37F7               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  2675  0002A2  37F8               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  2676  0002A4  37F9               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  2677  0002A6  2EE8               	decfsz	wreg,f,c
  2678  0002A8  D7F8               	goto	u2585
  2679  0002AA  D023               	goto	L9
  2680  0002AC                     l3151:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;main.c: 100: Illumination = result<<4;
  2684  0002AC  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  2685  0002B0  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  2686  0002B4  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  2687  0002B8  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  2688  0002BC  0E04               	movlw	4
  2689  0002BE                     u2595:
  2690  0002BE  90D8               	bcf	status,0,c
  2691  0002C0  0100               	movlb	0	; () banked
  2692  0002C2  37F6               	rlcf	??_process_data_opt& (0+255),f,b
  2693  0002C4  37F7               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  2694  0002C6  37F8               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  2695  0002C8  37F9               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  2696  0002CA  2EE8               	decfsz	wreg,f,c
  2697  0002CC  D7F8               	goto	u2595
  2698  0002CE  D011               	goto	L9
  2699  0002D0                     l3153:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;main.c: 103: Illumination = result<<5;
  2703  0002D0  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  2704  0002D4  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  2705  0002D8  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  2706  0002DC  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  2707  0002E0  0E05               	movlw	5
  2708  0002E2                     u2605:
  2709  0002E2  90D8               	bcf	status,0,c
  2710  0002E4  0100               	movlb	0	; () banked
  2711  0002E6  37F6               	rlcf	??_process_data_opt& (0+255),f,b
  2712  0002E8  37F7               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  2713  0002EA  37F8               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  2714  0002EC  37F9               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  2715  0002EE  2EE8               	decfsz	wreg,f,c
  2716  0002F0  D7F8               	goto	u2605
  2717  0002F2                     L9:
  2718  0002F2  C0F6  F1AD         	movff	??_process_data_opt,process_data_opt@Illumination
  2719  0002F6  C0F7  F1AE         	movff	??_process_data_opt+1,process_data_opt@Illumination+1
  2720  0002FA  C0F8  F1AF         	movff	??_process_data_opt+2,process_data_opt@Illumination+2
  2721  0002FE  C0F9  F1B0         	movff	??_process_data_opt+3,process_data_opt@Illumination+3
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;main.c: 105: }
  2725                           
  2726                           ;main.c: 104: break;
  2727  000302  D02F               	goto	l3159
  2728  000304                     l3157:
  2729  000304  C1A9  F0F6         	movff	process_data_opt@exponent,??_process_data_opt
  2730  000308  C1AA  F0F7         	movff	process_data_opt@exponent+1,??_process_data_opt+1
  2731                           
  2732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2733                           ; Switch size 1, requested type "space"
  2734                           ; Number of cases is 1, Range of values is 0 to 0
  2735                           ; switch strategies available:
  2736                           ; Name         Instructions Cycles
  2737                           ; simple_byte            4     3 (average)
  2738                           ;	Chosen strategy is simple_byte
  2739  00030C  0100               	movlb	0	; () banked
  2740  00030E  51F7               	movf	(??_process_data_opt+1)& (0+255),w,b
  2741  000310  0A00               	xorlw	0	; case 0
  2742  000312  A4D8               	btfss	status,2,c
  2743  000314  D026               	goto	l3159
  2744                           
  2745                           ; BSR set to: 0
  2746                           ; Switch size 1, requested type "space"
  2747                           ; Number of cases is 12, Range of values is 0 to 11
  2748                           ; switch strategies available:
  2749                           ; Name         Instructions Cycles
  2750                           ; simple_byte           37    19 (average)
  2751                           ;	Chosen strategy is simple_byte
  2752  000316  0100               	movlb	0	; () banked
  2753  000318  51F6               	movf	??_process_data_opt& (0+255),w,b
  2754  00031A  0A00               	xorlw	0	; case 0
  2755  00031C  B4D8               	btfsc	status,2,c
  2756  00031E  D719               	goto	l3133
  2757  000320  0A01               	xorlw	1	; case 1
  2758  000322  B4D8               	btfsc	status,2,c
  2759  000324  D729               	goto	l3135
  2760  000326  0A03               	xorlw	3	; case 2
  2761  000328  B4D8               	btfsc	status,2,c
  2762  00032A  D739               	goto	l3137
  2763  00032C  0A01               	xorlw	1	; case 3
  2764  00032E  B4D8               	btfsc	status,2,c
  2765  000330  D749               	goto	l3139
  2766  000332  0A07               	xorlw	7	; case 4
  2767  000334  B4D8               	btfsc	status,2,c
  2768  000336  D759               	goto	l3141
  2769  000338  0A01               	xorlw	1	; case 5
  2770  00033A  B4D8               	btfsc	status,2,c
  2771  00033C  D769               	goto	l3143
  2772  00033E  0A03               	xorlw	3	; case 6
  2773  000340  B4D8               	btfsc	status,2,c
  2774  000342  D775               	goto	l307
  2775  000344  0A01               	xorlw	1	; case 7
  2776  000346  B4D8               	btfsc	status,2,c
  2777  000348  D77B               	goto	l3145
  2778  00034A  0A0F               	xorlw	15	; case 8
  2779  00034C  B4D8               	btfsc	status,2,c
  2780  00034E  D78A               	goto	l3147
  2781  000350  0A01               	xorlw	1	; case 9
  2782  000352  B4D8               	btfsc	status,2,c
  2783  000354  D799               	goto	l3149
  2784  000356  0A03               	xorlw	3	; case 10
  2785  000358  B4D8               	btfsc	status,2,c
  2786  00035A  D7A8               	goto	l3151
  2787  00035C  0A01               	xorlw	1	; case 11
  2788  00035E  B4D8               	btfsc	status,2,c
  2789  000360  D7B7               	goto	l3153
  2790  000362                     l3159:
  2791                           
  2792                           ;main.c: 106: printf("> %d\r\n",Illumination);
  2793  000362  0EF7               	movlw	low STR_6
  2794  000364  0100               	movlb	0	; () banked
  2795  000366  6FE7               	movwf	printf@f& (0+255),b
  2796  000368  0EFF               	movlw	high STR_6
  2797  00036A  0100               	movlb	0	; () banked
  2798  00036C  6FE8               	movwf	(printf@f+1)& (0+255),b
  2799  00036E  C1AD  F0E9         	movff	process_data_opt@Illumination,?_printf+2
  2800  000372  C1AE  F0EA         	movff	process_data_opt@Illumination+1,?_printf+3
  2801  000376  C1AF  F0EB         	movff	process_data_opt@Illumination+2,?_printf+4
  2802  00037A  C1B0  F0EC         	movff	process_data_opt@Illumination+3,?_printf+5
  2803  00037E  ECC2  F001         	call	_printf	;wreg free
  2804  000382  0012               	return		;funcret
  2805  000384                     __end_of_process_data_opt:
  2806                           	opt stack 0
  2807                           tblptru	equ	0xFF8
  2808                           tblptrh	equ	0xFF7
  2809                           tblptrl	equ	0xFF6
  2810                           tablat	equ	0xFF5
  2811                           intcon	equ	0xFF2
  2812                           postinc0	equ	0xFEE
  2813                           wreg	equ	0xFE8
  2814                           postdec1	equ	0xFE5
  2815                           fsr1l	equ	0xFE1
  2816                           indf2	equ	0xFDF
  2817                           postinc2	equ	0xFDE
  2818                           postdec2	equ	0xFDD
  2819                           fsr2h	equ	0xFDA
  2820                           fsr2l	equ	0xFD9
  2821                           status	equ	0xFD8
  2822                           
  2823 ;; *************** function _getUUID *****************
  2824 ;; Defined at:
  2825 ;;		line 50 in file "main.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;		None
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;		None
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;Total ram usage:        0 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    7
  2846 ;; This function calls:
  2847 ;;		_printf
  2848 ;;		_read_line
  2849 ;;		_strcpy
  2850 ;; This function is called by:
  2851 ;;		_main
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text12
  2856  001136                     __ptext12:
  2857                           	opt stack 0
  2858  001136                     _getUUID:
  2859                           	opt stack 23
  2860                           
  2861                           ;main.c: 51: printf("sys get hweui\r\n");
  2862                           
  2863                           ;incstack = 0
  2864  001136  0E5D               	movlw	low STR_5
  2865  001138  0100               	movlb	0	; () banked
  2866  00113A  6FE7               	movwf	printf@f& (0+255),b
  2867  00113C  0EFF               	movlw	high STR_5
  2868  00113E  0100               	movlb	0	; () banked
  2869  001140  6FE8               	movwf	(printf@f+1)& (0+255),b
  2870  001142  ECC2  F001         	call	_printf	;wreg free
  2871                           
  2872                           ;main.c: 52: read_line();
  2873  001146  EC52  F009         	call	_read_line	;wreg free
  2874                           
  2875                           ;main.c: 53: strcpy(uuid,line);
  2876  00114A  0E80               	movlw	low _uuid
  2877  00114C  6E25               	movwf	strcpy@to,c
  2878  00114E  0E01               	movlw	high _uuid
  2879  001150  6E26               	movwf	strcpy@to+1,c
  2880  001152  0E60               	movlw	low _line
  2881  001154  6E27               	movwf	strcpy@from,c
  2882  001156  0E00               	movlw	high _line
  2883  001158  6E28               	movwf	strcpy@from+1,c
  2884  00115A  EC56  F008         	call	_strcpy	;wreg free
  2885  00115E  0012               	return		;funcret
  2886  001160                     __end_of_getUUID:
  2887                           	opt stack 0
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           intcon	equ	0xFF2
  2893                           postinc0	equ	0xFEE
  2894                           wreg	equ	0xFE8
  2895                           postdec1	equ	0xFE5
  2896                           fsr1l	equ	0xFE1
  2897                           indf2	equ	0xFDF
  2898                           postinc2	equ	0xFDE
  2899                           postdec2	equ	0xFDD
  2900                           fsr2h	equ	0xFDA
  2901                           fsr2l	equ	0xFD9
  2902                           status	equ	0xFD8
  2903                           
  2904 ;; *************** function _strcpy *****************
  2905 ;; Defined at:
  2906 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcpy.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  to              2   36[COMRAM] PTR unsigned char 
  2909 ;;		 -> uuid(40), 
  2910 ;;  from            2   38[COMRAM] PTR const unsigned char 
  2911 ;;		 -> line(128), 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  cp              2   40[COMRAM] PTR unsigned char 
  2914 ;;		 -> uuid(40), 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  2   36[COMRAM] PTR unsigned char 
  2917 ;; Registers used:
  2918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;Total ram usage:        6 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    4
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_getUUID
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text13
  2939  0010AC                     __ptext13:
  2940                           	opt stack 0
  2941  0010AC                     _strcpy:
  2942                           	opt stack 25
  2943                           
  2944                           ;incstack = 0
  2945  0010AC  C025  F029         	movff	strcpy@to,strcpy@cp
  2946  0010B0  C026  F02A         	movff	strcpy@to+1,strcpy@cp+1
  2947  0010B4  D004               	goto	l2375
  2948  0010B6                     l2373:
  2949  0010B6  4A29               	infsnz	strcpy@cp,f,c
  2950  0010B8  2A2A               	incf	strcpy@cp+1,f,c
  2951  0010BA  4A27               	infsnz	strcpy@from,f,c
  2952  0010BC  2A28               	incf	strcpy@from+1,f,c
  2953  0010BE                     l2375:
  2954  0010BE  C027  FFD9         	movff	strcpy@from,fsr2l
  2955  0010C2  C028  FFDA         	movff	strcpy@from+1,fsr2h
  2956  0010C6  C029  FFE1         	movff	strcpy@cp,fsr1l
  2957  0010CA  C02A  FFE2         	movff	strcpy@cp+1,fsr1h
  2958  0010CE  CFDF FFE7          	movff	indf2,indf1
  2959  0010D2  50E7               	movf	indf1,w,c
  2960  0010D4  B4D8               	btfsc	status,2,c
  2961  0010D6  0012               	return	
  2962  0010D8  D7EE               	goto	l2373
  2963  0010DA                     __end_of_strcpy:
  2964                           	opt stack 0
  2965                           tblptru	equ	0xFF8
  2966                           tblptrh	equ	0xFF7
  2967                           tblptrl	equ	0xFF6
  2968                           tablat	equ	0xFF5
  2969                           intcon	equ	0xFF2
  2970                           postinc0	equ	0xFEE
  2971                           wreg	equ	0xFE8
  2972                           indf1	equ	0xFE7
  2973                           postdec1	equ	0xFE5
  2974                           fsr1h	equ	0xFE2
  2975                           fsr1l	equ	0xFE1
  2976                           indf2	equ	0xFDF
  2977                           postinc2	equ	0xFDE
  2978                           postdec2	equ	0xFDD
  2979                           fsr2h	equ	0xFDA
  2980                           fsr2l	equ	0xFD9
  2981                           status	equ	0xFD8
  2982                           
  2983 ;; *************** function _read_line *****************
  2984 ;; Defined at:
  2985 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  2  147[None  ] int 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, status,0
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;Total ram usage:        0 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    4
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_getUUID
  3010 ;;		_main
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text14
  3015  0012A4                     __ptext14:
  3016                           	opt stack 0
  3017  0012A4                     _read_line:
  3018                           	opt stack 26
  3019  0012A4                     l2283:
  3020  0012A4  0433               	decf	_ready,w,c	;volatile
  3021  0012A6  A4D8               	btfss	status,2,c
  3022  0012A8  D7FD               	goto	l2283
  3023                           
  3024                           ;eusart1.c: 252: }
  3025                           ;eusart1.c: 253: ready=0;
  3026  0012AA  0E00               	movlw	0
  3027  0012AC  6E33               	movwf	_ready,c	;volatile
  3028  0012AE  0012               	return	
  3029  0012B0                     __end_of_read_line:
  3030                           	opt stack 0
  3031                           tblptru	equ	0xFF8
  3032                           tblptrh	equ	0xFF7
  3033                           tblptrl	equ	0xFF6
  3034                           tablat	equ	0xFF5
  3035                           intcon	equ	0xFF2
  3036                           postinc0	equ	0xFEE
  3037                           wreg	equ	0xFE8
  3038                           indf1	equ	0xFE7
  3039                           postdec1	equ	0xFE5
  3040                           fsr1h	equ	0xFE2
  3041                           fsr1l	equ	0xFE1
  3042                           indf2	equ	0xFDF
  3043                           postinc2	equ	0xFDE
  3044                           postdec2	equ	0xFDD
  3045                           fsr2h	equ	0xFDA
  3046                           fsr2l	equ	0xFD9
  3047                           status	equ	0xFD8
  3048                           
  3049 ;; *************** function _printf *****************
  3050 ;; Defined at:
  3051 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  f               2    7[BANK0 ] PTR const unsigned char 
  3054 ;;		 -> STR_22(19), STR_21(19), STR_20(19), STR_19(19), 
  3055 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(12), 
  3056 ;;		 -> STR_14(16), STR_13(18), STR_12(15), STR_11(15), 
  3057 ;;		 -> STR_10(15), STR_9(14), STR_8(12), STR_7(8), 
  3058 ;;		 -> STR_6(7), STR_5(16), 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  idx             1   13[BANK0 ] unsigned char 
  3061 ;;  tmpval          4    0        struct .
  3062 ;;  cp              3    0        PTR const unsigned char 
  3063 ;;  val             2   18[BANK0 ] unsigned int 
  3064 ;;  ap              2   14[BANK0 ] PTR void [1]
  3065 ;;		 -> ?_printf(2), 
  3066 ;;  len             2    0        unsigned int 
  3067 ;;  c               1   20[BANK0 ] char 
  3068 ;;  flag            1   17[BANK0 ] unsigned char 
  3069 ;;  prec            1   16[BANK0 ] char 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  2    7[BANK0 ] int 
  3072 ;; Registers used:
  3073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3079 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;Total ram usage:       15 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:    6
  3086 ;; This function calls:
  3087 ;;		___lwdiv
  3088 ;;		___lwmod
  3089 ;;		_putch
  3090 ;; This function is called by:
  3091 ;;		_getUUID
  3092 ;;		_process_data_opt
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text15
  3098  000384                     __ptext15:
  3099                           	opt stack 0
  3100  000384                     _printf:
  3101                           	opt stack 23
  3102                           
  3103                           ;doprnt.c: 466: va_list ap;
  3104                           ;doprnt.c: 499: signed char c;
  3105                           ;doprnt.c: 506: signed char prec;
  3106                           ;doprnt.c: 508: unsigned char flag;
  3107                           ;doprnt.c: 523: union {
  3108                           ;doprnt.c: 524: unsigned long vd;
  3109                           ;doprnt.c: 525: double integ;
  3110                           ;doprnt.c: 526: } tmpval;
  3111                           ;doprnt.c: 528: unsigned int val;
  3112                           ;doprnt.c: 529: unsigned len;
  3113                           ;doprnt.c: 530: const char * cp;
  3114                           ;doprnt.c: 533: *ap = __va_start();
  3115                           
  3116                           ;incstack = 0
  3117  000384  0EE9               	movlw	low (?_printf+2)
  3118  000386  0100               	movlb	0	; () banked
  3119  000388  6FEE               	movwf	printf@ap& (0+255),b
  3120  00038A  0E00               	movlw	high (?_printf+2)
  3121  00038C  0100               	movlb	0	; () banked
  3122  00038E  6FEF               	movwf	(printf@ap+1)& (0+255),b
  3123                           
  3124                           ;doprnt.c: 536: while(c = *f++) {
  3125  000390  D114               	goto	l3107
  3126  000392                     l3029:
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;doprnt.c: 538: if(c != '%')
  3130  000392  0E25               	movlw	37
  3131  000394  0100               	movlb	0	; () banked
  3132  000396  19F4               	xorwf	printf@c& (0+255),w,b
  3133  000398  B4D8               	btfsc	status,2,c
  3134  00039A  D005               	goto	l3033
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;doprnt.c: 540: {
  3138                           ;doprnt.c: 541: (putch(c) );
  3139  00039C  0100               	movlb	0	; () banked
  3140  00039E  51F4               	movf	printf@c& (0+255),w,b
  3141  0003A0  EC5E  F009         	call	_putch
  3142                           
  3143                           ;doprnt.c: 542: continue;
  3144  0003A4  D10A               	goto	l3107
  3145  0003A6                     l3033:
  3146                           
  3147                           ;doprnt.c: 543: }
  3148                           ;doprnt.c: 548: flag = 0;
  3149  0003A6  0E00               	movlw	0
  3150  0003A8  0100               	movlb	0	; () banked
  3151  0003AA  6FF1               	movwf	printf@flag& (0+255),b
  3152                           
  3153                           ;doprnt.c: 635: switch(c = *f++) {
  3154  0003AC  D003               	goto	l3039
  3155  0003AE                     l3035:
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;doprnt.c: 721: flag |= 0x80;
  3159  0003AE  0100               	movlb	0	; () banked
  3160  0003B0  8FF1               	bsf	printf@flag& (0+255),7,b
  3161                           
  3162                           ;doprnt.c: 723: break;
  3163  0003B2  D01A               	goto	l402
  3164  0003B4                     l3039:
  3165                           
  3166                           ; BSR set to: 0
  3167  0003B4  C0E7  FFF6         	movff	printf@f,tblptrl
  3168  0003B8  C0E8  FFF7         	movff	printf@f+1,tblptrh
  3169  0003BC  0100               	movlb	0	; () banked
  3170  0003BE  4BE7               	infsnz	printf@f& (0+255),f,b
  3171  0003C0  2BE8               	incf	(printf@f+1)& (0+255),f,b
  3172  0003C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3173  0003C2  6AF8               	clrf	tblptru,c
  3174  0003C4                     	endif
  3175  0003C4                     	if	0	;tblptru may be non-zero
  3176  0003C4                     	endif
  3177  0003C4  0008               	tblrd		*
  3178  0003C6  CFF5 F0F4          	movff	tablat,printf@c
  3179  0003CA  0100               	movlb	0	; () banked
  3180  0003CC  51F4               	movf	printf@c& (0+255),w,b
  3181                           
  3182                           ; Switch size 1, requested type "space"
  3183                           ; Number of cases is 4, Range of values is 0 to 120
  3184                           ; switch strategies available:
  3185                           ; Name         Instructions Cycles
  3186                           ; simple_byte           13     7 (average)
  3187                           ;	Chosen strategy is simple_byte
  3188  0003CE  0A00               	xorlw	0	; case 0
  3189  0003D0  B4D8               	btfsc	status,2,c
  3190  0003D2  0012               	return	
  3191  0003D4  0A64               	xorlw	100	; case 100
  3192  0003D6  B4D8               	btfsc	status,2,c
  3193  0003D8  D007               	goto	l402
  3194  0003DA  0A0D               	xorlw	13	; case 105
  3195  0003DC  B4D8               	btfsc	status,2,c
  3196  0003DE  D004               	goto	l402
  3197  0003E0  0A11               	xorlw	17	; case 120
  3198  0003E2  B4D8               	btfsc	status,2,c
  3199  0003E4  D7E4               	goto	l3035
  3200  0003E6  D0E9               	goto	l3107
  3201  0003E8                     l402:
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  3205  0003E8  0100               	movlb	0	; () banked
  3206  0003EA  BFF1               	btfsc	printf@flag& (0+255),7,b
  3207  0003EC  D019               	goto	l3051
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;doprnt.c: 1253: {
  3211                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3212  0003EE  C0EE  FFD9         	movff	printf@ap,fsr2l
  3213  0003F2  C0EF  FFDA         	movff	printf@ap+1,fsr2h
  3214  0003F6  CFDE F0F2          	movff	postinc2,printf@val
  3215  0003FA  CFDD F0F3          	movff	postdec2,printf@val+1
  3216                           
  3217                           ; BSR set to: 0
  3218  0003FE  0E02               	movlw	2
  3219  000400  0100               	movlb	0	; () banked
  3220  000402  27EE               	addwf	printf@ap& (0+255),f,b
  3221  000404  0E00               	movlw	0
  3222  000406  23EF               	addwfc	(printf@ap+1)& (0+255),f,b
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;doprnt.c: 1261: if((int)val < 0) {
  3226  000408  0100               	movlb	0	; () banked
  3227  00040A  AFF3               	btfss	(printf@val+1)& (0+255),7,b
  3228  00040C  D059               	goto	l3085
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;doprnt.c: 1262: flag |= 0x03;
  3232  00040E  0E03               	movlw	3
  3233  000410  0100               	movlb	0	; () banked
  3234  000412  13F1               	iorwf	printf@flag& (0+255),f,b
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;doprnt.c: 1263: val = -val;
  3238  000414  0100               	movlb	0	; () banked
  3239  000416  6DF2               	negf	printf@val& (0+255),b
  3240  000418  1FF3               	comf	(printf@val+1)& (0+255),f,b
  3241  00041A  B0D8               	btfsc	status,0,c
  3242  00041C  2BF3               	incf	(printf@val+1)& (0+255),f,b
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;doprnt.c: 1264: }
  3246                           ;doprnt.c: 1266: }
  3247  00041E  D050               	goto	l3085
  3248  000420                     l3051:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;doprnt.c: 1268: else
  3252                           ;doprnt.c: 1273: {
  3253                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3254  000420  C0EE  FFD9         	movff	printf@ap,fsr2l
  3255  000424  C0EF  FFDA         	movff	printf@ap+1,fsr2h
  3256  000428  CFDE F0F2          	movff	postinc2,printf@val
  3257  00042C  CFDD F0F3          	movff	postdec2,printf@val+1
  3258                           
  3259                           ; BSR set to: 0
  3260  000430  0E02               	movlw	2
  3261  000432  0100               	movlb	0	; () banked
  3262  000434  27EE               	addwf	printf@ap& (0+255),f,b
  3263  000436  0E00               	movlw	0
  3264  000438  23EF               	addwfc	(printf@ap+1)& (0+255),f,b
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;doprnt.c: 1287: }
  3268                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  3269  00043A  D042               	goto	l3085
  3270  00043C                     l3055:
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3274  00043C  0E01               	movlw	1
  3275  00043E  0100               	movlb	0	; () banked
  3276  000440  6FF4               	movwf	printf@c& (0+255),b
  3277  000442                     l3057:
  3278                           
  3279                           ; BSR set to: 0
  3280  000442  0E05               	movlw	5
  3281  000444  0100               	movlb	0	; () banked
  3282  000446  19F4               	xorwf	printf@c& (0+255),w,b
  3283  000448  B4D8               	btfsc	status,2,c
  3284  00044A  D043               	goto	l3087
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;doprnt.c: 1306: if(val < dpowers[c])
  3288                           
  3289                           ; BSR set to: 0
  3290                           
  3291                           ; BSR set to: 0
  3292  00044C  0100               	movlb	0	; () banked
  3293  00044E  51F4               	movf	printf@c& (0+255),w,b
  3294  000450  0D02               	mullw	2
  3295  000452  0EA3               	movlw	low _dpowers
  3296  000454  24F3               	addwf	prodl,w,c
  3297  000456  6EF6               	movwf	tblptrl,c
  3298  000458  0EFE               	movlw	high _dpowers
  3299  00045A  20F4               	addwfc	prodh,w,c
  3300  00045C  6EF7               	movwf	tblptrh,c
  3301  00045E                     	if	1	;There are 3 active tblptr bytes
  3302  00045E  6AF8               	clrf	tblptru,c
  3303  000460  0E00               	movlw	low (__mediumconst shr (0+16))
  3304  000462  22F8               	addwfc	tblptru,f,c
  3305  000464                     	endif
  3306  000464  0009               	tblrd		*+
  3307  000466  50F5               	movf	tablat,w,c
  3308  000468  0100               	movlb	0	; () banked
  3309  00046A  5DF2               	subwf	printf@val& (0+255),w,b
  3310  00046C  0009               	tblrd		*+
  3311  00046E  50F5               	movf	tablat,w,c
  3312  000470  0100               	movlb	0	; () banked
  3313  000472  59F3               	subwfb	(printf@val+1)& (0+255),w,b
  3314  000474  A0D8               	btfss	status,0,c
  3315  000476  D02D               	goto	l3087
  3316                           
  3317                           ; BSR set to: 0
  3318                           
  3319                           ; BSR set to: 0
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;doprnt.c: 1307: break;
  3323  000478  0100               	movlb	0	; () banked
  3324  00047A  2BF4               	incf	printf@c& (0+255),f,b
  3325  00047C  D7E2               	goto	l3057
  3326  00047E                     l3069:
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  3330  00047E  0E01               	movlw	1
  3331  000480  0100               	movlb	0	; () banked
  3332  000482  6FF4               	movwf	printf@c& (0+255),b
  3333  000484                     l3071:
  3334                           
  3335                           ; BSR set to: 0
  3336  000484  0E04               	movlw	4
  3337  000486  0100               	movlb	0	; () banked
  3338  000488  19F4               	xorwf	printf@c& (0+255),w,b
  3339  00048A  B4D8               	btfsc	status,2,c
  3340  00048C  D022               	goto	l3087
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;doprnt.c: 1317: if(val < hexpowers[c])
  3344                           
  3345                           ; BSR set to: 0
  3346                           
  3347                           ; BSR set to: 0
  3348  00048E  0100               	movlb	0	; () banked
  3349  000490  51F4               	movf	printf@c& (0+255),w,b
  3350  000492  0D02               	mullw	2
  3351  000494  0EAD               	movlw	low _hexpowers
  3352  000496  24F3               	addwf	prodl,w,c
  3353  000498  6EF6               	movwf	tblptrl,c
  3354  00049A  0EFE               	movlw	high _hexpowers
  3355  00049C  20F4               	addwfc	prodh,w,c
  3356  00049E  6EF7               	movwf	tblptrh,c
  3357  0004A0                     	if	1	;There are 3 active tblptr bytes
  3358  0004A0  6AF8               	clrf	tblptru,c
  3359  0004A2  0E00               	movlw	low (__mediumconst shr (0+16))
  3360  0004A4  22F8               	addwfc	tblptru,f,c
  3361  0004A6                     	endif
  3362  0004A6  0009               	tblrd		*+
  3363  0004A8  50F5               	movf	tablat,w,c
  3364  0004AA  0100               	movlb	0	; () banked
  3365  0004AC  5DF2               	subwf	printf@val& (0+255),w,b
  3366  0004AE  0009               	tblrd		*+
  3367  0004B0  50F5               	movf	tablat,w,c
  3368  0004B2  0100               	movlb	0	; () banked
  3369  0004B4  59F3               	subwfb	(printf@val+1)& (0+255),w,b
  3370  0004B6  A0D8               	btfss	status,0,c
  3371  0004B8  D00C               	goto	l3087
  3372                           
  3373                           ; BSR set to: 0
  3374                           
  3375                           ; BSR set to: 0
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;doprnt.c: 1318: break;
  3379  0004BA  0100               	movlb	0	; () banked
  3380  0004BC  2BF4               	incf	printf@c& (0+255),f,b
  3381  0004BE  D7E2               	goto	l3071
  3382  0004C0                     l3085:
  3383                           
  3384                           ; BSR set to: 0
  3385  0004C0  0100               	movlb	0	; () banked
  3386  0004C2  51F1               	movf	printf@flag& (0+255),w,b
  3387  0004C4  0B80               	andlw	128
  3388                           
  3389                           ; Switch size 1, requested type "space"
  3390                           ; Number of cases is 2, Range of values is 0 to 128
  3391                           ; switch strategies available:
  3392                           ; Name         Instructions Cycles
  3393                           ; simple_byte            7     4 (average)
  3394                           ;	Chosen strategy is simple_byte
  3395  0004C6  0A00               	xorlw	0	; case 0
  3396  0004C8  B4D8               	btfsc	status,2,c
  3397  0004CA  D7B8               	goto	l3055
  3398  0004CC  0A80               	xorlw	128	; case 128
  3399  0004CE  B4D8               	btfsc	status,2,c
  3400  0004D0  D7D6               	goto	l3069
  3401  0004D2                     l3087:
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;doprnt.c: 1422: {
  3405                           ;doprnt.c: 1438: if(flag & 0x03)
  3406  0004D2  C0F1  F02A         	movff	printf@flag,??_printf
  3407  0004D6  0E03               	movlw	3
  3408  0004D8  162A               	andwf	??_printf,f,c
  3409  0004DA  B4D8               	btfsc	status,2,c
  3410  0004DC  D003               	goto	l3091
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;doprnt.c: 1439: (putch('-') );
  3414  0004DE  0E2D               	movlw	45
  3415  0004E0  EC5E  F009         	call	_putch
  3416  0004E4                     l3091:
  3417                           
  3418                           ;doprnt.c: 1469: }
  3419                           ;doprnt.c: 1472: prec = c;
  3420  0004E4  C0F4  F0F0         	movff	printf@c,printf@prec
  3421                           
  3422                           ;doprnt.c: 1474: while(prec--) {
  3423  0004E8  D062               	goto	l3105
  3424  0004EA                     l3093:
  3425                           
  3426                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3427  0004EA  0100               	movlb	0	; () banked
  3428  0004EC  51F0               	movf	printf@prec& (0+255),w,b
  3429  0004EE  0D02               	mullw	2
  3430  0004F0  0EA3               	movlw	low _dpowers
  3431  0004F2  24F3               	addwf	prodl,w,c
  3432  0004F4  6EF6               	movwf	tblptrl,c
  3433  0004F6  0EFE               	movlw	high _dpowers
  3434  0004F8  20F4               	addwfc	prodh,w,c
  3435  0004FA  6EF7               	movwf	tblptrh,c
  3436  0004FC                     	if	1	;There are 3 active tblptr bytes
  3437  0004FC  6AF8               	clrf	tblptru,c
  3438  0004FE  0E00               	movlw	low (__mediumconst shr (0+16))
  3439  000500  22F8               	addwfc	tblptru,f,c
  3440  000502                     	endif
  3441  000502  0009               	tblrd		*+
  3442  000504  CFF5 F027          	movff	tablat,___lwdiv@divisor
  3443  000508  000A               	tblrd		*-
  3444  00050A  CFF5 F028          	movff	tablat,___lwdiv@divisor+1
  3445  00050E  C0F2  F025         	movff	printf@val,___lwdiv@dividend
  3446  000512  C0F3  F026         	movff	printf@val+1,___lwdiv@dividend+1
  3447  000516  ECE2  F006         	call	___lwdiv	;wreg free
  3448  00051A  C025  F0E3         	movff	?___lwdiv,___lwmod@dividend
  3449  00051E  C026  F0E4         	movff	?___lwdiv+1,___lwmod@dividend+1
  3450  000522  0E00               	movlw	0
  3451  000524  0100               	movlb	0	; () banked
  3452  000526  6FE6               	movwf	(___lwmod@divisor+1)& (0+255),b
  3453  000528  0E0A               	movlw	10
  3454  00052A  6FE5               	movwf	___lwmod@divisor& (0+255),b
  3455  00052C  EC11  F007         	call	___lwmod	;wreg free
  3456  000530  0100               	movlb	0	; () banked
  3457  000532  51E3               	movf	?___lwmod& (0+255),w,b
  3458  000534  0F30               	addlw	48
  3459  000536  0100               	movlb	0	; () banked
  3460  000538  6FF4               	movwf	printf@c& (0+255),b
  3461                           
  3462                           ;doprnt.c: 1491: break;
  3463  00053A  D035               	goto	l3103
  3464  00053C                     l3095:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;doprnt.c: 1499: {
  3468                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  3469  00053C  C0F2  F025         	movff	printf@val,___lwdiv@dividend
  3470  000540  C0F3  F026         	movff	printf@val+1,___lwdiv@dividend+1
  3471  000544  0100               	movlb	0	; () banked
  3472  000546  51F0               	movf	printf@prec& (0+255),w,b
  3473  000548  0D02               	mullw	2
  3474  00054A  0EAD               	movlw	low _hexpowers
  3475  00054C  24F3               	addwf	prodl,w,c
  3476  00054E  6EF6               	movwf	tblptrl,c
  3477  000550  0EFE               	movlw	high _hexpowers
  3478  000552  20F4               	addwfc	prodh,w,c
  3479  000554  6EF7               	movwf	tblptrh,c
  3480  000556                     	if	1	;There are 3 active tblptr bytes
  3481  000556  6AF8               	clrf	tblptru,c
  3482  000558  0E00               	movlw	low (__mediumconst shr (0+16))
  3483  00055A  22F8               	addwfc	tblptru,f,c
  3484  00055C                     	endif
  3485  00055C  0009               	tblrd		*+
  3486  00055E  CFF5 F027          	movff	tablat,___lwdiv@divisor
  3487  000562  000A               	tblrd		*-
  3488  000564  CFF5 F028          	movff	tablat,___lwdiv@divisor+1
  3489  000568  ECE2  F006         	call	___lwdiv	;wreg free
  3490  00056C  5025               	movf	?___lwdiv,w,c
  3491  00056E  0B0F               	andlw	15
  3492  000570  0100               	movlb	0	; () banked
  3493  000572  6FED               	movwf	printf@idx& (0+255),b
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  3497  000574  0100               	movlb	0	; () banked
  3498  000576  51ED               	movf	printf@idx& (0+255),w,b
  3499  000578  0D01               	mullw	1
  3500  00057A  0E4C               	movlw	low STR_23
  3501  00057C  24F3               	addwf	prodl,w,c
  3502  00057E  6EF6               	movwf	tblptrl,c
  3503  000580  0EFF               	movlw	high STR_23
  3504  000582  20F4               	addwfc	prodh,w,c
  3505  000584  6EF7               	movwf	tblptrh,c
  3506  000586                     	if	1	;There are 3 active tblptr bytes
  3507  000586  6AF8               	clrf	tblptru,c
  3508  000588  0E00               	movlw	low (__mediumconst shr (0+16))
  3509  00058A  22F8               	addwfc	tblptru,f,c
  3510  00058C                     	endif
  3511  00058C  0008               	tblrd		*
  3512  00058E  CFF5 F0F4          	movff	tablat,printf@c
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;doprnt.c: 1523: }
  3516                           
  3517                           ;doprnt.c: 1508: }
  3518                           ;doprnt.c: 1510: break;
  3519  000592  D009               	goto	l3103
  3520  000594                     l3101:
  3521  000594  0100               	movlb	0	; () banked
  3522  000596  51F1               	movf	printf@flag& (0+255),w,b
  3523  000598  0B80               	andlw	128
  3524                           
  3525                           ; Switch size 1, requested type "space"
  3526                           ; Number of cases is 2, Range of values is 0 to 128
  3527                           ; switch strategies available:
  3528                           ; Name         Instructions Cycles
  3529                           ; simple_byte            7     4 (average)
  3530                           ;	Chosen strategy is simple_byte
  3531  00059A  0A00               	xorlw	0	; case 0
  3532  00059C  B4D8               	btfsc	status,2,c
  3533  00059E  D7A5               	goto	l3093
  3534  0005A0  0A80               	xorlw	128	; case 128
  3535  0005A2  B4D8               	btfsc	status,2,c
  3536  0005A4  D7CB               	goto	l3095
  3537  0005A6                     l3103:
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;doprnt.c: 1524: (putch(c) );
  3541  0005A6  0100               	movlb	0	; () banked
  3542  0005A8  51F4               	movf	printf@c& (0+255),w,b
  3543  0005AA  EC5E  F009         	call	_putch
  3544  0005AE                     l3105:
  3545  0005AE  0100               	movlb	0	; () banked
  3546  0005B0  07F0               	decf	printf@prec& (0+255),f,b
  3547  0005B2  0100               	movlb	0	; () banked
  3548  0005B4  29F0               	incf	printf@prec& (0+255),w,b
  3549  0005B6  A4D8               	btfss	status,2,c
  3550  0005B8  D7ED               	goto	l3101
  3551  0005BA                     l3107:
  3552  0005BA  C0E7  FFF6         	movff	printf@f,tblptrl
  3553  0005BE  C0E8  FFF7         	movff	printf@f+1,tblptrh
  3554  0005C2  0100               	movlb	0	; () banked
  3555  0005C4  4BE7               	infsnz	printf@f& (0+255),f,b
  3556  0005C6  2BE8               	incf	(printf@f+1)& (0+255),f,b
  3557  0005C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3558  0005C8  6AF8               	clrf	tblptru,c
  3559  0005CA                     	endif
  3560  0005CA                     	if	0	;tblptru may be non-zero
  3561  0005CA                     	endif
  3562  0005CA  0008               	tblrd		*
  3563  0005CC  CFF5 F0F4          	movff	tablat,printf@c
  3564  0005D0  0100               	movlb	0	; () banked
  3565  0005D2  51F4               	movf	printf@c& (0+255),w,b
  3566  0005D4  B4D8               	btfsc	status,2,c
  3567  0005D6  0012               	return	
  3568  0005D8  D6DC               	goto	l3029
  3569  0005DA                     __end_of_printf:
  3570                           	opt stack 0
  3571                           tblptru	equ	0xFF8
  3572                           tblptrh	equ	0xFF7
  3573                           tblptrl	equ	0xFF6
  3574                           tablat	equ	0xFF5
  3575                           prodh	equ	0xFF4
  3576                           prodl	equ	0xFF3
  3577                           intcon	equ	0xFF2
  3578                           postinc0	equ	0xFEE
  3579                           wreg	equ	0xFE8
  3580                           indf1	equ	0xFE7
  3581                           postdec1	equ	0xFE5
  3582                           fsr1h	equ	0xFE2
  3583                           fsr1l	equ	0xFE1
  3584                           indf2	equ	0xFDF
  3585                           postinc2	equ	0xFDE
  3586                           postdec2	equ	0xFDD
  3587                           fsr2h	equ	0xFDA
  3588                           fsr2l	equ	0xFD9
  3589                           status	equ	0xFD8
  3590                           
  3591 ;; *************** function _putch *****************
  3592 ;; Defined at:
  3593 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  txData          1    wreg     unsigned char 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  txData          1   37[COMRAM] unsigned char 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;Total ram usage:        1 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:    5
  3614 ;; This function calls:
  3615 ;;		_EUSART1_Write
  3616 ;; This function is called by:
  3617 ;;		_printf
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text16
  3622  0012BC                     __ptext16:
  3623                           	opt stack 0
  3624  0012BC                     _putch:
  3625                           	opt stack 23
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;incstack = 0
  3629                           ;putch@txData stored from wreg
  3630  0012BC  6E26               	movwf	putch@txData,c
  3631                           
  3632                           ;eusart1.c: 172: EUSART1_Write(txData);
  3633  0012BE  5026               	movf	putch@txData,w,c
  3634  0012C0  ECB6  F007         	call	_EUSART1_Write
  3635  0012C4  0012               	return		;funcret
  3636  0012C6                     __end_of_putch:
  3637                           	opt stack 0
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           intcon	equ	0xFF2
  3645                           postinc0	equ	0xFEE
  3646                           wreg	equ	0xFE8
  3647                           indf1	equ	0xFE7
  3648                           postdec1	equ	0xFE5
  3649                           fsr1h	equ	0xFE2
  3650                           fsr1l	equ	0xFE1
  3651                           indf2	equ	0xFDF
  3652                           postinc2	equ	0xFDE
  3653                           postdec2	equ	0xFDD
  3654                           fsr2h	equ	0xFDA
  3655                           fsr2l	equ	0xFD9
  3656                           status	equ	0xFD8
  3657                           
  3658 ;; *************** function _EUSART1_Write *****************
  3659 ;; Defined at:
  3660 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  txData          1    wreg     unsigned char 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  txData          1   36[COMRAM] unsigned char 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;Total ram usage:        1 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; Hardware stack levels required when called:    4
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_putch
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text17
  3689  000F6C                     __ptext17:
  3690                           	opt stack 0
  3691  000F6C                     _EUSART1_Write:
  3692                           	opt stack 23
  3693                           
  3694                           ;incstack = 0
  3695                           ;EUSART1_Write@txData stored from wreg
  3696  000F6C  6E25               	movwf	EUSART1_Write@txData,c
  3697  000F6E                     l2971:
  3698  000F6E  503A               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  3699  000F70  B4D8               	btfsc	status,2,c
  3700  000F72  D7FD               	goto	l2971
  3701                           
  3702                           ;eusart1.c: 146: }
  3703                           ;eusart1.c: 148: if(0 == PIE1bits.TX1IE)
  3704  000F74  B89D               	btfsc	3997,4,c	;volatile
  3705  000F76  D003               	goto	l110
  3706                           
  3707                           ;eusart1.c: 149: {
  3708                           ;eusart1.c: 150: TXREG1 = txData;
  3709  000F78  C025  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3710                           
  3711                           ;eusart1.c: 151: }
  3712  000F7C  D012               	goto	l2985
  3713  000F7E                     l110:
  3714                           
  3715                           ;eusart1.c: 152: else
  3716                           ;eusart1.c: 153: {
  3717                           ;eusart1.c: 154: PIE1bits.TX1IE = 0;
  3718  000F7E  989D               	bcf	3997,4,c	;volatile
  3719                           
  3720                           ;eusart1.c: 155: eusart1TxBuffer[eusart1TxHead++] = txData;
  3721  000F80  5030               	movf	_eusart1TxHead,w,c
  3722  000F82  0D01               	mullw	1
  3723  000F84  0E00               	movlw	low _eusart1TxBuffer
  3724  000F86  24F3               	addwf	prodl,w,c
  3725  000F88  6ED9               	movwf	fsr2l,c
  3726  000F8A  0E01               	movlw	high _eusart1TxBuffer
  3727  000F8C  20F4               	addwfc	prodh,w,c
  3728  000F8E  6EDA               	movwf	fsr2h,c
  3729  000F90  C025  FFDF         	movff	EUSART1_Write@txData,indf2
  3730  000F94  2A30               	incf	_eusart1TxHead,f,c
  3731                           
  3732                           ;eusart1.c: 156: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  3733  000F96  0E7F               	movlw	127
  3734  000F98  6430               	cpfsgt	_eusart1TxHead,c
  3735  000F9A  D002               	goto	l2983
  3736                           
  3737                           ;eusart1.c: 157: {
  3738                           ;eusart1.c: 158: eusart1TxHead = 0;
  3739  000F9C  0E00               	movlw	0
  3740  000F9E  6E30               	movwf	_eusart1TxHead,c
  3741  000FA0                     l2983:
  3742                           
  3743                           ;eusart1.c: 159: }
  3744                           ;eusart1.c: 160: eusart1TxBufferRemaining--;
  3745  000FA0  063A               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  3746  000FA2                     l2985:
  3747                           
  3748                           ;eusart1.c: 161: }
  3749                           ;eusart1.c: 162: PIE1bits.TX1IE = 1;
  3750  000FA2  889D               	bsf	3997,4,c	;volatile
  3751  000FA4  0012               	return		;funcret
  3752  000FA6                     __end_of_EUSART1_Write:
  3753                           	opt stack 0
  3754                           tblptru	equ	0xFF8
  3755                           tblptrh	equ	0xFF7
  3756                           tblptrl	equ	0xFF6
  3757                           tablat	equ	0xFF5
  3758                           prodh	equ	0xFF4
  3759                           prodl	equ	0xFF3
  3760                           intcon	equ	0xFF2
  3761                           postinc0	equ	0xFEE
  3762                           wreg	equ	0xFE8
  3763                           indf1	equ	0xFE7
  3764                           postdec1	equ	0xFE5
  3765                           fsr1h	equ	0xFE2
  3766                           fsr1l	equ	0xFE1
  3767                           indf2	equ	0xFDF
  3768                           postinc2	equ	0xFDE
  3769                           postdec2	equ	0xFDD
  3770                           fsr2h	equ	0xFDA
  3771                           fsr2l	equ	0xFD9
  3772                           status	equ	0xFD8
  3773                           
  3774 ;; *************** function ___lwmod *****************
  3775 ;; Defined at:
  3776 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  dividend        2    3[BANK0 ] unsigned int 
  3779 ;;  divisor         2    5[BANK0 ] unsigned int 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  counter         1   40[COMRAM] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  2    3[BANK0 ] unsigned int 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3791 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;Total ram usage:        5 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    4
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_printf
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text18
  3806  000E22                     __ptext18:
  3807                           	opt stack 0
  3808  000E22                     ___lwmod:
  3809                           	opt stack 24
  3810                           
  3811                           ;incstack = 0
  3812  000E22  0100               	movlb	0	; () banked
  3813  000E24  51E5               	movf	___lwmod@divisor& (0+255),w,b
  3814  000E26  0100               	movlb	0	; () banked
  3815  000E28  11E6               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3816  000E2A  B4D8               	btfsc	status,2,c
  3817  000E2C  D023               	goto	l840
  3818                           
  3819                           ; BSR set to: 0
  3820  000E2E  0E01               	movlw	1
  3821  000E30  6E29               	movwf	___lwmod@counter,c
  3822  000E32  D005               	goto	l3017
  3823  000E34                     l3015:
  3824                           
  3825                           ; BSR set to: 0
  3826  000E34  0100               	movlb	0	; () banked
  3827  000E36  90D8               	bcf	status,0,c
  3828  000E38  37E5               	rlcf	___lwmod@divisor& (0+255),f,b
  3829  000E3A  37E6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3830  000E3C  2A29               	incf	___lwmod@counter,f,c
  3831  000E3E                     l3017:
  3832                           
  3833                           ; BSR set to: 0
  3834  000E3E  0100               	movlb	0	; () banked
  3835  000E40  AFE6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3836  000E42  D7F8               	goto	l3015
  3837  000E44                     l3019:
  3838                           
  3839                           ; BSR set to: 0
  3840  000E44  0100               	movlb	0	; () banked
  3841  000E46  51E5               	movf	___lwmod@divisor& (0+255),w,b
  3842  000E48  0100               	movlb	0	; () banked
  3843  000E4A  5DE3               	subwf	___lwmod@dividend& (0+255),w,b
  3844  000E4C  0100               	movlb	0	; () banked
  3845  000E4E  51E6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3846  000E50  0100               	movlb	0	; () banked
  3847  000E52  59E4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3848  000E54  A0D8               	btfss	status,0,c
  3849  000E56  D008               	goto	l3023
  3850                           
  3851                           ; BSR set to: 0
  3852  000E58  0100               	movlb	0	; () banked
  3853  000E5A  51E5               	movf	___lwmod@divisor& (0+255),w,b
  3854  000E5C  0100               	movlb	0	; () banked
  3855  000E5E  5FE3               	subwf	___lwmod@dividend& (0+255),f,b
  3856  000E60  0100               	movlb	0	; () banked
  3857  000E62  51E6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3858  000E64  0100               	movlb	0	; () banked
  3859  000E66  5BE4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3860  000E68                     l3023:
  3861                           
  3862                           ; BSR set to: 0
  3863  000E68  0100               	movlb	0	; () banked
  3864  000E6A  90D8               	bcf	status,0,c
  3865  000E6C  33E6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3866  000E6E  33E5               	rrcf	___lwmod@divisor& (0+255),f,b
  3867                           
  3868                           ; BSR set to: 0
  3869  000E70  2E29               	decfsz	___lwmod@counter,f,c
  3870  000E72  D7E8               	goto	l3019
  3871  000E74                     l840:
  3872                           
  3873                           ; BSR set to: 0
  3874  000E74  C0E3  F0E3         	movff	___lwmod@dividend,?___lwmod
  3875  000E78  C0E4  F0E4         	movff	___lwmod@dividend+1,?___lwmod+1
  3876                           
  3877                           ; BSR set to: 0
  3878  000E7C  0012               	return		;funcret
  3879  000E7E                     __end_of___lwmod:
  3880                           	opt stack 0
  3881                           tblptru	equ	0xFF8
  3882                           tblptrh	equ	0xFF7
  3883                           tblptrl	equ	0xFF6
  3884                           tablat	equ	0xFF5
  3885                           prodh	equ	0xFF4
  3886                           prodl	equ	0xFF3
  3887                           intcon	equ	0xFF2
  3888                           postinc0	equ	0xFEE
  3889                           wreg	equ	0xFE8
  3890                           indf1	equ	0xFE7
  3891                           postdec1	equ	0xFE5
  3892                           fsr1h	equ	0xFE2
  3893                           fsr1l	equ	0xFE1
  3894                           indf2	equ	0xFDF
  3895                           postinc2	equ	0xFDE
  3896                           postdec2	equ	0xFDD
  3897                           fsr2h	equ	0xFDA
  3898                           fsr2l	equ	0xFD9
  3899                           status	equ	0xFD8
  3900                           
  3901 ;; *************** function ___lwdiv *****************
  3902 ;; Defined at:
  3903 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  dividend        2   36[COMRAM] unsigned int 
  3906 ;;  divisor         2   38[COMRAM] unsigned int 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  quotient        2    1[BANK0 ] unsigned int 
  3909 ;;  counter         1    0[BANK0 ] unsigned char 
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  2   36[COMRAM] unsigned int 
  3912 ;; Registers used:
  3913 ;;		wreg, status,2, status,0
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;Total ram usage:        7 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    4
  3926 ;; This function calls:
  3927 ;;		Nothing
  3928 ;; This function is called by:
  3929 ;;		_printf
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text19
  3934  000DC4                     __ptext19:
  3935                           	opt stack 0
  3936  000DC4                     ___lwdiv:
  3937                           	opt stack 24
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;incstack = 0
  3941  000DC4  0E00               	movlw	0
  3942  000DC6  0100               	movlb	0	; () banked
  3943  000DC8  6FE2               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3944  000DCA  0E00               	movlw	0
  3945  000DCC  6FE1               	movwf	___lwdiv@quotient& (0+255),b
  3946                           
  3947                           ; BSR set to: 0
  3948  000DCE  5027               	movf	___lwdiv@divisor,w,c
  3949  000DD0  1028               	iorwf	___lwdiv@divisor+1,w,c
  3950  000DD2  B4D8               	btfsc	status,2,c
  3951  000DD4  D021               	goto	l830
  3952                           
  3953                           ; BSR set to: 0
  3954  000DD6  0E01               	movlw	1
  3955  000DD8  0100               	movlb	0	; () banked
  3956  000DDA  6FE0               	movwf	___lwdiv@counter& (0+255),b
  3957  000DDC  D005               	goto	l2997
  3958  000DDE                     l2995:
  3959                           
  3960                           ; BSR set to: 0
  3961  000DDE  90D8               	bcf	status,0,c
  3962  000DE0  3627               	rlcf	___lwdiv@divisor,f,c
  3963  000DE2  3628               	rlcf	___lwdiv@divisor+1,f,c
  3964  000DE4  0100               	movlb	0	; () banked
  3965  000DE6  2BE0               	incf	___lwdiv@counter& (0+255),f,b
  3966  000DE8                     l2997:
  3967                           
  3968                           ; BSR set to: 0
  3969  000DE8  AE28               	btfss	___lwdiv@divisor+1,7,c
  3970  000DEA  D7F9               	goto	l2995
  3971  000DEC                     l2999:
  3972                           
  3973                           ; BSR set to: 0
  3974  000DEC  0100               	movlb	0	; () banked
  3975  000DEE  90D8               	bcf	status,0,c
  3976  000DF0  37E1               	rlcf	___lwdiv@quotient& (0+255),f,b
  3977  000DF2  37E2               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3978                           
  3979                           ; BSR set to: 0
  3980  000DF4  5027               	movf	___lwdiv@divisor,w,c
  3981  000DF6  5C25               	subwf	___lwdiv@dividend,w,c
  3982  000DF8  5028               	movf	___lwdiv@divisor+1,w,c
  3983  000DFA  5826               	subwfb	___lwdiv@dividend+1,w,c
  3984  000DFC  A0D8               	btfss	status,0,c
  3985  000DFE  D006               	goto	l3007
  3986                           
  3987                           ; BSR set to: 0
  3988  000E00  5027               	movf	___lwdiv@divisor,w,c
  3989  000E02  5E25               	subwf	___lwdiv@dividend,f,c
  3990  000E04  5028               	movf	___lwdiv@divisor+1,w,c
  3991  000E06  5A26               	subwfb	___lwdiv@dividend+1,f,c
  3992                           
  3993                           ; BSR set to: 0
  3994  000E08  0100               	movlb	0	; () banked
  3995  000E0A  81E1               	bsf	___lwdiv@quotient& (0+255),0,b
  3996  000E0C                     l3007:
  3997                           
  3998                           ; BSR set to: 0
  3999  000E0C  90D8               	bcf	status,0,c
  4000  000E0E  3228               	rrcf	___lwdiv@divisor+1,f,c
  4001  000E10  3227               	rrcf	___lwdiv@divisor,f,c
  4002                           
  4003                           ; BSR set to: 0
  4004  000E12  0100               	movlb	0	; () banked
  4005  000E14  2FE0               	decfsz	___lwdiv@counter& (0+255),f,b
  4006  000E16  D7EA               	goto	l2999
  4007  000E18                     l830:
  4008                           
  4009                           ; BSR set to: 0
  4010  000E18  C0E1  F025         	movff	___lwdiv@quotient,?___lwdiv
  4011  000E1C  C0E2  F026         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4012                           
  4013                           ; BSR set to: 0
  4014  000E20  0012               	return		;funcret
  4015  000E22                     __end_of___lwdiv:
  4016                           	opt stack 0
  4017                           tblptru	equ	0xFF8
  4018                           tblptrh	equ	0xFF7
  4019                           tblptrl	equ	0xFF6
  4020                           tablat	equ	0xFF5
  4021                           prodh	equ	0xFF4
  4022                           prodl	equ	0xFF3
  4023                           intcon	equ	0xFF2
  4024                           postinc0	equ	0xFEE
  4025                           wreg	equ	0xFE8
  4026                           indf1	equ	0xFE7
  4027                           postdec1	equ	0xFE5
  4028                           fsr1h	equ	0xFE2
  4029                           fsr1l	equ	0xFE1
  4030                           indf2	equ	0xFDF
  4031                           postinc2	equ	0xFDE
  4032                           postdec2	equ	0xFDD
  4033                           fsr2h	equ	0xFDA
  4034                           fsr2l	equ	0xFD9
  4035                           status	equ	0xFD8
  4036                           
  4037 ;; *************** function ___awmod *****************
  4038 ;; Defined at:
  4039 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  dividend        2    8[BANK0 ] int 
  4042 ;;  divisor         2   10[BANK0 ] int 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  sign            1   13[BANK0 ] unsigned char 
  4045 ;;  counter         1   12[BANK0 ] unsigned char 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  2    8[BANK0 ] int 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4055 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;Total ram usage:        6 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    4
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text20
  4070  000A10                     __ptext20:
  4071                           	opt stack 0
  4072  000A10                     ___awmod:
  4073                           	opt stack 26
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;incstack = 0
  4077  000A10  0E00               	movlw	0
  4078  000A12  0100               	movlb	0	; () banked
  4079  000A14  6FED               	movwf	___awmod@sign& (0+255),b
  4080                           
  4081                           ; BSR set to: 0
  4082  000A16  0100               	movlb	0	; () banked
  4083  000A18  AFE9               	btfss	(___awmod@dividend+1)& (0+255),7,b
  4084  000A1A  D008               	goto	l3261
  4085                           
  4086                           ; BSR set to: 0
  4087  000A1C  0100               	movlb	0	; () banked
  4088  000A1E  6DE8               	negf	___awmod@dividend& (0+255),b
  4089  000A20  1FE9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4090  000A22  B0D8               	btfsc	status,0,c
  4091  000A24  2BE9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4092                           
  4093                           ; BSR set to: 0
  4094  000A26  0E01               	movlw	1
  4095  000A28  0100               	movlb	0	; () banked
  4096  000A2A  6FED               	movwf	___awmod@sign& (0+255),b
  4097  000A2C                     l3261:
  4098                           
  4099                           ; BSR set to: 0
  4100  000A2C  0100               	movlb	0	; () banked
  4101  000A2E  AFEB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4102  000A30  D005               	goto	l3265
  4103                           
  4104                           ; BSR set to: 0
  4105  000A32  0100               	movlb	0	; () banked
  4106  000A34  6DEA               	negf	___awmod@divisor& (0+255),b
  4107  000A36  1FEB               	comf	(___awmod@divisor+1)& (0+255),f,b
  4108  000A38  B0D8               	btfsc	status,0,c
  4109  000A3A  2BEB               	incf	(___awmod@divisor+1)& (0+255),f,b
  4110  000A3C                     l3265:
  4111                           
  4112                           ; BSR set to: 0
  4113  000A3C  0100               	movlb	0	; () banked
  4114  000A3E  51EA               	movf	___awmod@divisor& (0+255),w,b
  4115  000A40  0100               	movlb	0	; () banked
  4116  000A42  11EB               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4117  000A44  B4D8               	btfsc	status,2,c
  4118  000A46  D026               	goto	l3281
  4119                           
  4120                           ; BSR set to: 0
  4121  000A48  0E01               	movlw	1
  4122  000A4A  0100               	movlb	0	; () banked
  4123  000A4C  6FEC               	movwf	___awmod@counter& (0+255),b
  4124  000A4E  D006               	goto	l3271
  4125  000A50                     l3269:
  4126                           
  4127                           ; BSR set to: 0
  4128  000A50  0100               	movlb	0	; () banked
  4129  000A52  90D8               	bcf	status,0,c
  4130  000A54  37EA               	rlcf	___awmod@divisor& (0+255),f,b
  4131  000A56  37EB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4132  000A58  0100               	movlb	0	; () banked
  4133  000A5A  2BEC               	incf	___awmod@counter& (0+255),f,b
  4134  000A5C                     l3271:
  4135                           
  4136                           ; BSR set to: 0
  4137  000A5C  0100               	movlb	0	; () banked
  4138  000A5E  AFEB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4139  000A60  D7F7               	goto	l3269
  4140  000A62                     l3273:
  4141                           
  4142                           ; BSR set to: 0
  4143  000A62  0100               	movlb	0	; () banked
  4144  000A64  51EA               	movf	___awmod@divisor& (0+255),w,b
  4145  000A66  0100               	movlb	0	; () banked
  4146  000A68  5DE8               	subwf	___awmod@dividend& (0+255),w,b
  4147  000A6A  0100               	movlb	0	; () banked
  4148  000A6C  51EB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4149  000A6E  0100               	movlb	0	; () banked
  4150  000A70  59E9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4151  000A72  A0D8               	btfss	status,0,c
  4152  000A74  D008               	goto	l3277
  4153                           
  4154                           ; BSR set to: 0
  4155  000A76  0100               	movlb	0	; () banked
  4156  000A78  51EA               	movf	___awmod@divisor& (0+255),w,b
  4157  000A7A  0100               	movlb	0	; () banked
  4158  000A7C  5FE8               	subwf	___awmod@dividend& (0+255),f,b
  4159  000A7E  0100               	movlb	0	; () banked
  4160  000A80  51EB               	movf	(___awmod@divisor+1)& (0+255),w,b
  4161  000A82  0100               	movlb	0	; () banked
  4162  000A84  5BE9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4163  000A86                     l3277:
  4164                           
  4165                           ; BSR set to: 0
  4166  000A86  0100               	movlb	0	; () banked
  4167  000A88  90D8               	bcf	status,0,c
  4168  000A8A  33EB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4169  000A8C  33EA               	rrcf	___awmod@divisor& (0+255),f,b
  4170                           
  4171                           ; BSR set to: 0
  4172  000A8E  0100               	movlb	0	; () banked
  4173  000A90  2FEC               	decfsz	___awmod@counter& (0+255),f,b
  4174  000A92  D7E7               	goto	l3273
  4175  000A94                     l3281:
  4176                           
  4177                           ; BSR set to: 0
  4178  000A94  0100               	movlb	0	; () banked
  4179  000A96  51ED               	movf	___awmod@sign& (0+255),w,b
  4180  000A98  0100               	movlb	0	; () banked
  4181  000A9A  B4D8               	btfsc	status,2,c
  4182  000A9C  D005               	goto	l3285
  4183                           
  4184                           ; BSR set to: 0
  4185  000A9E  0100               	movlb	0	; () banked
  4186  000AA0  6DE8               	negf	___awmod@dividend& (0+255),b
  4187  000AA2  1FE9               	comf	(___awmod@dividend+1)& (0+255),f,b
  4188  000AA4  B0D8               	btfsc	status,0,c
  4189  000AA6  2BE9               	incf	(___awmod@dividend+1)& (0+255),f,b
  4190  000AA8                     l3285:
  4191                           
  4192                           ; BSR set to: 0
  4193  000AA8  C0E8  F0E8         	movff	___awmod@dividend,?___awmod
  4194  000AAC  C0E9  F0E9         	movff	___awmod@dividend+1,?___awmod+1
  4195  000AB0  0012               	return	
  4196  000AB2                     __end_of___awmod:
  4197                           	opt stack 0
  4198                           tblptru	equ	0xFF8
  4199                           tblptrh	equ	0xFF7
  4200                           tblptrl	equ	0xFF6
  4201                           tablat	equ	0xFF5
  4202                           prodh	equ	0xFF4
  4203                           prodl	equ	0xFF3
  4204                           intcon	equ	0xFF2
  4205                           postinc0	equ	0xFEE
  4206                           wreg	equ	0xFE8
  4207                           indf1	equ	0xFE7
  4208                           postdec1	equ	0xFE5
  4209                           fsr1h	equ	0xFE2
  4210                           fsr1l	equ	0xFE1
  4211                           indf2	equ	0xFDF
  4212                           postinc2	equ	0xFDE
  4213                           postdec2	equ	0xFDD
  4214                           fsr2h	equ	0xFDA
  4215                           fsr2l	equ	0xFD9
  4216                           status	equ	0xFD8
  4217                           
  4218 ;; *************** function _SYSTEM_Initialize *****************
  4219 ;; Defined at:
  4220 ;;		line 112 in file "mcc_generated_files/mcc.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;		None
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      void 
  4227 ;; Registers used:
  4228 ;;		wreg, status,2, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;Total ram usage:        0 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    6
  4241 ;; This function calls:
  4242 ;;		_EPWM1_Initialize
  4243 ;;		_EUSART1_Initialize
  4244 ;;		_INTERRUPT_Initialize
  4245 ;;		_OSCILLATOR_Initialize
  4246 ;;		_PIN_MANAGER_Initialize
  4247 ;;		_TMR2_Initialize
  4248 ;; This function is called by:
  4249 ;;		_main
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text21
  4254  001248                     __ptext21:
  4255                           	opt stack 0
  4256  001248                     _SYSTEM_Initialize:
  4257                           	opt stack 24
  4258                           
  4259                           ;mcc.c: 115: INTERRUPT_Initialize();
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;incstack = 0
  4263  001248  EC63  F009         	call	_INTERRUPT_Initialize	;wreg free
  4264                           
  4265                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  4266  00124C  EC08  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  4267                           
  4268                           ;mcc.c: 117: OSCILLATOR_Initialize();
  4269  001250  EC4B  F009         	call	_OSCILLATOR_Initialize	;wreg free
  4270                           
  4271                           ;mcc.c: 118: EPWM1_Initialize();
  4272  001254  ECD7  F008         	call	_EPWM1_Initialize	;wreg free
  4273                           
  4274                           ;mcc.c: 119: TMR2_Initialize();
  4275  001258  EC3B  F009         	call	_TMR2_Initialize	;wreg free
  4276                           
  4277                           ;mcc.c: 120: EUSART1_Initialize();
  4278  00125C  EC22  F008         	call	_EUSART1_Initialize	;wreg free
  4279  001260  0012               	return		;funcret
  4280  001262                     __end_of_SYSTEM_Initialize:
  4281                           	opt stack 0
  4282                           tblptru	equ	0xFF8
  4283                           tblptrh	equ	0xFF7
  4284                           tblptrl	equ	0xFF6
  4285                           tablat	equ	0xFF5
  4286                           prodh	equ	0xFF4
  4287                           prodl	equ	0xFF3
  4288                           intcon	equ	0xFF2
  4289                           postinc0	equ	0xFEE
  4290                           wreg	equ	0xFE8
  4291                           indf1	equ	0xFE7
  4292                           postdec1	equ	0xFE5
  4293                           fsr1h	equ	0xFE2
  4294                           fsr1l	equ	0xFE1
  4295                           indf2	equ	0xFDF
  4296                           postinc2	equ	0xFDE
  4297                           postdec2	equ	0xFDD
  4298                           fsr2h	equ	0xFDA
  4299                           fsr2l	equ	0xFD9
  4300                           status	equ	0xFD8
  4301                           
  4302 ;; *************** function _TMR2_Initialize *****************
  4303 ;; Defined at:
  4304 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    5
  4325 ;; This function calls:
  4326 ;;		_TMR2_StartTimer
  4327 ;; This function is called by:
  4328 ;;		_SYSTEM_Initialize
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text22
  4333  001276                     __ptext22:
  4334                           	opt stack 0
  4335  001276                     _TMR2_Initialize:
  4336                           	opt stack 24
  4337                           
  4338                           ;tmr2.c: 63: T2CON = 0x00;
  4339                           
  4340                           ;incstack = 0
  4341  001276  0E00               	movlw	0
  4342  001278  6EBA               	movwf	4026,c	;volatile
  4343                           
  4344                           ;tmr2.c: 66: PR2 = 0xFF;
  4345  00127A  68BB               	setf	4027,c	;volatile
  4346                           
  4347                           ;tmr2.c: 69: TMR2 = 0x00;
  4348  00127C  0E00               	movlw	0
  4349  00127E  6EBC               	movwf	4028,c	;volatile
  4350                           
  4351                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  4352  001280  929E               	bcf	3998,1,c	;volatile
  4353                           
  4354                           ;tmr2.c: 75: TMR2_StartTimer();
  4355  001282  EC6A  F009         	call	_TMR2_StartTimer	;wreg free
  4356  001286  0012               	return		;funcret
  4357  001288                     __end_of_TMR2_Initialize:
  4358                           	opt stack 0
  4359                           tblptru	equ	0xFF8
  4360                           tblptrh	equ	0xFF7
  4361                           tblptrl	equ	0xFF6
  4362                           tablat	equ	0xFF5
  4363                           prodh	equ	0xFF4
  4364                           prodl	equ	0xFF3
  4365                           intcon	equ	0xFF2
  4366                           postinc0	equ	0xFEE
  4367                           wreg	equ	0xFE8
  4368                           indf1	equ	0xFE7
  4369                           postdec1	equ	0xFE5
  4370                           fsr1h	equ	0xFE2
  4371                           fsr1l	equ	0xFE1
  4372                           indf2	equ	0xFDF
  4373                           postinc2	equ	0xFDE
  4374                           postdec2	equ	0xFDD
  4375                           fsr2h	equ	0xFDA
  4376                           fsr2l	equ	0xFD9
  4377                           status	equ	0xFD8
  4378                           
  4379 ;; *************** function _TMR2_StartTimer *****************
  4380 ;; Defined at:
  4381 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;		None
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;		None
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  1    wreg      void 
  4388 ;; Registers used:
  4389 ;;		None
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;Total ram usage:        0 bytes
  4400 ;; Hardware stack levels used:    1
  4401 ;; Hardware stack levels required when called:    4
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_TMR2_Initialize
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text23
  4410  0012D4                     __ptext23:
  4411                           	opt stack 0
  4412  0012D4                     _TMR2_StartTimer:
  4413                           	opt stack 24
  4414                           
  4415                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  4416                           
  4417                           ;incstack = 0
  4418  0012D4  84BA               	bsf	4026,2,c	;volatile
  4419  0012D6  0012               	return		;funcret
  4420  0012D8                     __end_of_TMR2_StartTimer:
  4421                           	opt stack 0
  4422                           tblptru	equ	0xFF8
  4423                           tblptrh	equ	0xFF7
  4424                           tblptrl	equ	0xFF6
  4425                           tablat	equ	0xFF5
  4426                           prodh	equ	0xFF4
  4427                           prodl	equ	0xFF3
  4428                           intcon	equ	0xFF2
  4429                           postinc0	equ	0xFEE
  4430                           wreg	equ	0xFE8
  4431                           indf1	equ	0xFE7
  4432                           postdec1	equ	0xFE5
  4433                           fsr1h	equ	0xFE2
  4434                           fsr1l	equ	0xFE1
  4435                           indf2	equ	0xFDF
  4436                           postinc2	equ	0xFDE
  4437                           postdec2	equ	0xFDD
  4438                           fsr2h	equ	0xFDA
  4439                           fsr2l	equ	0xFD9
  4440                           status	equ	0xFD8
  4441                           
  4442 ;; *************** function _PIN_MANAGER_Initialize *****************
  4443 ;; Defined at:
  4444 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;		None
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;		None
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;Total ram usage:        0 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    4
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_SYSTEM_Initialize
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text24
  4473  001010                     __ptext24:
  4474                           	opt stack 0
  4475  001010                     _PIN_MANAGER_Initialize:
  4476                           	opt stack 25
  4477                           
  4478                           ;pin_manager.c: 51: LATB = 0x0;
  4479                           
  4480                           ;incstack = 0
  4481  001010  0E00               	movlw	0
  4482  001012  6E8A               	movwf	3978,c	;volatile
  4483                           
  4484                           ;pin_manager.c: 52: LATA = 0x0;
  4485  001014  0E00               	movlw	0
  4486  001016  6E89               	movwf	3977,c	;volatile
  4487                           
  4488                           ;pin_manager.c: 53: LATC = 0x0;
  4489  001018  0E00               	movlw	0
  4490  00101A  6E8B               	movwf	3979,c	;volatile
  4491                           
  4492                           ;pin_manager.c: 54: ANSELA = 0x2F;
  4493  00101C  0E2F               	movlw	47
  4494  00101E  010F               	movlb	15	; () banked
  4495  001020  6F38               	movwf	56,b	;volatile
  4496                           
  4497                           ;pin_manager.c: 55: ANSELB = 0x3E;
  4498  001022  0E3E               	movlw	62
  4499  001024  010F               	movlb	15	; () banked
  4500  001026  6F39               	movwf	57,b	;volatile
  4501                           
  4502                           ;pin_manager.c: 56: ANSELC = 0x38;
  4503  001028  0E38               	movlw	56
  4504  00102A  010F               	movlb	15	; () banked
  4505  00102C  6F3A               	movwf	58,b	;volatile
  4506                           
  4507                           ;pin_manager.c: 57: TRISB = 0xC8;
  4508  00102E  0EC8               	movlw	200
  4509  001030  6E93               	movwf	3987,c	;volatile
  4510                           
  4511                           ;pin_manager.c: 58: TRISC = 0xF9;
  4512  001032  0EF9               	movlw	249
  4513  001034  6E94               	movwf	3988,c	;volatile
  4514                           
  4515                           ;pin_manager.c: 59: WPUB = 0xFE;
  4516  001036  0EFE               	movlw	254
  4517  001038  6E61               	movwf	3937,c	;volatile
  4518                           
  4519                           ;pin_manager.c: 60: TRISA = 0xEF;
  4520  00103A  0EEF               	movlw	239
  4521  00103C  6E92               	movwf	3986,c	;volatile
  4522                           
  4523                           ; BSR set to: 15
  4524                           ;pin_manager.c: 62: INTCON2bits.nRBPU = 0x1;
  4525  00103E  8EF1               	bsf	intcon2,7,c	;volatile
  4526                           
  4527                           ; BSR set to: 15
  4528                           ;pin_manager.c: 66: INTCONbits.RBIE = 0;
  4529  001040  96F2               	bcf	intcon,3,c	;volatile
  4530                           
  4531                           ; BSR set to: 15
  4532  001042  0012               	return		;funcret
  4533  001044                     __end_of_PIN_MANAGER_Initialize:
  4534                           	opt stack 0
  4535                           tblptru	equ	0xFF8
  4536                           tblptrh	equ	0xFF7
  4537                           tblptrl	equ	0xFF6
  4538                           tablat	equ	0xFF5
  4539                           prodh	equ	0xFF4
  4540                           prodl	equ	0xFF3
  4541                           intcon	equ	0xFF2
  4542                           intcon2	equ	0xFF1
  4543                           postinc0	equ	0xFEE
  4544                           wreg	equ	0xFE8
  4545                           indf1	equ	0xFE7
  4546                           postdec1	equ	0xFE5
  4547                           fsr1h	equ	0xFE2
  4548                           fsr1l	equ	0xFE1
  4549                           indf2	equ	0xFDF
  4550                           postinc2	equ	0xFDE
  4551                           postdec2	equ	0xFDD
  4552                           fsr2h	equ	0xFDA
  4553                           fsr2l	equ	0xFD9
  4554                           status	equ	0xFD8
  4555                           
  4556 ;; *************** function _OSCILLATOR_Initialize *****************
  4557 ;; Defined at:
  4558 ;;		line 123 in file "mcc_generated_files/mcc.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;		None
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;		None
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		wreg, status,2
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;Total ram usage:        0 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    4
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_SYSTEM_Initialize
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text25
  4587  001296                     __ptext25:
  4588                           	opt stack 0
  4589  001296                     _OSCILLATOR_Initialize:
  4590                           	opt stack 25
  4591                           
  4592                           ;mcc.c: 126: OSCCON = 0x70;
  4593                           
  4594                           ; BSR set to: 15
  4595                           ;incstack = 0
  4596  001296  0E70               	movlw	112
  4597  001298  6ED3               	movwf	4051,c	;volatile
  4598                           
  4599                           ;mcc.c: 128: OSCCON2 = 0x04;
  4600  00129A  0E04               	movlw	4
  4601  00129C  6ED2               	movwf	4050,c	;volatile
  4602                           
  4603                           ;mcc.c: 130: OSCTUNE = 0x40;
  4604  00129E  0E40               	movlw	64
  4605  0012A0  6E9B               	movwf	3995,c	;volatile
  4606  0012A2  0012               	return		;funcret
  4607  0012A4                     __end_of_OSCILLATOR_Initialize:
  4608                           	opt stack 0
  4609                           tblptru	equ	0xFF8
  4610                           tblptrh	equ	0xFF7
  4611                           tblptrl	equ	0xFF6
  4612                           tablat	equ	0xFF5
  4613                           prodh	equ	0xFF4
  4614                           prodl	equ	0xFF3
  4615                           intcon	equ	0xFF2
  4616                           intcon2	equ	0xFF1
  4617                           postinc0	equ	0xFEE
  4618                           wreg	equ	0xFE8
  4619                           indf1	equ	0xFE7
  4620                           postdec1	equ	0xFE5
  4621                           fsr1h	equ	0xFE2
  4622                           fsr1l	equ	0xFE1
  4623                           indf2	equ	0xFDF
  4624                           postinc2	equ	0xFDE
  4625                           postdec2	equ	0xFDD
  4626                           fsr2h	equ	0xFDA
  4627                           fsr2l	equ	0xFD9
  4628                           status	equ	0xFD8
  4629                           
  4630 ;; *************** function _INTERRUPT_Initialize *****************
  4631 ;; Defined at:
  4632 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		None
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;Total ram usage:        0 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    4
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_SYSTEM_Initialize
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text26
  4661  0012C6                     __ptext26:
  4662                           	opt stack 0
  4663  0012C6                     _INTERRUPT_Initialize:
  4664                           	opt stack 25
  4665                           
  4666                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  4667                           
  4668                           ;incstack = 0
  4669  0012C6  9ED0               	bcf	4048,7,c	;volatile
  4670                           
  4671                           ;interrupt_manager.c: 60: INTCON2bits.TMR0IP = 0;
  4672  0012C8  94F1               	bcf	intcon2,2,c	;volatile
  4673                           
  4674                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  4675  0012CA  989F               	bcf	3999,4,c	;volatile
  4676                           
  4677                           ;interrupt_manager.c: 64: IPR1bits.RC1IP = 0;
  4678  0012CC  9A9F               	bcf	3999,5,c	;volatile
  4679  0012CE  0012               	return		;funcret
  4680  0012D0                     __end_of_INTERRUPT_Initialize:
  4681                           	opt stack 0
  4682                           tblptru	equ	0xFF8
  4683                           tblptrh	equ	0xFF7
  4684                           tblptrl	equ	0xFF6
  4685                           tablat	equ	0xFF5
  4686                           prodh	equ	0xFF4
  4687                           prodl	equ	0xFF3
  4688                           intcon	equ	0xFF2
  4689                           intcon2	equ	0xFF1
  4690                           postinc0	equ	0xFEE
  4691                           wreg	equ	0xFE8
  4692                           indf1	equ	0xFE7
  4693                           postdec1	equ	0xFE5
  4694                           fsr1h	equ	0xFE2
  4695                           fsr1l	equ	0xFE1
  4696                           indf2	equ	0xFDF
  4697                           postinc2	equ	0xFDE
  4698                           postdec2	equ	0xFDD
  4699                           fsr2h	equ	0xFDA
  4700                           fsr2l	equ	0xFD9
  4701                           status	equ	0xFD8
  4702                           
  4703 ;; *************** function _EUSART1_Initialize *****************
  4704 ;; Defined at:
  4705 ;;		line 84 in file "mcc_generated_files/eusart1.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		wreg, status,2
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;Total ram usage:        0 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    4
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_SYSTEM_Initialize
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text27
  4734  001044                     __ptext27:
  4735                           	opt stack 0
  4736  001044                     _EUSART1_Initialize:
  4737                           	opt stack 25
  4738                           
  4739                           ;eusart1.c: 87: PIE1bits.RC1IE = 0;
  4740                           
  4741                           ;incstack = 0
  4742  001044  9A9D               	bcf	3997,5,c	;volatile
  4743                           
  4744                           ;eusart1.c: 88: PIE1bits.TX1IE = 0;
  4745  001046  989D               	bcf	3997,4,c	;volatile
  4746                           
  4747                           ;eusart1.c: 93: BAUDCON1 = 0x00;
  4748  001048  0E00               	movlw	0
  4749  00104A  6EB8               	movwf	4024,c	;volatile
  4750                           
  4751                           ;eusart1.c: 96: RCSTA1 = 0x90;
  4752  00104C  0E90               	movlw	144
  4753  00104E  6EAB               	movwf	4011,c	;volatile
  4754                           
  4755                           ;eusart1.c: 99: TXSTA1 = 0x20;
  4756  001050  0E20               	movlw	32
  4757  001052  6EAC               	movwf	4012,c	;volatile
  4758                           
  4759                           ;eusart1.c: 102: SPBRG1 = 0x10;
  4760  001054  0E10               	movlw	16
  4761  001056  6EAF               	movwf	4015,c	;volatile
  4762                           
  4763                           ;eusart1.c: 105: SPBRGH1 = 0x00;
  4764  001058  0E00               	movlw	0
  4765  00105A  6EB0               	movwf	4016,c	;volatile
  4766                           
  4767                           ;eusart1.c: 109: eusart1TxHead = 0;
  4768  00105C  0E00               	movlw	0
  4769  00105E  6E30               	movwf	_eusart1TxHead,c
  4770                           
  4771                           ;eusart1.c: 110: eusart1TxTail = 0;
  4772  001060  0E00               	movlw	0
  4773  001062  6E31               	movwf	_eusart1TxTail,c
  4774                           
  4775                           ;eusart1.c: 111: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  4776  001064  0E80               	movlw	128
  4777  001066  6E3A               	movwf	_eusart1TxBufferRemaining,c	;volatile
  4778                           
  4779                           ;eusart1.c: 113: eusart1RxHead = 0;
  4780  001068  0E00               	movlw	0
  4781  00106A  6E2E               	movwf	_eusart1RxHead,c
  4782                           
  4783                           ;eusart1.c: 114: eusart1RxTail = 0;
  4784  00106C  0E00               	movlw	0
  4785  00106E  6E2F               	movwf	_eusart1RxTail,c
  4786                           
  4787                           ;eusart1.c: 115: eusart1RxCount = 0;
  4788  001070  0E00               	movlw	0
  4789  001072  6E2D               	movwf	_eusart1RxCount,c	;volatile
  4790                           
  4791                           ;eusart1.c: 118: PIE1bits.RC1IE = 1;
  4792  001074  8A9D               	bsf	3997,5,c	;volatile
  4793  001076  0012               	return		;funcret
  4794  001078                     __end_of_EUSART1_Initialize:
  4795                           	opt stack 0
  4796                           tblptru	equ	0xFF8
  4797                           tblptrh	equ	0xFF7
  4798                           tblptrl	equ	0xFF6
  4799                           tablat	equ	0xFF5
  4800                           prodh	equ	0xFF4
  4801                           prodl	equ	0xFF3
  4802                           intcon	equ	0xFF2
  4803                           intcon2	equ	0xFF1
  4804                           postinc0	equ	0xFEE
  4805                           wreg	equ	0xFE8
  4806                           indf1	equ	0xFE7
  4807                           postdec1	equ	0xFE5
  4808                           fsr1h	equ	0xFE2
  4809                           fsr1l	equ	0xFE1
  4810                           indf2	equ	0xFDF
  4811                           postinc2	equ	0xFDE
  4812                           postdec2	equ	0xFDD
  4813                           fsr2h	equ	0xFDA
  4814                           fsr2l	equ	0xFD9
  4815                           status	equ	0xFD8
  4816                           
  4817 ;; *************** function _EPWM1_Initialize *****************
  4818 ;; Defined at:
  4819 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;Total ram usage:        0 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    4
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_SYSTEM_Initialize
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text28
  4848  0011AE                     __ptext28:
  4849                           	opt stack 0
  4850  0011AE                     _EPWM1_Initialize:
  4851                           	opt stack 25
  4852                           
  4853                           ;epwm1.c: 69: CCP1CON = 0x0E;
  4854                           
  4855                           ;incstack = 0
  4856  0011AE  0E0E               	movlw	14
  4857  0011B0  6EBD               	movwf	4029,c	;volatile
  4858                           
  4859                           ;epwm1.c: 72: ECCP1AS = 0x00;
  4860  0011B2  0E00               	movlw	0
  4861  0011B4  6EB6               	movwf	4022,c	;volatile
  4862                           
  4863                           ;epwm1.c: 75: PWM1CON = 0x82;
  4864  0011B6  0E82               	movlw	130
  4865  0011B8  6EB7               	movwf	4023,c	;volatile
  4866                           
  4867                           ;epwm1.c: 78: PSTR1CON = 0x01;
  4868  0011BA  0E01               	movlw	1
  4869  0011BC  6EB9               	movwf	4025,c	;volatile
  4870                           
  4871                           ;epwm1.c: 81: CCPR1L = 0x00;
  4872  0011BE  0E00               	movlw	0
  4873  0011C0  6EBE               	movwf	4030,c	;volatile
  4874                           
  4875                           ;epwm1.c: 84: CCPR1H = 0x00;
  4876  0011C2  0E00               	movlw	0
  4877  0011C4  6EBF               	movwf	4031,c	;volatile
  4878                           
  4879                           ;epwm1.c: 88: CCPTMRS0bits.C1TSEL = 0x0;
  4880  0011C6  0EFC               	movlw	-4
  4881  0011C8  010F               	movlb	15	; () banked
  4882  0011CA  1749               	andwf	73,f,b	;volatile
  4883                           
  4884                           ; BSR set to: 15
  4885  0011CC  0012               	return		;funcret
  4886  0011CE                     __end_of_EPWM1_Initialize:
  4887                           	opt stack 0
  4888                           tblptru	equ	0xFF8
  4889                           tblptrh	equ	0xFF7
  4890                           tblptrl	equ	0xFF6
  4891                           tablat	equ	0xFF5
  4892                           prodh	equ	0xFF4
  4893                           prodl	equ	0xFF3
  4894                           intcon	equ	0xFF2
  4895                           intcon2	equ	0xFF1
  4896                           postinc0	equ	0xFEE
  4897                           wreg	equ	0xFE8
  4898                           indf1	equ	0xFE7
  4899                           postdec1	equ	0xFE5
  4900                           fsr1h	equ	0xFE2
  4901                           fsr1l	equ	0xFE1
  4902                           indf2	equ	0xFDF
  4903                           postinc2	equ	0xFDE
  4904                           postdec2	equ	0xFDD
  4905                           fsr2h	equ	0xFDA
  4906                           fsr2l	equ	0xFD9
  4907                           status	equ	0xFD8
  4908                           
  4909 ;; *************** function _I2C_Write_Byte *****************
  4910 ;; Defined at:
  4911 ;;		line 61 in file "soft_i2c.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  byt             1    wreg     unsigned char 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  byt             1   36[COMRAM] unsigned char 
  4916 ;;  i               1   37[COMRAM] unsigned char 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4930 ;;Total ram usage:        2 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    5
  4933 ;; This function calls:
  4934 ;;		_I2C_SCL_CLEAR
  4935 ;;		_I2C_SCL_SET
  4936 ;;		_I2C_SDA_CLEAR
  4937 ;;		_I2C_SDA_IN_SET
  4938 ;;		_I2C_SDA_OUT_SET
  4939 ;;		_I2C_SDA_SET
  4940 ;; This function is called by:
  4941 ;;		_main
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           	psect	text29
  4946  000CE8                     __ptext29:
  4947                           	opt stack 0
  4948  000CE8                     _I2C_Write_Byte:
  4949                           	opt stack 25
  4950                           
  4951                           ; BSR set to: 15
  4952                           ;incstack = 0
  4953                           ;I2C_Write_Byte@byt stored from wreg
  4954  000CE8  6E25               	movwf	I2C_Write_Byte@byt,c
  4955                           
  4956                           ;soft_i2c.c: 63: char i;
  4957                           ;soft_i2c.c: 64: I2C_SDA_OUT_SET();
  4958  000CEA  EC74  F009         	call	_I2C_SDA_OUT_SET	;wreg free
  4959                           
  4960                           ;soft_i2c.c: 66: for(i=0;i<8;i++)
  4961  000CEE  0E00               	movlw	0
  4962  000CF0  6E26               	movwf	I2C_Write_Byte@i,c
  4963  000CF2                     l2609:
  4964  000CF2  0E07               	movlw	7
  4965  000CF4  6426               	cpfsgt	I2C_Write_Byte@i,c
  4966  000CF6  D001               	goto	l367
  4967  000CF8  D01E               	goto	l2633
  4968  000CFA                     l367:
  4969                           
  4970                           ;soft_i2c.c: 67: {
  4971                           ;soft_i2c.c: 68: if(byt & 0x80)
  4972  000CFA  AE25               	btfss	I2C_Write_Byte@byt,7,c
  4973  000CFC  D006               	goto	l2617
  4974                           
  4975                           ;soft_i2c.c: 69: {
  4976                           ;soft_i2c.c: 70: I2C_SDA_SET();
  4977  000CFE  EC72  F009         	call	_I2C_SDA_SET	;wreg free
  4978                           
  4979                           ;soft_i2c.c: 71: _delay((unsigned long)((20)*(64000000/4000000.0)));
  4980  000D02  0E6A               	movlw	106
  4981  000D04                     u2847:
  4982  000D04  2EE8               	decfsz	wreg,f,c
  4983  000D06  D7FE               	goto	u2847
  4984  000D08  D005               	goto	L10
  4985  000D0A                     l2617:
  4986                           
  4987                           ;soft_i2c.c: 73: else
  4988                           ;soft_i2c.c: 74: {
  4989                           ;soft_i2c.c: 75: I2C_SDA_CLEAR();
  4990  000D0A  EC6E  F009         	call	_I2C_SDA_CLEAR	;wreg free
  4991                           
  4992                           ;soft_i2c.c: 76: _delay((unsigned long)((20)*(64000000/4000000.0)));
  4993  000D0E  0E6A               	movlw	106
  4994  000D10                     u2857:
  4995  000D10  2EE8               	decfsz	wreg,f,c
  4996  000D12  D7FE               	goto	u2857
  4997  000D14                     L10:
  4998  000D14  D000               	nop2		;nop
  4999                           
  5000                           ;soft_i2c.c: 77: }
  5001                           ;soft_i2c.c: 79: I2C_SCL_SET();
  5002  000D16  EC76  F009         	call	_I2C_SCL_SET	;wreg free
  5003                           
  5004                           ;soft_i2c.c: 80: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5005  000D1A  0E6A               	movlw	106
  5006  000D1C                     u2867:
  5007  000D1C  2EE8               	decfsz	wreg,f,c
  5008  000D1E  D7FE               	goto	u2867
  5009  000D20  D000               	nop2		;nop
  5010                           
  5011                           ;soft_i2c.c: 81: I2C_SCL_CLEAR();
  5012  000D22  EC70  F009         	call	_I2C_SCL_CLEAR	;wreg free
  5013                           
  5014                           ;soft_i2c.c: 82: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5015  000D26  0E6A               	movlw	106
  5016  000D28                     u2877:
  5017  000D28  2EE8               	decfsz	wreg,f,c
  5018  000D2A  D7FE               	goto	u2877
  5019  000D2C  D000               	nop2		;nop
  5020                           
  5021                           ;soft_i2c.c: 83: byt<<=1;
  5022  000D2E  90D8               	bcf	status,0,c
  5023  000D30  3625               	rlcf	I2C_Write_Byte@byt,f,c
  5024  000D32  2A26               	incf	I2C_Write_Byte@i,f,c
  5025  000D34  D7DE               	goto	l2609
  5026  000D36                     l2633:
  5027                           
  5028                           ;soft_i2c.c: 84: }
  5029                           ;soft_i2c.c: 85: I2C_SDA_IN_SET();
  5030  000D36  EC6C  F009         	call	_I2C_SDA_IN_SET	;wreg free
  5031                           
  5032                           ;soft_i2c.c: 86: I2C_SCL_SET();
  5033  000D3A  EC76  F009         	call	_I2C_SCL_SET	;wreg free
  5034                           
  5035                           ;soft_i2c.c: 87: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5036  000D3E  0E6A               	movlw	106
  5037  000D40                     u2887:
  5038  000D40  2EE8               	decfsz	wreg,f,c
  5039  000D42  D7FE               	goto	u2887
  5040  000D44  D000               	nop2		;nop
  5041                           
  5042                           ;soft_i2c.c: 88: I2C_SCL_CLEAR();
  5043  000D46  EC70  F009         	call	_I2C_SCL_CLEAR	;wreg free
  5044                           
  5045                           ;soft_i2c.c: 89: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5046  000D4A  0E6A               	movlw	106
  5047  000D4C                     u2897:
  5048  000D4C  2EE8               	decfsz	wreg,f,c
  5049  000D4E  D7FE               	goto	u2897
  5050  000D50  D000               	nop2		;nop
  5051                           
  5052                           ;soft_i2c.c: 91: I2C_SDA_OUT_SET();
  5053  000D52  EC74  F009         	call	_I2C_SDA_OUT_SET	;wreg free
  5054  000D56  0012               	return		;funcret
  5055  000D58                     __end_of_I2C_Write_Byte:
  5056                           	opt stack 0
  5057                           tblptru	equ	0xFF8
  5058                           tblptrh	equ	0xFF7
  5059                           tblptrl	equ	0xFF6
  5060                           tablat	equ	0xFF5
  5061                           prodh	equ	0xFF4
  5062                           prodl	equ	0xFF3
  5063                           intcon	equ	0xFF2
  5064                           intcon2	equ	0xFF1
  5065                           postinc0	equ	0xFEE
  5066                           wreg	equ	0xFE8
  5067                           indf1	equ	0xFE7
  5068                           postdec1	equ	0xFE5
  5069                           fsr1h	equ	0xFE2
  5070                           fsr1l	equ	0xFE1
  5071                           indf2	equ	0xFDF
  5072                           postinc2	equ	0xFDE
  5073                           postdec2	equ	0xFDD
  5074                           fsr2h	equ	0xFDA
  5075                           fsr2l	equ	0xFD9
  5076                           status	equ	0xFD8
  5077                           
  5078 ;; *************** function _I2C_Stop *****************
  5079 ;; Defined at:
  5080 ;;		line 50 in file "soft_i2c.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;		None
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1    wreg      void 
  5087 ;; Registers used:
  5088 ;;		wreg, cstack
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;Total ram usage:        0 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    5
  5101 ;; This function calls:
  5102 ;;		_I2C_SCL_SET
  5103 ;;		_I2C_SDA_OUT_SET
  5104 ;;		_I2C_SDA_SET
  5105 ;; This function is called by:
  5106 ;;		_main
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text30
  5111  00122A                     __ptext30:
  5112                           	opt stack 0
  5113  00122A                     _I2C_Stop:
  5114                           	opt stack 25
  5115                           
  5116                           ;soft_i2c.c: 52: I2C_SDA_OUT_SET();
  5117                           
  5118                           ;incstack = 0
  5119  00122A  EC74  F009         	call	_I2C_SDA_OUT_SET	;wreg free
  5120                           
  5121                           ;soft_i2c.c: 55: I2C_SCL_SET();
  5122  00122E  EC76  F009         	call	_I2C_SCL_SET	;wreg free
  5123                           
  5124                           ;soft_i2c.c: 56: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5125  001232  0E6A               	movlw	106
  5126  001234                     u2907:
  5127  001234  2EE8               	decfsz	wreg,f,c
  5128  001236  D7FE               	goto	u2907
  5129  001238  D000               	nop2		;nop
  5130                           
  5131                           ;soft_i2c.c: 57: I2C_SDA_SET();
  5132  00123A  EC72  F009         	call	_I2C_SDA_SET	;wreg free
  5133                           
  5134                           ;soft_i2c.c: 58: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5135  00123E  0E6A               	movlw	106
  5136  001240                     u2917:
  5137  001240  2EE8               	decfsz	wreg,f,c
  5138  001242  D7FE               	goto	u2917
  5139  001244  D000               	nop2		;nop
  5140  001246  0012               	return		;funcret
  5141  001248                     __end_of_I2C_Stop:
  5142                           	opt stack 0
  5143                           tblptru	equ	0xFF8
  5144                           tblptrh	equ	0xFF7
  5145                           tblptrl	equ	0xFF6
  5146                           tablat	equ	0xFF5
  5147                           prodh	equ	0xFF4
  5148                           prodl	equ	0xFF3
  5149                           intcon	equ	0xFF2
  5150                           intcon2	equ	0xFF1
  5151                           postinc0	equ	0xFEE
  5152                           wreg	equ	0xFE8
  5153                           indf1	equ	0xFE7
  5154                           postdec1	equ	0xFE5
  5155                           fsr1h	equ	0xFE2
  5156                           fsr1l	equ	0xFE1
  5157                           indf2	equ	0xFDF
  5158                           postinc2	equ	0xFDE
  5159                           postdec2	equ	0xFDD
  5160                           fsr2h	equ	0xFDA
  5161                           fsr2l	equ	0xFD9
  5162                           status	equ	0xFD8
  5163                           
  5164 ;; *************** function _I2C_Start *****************
  5165 ;; Defined at:
  5166 ;;		line 34 in file "soft_i2c.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;		None
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;		None
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, cstack
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;Total ram usage:        0 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    5
  5187 ;; This function calls:
  5188 ;;		_I2C_SCL_CLEAR
  5189 ;;		_I2C_SCL_SET
  5190 ;;		_I2C_SDA_CLEAR
  5191 ;;		_I2C_SDA_OUT_SET
  5192 ;;		_I2C_SDA_SET
  5193 ;; This function is called by:
  5194 ;;		_main
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           	psect	text31
  5199  0010DA                     __ptext31:
  5200                           	opt stack 0
  5201  0010DA                     _I2C_Start:
  5202                           	opt stack 25
  5203                           
  5204                           ;soft_i2c.c: 36: I2C_SDA_OUT_SET();
  5205                           
  5206                           ;incstack = 0
  5207  0010DA  EC74  F009         	call	_I2C_SDA_OUT_SET	;wreg free
  5208                           
  5209                           ;soft_i2c.c: 39: I2C_SDA_SET();
  5210  0010DE  EC72  F009         	call	_I2C_SDA_SET	;wreg free
  5211                           
  5212                           ;soft_i2c.c: 40: I2C_SCL_SET();
  5213  0010E2  EC76  F009         	call	_I2C_SCL_SET	;wreg free
  5214                           
  5215                           ;soft_i2c.c: 41: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5216  0010E6  0E6A               	movlw	106
  5217  0010E8                     u2927:
  5218  0010E8  2EE8               	decfsz	wreg,f,c
  5219  0010EA  D7FE               	goto	u2927
  5220  0010EC  D000               	nop2		;nop
  5221                           
  5222                           ;soft_i2c.c: 44: I2C_SDA_CLEAR();
  5223  0010EE  EC6E  F009         	call	_I2C_SDA_CLEAR	;wreg free
  5224                           
  5225                           ;soft_i2c.c: 45: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5226  0010F2  0E6A               	movlw	106
  5227  0010F4                     u2937:
  5228  0010F4  2EE8               	decfsz	wreg,f,c
  5229  0010F6  D7FE               	goto	u2937
  5230  0010F8  D000               	nop2		;nop
  5231                           
  5232                           ;soft_i2c.c: 46: I2C_SCL_CLEAR();
  5233  0010FA  EC70  F009         	call	_I2C_SCL_CLEAR	;wreg free
  5234                           
  5235                           ;soft_i2c.c: 47: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5236  0010FE  0E6A               	movlw	106
  5237  001100                     u2947:
  5238  001100  2EE8               	decfsz	wreg,f,c
  5239  001102  D7FE               	goto	u2947
  5240  001104  D000               	nop2		;nop
  5241  001106  0012               	return		;funcret
  5242  001108                     __end_of_I2C_Start:
  5243                           	opt stack 0
  5244                           tblptru	equ	0xFF8
  5245                           tblptrh	equ	0xFF7
  5246                           tblptrl	equ	0xFF6
  5247                           tablat	equ	0xFF5
  5248                           prodh	equ	0xFF4
  5249                           prodl	equ	0xFF3
  5250                           intcon	equ	0xFF2
  5251                           intcon2	equ	0xFF1
  5252                           postinc0	equ	0xFEE
  5253                           wreg	equ	0xFE8
  5254                           indf1	equ	0xFE7
  5255                           postdec1	equ	0xFE5
  5256                           fsr1h	equ	0xFE2
  5257                           fsr1l	equ	0xFE1
  5258                           indf2	equ	0xFDF
  5259                           postinc2	equ	0xFDE
  5260                           postdec2	equ	0xFDD
  5261                           fsr2h	equ	0xFDA
  5262                           fsr2l	equ	0xFD9
  5263                           status	equ	0xFD8
  5264                           
  5265 ;; *************** function _I2C_Read_Byte *****************
  5266 ;; Defined at:
  5267 ;;		line 98 in file "soft_i2c.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  ack             1    wreg     unsigned char 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;  ack             1   36[COMRAM] unsigned char 
  5272 ;;  i               1   38[COMRAM] unsigned char 
  5273 ;;  val             1   37[COMRAM] unsigned char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      unsigned char 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2, status,0, cstack
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;Total ram usage:        3 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    5
  5290 ;; This function calls:
  5291 ;;		_I2C_SCL_CLEAR
  5292 ;;		_I2C_SCL_SET
  5293 ;;		_I2C_SDA_CLEAR
  5294 ;;		_I2C_SDA_IN_SET
  5295 ;;		_I2C_SDA_OUT_SET
  5296 ;;		_I2C_SDA_READ
  5297 ;;		_I2C_SDA_SET
  5298 ;; This function is called by:
  5299 ;;		_main
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text32
  5304  000AB2                     __ptext32:
  5305                           	opt stack 0
  5306  000AB2                     _I2C_Read_Byte:
  5307                           	opt stack 25
  5308                           
  5309                           ;incstack = 0
  5310                           ;I2C_Read_Byte@ack stored from wreg
  5311  000AB2  6E25               	movwf	I2C_Read_Byte@ack,c
  5312                           
  5313                           ;soft_i2c.c: 100: char i;
  5314                           ;soft_i2c.c: 101: char val = 0;
  5315  000AB4  0E00               	movlw	0
  5316  000AB6  6E26               	movwf	I2C_Read_Byte@val,c
  5317                           
  5318                           ;soft_i2c.c: 102: I2C_SDA_IN_SET();
  5319  000AB8  EC6C  F009         	call	_I2C_SDA_IN_SET	;wreg free
  5320                           
  5321                           ;soft_i2c.c: 117: for(i=0;i<8;i++)
  5322  000ABC  0E00               	movlw	0
  5323  000ABE  6E27               	movwf	I2C_Read_Byte@i,c
  5324  000AC0                     l2653:
  5325  000AC0  0E07               	movlw	7
  5326  000AC2  6427               	cpfsgt	I2C_Read_Byte@i,c
  5327  000AC4  D001               	goto	l2657
  5328  000AC6  D01F               	goto	l2681
  5329  000AC8                     l2657:
  5330                           
  5331                           ;soft_i2c.c: 118: {
  5332                           ;soft_i2c.c: 119: if(i!=0) { val>>=1; }
  5333  000AC8  5027               	movf	I2C_Read_Byte@i,w,c
  5334  000ACA  B4D8               	btfsc	status,2,c
  5335  000ACC  D002               	goto	l2661
  5336  000ACE  90D8               	bcf	status,0,c
  5337  000AD0  3226               	rrcf	I2C_Read_Byte@val,f,c
  5338  000AD2                     l2661:
  5339                           
  5340                           ;soft_i2c.c: 120: I2C_SCL_SET();
  5341  000AD2  EC76  F009         	call	_I2C_SCL_SET	;wreg free
  5342                           
  5343                           ;soft_i2c.c: 121: _delay((unsigned long)((4)*(64000000/4000000.0)));
  5344  000AD6  0E15               	movlw	21
  5345  000AD8                     u2957:
  5346  000AD8  2EE8               	decfsz	wreg,f,c
  5347  000ADA  D7FE               	goto	u2957
  5348  000ADC  F000               	nop	
  5349                           
  5350                           ;soft_i2c.c: 122: if(I2C_SDA_READ()!=0)
  5351  000ADE  EC58  F009         	call	_I2C_SDA_READ	;wreg free
  5352  000AE2  0900               	iorlw	0
  5353  000AE4  B4D8               	btfsc	status,2,c
  5354  000AE6  D002               	goto	l2669
  5355                           
  5356                           ;soft_i2c.c: 123: {
  5357                           ;soft_i2c.c: 124: val |= 0x80;
  5358  000AE8  8E26               	bsf	I2C_Read_Byte@val,7,c
  5359                           
  5360                           ;soft_i2c.c: 125: }
  5361  000AEA  D001               	goto	l2671
  5362  000AEC                     l2669:
  5363                           
  5364                           ;soft_i2c.c: 126: else
  5365                           ;soft_i2c.c: 127: {
  5366                           ;soft_i2c.c: 128: val &= 0x7F;
  5367  000AEC  9E26               	bcf	I2C_Read_Byte@val,7,c
  5368  000AEE                     l2671:
  5369                           
  5370                           ;soft_i2c.c: 130: }
  5371                           ;soft_i2c.c: 131: _delay((unsigned long)((10)*(64000000/4000000.0)));
  5372  000AEE  0E35               	movlw	53
  5373  000AF0                     u2967:
  5374  000AF0  2EE8               	decfsz	wreg,f,c
  5375  000AF2  D7FE               	goto	u2967
  5376  000AF4  F000               	nop	
  5377                           
  5378                           ;soft_i2c.c: 132: I2C_SCL_CLEAR();
  5379  000AF6  EC70  F009         	call	_I2C_SCL_CLEAR	;wreg free
  5380                           
  5381                           ;soft_i2c.c: 133: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5382  000AFA  0E6A               	movlw	106
  5383  000AFC                     u2977:
  5384  000AFC  2EE8               	decfsz	wreg,f,c
  5385  000AFE  D7FE               	goto	u2977
  5386  000B00  D000               	nop2		;nop
  5387  000B02  2A27               	incf	I2C_Read_Byte@i,f,c
  5388  000B04  D7DD               	goto	l2653
  5389  000B06                     l2681:
  5390                           
  5391                           ;soft_i2c.c: 134: }
  5392                           ;soft_i2c.c: 136: I2C_SDA_OUT_SET();
  5393  000B06  EC74  F009         	call	_I2C_SDA_OUT_SET	;wreg free
  5394                           
  5395                           ;soft_i2c.c: 139: if(ack)
  5396  000B0A  5025               	movf	I2C_Read_Byte@ack,w,c
  5397  000B0C  B4D8               	btfsc	status,2,c
  5398  000B0E  D00E               	goto	l2691
  5399                           
  5400                           ;soft_i2c.c: 140: {
  5401                           ;soft_i2c.c: 141: I2C_SDA_CLEAR();
  5402  000B10  EC6E  F009         	call	_I2C_SDA_CLEAR	;wreg free
  5403                           
  5404                           ;soft_i2c.c: 142: I2C_SCL_SET();
  5405  000B14  EC76  F009         	call	_I2C_SCL_SET	;wreg free
  5406                           
  5407                           ;soft_i2c.c: 143: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5408  000B18  0E6A               	movlw	106
  5409  000B1A                     u2987:
  5410  000B1A  2EE8               	decfsz	wreg,f,c
  5411  000B1C  D7FE               	goto	u2987
  5412  000B1E  D000               	nop2		;nop
  5413                           
  5414                           ;soft_i2c.c: 144: I2C_SCL_CLEAR();
  5415  000B20  EC70  F009         	call	_I2C_SCL_CLEAR	;wreg free
  5416                           
  5417                           ;soft_i2c.c: 145: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5418  000B24  0E6A               	movlw	106
  5419  000B26                     u2997:
  5420  000B26  2EE8               	decfsz	wreg,f,c
  5421  000B28  D7FE               	goto	u2997
  5422  000B2A  D00D               	goto	L11
  5423  000B2C                     l2691:
  5424                           
  5425                           ;soft_i2c.c: 147: else
  5426                           ;soft_i2c.c: 148: {
  5427                           ;soft_i2c.c: 149: I2C_SDA_SET();
  5428  000B2C  EC72  F009         	call	_I2C_SDA_SET	;wreg free
  5429                           
  5430                           ;soft_i2c.c: 150: I2C_SCL_SET();
  5431  000B30  EC76  F009         	call	_I2C_SCL_SET	;wreg free
  5432                           
  5433                           ;soft_i2c.c: 151: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5434  000B34  0E6A               	movlw	106
  5435  000B36                     u3007:
  5436  000B36  2EE8               	decfsz	wreg,f,c
  5437  000B38  D7FE               	goto	u3007
  5438  000B3A  D000               	nop2		;nop
  5439                           
  5440                           ;soft_i2c.c: 152: I2C_SCL_CLEAR();
  5441  000B3C  EC70  F009         	call	_I2C_SCL_CLEAR	;wreg free
  5442                           
  5443                           ;soft_i2c.c: 153: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5444  000B40  0E6A               	movlw	106
  5445  000B42                     u3017:
  5446  000B42  2EE8               	decfsz	wreg,f,c
  5447  000B44  D7FE               	goto	u3017
  5448  000B46                     L11:
  5449  000B46  D000               	nop2		;nop
  5450                           
  5451                           ;soft_i2c.c: 154: }
  5452                           ;soft_i2c.c: 156: return val;
  5453  000B48  5026               	movf	I2C_Read_Byte@val,w,c
  5454  000B4A  0012               	return	
  5455  000B4C                     __end_of_I2C_Read_Byte:
  5456                           	opt stack 0
  5457                           tblptru	equ	0xFF8
  5458                           tblptrh	equ	0xFF7
  5459                           tblptrl	equ	0xFF6
  5460                           tablat	equ	0xFF5
  5461                           prodh	equ	0xFF4
  5462                           prodl	equ	0xFF3
  5463                           intcon	equ	0xFF2
  5464                           intcon2	equ	0xFF1
  5465                           postinc0	equ	0xFEE
  5466                           wreg	equ	0xFE8
  5467                           indf1	equ	0xFE7
  5468                           postdec1	equ	0xFE5
  5469                           fsr1h	equ	0xFE2
  5470                           fsr1l	equ	0xFE1
  5471                           indf2	equ	0xFDF
  5472                           postinc2	equ	0xFDE
  5473                           postdec2	equ	0xFDD
  5474                           fsr2h	equ	0xFDA
  5475                           fsr2l	equ	0xFD9
  5476                           status	equ	0xFD8
  5477                           
  5478 ;; *************** function _I2C_SDA_READ *****************
  5479 ;; Defined at:
  5480 ;;		line 22 in file "soft_i2c.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      unsigned char 
  5487 ;; Registers used:
  5488 ;;		wreg
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;Total ram usage:        0 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    4
  5501 ;; This function calls:
  5502 ;;		Nothing
  5503 ;; This function is called by:
  5504 ;;		_I2C_Read_Byte
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text33
  5509  0012B0                     __ptext33:
  5510                           	opt stack 0
  5511  0012B0                     _I2C_SDA_READ:
  5512                           	opt stack 25
  5513                           
  5514                           ;incstack = 0
  5515  0012B0  A882               	btfss	3970,4,c	;volatile
  5516  0012B2  D002               	goto	u1570
  5517  0012B4  0E01               	movlw	1
  5518  0012B6  0012               	return	
  5519  0012B8                     u1570:
  5520  0012B8  0E00               	movlw	0
  5521  0012BA  0012               	return	
  5522  0012BC                     __end_of_I2C_SDA_READ:
  5523                           	opt stack 0
  5524                           tblptru	equ	0xFF8
  5525                           tblptrh	equ	0xFF7
  5526                           tblptrl	equ	0xFF6
  5527                           tablat	equ	0xFF5
  5528                           prodh	equ	0xFF4
  5529                           prodl	equ	0xFF3
  5530                           intcon	equ	0xFF2
  5531                           intcon2	equ	0xFF1
  5532                           postinc0	equ	0xFEE
  5533                           wreg	equ	0xFE8
  5534                           indf1	equ	0xFE7
  5535                           postdec1	equ	0xFE5
  5536                           fsr1h	equ	0xFE2
  5537                           fsr1l	equ	0xFE1
  5538                           indf2	equ	0xFDF
  5539                           postinc2	equ	0xFDE
  5540                           postdec2	equ	0xFDD
  5541                           fsr2h	equ	0xFDA
  5542                           fsr2l	equ	0xFD9
  5543                           status	equ	0xFD8
  5544                           
  5545 ;; *************** function _I2C_SDA_IN_SET *****************
  5546 ;; Defined at:
  5547 ;;		line 14 in file "soft_i2c.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;		None
  5550 ;; Auto vars:     Size  Location     Type
  5551 ;;		None
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  1    wreg      void 
  5554 ;; Registers used:
  5555 ;;		None
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;Total ram usage:        0 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:    4
  5568 ;; This function calls:
  5569 ;;		Nothing
  5570 ;; This function is called by:
  5571 ;;		_I2C_Write_Byte
  5572 ;;		_I2C_Read_Byte
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text34
  5577  0012D8                     __ptext34:
  5578                           	opt stack 0
  5579  0012D8                     _I2C_SDA_IN_SET:
  5580                           	opt stack 25
  5581                           
  5582                           ;incstack = 0
  5583  0012D8  8894               	bsf	3988,4,c	;volatile
  5584  0012DA  0012               	return		;funcret
  5585  0012DC                     __end_of_I2C_SDA_IN_SET:
  5586                           	opt stack 0
  5587                           tblptru	equ	0xFF8
  5588                           tblptrh	equ	0xFF7
  5589                           tblptrl	equ	0xFF6
  5590                           tablat	equ	0xFF5
  5591                           prodh	equ	0xFF4
  5592                           prodl	equ	0xFF3
  5593                           intcon	equ	0xFF2
  5594                           intcon2	equ	0xFF1
  5595                           postinc0	equ	0xFEE
  5596                           wreg	equ	0xFE8
  5597                           indf1	equ	0xFE7
  5598                           postdec1	equ	0xFE5
  5599                           fsr1h	equ	0xFE2
  5600                           fsr1l	equ	0xFE1
  5601                           indf2	equ	0xFDF
  5602                           postinc2	equ	0xFDE
  5603                           postdec2	equ	0xFDD
  5604                           fsr2h	equ	0xFDA
  5605                           fsr2l	equ	0xFD9
  5606                           status	equ	0xFD8
  5607                           
  5608 ;; *************** function _I2C_SDA_CLEAR *****************
  5609 ;; Defined at:
  5610 ;;		line 12 in file "soft_i2c.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;		None
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		None
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;Total ram usage:        0 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    4
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_I2C_Start
  5635 ;;		_I2C_Write_Byte
  5636 ;;		_I2C_Read_Byte
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text35
  5641  0012DC                     __ptext35:
  5642                           	opt stack 0
  5643  0012DC                     _I2C_SDA_CLEAR:
  5644                           	opt stack 25
  5645                           
  5646                           ;incstack = 0
  5647  0012DC  988B               	bcf	3979,4,c	;volatile
  5648  0012DE  0012               	return		;funcret
  5649  0012E0                     __end_of_I2C_SDA_CLEAR:
  5650                           	opt stack 0
  5651                           tblptru	equ	0xFF8
  5652                           tblptrh	equ	0xFF7
  5653                           tblptrl	equ	0xFF6
  5654                           tablat	equ	0xFF5
  5655                           prodh	equ	0xFF4
  5656                           prodl	equ	0xFF3
  5657                           intcon	equ	0xFF2
  5658                           intcon2	equ	0xFF1
  5659                           postinc0	equ	0xFEE
  5660                           wreg	equ	0xFE8
  5661                           indf1	equ	0xFE7
  5662                           postdec1	equ	0xFE5
  5663                           fsr1h	equ	0xFE2
  5664                           fsr1l	equ	0xFE1
  5665                           indf2	equ	0xFDF
  5666                           postinc2	equ	0xFDE
  5667                           postdec2	equ	0xFDD
  5668                           fsr2h	equ	0xFDA
  5669                           fsr2l	equ	0xFD9
  5670                           status	equ	0xFD8
  5671                           
  5672 ;; *************** function _I2C_SCL_CLEAR *****************
  5673 ;; Defined at:
  5674 ;;		line 18 in file "soft_i2c.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;		None
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;		None
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      void 
  5681 ;; Registers used:
  5682 ;;		None
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;Total ram usage:        0 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; Hardware stack levels required when called:    4
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		_I2C_Start
  5699 ;;		_I2C_Write_Byte
  5700 ;;		_I2C_Read_Byte
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text36
  5705  0012E0                     __ptext36:
  5706                           	opt stack 0
  5707  0012E0                     _I2C_SCL_CLEAR:
  5708                           	opt stack 25
  5709                           
  5710                           ;incstack = 0
  5711  0012E0  968B               	bcf	3979,3,c	;volatile
  5712  0012E2  0012               	return		;funcret
  5713  0012E4                     __end_of_I2C_SCL_CLEAR:
  5714                           	opt stack 0
  5715                           tblptru	equ	0xFF8
  5716                           tblptrh	equ	0xFF7
  5717                           tblptrl	equ	0xFF6
  5718                           tablat	equ	0xFF5
  5719                           prodh	equ	0xFF4
  5720                           prodl	equ	0xFF3
  5721                           intcon	equ	0xFF2
  5722                           intcon2	equ	0xFF1
  5723                           postinc0	equ	0xFEE
  5724                           wreg	equ	0xFE8
  5725                           indf1	equ	0xFE7
  5726                           postdec1	equ	0xFE5
  5727                           fsr1h	equ	0xFE2
  5728                           fsr1l	equ	0xFE1
  5729                           indf2	equ	0xFDF
  5730                           postinc2	equ	0xFDE
  5731                           postdec2	equ	0xFDD
  5732                           fsr2h	equ	0xFDA
  5733                           fsr2l	equ	0xFD9
  5734                           status	equ	0xFD8
  5735                           
  5736 ;; *************** function _I2C_Init *****************
  5737 ;; Defined at:
  5738 ;;		line 25 in file "soft_i2c.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;		None
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;		None
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      void 
  5745 ;; Registers used:
  5746 ;;		wreg, cstack
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;Total ram usage:        1 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:    5
  5759 ;; This function calls:
  5760 ;;		_I2C_SCL_OUT_SET
  5761 ;;		_I2C_SCL_SET
  5762 ;;		_I2C_SDA_OUT_SET
  5763 ;;		_I2C_SDA_SET
  5764 ;; This function is called by:
  5765 ;;		_main
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           	psect	text37
  5770  0011CE                     __ptext37:
  5771                           	opt stack 0
  5772  0011CE                     _I2C_Init:
  5773                           	opt stack 25
  5774                           
  5775                           ;soft_i2c.c: 27: I2C_SDA_OUT_SET();
  5776                           
  5777                           ;incstack = 0
  5778  0011CE  EC74  F009         	call	_I2C_SDA_OUT_SET	;wreg free
  5779                           
  5780                           ;soft_i2c.c: 28: I2C_SCL_OUT_SET();
  5781  0011D2  EC78  F009         	call	_I2C_SCL_OUT_SET	;wreg free
  5782                           
  5783                           ;soft_i2c.c: 29: I2C_SCL_SET();
  5784  0011D6  EC76  F009         	call	_I2C_SCL_SET	;wreg free
  5785                           
  5786                           ;soft_i2c.c: 30: I2C_SDA_SET();
  5787  0011DA  EC72  F009         	call	_I2C_SDA_SET	;wreg free
  5788                           
  5789                           ;soft_i2c.c: 31: _delay((unsigned long)((10)*(64000000/4000.0)));
  5790  0011DE  0ED0               	movlw	208
  5791  0011E0  6E25               	movwf	??_I2C_Init& (0+255),c
  5792  0011E2  0ECA               	movlw	202
  5793  0011E4                     u3027:
  5794  0011E4  2EE8               	decfsz	wreg,f,c
  5795  0011E6  D7FE               	goto	u3027
  5796  0011E8  2E25               	decfsz	??_I2C_Init& (0+255),f,c
  5797  0011EA  D7FC               	goto	u3027
  5798  0011EC  0012               	return		;funcret
  5799  0011EE                     __end_of_I2C_Init:
  5800                           	opt stack 0
  5801                           tblptru	equ	0xFF8
  5802                           tblptrh	equ	0xFF7
  5803                           tblptrl	equ	0xFF6
  5804                           tablat	equ	0xFF5
  5805                           prodh	equ	0xFF4
  5806                           prodl	equ	0xFF3
  5807                           intcon	equ	0xFF2
  5808                           intcon2	equ	0xFF1
  5809                           postinc0	equ	0xFEE
  5810                           wreg	equ	0xFE8
  5811                           indf1	equ	0xFE7
  5812                           postdec1	equ	0xFE5
  5813                           fsr1h	equ	0xFE2
  5814                           fsr1l	equ	0xFE1
  5815                           indf2	equ	0xFDF
  5816                           postinc2	equ	0xFDE
  5817                           postdec2	equ	0xFDD
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function _I2C_SDA_SET *****************
  5823 ;; Defined at:
  5824 ;;		line 11 in file "soft_i2c.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		None
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    4
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_I2C_Init
  5849 ;;		_I2C_Start
  5850 ;;		_I2C_Stop
  5851 ;;		_I2C_Write_Byte
  5852 ;;		_I2C_Read_Byte
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text38
  5857  0012E4                     __ptext38:
  5858                           	opt stack 0
  5859  0012E4                     _I2C_SDA_SET:
  5860                           	opt stack 25
  5861                           
  5862                           ;incstack = 0
  5863  0012E4  888B               	bsf	3979,4,c	;volatile
  5864  0012E6  0012               	return		;funcret
  5865  0012E8                     __end_of_I2C_SDA_SET:
  5866                           	opt stack 0
  5867                           tblptru	equ	0xFF8
  5868                           tblptrh	equ	0xFF7
  5869                           tblptrl	equ	0xFF6
  5870                           tablat	equ	0xFF5
  5871                           prodh	equ	0xFF4
  5872                           prodl	equ	0xFF3
  5873                           intcon	equ	0xFF2
  5874                           intcon2	equ	0xFF1
  5875                           postinc0	equ	0xFEE
  5876                           wreg	equ	0xFE8
  5877                           indf1	equ	0xFE7
  5878                           postdec1	equ	0xFE5
  5879                           fsr1h	equ	0xFE2
  5880                           fsr1l	equ	0xFE1
  5881                           indf2	equ	0xFDF
  5882                           postinc2	equ	0xFDE
  5883                           postdec2	equ	0xFDD
  5884                           fsr2h	equ	0xFDA
  5885                           fsr2l	equ	0xFD9
  5886                           status	equ	0xFD8
  5887                           
  5888 ;; *************** function _I2C_SDA_OUT_SET *****************
  5889 ;; Defined at:
  5890 ;;		line 15 in file "soft_i2c.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;		None
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;		None
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  1    wreg      void 
  5897 ;; Registers used:
  5898 ;;		None
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5908 ;;Total ram usage:        0 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; Hardware stack levels required when called:    4
  5911 ;; This function calls:
  5912 ;;		Nothing
  5913 ;; This function is called by:
  5914 ;;		_I2C_Init
  5915 ;;		_I2C_Start
  5916 ;;		_I2C_Stop
  5917 ;;		_I2C_Write_Byte
  5918 ;;		_I2C_Read_Byte
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text39
  5923  0012E8                     __ptext39:
  5924                           	opt stack 0
  5925  0012E8                     _I2C_SDA_OUT_SET:
  5926                           	opt stack 25
  5927                           
  5928                           ;incstack = 0
  5929  0012E8  9894               	bcf	3988,4,c	;volatile
  5930  0012EA  0012               	return		;funcret
  5931  0012EC                     __end_of_I2C_SDA_OUT_SET:
  5932                           	opt stack 0
  5933                           tblptru	equ	0xFF8
  5934                           tblptrh	equ	0xFF7
  5935                           tblptrl	equ	0xFF6
  5936                           tablat	equ	0xFF5
  5937                           prodh	equ	0xFF4
  5938                           prodl	equ	0xFF3
  5939                           intcon	equ	0xFF2
  5940                           intcon2	equ	0xFF1
  5941                           postinc0	equ	0xFEE
  5942                           wreg	equ	0xFE8
  5943                           indf1	equ	0xFE7
  5944                           postdec1	equ	0xFE5
  5945                           fsr1h	equ	0xFE2
  5946                           fsr1l	equ	0xFE1
  5947                           indf2	equ	0xFDF
  5948                           postinc2	equ	0xFDE
  5949                           postdec2	equ	0xFDD
  5950                           fsr2h	equ	0xFDA
  5951                           fsr2l	equ	0xFD9
  5952                           status	equ	0xFD8
  5953                           
  5954 ;; *************** function _I2C_SCL_SET *****************
  5955 ;; Defined at:
  5956 ;;		line 17 in file "soft_i2c.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;		None
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;		None
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  1    wreg      void 
  5963 ;; Registers used:
  5964 ;;		None
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;Total ram usage:        0 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    4
  5977 ;; This function calls:
  5978 ;;		Nothing
  5979 ;; This function is called by:
  5980 ;;		_I2C_Init
  5981 ;;		_I2C_Start
  5982 ;;		_I2C_Stop
  5983 ;;		_I2C_Write_Byte
  5984 ;;		_I2C_Read_Byte
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text40
  5989  0012EC                     __ptext40:
  5990                           	opt stack 0
  5991  0012EC                     _I2C_SCL_SET:
  5992                           	opt stack 25
  5993                           
  5994                           ;incstack = 0
  5995  0012EC  868B               	bsf	3979,3,c	;volatile
  5996  0012EE  0012               	return		;funcret
  5997  0012F0                     __end_of_I2C_SCL_SET:
  5998                           	opt stack 0
  5999                           tblptru	equ	0xFF8
  6000                           tblptrh	equ	0xFF7
  6001                           tblptrl	equ	0xFF6
  6002                           tablat	equ	0xFF5
  6003                           prodh	equ	0xFF4
  6004                           prodl	equ	0xFF3
  6005                           intcon	equ	0xFF2
  6006                           intcon2	equ	0xFF1
  6007                           postinc0	equ	0xFEE
  6008                           wreg	equ	0xFE8
  6009                           indf1	equ	0xFE7
  6010                           postdec1	equ	0xFE5
  6011                           fsr1h	equ	0xFE2
  6012                           fsr1l	equ	0xFE1
  6013                           indf2	equ	0xFDF
  6014                           postinc2	equ	0xFDE
  6015                           postdec2	equ	0xFDD
  6016                           fsr2h	equ	0xFDA
  6017                           fsr2l	equ	0xFD9
  6018                           status	equ	0xFD8
  6019                           
  6020 ;; *************** function _I2C_SCL_OUT_SET *****************
  6021 ;; Defined at:
  6022 ;;		line 20 in file "soft_i2c.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;		None
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;		None
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  1    wreg      void 
  6029 ;; Registers used:
  6030 ;;		None
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;Total ram usage:        0 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    4
  6043 ;; This function calls:
  6044 ;;		Nothing
  6045 ;; This function is called by:
  6046 ;;		_I2C_Init
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text41
  6051  0012F0                     __ptext41:
  6052                           	opt stack 0
  6053  0012F0                     _I2C_SCL_OUT_SET:
  6054                           	opt stack 25
  6055                           
  6056                           ;incstack = 0
  6057  0012F0  9694               	bcf	3988,3,c	;volatile
  6058  0012F2  0012               	return		;funcret
  6059  0012F4                     __end_of_I2C_SCL_OUT_SET:
  6060                           	opt stack 0
  6061                           tblptru	equ	0xFF8
  6062                           tblptrh	equ	0xFF7
  6063                           tblptrl	equ	0xFF6
  6064                           tablat	equ	0xFF5
  6065                           prodh	equ	0xFF4
  6066                           prodl	equ	0xFF3
  6067                           intcon	equ	0xFF2
  6068                           intcon2	equ	0xFF1
  6069                           postinc0	equ	0xFEE
  6070                           wreg	equ	0xFE8
  6071                           indf1	equ	0xFE7
  6072                           postdec1	equ	0xFE5
  6073                           fsr1h	equ	0xFE2
  6074                           fsr1l	equ	0xFE1
  6075                           indf2	equ	0xFDF
  6076                           postinc2	equ	0xFDE
  6077                           postdec2	equ	0xFDD
  6078                           fsr2h	equ	0xFDA
  6079                           fsr2l	equ	0xFD9
  6080                           status	equ	0xFD8
  6081                           
  6082 ;; *************** function _INTERRUPT_InterruptManager *****************
  6083 ;; Defined at:
  6084 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;		None
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;		None
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      void 
  6091 ;; Registers used:
  6092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6100 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;Total ram usage:       14 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    3
  6105 ;; This function calls:
  6106 ;;		_EUSART1_Receive_ISR
  6107 ;;		_EUSART1_Transmit_ISR
  6108 ;; This function is called by:
  6109 ;;		Interrupt level 2
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	intcode
  6114  000008                     __pintcode:
  6115                           	opt stack 0
  6116  000008                     _INTERRUPT_InterruptManager:
  6117                           	opt stack 23
  6118                           
  6119                           ;incstack = 0
  6120  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6121  00000A  CFFA F017          	movff	pclath,??_INTERRUPT_InterruptManager
  6122  00000E  CFFB F018          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6123  000012  CFE9 F019          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  6124  000016  CFEA F01A          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  6125  00001A  CFE1 F01B          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  6126  00001E  CFE2 F01C          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  6127  000022  CFD9 F01D          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  6128  000026  CFDA F01E          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  6129  00002A  CFF3 F01F          	movff	prodl,??_INTERRUPT_InterruptManager+8
  6130  00002E  CFF4 F020          	movff	prodh,??_INTERRUPT_InterruptManager+9
  6131  000032  CFF6 F021          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  6132  000036  CFF7 F022          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  6133  00003A  CFF8 F023          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  6134  00003E  CFF5 F024          	movff	tablat,??_INTERRUPT_InterruptManager+13
  6135                           
  6136                           ;interrupt_manager.c: 77: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  6137  000042  B89D               	btfsc	3997,4,c	;volatile
  6138  000044  A89E               	btfss	3998,4,c	;volatile
  6139  000046  D003               	goto	i2l20
  6140                           
  6141                           ;interrupt_manager.c: 78: {
  6142                           ;interrupt_manager.c: 79: EUSART1_Transmit_ISR();
  6143  000048  EC84  F008         	call	_EUSART1_Transmit_ISR	;wreg free
  6144                           
  6145                           ;interrupt_manager.c: 80: }
  6146  00004C  D005               	goto	i2l24
  6147  00004E                     i2l20:
  6148                           
  6149                           ;interrupt_manager.c: 81: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  6150  00004E  BA9D               	btfsc	3997,5,c	;volatile
  6151  000050  AA9E               	btfss	3998,5,c	;volatile
  6152  000052  D002               	goto	i2l24
  6153                           
  6154                           ;interrupt_manager.c: 82: {
  6155                           ;interrupt_manager.c: 83: EUSART1_Receive_ISR();
  6156  000054  EC10  F004         	call	_EUSART1_Receive_ISR	;wreg free
  6157  000058                     i2l24:
  6158  000058  C024  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  6159  00005C  C023  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  6160  000060  C022  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  6161  000064  C021  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  6162  000068  C020  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  6163  00006C  C01F  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  6164  000070  C01E  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  6165  000074  C01D  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  6166  000078  C01C  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  6167  00007C  C01B  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  6168  000080  C01A  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  6169  000084  C019  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  6170  000088  C018  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6171  00008C  C017  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6172  000090  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6173  000092  0011               	retfie		f
  6174  000094                     __end_of_INTERRUPT_InterruptManager:
  6175                           	opt stack 0
  6176                           pclatu	equ	0xFFB
  6177                           pclath	equ	0xFFA
  6178                           tblptru	equ	0xFF8
  6179                           tblptrh	equ	0xFF7
  6180                           tblptrl	equ	0xFF6
  6181                           tablat	equ	0xFF5
  6182                           prodh	equ	0xFF4
  6183                           prodl	equ	0xFF3
  6184                           intcon	equ	0xFF2
  6185                           intcon2	equ	0xFF1
  6186                           postinc0	equ	0xFEE
  6187                           fsr0h	equ	0xFEA
  6188                           fsr0l	equ	0xFE9
  6189                           wreg	equ	0xFE8
  6190                           indf1	equ	0xFE7
  6191                           postdec1	equ	0xFE5
  6192                           fsr1h	equ	0xFE2
  6193                           fsr1l	equ	0xFE1
  6194                           indf2	equ	0xFDF
  6195                           postinc2	equ	0xFDE
  6196                           postdec2	equ	0xFDD
  6197                           fsr2h	equ	0xFDA
  6198                           fsr2l	equ	0xFD9
  6199                           status	equ	0xFD8
  6200                           
  6201 ;; *************** function _EUSART1_Transmit_ISR *****************
  6202 ;; Defined at:
  6203 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;		None
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;		None
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  1    wreg      void 
  6210 ;; Registers used:
  6211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;Total ram usage:        0 bytes
  6222 ;; Hardware stack levels used:    1
  6223 ;; This function calls:
  6224 ;;		Nothing
  6225 ;; This function is called by:
  6226 ;;		_INTERRUPT_InterruptManager
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text43
  6231  001108                     __ptext43:
  6232                           	opt stack 0
  6233  001108                     _EUSART1_Transmit_ISR:
  6234                           	opt stack 25
  6235                           
  6236                           ;eusart1.c: 179: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  6237                           
  6238                           ;incstack = 0
  6239  001108  0E80               	movlw	128
  6240  00110A  603A               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  6241  00110C  D012               	goto	i2l122
  6242                           
  6243                           ;eusart1.c: 180: {
  6244                           ;eusart1.c: 181: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  6245  00110E  5031               	movf	_eusart1TxTail,w,c
  6246  001110  0D01               	mullw	1
  6247  001112  0E00               	movlw	low _eusart1TxBuffer
  6248  001114  24F3               	addwf	prodl,w,c
  6249  001116  6ED9               	movwf	fsr2l,c
  6250  001118  0E01               	movlw	high _eusart1TxBuffer
  6251  00111A  20F4               	addwfc	prodh,w,c
  6252  00111C  6EDA               	movwf	fsr2h,c
  6253  00111E  50DF               	movf	indf2,w,c
  6254  001120  6EAD               	movwf	4013,c	;volatile
  6255  001122  2A31               	incf	_eusart1TxTail,f,c
  6256                           
  6257                           ;eusart1.c: 182: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  6258  001124  0E7F               	movlw	127
  6259  001126  6431               	cpfsgt	_eusart1TxTail,c
  6260  001128  D002               	goto	i2l2465
  6261                           
  6262                           ;eusart1.c: 183: {
  6263                           ;eusart1.c: 184: eusart1TxTail = 0;
  6264  00112A  0E00               	movlw	0
  6265  00112C  6E31               	movwf	_eusart1TxTail,c
  6266  00112E                     i2l2465:
  6267                           
  6268                           ;eusart1.c: 185: }
  6269                           ;eusart1.c: 186: eusart1TxBufferRemaining++;
  6270  00112E  2A3A               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  6271                           
  6272                           ;eusart1.c: 187: }
  6273  001130  0012               	return	
  6274  001132                     i2l122:
  6275                           
  6276                           ;eusart1.c: 188: else
  6277                           ;eusart1.c: 189: {
  6278                           ;eusart1.c: 190: PIE1bits.TX1IE = 0;
  6279  001132  989D               	bcf	3997,4,c	;volatile
  6280  001134  0012               	return	
  6281  001136                     __end_of_EUSART1_Transmit_ISR:
  6282                           	opt stack 0
  6283                           pclatu	equ	0xFFB
  6284                           pclath	equ	0xFFA
  6285                           tblptru	equ	0xFF8
  6286                           tblptrh	equ	0xFF7
  6287                           tblptrl	equ	0xFF6
  6288                           tablat	equ	0xFF5
  6289                           prodh	equ	0xFF4
  6290                           prodl	equ	0xFF3
  6291                           intcon	equ	0xFF2
  6292                           intcon2	equ	0xFF1
  6293                           postinc0	equ	0xFEE
  6294                           fsr0h	equ	0xFEA
  6295                           fsr0l	equ	0xFE9
  6296                           wreg	equ	0xFE8
  6297                           indf1	equ	0xFE7
  6298                           postdec1	equ	0xFE5
  6299                           fsr1h	equ	0xFE2
  6300                           fsr1l	equ	0xFE1
  6301                           indf2	equ	0xFDF
  6302                           postinc2	equ	0xFDE
  6303                           postdec2	equ	0xFDD
  6304                           fsr2h	equ	0xFDA
  6305                           fsr2l	equ	0xFD9
  6306                           status	equ	0xFD8
  6307                           
  6308 ;; *************** function _EUSART1_Receive_ISR *****************
  6309 ;; Defined at:
  6310 ;;		line 194 in file "mcc_generated_files/eusart1.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;		None
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  state           2   20[COMRAM] int 
  6315 ;; Return value:  Size  Location     Type
  6316 ;;                  1    wreg      void 
  6317 ;; Registers used:
  6318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;Total ram usage:        3 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; Hardware stack levels required when called:    2
  6331 ;; This function calls:
  6332 ;;		_EUSART1_Read
  6333 ;;		_strcmp
  6334 ;;		_strstr
  6335 ;; This function is called by:
  6336 ;;		_INTERRUPT_InterruptManager
  6337 ;; This function uses a non-reentrant model
  6338 ;;
  6339                           
  6340                           	psect	text44
  6341  000820                     __ptext44:
  6342                           	opt stack 0
  6343  000820                     _EUSART1_Receive_ISR:
  6344                           	opt stack 23
  6345                           
  6346                           ;eusart1.c: 196: if(1 == RCSTA1bits.OERR)
  6347                           
  6348                           ;incstack = 0
  6349  000820  A2AB               	btfss	4011,1,c	;volatile
  6350  000822  D002               	goto	i2l2471
  6351                           
  6352                           ;eusart1.c: 197: {
  6353                           ;eusart1.c: 200: RCSTA1bits.CREN = 0;
  6354  000824  98AB               	bcf	4011,4,c	;volatile
  6355                           
  6356                           ;eusart1.c: 201: RCSTA1bits.CREN = 1;
  6357  000826  88AB               	bsf	4011,4,c	;volatile
  6358  000828                     i2l2471:
  6359                           
  6360                           ;eusart1.c: 202: }
  6361                           ;eusart1.c: 207: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6362  000828  502E               	movf	_eusart1RxHead,w,c
  6363  00082A  0D01               	mullw	1
  6364  00082C  0E00               	movlw	low _eusart1RxBuffer
  6365  00082E  24F3               	addwf	prodl,w,c
  6366  000830  6ED9               	movwf	fsr2l,c
  6367  000832  0E02               	movlw	high _eusart1RxBuffer
  6368  000834  20F4               	addwfc	prodh,w,c
  6369  000836  6EDA               	movwf	fsr2h,c
  6370  000838  CFAE FFDF          	movff	4014,indf2	;volatile
  6371  00083C  2A2E               	incf	_eusart1RxHead,f,c
  6372                           
  6373                           ;eusart1.c: 208: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6374  00083E  0E7F               	movlw	127
  6375  000840  642E               	cpfsgt	_eusart1RxHead,c
  6376  000842  D002               	goto	i2l2479
  6377                           
  6378                           ;eusart1.c: 209: {
  6379                           ;eusart1.c: 210: eusart1RxHead = 0;
  6380  000844  0E00               	movlw	0
  6381  000846  6E2E               	movwf	_eusart1RxHead,c
  6382  000848                     i2l2479:
  6383                           
  6384                           ;eusart1.c: 211: }
  6385                           ;eusart1.c: 212: eusart1RxCount++;
  6386  000848  2A2D               	incf	_eusart1RxCount,f,c	;volatile
  6387                           
  6388                           ;eusart1.c: 214: int state = 0;
  6389  00084A  0E00               	movlw	0
  6390  00084C  6E16               	movwf	EUSART1_Receive_ISR@state+1,c
  6391  00084E  0E00               	movlw	0
  6392  000850  6E15               	movwf	EUSART1_Receive_ISR@state,c
  6393                           
  6394                           ;eusart1.c: 216: if(ready)return;
  6395  000852  5033               	movf	_ready,w,c	;volatile
  6396  000854  A4D8               	btfss	status,2,c
  6397  000856  0012               	return	
  6398  000858  D01C               	goto	i2l2495
  6399  00085A                     i2l2487:
  6400                           
  6401                           ;eusart1.c: 219: line[index]=EUSART1_Read();
  6402  00085A  EC3C  F008         	call	_EUSART1_Read	;wreg free
  6403  00085E  6E14               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  6404  000860  0E60               	movlw	low _line
  6405  000862  242B               	addwf	_index,w,c
  6406  000864  6ED9               	movwf	fsr2l,c
  6407  000866  0E00               	movlw	high _line
  6408  000868  202C               	addwfc	_index+1,w,c
  6409  00086A  6EDA               	movwf	fsr2h,c
  6410  00086C  C014  FFDF         	movff	??_EUSART1_Receive_ISR,indf2
  6411                           
  6412                           ;eusart1.c: 220: if (line[index] == '\n'){
  6413  000870  0E60               	movlw	low _line
  6414  000872  242B               	addwf	_index,w,c
  6415  000874  6ED9               	movwf	fsr2l,c
  6416  000876  0E00               	movlw	high _line
  6417  000878  202C               	addwfc	_index+1,w,c
  6418  00087A  6EDA               	movwf	fsr2h,c
  6419  00087C  0E0A               	movlw	10
  6420  00087E  18DE               	xorwf	postinc2,w,c
  6421  000880  A4D8               	btfss	status,2,c
  6422  000882  D005               	goto	i2l2493
  6423                           
  6424                           ;eusart1.c: 221: state=1;
  6425  000884  0E00               	movlw	0
  6426  000886  6E16               	movwf	EUSART1_Receive_ISR@state+1,c
  6427  000888  0E01               	movlw	1
  6428  00088A  6E15               	movwf	EUSART1_Receive_ISR@state,c
  6429                           
  6430                           ;eusart1.c: 222: break;
  6431  00088C  D005               	goto	i2l2497
  6432  00088E                     i2l2493:
  6433                           
  6434                           ;eusart1.c: 223: }
  6435                           ;eusart1.c: 224: index++;
  6436  00088E  4A2B               	infsnz	_index,f,c
  6437  000890  2A2C               	incf	_index+1,f,c
  6438  000892                     i2l2495:
  6439  000892  502D               	movf	_eusart1RxCount,w,c	;volatile
  6440  000894  A4D8               	btfss	status,2,c
  6441  000896  D7E1               	goto	i2l2487
  6442  000898                     i2l2497:
  6443                           
  6444                           ;eusart1.c: 225: }
  6445                           ;eusart1.c: 227: if(state==1){
  6446  000898  0415               	decf	EUSART1_Receive_ISR@state,w,c
  6447  00089A  1016               	iorwf	EUSART1_Receive_ISR@state+1,w,c
  6448  00089C  A4D8               	btfss	status,2,c
  6449  00089E  0012               	return	
  6450                           
  6451                           ;eusart1.c: 228: line[--index] = '\0';
  6452  0008A0  062B               	decf	_index,f,c
  6453  0008A2  A0D8               	btfss	status,0,c
  6454  0008A4  062C               	decf	_index+1,f,c
  6455  0008A6  0E60               	movlw	low _line
  6456  0008A8  242B               	addwf	_index,w,c
  6457  0008AA  6ED9               	movwf	fsr2l,c
  6458  0008AC  0E00               	movlw	high _line
  6459  0008AE  202C               	addwfc	_index+1,w,c
  6460  0008B0  6EDA               	movwf	fsr2h,c
  6461  0008B2  0E00               	movlw	0
  6462  0008B4  6EDF               	movwf	indf2,c
  6463                           
  6464                           ;eusart1.c: 229: uartState=0;
  6465  0008B6  0E00               	movlw	0
  6466  0008B8  6E34               	movwf	_uartState,c	;volatile
  6467                           
  6468                           ;eusart1.c: 230: if(!strcmp("radio_err",line)){
  6469  0008BA  0EDC               	movlw	low STR_1
  6470  0008BC  6E01               	movwf	strcmp@s1,c
  6471  0008BE  0EFF               	movlw	high STR_1
  6472  0008C0  6E02               	movwf	strcmp@s1+1,c
  6473  0008C2  0E60               	movlw	low _line
  6474  0008C4  6E03               	movwf	strcmp@s2,c
  6475  0008C6  0E00               	movlw	high _line
  6476  0008C8  6E04               	movwf	strcmp@s2+1,c
  6477  0008CA  ECA6  F005         	call	_strcmp	;wreg free
  6478  0008CE  5001               	movf	?_strcmp,w,c
  6479  0008D0  1002               	iorwf	?_strcmp+1,w,c
  6480  0008D2  A4D8               	btfss	status,2,c
  6481  0008D4  D002               	goto	i2l2507
  6482                           
  6483                           ;eusart1.c: 231: uartState=5;
  6484  0008D6  0E05               	movlw	5
  6485  0008D8  D02B               	goto	L14
  6486  0008DA                     i2l2507:
  6487  0008DA  0E60               	movlw	low _line
  6488  0008DC  6E10               	movwf	strstr@s1,c
  6489  0008DE  0E00               	movlw	high _line
  6490  0008E0  6E11               	movwf	strstr@s1+1,c
  6491  0008E2  0EE6               	movlw	low STR_2
  6492  0008E4  6E12               	movwf	strstr@s2,c
  6493  0008E6  0EFF               	movlw	high STR_2
  6494  0008E8  6E13               	movwf	strstr@s2+1,c
  6495  0008EA  ECEE  F005         	call	_strstr	;wreg free
  6496  0008EE  5010               	movf	?_strstr,w,c
  6497  0008F0  1011               	iorwf	?_strstr+1,w,c
  6498  0008F2  B4D8               	btfsc	status,2,c
  6499  0008F4  D00E               	goto	i2l2517
  6500                           
  6501                           ;eusart1.c: 233: if(line[10]=='4'&&line[11]=='3'){
  6502  0008F6  0E34               	movlw	52
  6503  0008F8  0100               	movlb	0	; () banked
  6504  0008FA  196A               	xorwf	(_line+10)& (0+255),w,b	;volatile
  6505  0008FC  A4D8               	btfss	status,2,c
  6506  0008FE  D007               	goto	i2l2515
  6507                           
  6508                           ; BSR set to: 0
  6509  000900  0E33               	movlw	51
  6510  000902  0100               	movlb	0	; () banked
  6511  000904  196B               	xorwf	(_line+11)& (0+255),w,b	;volatile
  6512  000906  A4D8               	btfss	status,2,c
  6513  000908  D002               	goto	i2l2515
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;eusart1.c: 234: uartState=4;
  6517  00090A  0E04               	movlw	4
  6518  00090C  D011               	goto	L14
  6519  00090E                     i2l2515:
  6520                           
  6521                           ; BSR set to: 0
  6522                           ;eusart1.c: 236: uartState=3;
  6523  00090E  0E03               	movlw	3
  6524  000910  D00F               	goto	L14
  6525  000912                     i2l2517:
  6526  000912  0E60               	movlw	low _line
  6527  000914  6E01               	movwf	strcmp@s1,c
  6528  000916  0E00               	movlw	high _line
  6529  000918  6E02               	movwf	strcmp@s1+1,c
  6530  00091A  0ED0               	movlw	low STR_3
  6531  00091C  6E03               	movwf	strcmp@s2,c
  6532  00091E  0EFF               	movlw	high STR_3
  6533  000920  6E04               	movwf	strcmp@s2+1,c
  6534  000922  ECA6  F005         	call	_strcmp	;wreg free
  6535  000926  5001               	movf	?_strcmp,w,c
  6536  000928  1002               	iorwf	?_strcmp+1,w,c
  6537  00092A  A4D8               	btfss	status,2,c
  6538  00092C  D003               	goto	i2l2521
  6539  00092E  D010               	goto	i2l2523
  6540  000930                     L14:
  6541  000930  6E34               	movwf	_uartState,c	;volatile
  6542                           
  6543                           ;eusart1.c: 240: } else if (!strcmp(line, "ok") != (0)) {
  6544  000932  D010               	goto	i2l138
  6545  000934                     i2l2521:
  6546  000934  0E60               	movlw	low _line
  6547  000936  6E01               	movwf	strcmp@s1,c
  6548  000938  0E00               	movlw	high _line
  6549  00093A  6E02               	movwf	strcmp@s1+1,c
  6550  00093C  0ED9               	movlw	low (STR_3+9)
  6551  00093E  6E03               	movwf	strcmp@s2,c
  6552  000940  0EFF               	movlw	high (STR_3+9)
  6553  000942  6E04               	movwf	strcmp@s2+1,c
  6554  000944  ECA6  F005         	call	_strcmp	;wreg free
  6555  000948  5001               	movf	?_strcmp,w,c
  6556  00094A  1002               	iorwf	?_strcmp+1,w,c
  6557  00094C  A4D8               	btfss	status,2,c
  6558  00094E  D002               	goto	i2l138
  6559  000950                     i2l2523:
  6560                           
  6561                           ;eusart1.c: 241: uartState=1;
  6562  000950  0E01               	movlw	1
  6563  000952  D7EE               	goto	L14
  6564  000954                     i2l138:
  6565                           
  6566                           ;eusart1.c: 242: }
  6567                           ;eusart1.c: 243: index=0;
  6568  000954  0E00               	movlw	0
  6569  000956  6E2C               	movwf	_index+1,c
  6570  000958  0E00               	movlw	0
  6571  00095A  6E2B               	movwf	_index,c
  6572                           
  6573                           ;eusart1.c: 244: ready=1;
  6574  00095C  0E01               	movlw	1
  6575  00095E  6E33               	movwf	_ready,c	;volatile
  6576  000960  0012               	return	
  6577  000962                     __end_of_EUSART1_Receive_ISR:
  6578                           	opt stack 0
  6579                           pclatu	equ	0xFFB
  6580                           pclath	equ	0xFFA
  6581                           tblptru	equ	0xFF8
  6582                           tblptrh	equ	0xFF7
  6583                           tblptrl	equ	0xFF6
  6584                           tablat	equ	0xFF5
  6585                           prodh	equ	0xFF4
  6586                           prodl	equ	0xFF3
  6587                           intcon	equ	0xFF2
  6588                           intcon2	equ	0xFF1
  6589                           postinc0	equ	0xFEE
  6590                           fsr0h	equ	0xFEA
  6591                           fsr0l	equ	0xFE9
  6592                           wreg	equ	0xFE8
  6593                           indf1	equ	0xFE7
  6594                           postdec1	equ	0xFE5
  6595                           fsr1h	equ	0xFE2
  6596                           fsr1l	equ	0xFE1
  6597                           indf2	equ	0xFDF
  6598                           postinc2	equ	0xFDE
  6599                           postdec2	equ	0xFDD
  6600                           fsr2h	equ	0xFDA
  6601                           fsr2l	equ	0xFD9
  6602                           status	equ	0xFD8
  6603                           
  6604 ;; *************** function _strstr *****************
  6605 ;; Defined at:
  6606 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strstr.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  6609 ;;		 -> NULL(0), line(128), 
  6610 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  6611 ;;		 -> STR_2(9), 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;		None
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  2   15[COMRAM] PTR unsigned char 
  6616 ;; Registers used:
  6617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6626 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6627 ;;Total ram usage:        4 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; Hardware stack levels required when called:    1
  6630 ;; This function calls:
  6631 ;;		_strchr
  6632 ;;		_strlen
  6633 ;;		_strncmp
  6634 ;; This function is called by:
  6635 ;;		_EUSART1_Receive_ISR
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           	psect	text45
  6640  000BDC                     __ptext45:
  6641                           	opt stack 0
  6642  000BDC                     _strstr:
  6643                           	opt stack 23
  6644                           
  6645                           ;incstack = 0
  6646  000BDC  D032               	goto	i2l2273
  6647  000BDE                     i2l2265:
  6648  000BDE  C010  F007         	movff	strstr@s1,strncmp@s1
  6649  000BE2  C011  F008         	movff	strstr@s1+1,strncmp@s1+1
  6650  000BE6  C012  F009         	movff	strstr@s2,strncmp@s2
  6651  000BEA  C013  F00A         	movff	strstr@s2+1,strncmp@s2+1
  6652  000BEE  C012  F001         	movff	strstr@s2,strlen@s
  6653  000BF2  C013  F002         	movff	strstr@s2+1,strlen@s+1
  6654  000BF6  EC96  F007         	call	_strlen	;wreg free
  6655  000BFA  C001  F00B         	movff	?_strlen,strncmp@len
  6656  000BFE  C002  F00C         	movff	?_strlen+1,strncmp@len+1
  6657  000C02  EC31  F006         	call	_strncmp	;wreg free
  6658  000C06  5007               	movf	?_strncmp,w,c
  6659  000C08  1008               	iorwf	?_strncmp+1,w,c
  6660  000C0A  A4D8               	btfss	status,2,c
  6661  000C0C  D005               	goto	i2l2271
  6662  000C0E  C010  F010         	movff	strstr@s1,?_strstr
  6663  000C12  C011  F011         	movff	strstr@s1+1,?_strstr+1
  6664  000C16  0012               	return	
  6665  000C18                     i2l2271:
  6666  000C18  0E01               	movlw	1
  6667  000C1A  2410               	addwf	strstr@s1,w,c
  6668  000C1C  6E01               	movwf	strchr@ptr,c
  6669  000C1E  0E00               	movlw	0
  6670  000C20  2011               	addwfc	strstr@s1+1,w,c
  6671  000C22  6E02               	movwf	strchr@ptr+1,c
  6672  000C24  C012  FFF6         	movff	strstr@s2,tblptrl
  6673  000C28  C013  FFF7         	movff	strstr@s2+1,tblptrh
  6674  000C2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6675  000C2C  6AF8               	clrf	tblptru,c
  6676  000C2E                     	endif
  6677  000C2E                     	if	0	;tblptru may be non-zero
  6678  000C2E                     	endif
  6679  000C2E  0008               	tblrd		*
  6680  000C30  50F5               	movf	tablat,w,c
  6681  000C32  6E03               	movwf	strchr@chr,c
  6682  000C34  6A04               	clrf	strchr@chr+1,c
  6683  000C36  ECD3  F007         	call	_strchr	;wreg free
  6684  000C3A  C001  F010         	movff	?_strchr,strstr@s1
  6685  000C3E  C002  F011         	movff	?_strchr+1,strstr@s1+1
  6686  000C42                     i2l2273:
  6687  000C42  5010               	movf	strstr@s1,w,c
  6688  000C44  1011               	iorwf	strstr@s1+1,w,c
  6689  000C46  B4D8               	btfsc	status,2,c
  6690  000C48  D007               	goto	i2l2277
  6691  000C4A  C010  FFD9         	movff	strstr@s1,fsr2l
  6692  000C4E  C011  FFDA         	movff	strstr@s1+1,fsr2h
  6693  000C52  50DF               	movf	indf2,w,c
  6694  000C54  A4D8               	btfss	status,2,c
  6695  000C56  D7C3               	goto	i2l2265
  6696  000C58                     i2l2277:
  6697  000C58  0E00               	movlw	0
  6698  000C5A  6E10               	movwf	?_strstr,c
  6699  000C5C  0E00               	movlw	0
  6700  000C5E  6E11               	movwf	?_strstr+1,c
  6701  000C60  0012               	return	
  6702  000C62                     __end_of_strstr:
  6703                           	opt stack 0
  6704                           pclatu	equ	0xFFB
  6705                           pclath	equ	0xFFA
  6706                           tblptru	equ	0xFF8
  6707                           tblptrh	equ	0xFF7
  6708                           tblptrl	equ	0xFF6
  6709                           tablat	equ	0xFF5
  6710                           prodh	equ	0xFF4
  6711                           prodl	equ	0xFF3
  6712                           intcon	equ	0xFF2
  6713                           intcon2	equ	0xFF1
  6714                           postinc0	equ	0xFEE
  6715                           fsr0h	equ	0xFEA
  6716                           fsr0l	equ	0xFE9
  6717                           wreg	equ	0xFE8
  6718                           indf1	equ	0xFE7
  6719                           postdec1	equ	0xFE5
  6720                           fsr1h	equ	0xFE2
  6721                           fsr1l	equ	0xFE1
  6722                           indf2	equ	0xFDF
  6723                           postinc2	equ	0xFDE
  6724                           postdec2	equ	0xFDD
  6725                           fsr2h	equ	0xFDA
  6726                           fsr2l	equ	0xFD9
  6727                           status	equ	0xFD8
  6728                           
  6729 ;; *************** function _strncmp *****************
  6730 ;; Defined at:
  6731 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strncmp.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  s1              2    6[COMRAM] PTR const unsigned char 
  6734 ;;		 -> NULL(0), line(128), 
  6735 ;;  s2              2    8[COMRAM] PTR const unsigned char 
  6736 ;;		 -> STR_2(9), 
  6737 ;;  len             2   10[COMRAM] unsigned int 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;		None
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  2    6[COMRAM] int 
  6742 ;; Registers used:
  6743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6749 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;Total ram usage:        9 bytes
  6754 ;; Hardware stack levels used:    1
  6755 ;; This function calls:
  6756 ;;		Nothing
  6757 ;; This function is called by:
  6758 ;;		_strstr
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           	psect	text46
  6763  000C62                     __ptext46:
  6764                           	opt stack 0
  6765  000C62                     _strncmp:
  6766                           	opt stack 23
  6767                           
  6768                           ;incstack = 0
  6769  000C62  D035               	goto	i2l2175
  6770  000C64                     i2l2165:
  6771  000C64  C007  FFD9         	movff	strncmp@s1,fsr2l
  6772  000C68  C008  FFDA         	movff	strncmp@s1+1,fsr2h
  6773  000C6C  50DF               	movf	indf2,w,c
  6774  000C6E  B4D8               	btfsc	status,2,c
  6775  000C70  D010               	goto	i2l2169
  6776  000C72  C007  FFD9         	movff	strncmp@s1,fsr2l
  6777  000C76  C008  FFDA         	movff	strncmp@s1+1,fsr2h
  6778  000C7A  50DF               	movf	indf2,w,c
  6779  000C7C  6E0D               	movwf	??_strncmp& (0+255),c
  6780  000C7E  C009  FFF6         	movff	strncmp@s2,tblptrl
  6781  000C82  C00A  FFF7         	movff	strncmp@s2+1,tblptrh
  6782  000C86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6783  000C86  6AF8               	clrf	tblptru,c
  6784  000C88                     	endif
  6785  000C88                     	if	0	;tblptru may be non-zero
  6786  000C88                     	endif
  6787  000C88  0008               	tblrd		*
  6788  000C8A  50F5               	movf	tablat,w,c
  6789  000C8C  180D               	xorwf	??_strncmp,w,c
  6790  000C8E  B4D8               	btfsc	status,2,c
  6791  000C90  D01A               	goto	i2l2173
  6792  000C92                     i2l2169:
  6793  000C92  C009  FFF6         	movff	strncmp@s2,tblptrl
  6794  000C96  C00A  FFF7         	movff	strncmp@s2+1,tblptrh
  6795  000C9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6796  000C9A  6AF8               	clrf	tblptru,c
  6797  000C9C                     	endif
  6798  000C9C                     	if	0	;tblptru may be non-zero
  6799  000C9C                     	endif
  6800  000C9C  0008               	tblrd		*
  6801  000C9E  50F5               	movf	tablat,w,c
  6802  000CA0  6E0D               	movwf	??_strncmp& (0+255),c
  6803  000CA2  6A0E               	clrf	(??_strncmp+1)& (0+255),c
  6804  000CA4  1E0D               	comf	??_strncmp,f,c
  6805  000CA6  1E0E               	comf	??_strncmp+1,f,c
  6806  000CA8  4A0D               	infsnz	??_strncmp,f,c
  6807  000CAA  2A0E               	incf	??_strncmp+1,f,c
  6808  000CAC  C007  FFD9         	movff	strncmp@s1,fsr2l
  6809  000CB0  C008  FFDA         	movff	strncmp@s1+1,fsr2h
  6810  000CB4  50DF               	movf	indf2,w,c
  6811  000CB6  6E0F               	movwf	(??_strncmp+2)& (0+255),c
  6812  000CB8  500F               	movf	??_strncmp+2,w,c
  6813  000CBA  240D               	addwf	??_strncmp,w,c
  6814  000CBC  6E07               	movwf	?_strncmp,c
  6815  000CBE  0E00               	movlw	0
  6816  000CC0  200E               	addwfc	??_strncmp+1,w,c
  6817  000CC2  6E08               	movwf	?_strncmp+1,c
  6818  000CC4  0012               	return	
  6819  000CC6                     i2l2173:
  6820  000CC6  4A07               	infsnz	strncmp@s1,f,c
  6821  000CC8  2A08               	incf	strncmp@s1+1,f,c
  6822  000CCA  4A09               	infsnz	strncmp@s2,f,c
  6823  000CCC  2A0A               	incf	strncmp@s2+1,f,c
  6824  000CCE                     i2l2175:
  6825  000CCE  060B               	decf	strncmp@len,f,c
  6826  000CD0  A0D8               	btfss	status,0,c
  6827  000CD2  060C               	decf	strncmp@len+1,f,c
  6828  000CD4  280B               	incf	strncmp@len,w,c
  6829  000CD6  E1C6               	bnz	i2l2165
  6830  000CD8  280C               	incf	strncmp@len+1,w,c
  6831  000CDA  A4D8               	btfss	status,2,c
  6832  000CDC  D7C3               	goto	i2l2165
  6833  000CDE  0E00               	movlw	0
  6834  000CE0  6E08               	movwf	?_strncmp+1,c
  6835  000CE2  0E00               	movlw	0
  6836  000CE4  6E07               	movwf	?_strncmp,c
  6837  000CE6  0012               	return	
  6838  000CE8                     __end_of_strncmp:
  6839                           	opt stack 0
  6840                           pclatu	equ	0xFFB
  6841                           pclath	equ	0xFFA
  6842                           tblptru	equ	0xFF8
  6843                           tblptrh	equ	0xFF7
  6844                           tblptrl	equ	0xFF6
  6845                           tablat	equ	0xFF5
  6846                           prodh	equ	0xFF4
  6847                           prodl	equ	0xFF3
  6848                           intcon	equ	0xFF2
  6849                           intcon2	equ	0xFF1
  6850                           postinc0	equ	0xFEE
  6851                           fsr0h	equ	0xFEA
  6852                           fsr0l	equ	0xFE9
  6853                           wreg	equ	0xFE8
  6854                           indf1	equ	0xFE7
  6855                           postdec1	equ	0xFE5
  6856                           fsr1h	equ	0xFE2
  6857                           fsr1l	equ	0xFE1
  6858                           indf2	equ	0xFDF
  6859                           postinc2	equ	0xFDE
  6860                           postdec2	equ	0xFDD
  6861                           fsr2h	equ	0xFDA
  6862                           fsr2l	equ	0xFD9
  6863                           status	equ	0xFD8
  6864                           
  6865 ;; *************** function _strlen *****************
  6866 ;; Defined at:
  6867 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strlen.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6870 ;;		 -> STR_2(9), 
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;  cp              2    4[COMRAM] PTR const unsigned char 
  6873 ;;		 -> STR_2(9), 
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  2    0[COMRAM] unsigned int 
  6876 ;; Registers used:
  6877 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6886 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6887 ;;Total ram usage:        6 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; This function calls:
  6890 ;;		Nothing
  6891 ;; This function is called by:
  6892 ;;		_strstr
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           	psect	text47
  6897  000F2C                     __ptext47:
  6898                           	opt stack 0
  6899  000F2C                     _strlen:
  6900                           	opt stack 23
  6901                           
  6902                           ;incstack = 0
  6903  000F2C  C001  F005         	movff	strlen@s,strlen@cp
  6904  000F30  C002  F006         	movff	strlen@s+1,strlen@cp+1
  6905  000F34  D002               	goto	i2l2157
  6906  000F36                     i2l2155:
  6907  000F36  4A05               	infsnz	strlen@cp,f,c
  6908  000F38  2A06               	incf	strlen@cp+1,f,c
  6909  000F3A                     i2l2157:
  6910  000F3A  C005  FFF6         	movff	strlen@cp,tblptrl
  6911  000F3E  C006  FFF7         	movff	strlen@cp+1,tblptrh
  6912  000F42                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6913  000F42  6AF8               	clrf	tblptru,c
  6914  000F44                     	endif
  6915  000F44                     	if	0	;tblptru may be non-zero
  6916  000F44                     	endif
  6917  000F44  0008               	tblrd		*
  6918  000F46  50F5               	movf	tablat,w,c
  6919  000F48  0900               	iorlw	0
  6920  000F4A  A4D8               	btfss	status,2,c
  6921  000F4C  D7F4               	goto	i2l2155
  6922  000F4E  C001  F003         	movff	strlen@s,??_strlen
  6923  000F52  C002  F004         	movff	strlen@s+1,??_strlen+1
  6924  000F56  1E03               	comf	??_strlen,f,c
  6925  000F58  1E04               	comf	??_strlen+1,f,c
  6926  000F5A  4A03               	infsnz	??_strlen,f,c
  6927  000F5C  2A04               	incf	??_strlen+1,f,c
  6928  000F5E  5005               	movf	strlen@cp,w,c
  6929  000F60  2403               	addwf	??_strlen,w,c
  6930  000F62  6E01               	movwf	?_strlen,c
  6931  000F64  5006               	movf	strlen@cp+1,w,c
  6932  000F66  2004               	addwfc	??_strlen+1,w,c
  6933  000F68  6E02               	movwf	?_strlen+1,c
  6934  000F6A  0012               	return	
  6935  000F6C                     __end_of_strlen:
  6936                           	opt stack 0
  6937                           pclatu	equ	0xFFB
  6938                           pclath	equ	0xFFA
  6939                           tblptru	equ	0xFF8
  6940                           tblptrh	equ	0xFF7
  6941                           tblptrl	equ	0xFF6
  6942                           tablat	equ	0xFF5
  6943                           prodh	equ	0xFF4
  6944                           prodl	equ	0xFF3
  6945                           intcon	equ	0xFF2
  6946                           intcon2	equ	0xFF1
  6947                           postinc0	equ	0xFEE
  6948                           fsr0h	equ	0xFEA
  6949                           fsr0l	equ	0xFE9
  6950                           wreg	equ	0xFE8
  6951                           indf1	equ	0xFE7
  6952                           postdec1	equ	0xFE5
  6953                           fsr1h	equ	0xFE2
  6954                           fsr1l	equ	0xFE1
  6955                           indf2	equ	0xFDF
  6956                           postinc2	equ	0xFDE
  6957                           postdec2	equ	0xFDD
  6958                           fsr2h	equ	0xFDA
  6959                           fsr2l	equ	0xFD9
  6960                           status	equ	0xFD8
  6961                           
  6962 ;; *************** function _strchr *****************
  6963 ;; Defined at:
  6964 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strchr.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
  6967 ;;		 -> NULL(0), line(128), 
  6968 ;;  chr             2    2[COMRAM] int 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;		None
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  2    0[COMRAM] PTR unsigned char 
  6973 ;; Registers used:
  6974 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6980 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6982 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6983 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6984 ;;Total ram usage:        5 bytes
  6985 ;; Hardware stack levels used:    1
  6986 ;; This function calls:
  6987 ;;		Nothing
  6988 ;; This function is called by:
  6989 ;;		_strstr
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text48
  6994  000FA6                     __ptext48:
  6995                           	opt stack 0
  6996  000FA6                     _strchr:
  6997                           	opt stack 23
  6998  000FA6  C001  FFD9         	movff	strchr@ptr,fsr2l
  6999  000FAA  C002  FFDA         	movff	strchr@ptr+1,fsr2h
  7000  000FAE  5003               	movf	strchr@chr,w,c
  7001  000FB0  18DE               	xorwf	postinc2,w,c
  7002  000FB2  A4D8               	btfss	status,2,c
  7003  000FB4  D005               	goto	i2l2187
  7004  000FB6  C001  F001         	movff	strchr@ptr,?_strchr
  7005  000FBA  C002  F002         	movff	strchr@ptr+1,?_strchr+1
  7006  000FBE  0012               	return	
  7007  000FC0                     i2l2187:
  7008  000FC0  C001  FFD9         	movff	strchr@ptr,fsr2l
  7009  000FC4  C002  FFDA         	movff	strchr@ptr+1,fsr2h
  7010  000FC8  4A01               	infsnz	strchr@ptr,f,c
  7011  000FCA  2A02               	incf	strchr@ptr+1,f,c
  7012  000FCC  50DF               	movf	indf2,w,c
  7013  000FCE  A4D8               	btfss	status,2,c
  7014  000FD0  D7EA               	goto	i2l2181
  7015  000FD2  0E00               	movlw	0
  7016  000FD4  6E01               	movwf	?_strchr,c
  7017  000FD6  0E00               	movlw	0
  7018  000FD8  6E02               	movwf	?_strchr+1,c
  7019  000FDA  0012               	return	
  7020  000FDC                     __end_of_strchr:
  7021                           	opt stack 0
  7022                           pclatu	equ	0xFFB
  7023                           pclath	equ	0xFFA
  7024                           tblptru	equ	0xFF8
  7025                           tblptrh	equ	0xFF7
  7026                           tblptrl	equ	0xFF6
  7027                           tablat	equ	0xFF5
  7028                           prodh	equ	0xFF4
  7029                           prodl	equ	0xFF3
  7030                           intcon	equ	0xFF2
  7031                           intcon2	equ	0xFF1
  7032                           postinc0	equ	0xFEE
  7033                           fsr0h	equ	0xFEA
  7034                           fsr0l	equ	0xFE9
  7035                           wreg	equ	0xFE8
  7036                           indf1	equ	0xFE7
  7037                           postdec1	equ	0xFE5
  7038                           fsr1h	equ	0xFE2
  7039                           fsr1l	equ	0xFE1
  7040                           indf2	equ	0xFDF
  7041                           postinc2	equ	0xFDE
  7042                           postdec2	equ	0xFDD
  7043                           fsr2h	equ	0xFDA
  7044                           fsr2l	equ	0xFD9
  7045                           status	equ	0xFD8
  7046                           
  7047 ;; *************** function _strcmp *****************
  7048 ;; Defined at:
  7049 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcmp.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  7052 ;;		 -> STR_1(10), line(128), 
  7053 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  7054 ;;		 -> STR_4(3), STR_3(12), line(128), 
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;  r               1    5[COMRAM] char 
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  2    0[COMRAM] int 
  7059 ;; Registers used:
  7060 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7068 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7069 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7070 ;;Total ram usage:        6 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; This function calls:
  7073 ;;		Nothing
  7074 ;; This function is called by:
  7075 ;;		_EUSART1_Receive_ISR
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text49
  7080  000B4C                     __ptext49:
  7081                           	opt stack 0
  7082  000B4C                     _strcmp:
  7083                           	opt stack 24
  7084                           
  7085                           ;incstack = 0
  7086  000B4C  D004               	goto	i2l2255
  7087  000B4E                     i2l2253:
  7088  000B4E  4A01               	infsnz	strcmp@s1,f,c
  7089  000B50  2A02               	incf	strcmp@s1+1,f,c
  7090  000B52  4A03               	infsnz	strcmp@s2,f,c
  7091  000B54  2A04               	incf	strcmp@s2+1,f,c
  7092  000B56                     i2l2255:
  7093  000B56  C001  FFF6         	movff	strcmp@s1,tblptrl
  7094  000B5A  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  7095  000B5E  0E00               	movlw	low (__mediumconst shr (0+16))
  7096  000B60  6EF8               	movwf	tblptru,c
  7097  000B62  0E0F               	movlw	(high __ramtop+-1)
  7098  000B64  64F7               	cpfsgt	tblptrh,c
  7099  000B66  D003               	bra	i2u135_47
  7100  000B68  0008               	tblrd		*
  7101  000B6A  50F5               	movf	tablat,w,c
  7102  000B6C  D005               	bra	i2u135_40
  7103  000B6E                     i2u135_47:
  7104  000B6E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7105  000B72  CFF7 FFE2          	movff	tblptrh,fsr1h
  7106  000B76  50E7               	movf	indf1,w,c
  7107  000B78                     i2u135_40:
  7108  000B78  6E05               	movwf	??_strcmp& (0+255),c
  7109  000B7A  C003  FFF6         	movff	strcmp@s2,tblptrl
  7110  000B7E  C004  FFF7         	movff	strcmp@s2+1,tblptrh
  7111  000B82  0E00               	movlw	low (__mediumconst shr (0+16))
  7112  000B84  6EF8               	movwf	tblptru,c
  7113  000B86  0E0F               	movlw	(high __ramtop+-1)
  7114  000B88  64F7               	cpfsgt	tblptrh,c
  7115  000B8A  D003               	bra	i2u136_47
  7116  000B8C  0008               	tblrd		*
  7117  000B8E  50F5               	movf	tablat,w,c
  7118  000B90  D005               	bra	i2u136_40
  7119  000B92                     i2u136_47:
  7120  000B92  CFF6 FFE1          	movff	tblptrl,fsr1l
  7121  000B96  CFF7 FFE2          	movff	tblptrh,fsr1h
  7122  000B9A  50E7               	movf	indf1,w,c
  7123  000B9C                     i2u136_40:
  7124  000B9C  0800               	sublw	0
  7125  000B9E  2405               	addwf	??_strcmp,w,c
  7126  000BA0  6E06               	movwf	strcmp@r,c
  7127  000BA2  5006               	movf	strcmp@r,w,c
  7128  000BA4  A4D8               	btfss	status,2,c
  7129  000BA6  D014               	goto	i2l2259
  7130  000BA8  C001  FFF6         	movff	strcmp@s1,tblptrl
  7131  000BAC  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  7132  000BB0  0E00               	movlw	low (__mediumconst shr (0+16))
  7133  000BB2  6EF8               	movwf	tblptru,c
  7134  000BB4  0E0F               	movlw	(high __ramtop+-1)
  7135  000BB6  64F7               	cpfsgt	tblptrh,c
  7136  000BB8  D003               	bra	i2u138_47
  7137  000BBA  0008               	tblrd		*
  7138  000BBC  50F5               	movf	tablat,w,c
  7139  000BBE  D005               	bra	i2u138_40
  7140  000BC0                     i2u138_47:
  7141  000BC0  CFF6 FFE1          	movff	tblptrl,fsr1l
  7142  000BC4  CFF7 FFE2          	movff	tblptrh,fsr1h
  7143  000BC8  50E7               	movf	indf1,w,c
  7144  000BCA                     i2u138_40:
  7145  000BCA  0900               	iorlw	0
  7146  000BCC  A4D8               	btfss	status,2,c
  7147  000BCE  D7BF               	goto	i2l2253
  7148  000BD0                     i2l2259:
  7149  000BD0  5006               	movf	strcmp@r,w,c
  7150  000BD2  6E01               	movwf	?_strcmp,c
  7151  000BD4  6A02               	clrf	?_strcmp+1,c
  7152  000BD6  BE01               	btfsc	?_strcmp,7,c
  7153  000BD8  0602               	decf	?_strcmp+1,f,c
  7154  000BDA  0012               	return	
  7155  000BDC                     __end_of_strcmp:
  7156                           	opt stack 0
  7157                           pclatu	equ	0xFFB
  7158                           pclath	equ	0xFFA
  7159                           tblptru	equ	0xFF8
  7160                           tblptrh	equ	0xFF7
  7161                           tblptrl	equ	0xFF6
  7162                           tablat	equ	0xFF5
  7163                           prodh	equ	0xFF4
  7164                           prodl	equ	0xFF3
  7165                           intcon	equ	0xFF2
  7166                           intcon2	equ	0xFF1
  7167                           postinc0	equ	0xFEE
  7168                           fsr0h	equ	0xFEA
  7169                           fsr0l	equ	0xFE9
  7170                           wreg	equ	0xFE8
  7171                           indf1	equ	0xFE7
  7172                           postdec1	equ	0xFE5
  7173                           fsr1h	equ	0xFE2
  7174                           fsr1l	equ	0xFE1
  7175                           indf2	equ	0xFDF
  7176                           postinc2	equ	0xFDE
  7177                           postdec2	equ	0xFDD
  7178                           fsr2h	equ	0xFDA
  7179                           fsr2l	equ	0xFD9
  7180                           status	equ	0xFD8
  7181                           
  7182 ;; *************** function _EUSART1_Read *****************
  7183 ;; Defined at:
  7184 ;;		line 121 in file "mcc_generated_files/eusart1.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;		None
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;  readValue       1    0[COMRAM] unsigned char 
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  1    wreg      unsigned char 
  7191 ;; Registers used:
  7192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 0/0
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7202 ;;Total ram usage:        1 bytes
  7203 ;; Hardware stack levels used:    1
  7204 ;; This function calls:
  7205 ;;		Nothing
  7206 ;; This function is called by:
  7207 ;;		_EUSART1_Receive_ISR
  7208 ;;		_getch
  7209 ;; This function uses a non-reentrant model
  7210 ;;
  7211                           
  7212                           	psect	text50
  7213  001078                     __ptext50:
  7214                           	opt stack 0
  7215  001078                     _EUSART1_Read:
  7216                           	opt stack 24
  7217                           
  7218                           ;eusart1.c: 123: uint8_t readValue = 0;
  7219                           
  7220                           ;incstack = 0
  7221  001078  0E00               	movlw	0
  7222  00107A  6E01               	movwf	EUSART1_Read@readValue,c
  7223  00107C                     i2l2233:
  7224  00107C  502D               	movf	_eusart1RxCount,w,c	;volatile
  7225  00107E  B4D8               	btfsc	status,2,c
  7226  001080  D7FD               	goto	i2l2233
  7227                           
  7228                           ;eusart1.c: 127: }
  7229                           ;eusart1.c: 129: PIE1bits.RC1IE = 0;
  7230  001082  9A9D               	bcf	3997,5,c	;volatile
  7231                           
  7232                           ;eusart1.c: 131: readValue = eusart1RxBuffer[eusart1RxTail++];
  7233  001084  502F               	movf	_eusart1RxTail,w,c
  7234  001086  0D01               	mullw	1
  7235  001088  0E00               	movlw	low _eusart1RxBuffer
  7236  00108A  24F3               	addwf	prodl,w,c
  7237  00108C  6ED9               	movwf	fsr2l,c
  7238  00108E  0E02               	movlw	high _eusart1RxBuffer
  7239  001090  20F4               	addwfc	prodh,w,c
  7240  001092  6EDA               	movwf	fsr2h,c
  7241  001094  50DF               	movf	indf2,w,c
  7242  001096  6E01               	movwf	EUSART1_Read@readValue,c
  7243  001098  2A2F               	incf	_eusart1RxTail,f,c
  7244                           
  7245                           ;eusart1.c: 132: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  7246  00109A  0E7F               	movlw	127
  7247  00109C  642F               	cpfsgt	_eusart1RxTail,c
  7248  00109E  D002               	goto	i2l2243
  7249                           
  7250                           ;eusart1.c: 133: {
  7251                           ;eusart1.c: 134: eusart1RxTail = 0;
  7252  0010A0  0E00               	movlw	0
  7253  0010A2  6E2F               	movwf	_eusart1RxTail,c
  7254  0010A4                     i2l2243:
  7255                           
  7256                           ;eusart1.c: 135: }
  7257                           ;eusart1.c: 136: eusart1RxCount--;
  7258  0010A4  062D               	decf	_eusart1RxCount,f,c	;volatile
  7259                           
  7260                           ;eusart1.c: 137: PIE1bits.RC1IE = 1;
  7261  0010A6  8A9D               	bsf	3997,5,c	;volatile
  7262                           
  7263                           ;eusart1.c: 139: return readValue;
  7264  0010A8  5001               	movf	EUSART1_Read@readValue,w,c
  7265  0010AA  0012               	return	
  7266  0010AC                     __end_of_EUSART1_Read:
  7267                           	opt stack 0
  7268                           pclatu	equ	0xFFB
  7269                           pclath	equ	0xFFA
  7270                           tblptru	equ	0xFF8
  7271                           tblptrh	equ	0xFF7
  7272                           tblptrl	equ	0xFF6
  7273                           tablat	equ	0xFF5
  7274                           prodh	equ	0xFF4
  7275                           prodl	equ	0xFF3
  7276                           intcon	equ	0xFF2
  7277                           intcon2	equ	0xFF1
  7278                           postinc0	equ	0xFEE
  7279                           fsr0h	equ	0xFEA
  7280                           fsr0l	equ	0xFE9
  7281                           wreg	equ	0xFE8
  7282                           indf1	equ	0xFE7
  7283                           postdec1	equ	0xFE5
  7284                           fsr1h	equ	0xFE2
  7285                           fsr1l	equ	0xFE1
  7286                           indf2	equ	0xFDF
  7287                           postinc2	equ	0xFDE
  7288                           postdec2	equ	0xFDD
  7289                           fsr2h	equ	0xFDA
  7290                           fsr2l	equ	0xFD9
  7291                           status	equ	0xFD8
  7292                           pclatu	equ	0xFFB
  7293                           pclath	equ	0xFFA
  7294                           tblptru	equ	0xFF8
  7295                           tblptrh	equ	0xFF7
  7296                           tblptrl	equ	0xFF6
  7297                           tablat	equ	0xFF5
  7298                           prodh	equ	0xFF4
  7299                           prodl	equ	0xFF3
  7300                           intcon	equ	0xFF2
  7301                           intcon2	equ	0xFF1
  7302                           postinc0	equ	0xFEE
  7303                           fsr0h	equ	0xFEA
  7304                           fsr0l	equ	0xFE9
  7305                           wreg	equ	0xFE8
  7306                           indf1	equ	0xFE7
  7307                           postdec1	equ	0xFE5
  7308                           fsr1h	equ	0xFE2
  7309                           fsr1l	equ	0xFE1
  7310                           indf2	equ	0xFDF
  7311                           postinc2	equ	0xFDE
  7312                           postdec2	equ	0xFDD
  7313                           fsr2h	equ	0xFDA
  7314                           fsr2l	equ	0xFD9
  7315                           status	equ	0xFD8
  7316                           
  7317                           	psect	rparam
  7318  0000                     pclatu	equ	0xFFB
  7319                           pclath	equ	0xFFA
  7320                           tblptru	equ	0xFF8
  7321                           tblptrh	equ	0xFF7
  7322                           tblptrl	equ	0xFF6
  7323                           tablat	equ	0xFF5
  7324                           prodh	equ	0xFF4
  7325                           prodl	equ	0xFF3
  7326                           intcon	equ	0xFF2
  7327                           intcon2	equ	0xFF1
  7328                           postinc0	equ	0xFEE
  7329                           fsr0h	equ	0xFEA
  7330                           fsr0l	equ	0xFE9
  7331                           wreg	equ	0xFE8
  7332                           indf1	equ	0xFE7
  7333                           postdec1	equ	0xFE5
  7334                           fsr1h	equ	0xFE2
  7335                           fsr1l	equ	0xFE1
  7336                           indf2	equ	0xFDF
  7337                           postinc2	equ	0xFDE
  7338                           postdec2	equ	0xFDD
  7339                           fsr2h	equ	0xFDA
  7340                           fsr2l	equ	0xFD9
  7341                           status	equ	0xFD8
  7342                           
  7343                           	psect	temp
  7344  00003B                     btemp:
  7345                           	opt stack 0
  7346  00003B                     	ds	1
  7347  0000                     int$flags	set	btemp
  7348                           pclatu	equ	0xFFB
  7349                           pclath	equ	0xFFA
  7350                           tblptru	equ	0xFF8
  7351                           tblptrh	equ	0xFF7
  7352                           tblptrl	equ	0xFF6
  7353                           tablat	equ	0xFF5
  7354                           prodh	equ	0xFF4
  7355                           prodl	equ	0xFF3
  7356                           intcon	equ	0xFF2
  7357                           intcon2	equ	0xFF1
  7358                           postinc0	equ	0xFEE
  7359                           fsr0h	equ	0xFEA
  7360                           fsr0l	equ	0xFE9
  7361                           wreg	equ	0xFE8
  7362                           indf1	equ	0xFE7
  7363                           postdec1	equ	0xFE5
  7364                           fsr1h	equ	0xFE2
  7365                           fsr1l	equ	0xFE1
  7366                           indf2	equ	0xFDF
  7367                           postinc2	equ	0xFDE
  7368                           postdec2	equ	0xFDD
  7369                           fsr2h	equ	0xFDA
  7370                           fsr2l	equ	0xFD9
  7371                           status	equ	0xFD8


Data Sizes:
    Strings     329
    Constant    18
    Data        4
    BSS         435
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      58
    BANK0           160     31     159
    BANK1           256     13     181
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 40
		 -> uuid(BANK1[40]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 128
		 -> line(BANK0[128]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_4(CODE[3]), STR_3(CODE[12]), line(BANK0[128]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_1(CODE[10]), line(BANK0[128]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_22(CODE[19]), STR_21(CODE[19]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[12]), 
		 -> STR_14(CODE[16]), STR_13(CODE[18]), STR_12(CODE[15]), STR_11(CODE[15]), 
		 -> STR_10(CODE[15]), STR_9(CODE[14]), STR_8(CODE[12]), STR_7(CODE[8]), 
		 -> STR_6(CODE[7]), STR_5(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK1[40]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _main->_rand
    _main->_wait_5ms
    _strtol->_isalpha
    _isalpha->_isupper
    _rand->___lmul
    _process_data_opt->_printf
    _getUUID->_printf
    _getUUID->_strcpy
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    ___awmod->_rand

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Receive_ISR->_strstr
    _strstr->_strncmp
    _strncmp->_strlen

Critical Paths under _main in BANK0

    _main->_process_data_opt
    _main->_srand
    _strtol->___lmul
    _srand->_strtol
    _rand->___lmul
    _process_data_opt->_printf
    _getUUID->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_process_data_opt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   14892
                                             26 BANK0      5     5      0
                           _I2C_Init
                      _I2C_Read_Byte
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
                  _SYSTEM_Initialize
                            ___awmod
                            _getUUID
                             _printf
                   _process_data_opt
                               _rand
                          _read_line
                              _srand
                             _strtol
                           _wait_5ms
 ---------------------------------------------------------------------------------
 (1) _wait_5ms                                             6     4      2     238
                                             36 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _strtol                                              16    10      6    2165
                                              8 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _toupper                                              1     1      0      67
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isspace                                              3     3      0      90
                                             36 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             36 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _isalpha                                              3     3      0     158
                                             39 COMRAM     3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (3) _isupper                                              3     3      0      68
                                             36 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      86
                                             24 BANK0      2     0      2
                             _strtol (ARG)
 ---------------------------------------------------------------------------------
 (1) _rand                                                 2     0      2     558
                                             40 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     558
                                             36 COMRAM     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _process_data_opt                                    18    17      1    4028
                                             21 BANK0      5     4      1
                                              0 BANK1     13    13      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _getUUID                                              0     0      0    3542
                             _printf
                          _read_line
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     203
                                             36 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_line                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _printf                                              24    18      6    3339
                                             41 COMRAM     1     1      0
                                              7 BANK0     14     8      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      93
                                             37 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      62
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             40 COMRAM     1     1      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     549
                                             36 COMRAM     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     587
                                              8 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write_Byte                                       2     2      0      69
                                             36 COMRAM     2     2      0
                      _I2C_SCL_CLEAR
                        _I2C_SCL_SET
                      _I2C_SDA_CLEAR
                     _I2C_SDA_IN_SET
                    _I2C_SDA_OUT_SET
                        _I2C_SDA_SET
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                        _I2C_SCL_SET
                    _I2C_SDA_OUT_SET
                        _I2C_SDA_SET
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                      _I2C_SCL_CLEAR
                        _I2C_SCL_SET
                      _I2C_SDA_CLEAR
                    _I2C_SDA_OUT_SET
                        _I2C_SDA_SET
 ---------------------------------------------------------------------------------
 (1) _I2C_Read_Byte                                        3     3      0     116
                                             36 COMRAM     3     3      0
                      _I2C_SCL_CLEAR
                        _I2C_SCL_SET
                      _I2C_SDA_CLEAR
                     _I2C_SDA_IN_SET
                    _I2C_SDA_OUT_SET
                       _I2C_SDA_READ
                        _I2C_SDA_SET
 ---------------------------------------------------------------------------------
 (2) _I2C_SDA_READ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SDA_IN_SET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SDA_CLEAR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SCL_CLEAR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0       0
                                             36 COMRAM     1     1      0
                    _I2C_SCL_OUT_SET
                        _I2C_SCL_SET
                    _I2C_SDA_OUT_SET
                        _I2C_SDA_SET
 ---------------------------------------------------------------------------------
 (2) _I2C_SDA_SET                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SDA_OUT_SET                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SCL_SET                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SCL_OUT_SET                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0    1524
                                             22 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  3     3      0    1524
                                             19 COMRAM     3     3      0
                       _EUSART1_Read
                             _strcmp
                             _strstr
 ---------------------------------------------------------------------------------
 (7) _strstr                                               4     0      4    1001
                                             15 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (8) _strncmp                                              9     3      6     326
                                              6 COMRAM     9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (8) _strlen                                               6     4      2     154
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strchr                                               5     1      4     216
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) _strcmp                                               6     2      4     475
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Read                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     _I2C_SCL_OUT_SET
     _I2C_SCL_SET
     _I2C_SDA_OUT_SET
     _I2C_SDA_SET
   _I2C_Read_Byte
     _I2C_SCL_CLEAR
     _I2C_SCL_SET
     _I2C_SDA_CLEAR
     _I2C_SDA_IN_SET
     _I2C_SDA_OUT_SET
     _I2C_SDA_READ
     _I2C_SDA_SET
   _I2C_Start
     _I2C_SCL_CLEAR
     _I2C_SCL_SET
     _I2C_SDA_CLEAR
     _I2C_SDA_OUT_SET
     _I2C_SDA_SET
   _I2C_Stop
     _I2C_SCL_SET
     _I2C_SDA_OUT_SET
     _I2C_SDA_SET
   _I2C_Write_Byte
     _I2C_SCL_CLEAR
     _I2C_SCL_SET
     _I2C_SDA_CLEAR
     _I2C_SDA_IN_SET
     _I2C_SDA_OUT_SET
     _I2C_SDA_SET
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   ___awmod
     _rand (ARG)
       ___lmul
   _getUUID
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART1_Write
     _read_line
     _strcpy
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART1_Write
   _process_data_opt
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART1_Write
   _rand
     ___lmul
   _read_line
   _srand
     _strtol (ARG)
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _strtol
     ___lmul
     _isalpha
       _isupper
     _isdigit
     _isspace
     _toupper
   _wait_5ms

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _EUSART1_Read
     _strcmp
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      B5       7       70.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1F      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      3A       1       61.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     20E      12        0.0%
DATA                 0      0     20E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Mar 20 22:35:38 2016

               __size_of_I2C_SCL_SET 0004             _eusart1TxBufferRemaining 003A  
                 __size_of_I2C_Start 002E                    I2C_Write_Byte@byt 0025  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l110 0F7E                                  l402 03E8  
                                l307 022E                                  l284 0FF4  
                                l367 0CFA                                  l830 0E18  
                                l840 0E74                         __CFG_CPB$OFF 000000  
                                _PR2 000FBB                         __CFG_CPD$OFF 000000  
                                _inc 0032                                  _val 0035  
                       ___awmod@sign 00ED                      _TMR2_Initialize 1276  
           __size_of_I2C_SCL_OUT_SET 0004                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                               l1042 080E                                 l2201 1222  
                               l3101 0594                                 l3007 0E0C  
                               l3023 0E68                                 l3015 0E34  
                               l3103 05A6                                 l3111 0D68  
                               l3017 0E3E                                 l3105 05AE  
                               l3033 03A6                                 l3019 0E44  
                               l3051 0420                                 l3035 03AE  
                               l3107 05BA                                 l3115 0D86  
                               l3203 0692                                 l3029 0392  
                               l3141 01EA                                 l3133 0152  
                               l2413 11A2                                 l3221 06FA  
                               l3213 06C8                                 l3071 0484  
                               l3055 043C                                 l3039 03B4  
                               l3151 02AC                                 l3143 0210  
                               l3135 0178                                 l2415 11A6  
                               l3057 0442                                 l3153 02D0  
                               l3145 0240                                 l3137 019E  
                               l2425 1172                                 l3225 070C  
                               l3217 06DE                                 l3209 06B2  
                               l3313 09A4                                 l3091 04E4  
                               l2283 12A4                                 l3147 0264  
                               l3139 01C4                                 l2451 1204  
                               l3235 079E                                 l3261 0A2C  
                               l3093 04EA                                 l3069 047E  
                               l3085 04C0                                 l2373 10B6  
                               l3149 0288                                 l3157 0304  
                               l2429 1180                                 l3181 0624  
                               l3271 0A5C                                 l3095 053C  
                               l3087 04D2                                 l2375 10BE  
                               l3159 0362                                 l2439 1272  
                               l3239 07CE                                 l3183 062C  
                               l3167 05DA                                 l2617 0D0A  
                               l2633 0D36                                 l2609 0CF2  
                               l3273 0A62                                 l3281 0A94  
                               l3265 0A3C                                 l3185 0636  
                               l2539 0FE2                                 l2661 0AD2  
                               l2653 0AC0                                 l3285 0AA8  
                               l3277 0A86                                 l3269 0A50  
                               l3189 0646                                 l2671 0AEE  
                               l3199 067E                                 l2681 0B06  
                               l2657 0AC8                                 l2691 0B2C  
                               l2669 0AEC                                 l2971 0F6E  
                               l2983 0FA0                                 l2985 0FA2  
                               l2995 0DDE                                 l2997 0DE8  
                               l2999 0DEC                                 STR_1 FFDC  
                               STR_2 FFE6                                 STR_3 FFD0  
                               STR_4 FFD9                                 STR_5 FF5D  
                               STR_6 FFF7                                 STR_7 FFEF  
                               STR_8 FFC4                                 STR_9 FFAA  
                               _LATA 000F89                                 _LATB 000F8A  
                               u3007 0B36                                 _LATC 000F8B  
                               u3017 0B42                                 u3027 11E4  
                               u2520 0172                                 u1570 12B8  
                               u2530 0198                                 u2515 0134  
                               u2540 01BE                                 u2605 02E2  
                               u2525 0166                                 u2550 01E4  
                               u2535 018C                                 u2560 020A  
                               u2545 01B2                                 u2555 01D8  
                               u2565 01FE                                 u2575 0276  
                               u2585 029A                                 u2907 1234  
                               u2595 02BE                                 u2827 099A  
                               u2917 1240                                 u2837 0FE8  
                               u2927 10E8                                 u2847 0D04  
                               u2937 10F4                                 u2857 0D10  
                               u2947 1100                                 u2867 0D1C  
                               i2l20 004E                                 u2957 0AD8  
                               u2877 0D28                                 u2967 0AF0  
                               u2887 0D40                                 i2l24 0058  
                               u2977 0AFC                                 u2897 0D4C  
                               u2987 0B1A                                 u2997 0B26  
                               _TMR2 000FBC                         _I2C_SDA_READ 12B0  
                               _WPUB 000F61                        _EUSART1_Write 0F6C  
                               _main 0962                                 _line 0060  
                               _rand 0ED8                        ?_EUSART1_Read 0001  
                   __end_of_I2C_Init 11EE                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 indf1 000FE7  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 003B  
                               _uuid 0180                        __CFG_BORV$190 000000  
                   __end_of_I2C_Stop 1248                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0094                        __CFG_IESO$OFF 000000  
                       ___param_bank 000010       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 12A4                                ?_main 0001  
                              ?_rand 0029                                STR_10 FF7D  
                              STR_11 FF9B                                STR_12 FF8C  
                              STR_20 FF27                                STR_13 FF3A  
                              STR_21 FF14                                STR_14 FF6D  
                              STR_22 FEB5                                STR_15 FFB8  
                              STR_23 FF4C                                STR_16 FEDB  
                              STR_17 FEC8                                STR_18 FEEE  
                              STR_19 FF01                      __end_of___awmod 0AB2  
                              _T2CON 000FBA                                _LATC3 007C5B  
                              _LATC4 007C5C                       __CFG_DEBUG$OFF 000000  
                    __end_of___lwdiv 0E22                      __end_of___lwmod 0E7E  
                              i2l122 1132                        _I2C_SDA_CLEAR 12DC  
                              i2l138 0954                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                    __end_of_getUUID 1160                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                ___lmul@multiplicand 00E4                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 1108                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      _I2C_SCL_CLEAR 12E0                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                      __end_of_dpowers FEAD  
             __size_of_I2C_Read_Byte 009A                                _index 002B  
                    __end_of_isalpha 1188                                _ready 0033  
                    __end_of_isdigit 120C                                _randx 0036  
                 __CFG_MCLRE$EXTMCLR 000000                                _srand 1288  
                              _putch 12BC                      __end_of_isspace 11AE  
                  __end_of_I2C_Start 1108                       ?_EUSART1_Write 0001  
                    __end_of_isupper 122A                                tablat 000FF5  
                     ??_EUSART1_Read 0001                                status 000FD8  
                     __CFG_HFOFST$ON 000000                      _TMR2_StartTimer 12D4  
                    __end_of_strncmp 0CE8                      __end_of_toupper 1276  
                     __CFG_PBADEN$ON 000000                      __initialization 0E7E  
         __end_of_EUSART1_Initialize 1078                         __end_of_main 0A10  
                       __end_of_rand 0F2C                    ??_I2C_SDA_OUT_SET 0025  
            __end_of_TMR2_Initialize 1288          ?_INTERRUPT_InterruptManager 0001  
                             ??_main 00FA                       ?_I2C_SDA_CLEAR 0001  
                             ??_rand 002B                        __activetblptr 000003  
              ?_EUSART1_Transmit_ISR 0001                       ?_I2C_SCL_CLEAR 0001  
          __size_of_process_data_opt 02EC                               _CCPR1H 000FBF  
                             _CCPR1L 000FBE                               ?_srand 00F8  
                             _ANSELA 000F38                               ?_putch 0001  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                  ??_I2C_SCL_OUT_SET 0025                               i2l2233 107C  
                             i2l2243 10A4                               i2l2155 0F36  
                             i2l2253 0B4E                               i2l2181 0FA6  
                             i2l2157 0F3A                               i2l2173 0CC6  
                             i2l2165 0C64                               i2l2255 0B56  
                             i2l2175 0CCE                               i2l2271 0C18  
                             i2l2169 0C92                               i2l2265 0BDE  
                             i2l2273 0C42                               i2l2521 0934  
                             i2l2259 0BD0                               i2l2187 0FC0  
                             i2l2523 0950                               i2l2515 090E  
                             i2l2507 08DA                               i2l2277 0C58  
                             i2l2517 0912                       __CFG_WDTEN$OFF 000000  
                             i2l2471 0828                               i2l2465 112E  
                             i2l2493 088E                               i2l2487 085A  
                             i2l2495 0892                               i2l2479 0848  
                             i2l2497 0898                               _RCREG1 000FAE  
                             _RCSTA1 000FAB                  process_data_opt@lsb 00F5  
                             _OSCCON 000FD3                  process_data_opt@msb 01A8  
                process_data_opt@raw 01AB                               _SPBRG1 000FAF  
                             _TRISC3 007CA3                               _TRISC4 007CA4  
                             _TXREG1 000FAD                       _I2C_SDA_IN_SET 12D8  
                             _TXSTA1 000FAC                       __CFG_XINST$OFF 000000  
                       _CCPTMRS0bits 000F49                        _I2C_Read_Byte 0AB2  
                             ___lmul 0D58                       __CFG_STVREN$ON 000000  
                          ??___awmod 002B                            ??___lwdiv 0029  
                          ??___lwmod 0029                               clear_0 0E84  
                             clear_1 0E90                               clear_2 0E9C  
                             clear_3 0EA8                      ___awmod@divisor 00EA  
                          ??_getUUID 002B                      ___awmod@counter 00EC  
                             _printf 0384                               _strchr 0FA6  
                             _strcmp 0B4C                               _strcpy 10AC  
                             _strlen 0F2C                               _strtol 05DA  
                             _strstr 0BDC                     __end_of_wait_5ms 1010  
                       __pdataCOMRAM 0036                            ??_isalpha 0028  
                          ??_isdigit 0025                            ?_I2C_Init 0001  
                          ?_I2C_Stop 0001                         __mediumconst FEA2  
                          ??_isspace 0025                               tblptrh 000FF7  
                          ??_isupper 0025                               tblptrl 000FF6  
                             tblptru 000FF8                               srand@x 00F8  
                    ??_EUSART1_Write 0025              __end_of_TMR2_StartTimer 12D8  
                    _eusart1RxBuffer 0200                            ??_strncmp 000D  
                          ??_toupper 0025        __size_of_INTERRUPT_Initialize 000A  
                    _eusart1TxBuffer 0100               __end_of_I2C_SDA_IN_SET 12DC  
                  _SYSTEM_Initialize 1248                           __accesstop 0060  
            __end_of__initialization 0ECE                      I2C_Write_Byte@i 0026  
                 ?_SYSTEM_Initialize 0001                        ___rparam_used 000001  
                     ?_I2C_Read_Byte 0001                    ?_EPWM1_Initialize 0001  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0025  
                 ??_EPWM1_Initialize 0025         process_data_opt@Illumination 01AD  
                      __end_of_srand 1296                      ??_I2C_SDA_CLEAR 0025  
                      __end_of_putch 12C6                     ?_TMR2_Initialize 0001  
               __end_of_EUSART1_Read 10AC                      ??_I2C_SCL_CLEAR 0025  
             ??_EUSART1_Transmit_ISR 0001                           ??_I2C_Init 0025  
                         ??_I2C_Stop 0025          __end_of_EUSART1_Receive_ISR 0962  
          __end_of_SYSTEM_Initialize 1262                              ??_srand 002B  
                            ??_putch 0026                        _eusart1RxHead 002E  
                      _eusart1TxHead 0030                        _eusart1RxTail 002F  
                         __pbssBANK0 0060                           __pbssBANK1 0100  
                         __pbssBANK2 0200                        _eusart1TxTail 0031  
                    ?_I2C_SDA_IN_SET 0001                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 003A                        ??_I2C_SDA_SET 0025  
                      ??_I2C_SCL_SET 0025                   __size_of_read_line 000C  
                 __CFG_CCP2MX$PORTC1 000000                              ?___lmul 00E0  
                 __CFG_CCP3MX$PORTB5 000000                              _CCP1CON 000FBD  
                            _ECCP1AS 000FB6              __size_of_I2C_Write_Byte 0070  
                     ___lmul@product 0025                              ?_printf 00E7  
                            ?_strchr 0001                              ?_strcmp 0001  
                            ?_strcpy 0025                              ?_strlen 0001  
                            ?_strtol 00E8                       I2C_Read_Byte@i 0027  
                            ?_strstr 0010                              _OSCCON2 000FD2  
                            _OSCTUNE 000F9B                              _PWM1CON 000FB7  
                   _process_data_opt 0098                              _SPBRGH1 000FB0  
                   ?_TMR2_StartTimer 0001                      _I2C_SDA_OUT_SET 12E8  
                          _I2C_Start 10DA                      ??_I2C_Read_Byte 0025  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                            ?_wait_5ms 0025  
                __end_of_I2C_SDA_SET 12E8                      __size_of___lmul 006C  
                            ___awmod 0A10                  __end_of_I2C_SCL_SET 12F0  
                            ___lwdiv 0DC4                              ___lwmod 0E22  
                            __pcinit 0E7E                              _getUUID 1136  
                            __ramtop 1000                              __ptext0 0962  
                            __ptext1 0FDC                              __ptext2 05DA  
                            __ptext3 1262                              __ptext4 1188  
                            __ptext5 11EE                              __ptext6 1160  
                            __ptext7 120C                              __ptext8 1288  
                            __ptext9 0ED8                     I2C_Read_Byte@ack 0025  
                    __size_of_printf 0256                     I2C_Read_Byte@val 0026  
                    __size_of_strchr 0036                      __size_of_strcmp 0090  
                    __size_of_strcpy 002E                      __size_of_strlen 0040  
                  __end_of_hexpowers FEB5                      _I2C_SCL_OUT_SET 12F0  
                    __size_of_strtol 0246                      __size_of_strstr 0086  
                            _dpowers FEA3                _OSCILLATOR_Initialize 1296  
                          _T2CONbits 000FBA                              _isalpha 1160  
                            _isdigit 11EE                     ___awmod@dividend 00E8  
                  __end_of_read_line 12B0                   _EUSART1_Initialize 1044  
           ??_PIN_MANAGER_Initialize 0025                              _isspace 1188  
                            _isupper 120C           __size_of_SYSTEM_Initialize 001A  
                            main@lsb 00FE                              main@msb 00FD  
                            _strncmp 0C62                              _toupper 1262  
               end_of_initialization 0ECE                  ?_EUSART1_Initialize 0001  
                         ?_I2C_Start 0001                           ??_wait_5ms 0027  
             process_data_opt@result 01B1                              printf@c 00F4  
                            printf@f 00E7                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE                __size_of_EUSART1_Read 0034  
               ??_EUSART1_Initialize 0025                              strcmp@r 0006  
                            strlen@s 0001                              strtol@a 00F3  
                            strtol@c 00F7                              strtol@s 00E8  
                          _PORTCbits 000F82                         strtol@endptr 00EA  
            __end_of_I2C_SDA_OUT_SET 12EC                    __size_of_I2C_Init 0020  
                  __size_of_I2C_Stop 001E                  EUSART1_Write@txData 0025  
                       _EUSART1_Read 1078                          _I2C_SDA_SET 12E4  
                        _I2C_SCL_SET 12EC         __end_of_INTERRUPT_Initialize 12D0  
            __end_of_I2C_SCL_OUT_SET 12F4                       _I2C_Write_Byte 0CE8  
                     __end_of___lmul 0DC4                        __pidataCOMRAM 12D0  
             ?_OSCILLATOR_Initialize 0001                       __end_of_printf 05DA  
                     __end_of_strchr 0FDC                       __end_of_strcmp 0BDC  
                     __end_of_strcpy 10DA                       __end_of_strlen 0F6C  
                     __end_of_strtol 0820                       __end_of_strstr 0C62  
                start_initialization 0E7E            __size_of_EPWM1_Initialize 0020  
                   ??_I2C_SDA_IN_SET 0025      __size_of_PIN_MANAGER_Initialize 0034  
                        putch@txData 0026                __end_of_EUSART1_Write 0FA6  
                      ?_I2C_SDA_READ 0001                          ??_I2C_Start 0025  
             __end_of_I2C_Write_Byte 0D58             __end_of_process_data_opt 0384  
                           ??___lmul 0025                             ??_printf 002A  
              __end_of_I2C_SDA_CLEAR 12E0                             ??_strchr 0005  
                           ??_strcmp 0005                             ??_strcpy 0029  
                           ??_strlen 0003                             ??_strtol 00EE  
                     _eusart1RxCount 002D                             ??_strstr 0014  
                        __pbssCOMRAM 002B                __end_of_I2C_SCL_CLEAR 12E4  
      __size_of_EUSART1_Transmit_ISR 002E                        __pcstackBANK0 00E0  
                      __pcstackBANK1 01A8                         _isalpha$1477 0029  
           __size_of_TMR2_Initialize 0012                     ?_I2C_SDA_OUT_SET 0001  
                       _isdigit$1480 0026                       ??_I2C_SDA_READ 0025  
       __size_of_EUSART1_Receive_ISR 0142                     ___lwdiv@dividend 0025  
             _PIN_MANAGER_Initialize 1010                      ?_I2C_Write_Byte 0001  
                          __pintcode 0008                        __pmediumconst FEA2  
                           ?___awmod 00E8                    __size_of_wait_5ms 0034  
                   ?_I2C_SCL_OUT_SET 0001                             ?___lwdiv 0025  
                           ?___lwmod 00E3                             ?_getUUID 0001  
       ??_INTERRUPT_InterruptManager 0017                     __CFG_PRICLKEN$ON 000000  
                           _BAUDCON1 000FB8                             ?_isalpha 0001  
                           ?_isdigit 0001                             _I2C_Init 11CE  
                           _I2C_Stop 122A                             ?_isspace 0001  
                           ?_isupper 0001             EUSART1_Receive_ISR@state 0015  
                          _hexpowers FEAD                     ___lwdiv@quotient 00E1  
                           ?_strncmp 0007                            _read_line 12A4  
                           ?_toupper 0001                       __size_of_srand 000E  
                     __size_of_putch 000A                 _INTERRUPT_Initialize 12C6  
                           _IPR1bits 000F9F                             _PIE1bits 000F9D  
           __size_of_TMR2_StartTimer 0004                             i2u135_40 0B78  
__size_of_INTERRUPT_InterruptManager 008C                             i2u135_47 0B6E  
                           i2u136_40 0B9C                             i2u136_47 0B92  
                           i2u138_40 0BCA                             i2u138_47 0BC0  
                           _PIR1bits 000F9E                __end_of_I2C_Read_Byte 0B4C  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                          _uartState 0034                             _PSTR1CON 000FB9  
                         printf@flag 00F1                            main@delay 00FB  
                         printf@prec 00F0                     _EPWM1_Initialize 11AE  
                       _isspace$1483 0026                    ___lmul@multiplier 00E0  
                        _INTCON2bits 000FF1                           ?_read_line 0001  
                          copy_data0 0EC2                ?_INTERRUPT_Initialize 0001  
                  ??_TMR2_Initialize 0025                EUSART1_Read@readValue 0001  
                       ?_I2C_SDA_SET 0001                         ?_I2C_SCL_SET 0001  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTB5 000000  
            ??_OSCILLATOR_Initialize 0025                 __end_of_I2C_SDA_READ 12BC  
                   __size_of___awmod 00A2          __size_of_EUSART1_Initialize 0034  
                   __size_of___lwdiv 005E                     __size_of___lwmod 005C  
                   __size_of_getUUID 002A                           _ANSELCbits 000F3A  
                       _isupper$1486 0026                     __size_of_isalpha 0028  
                   __size_of_isdigit 001E                      ___lwdiv@divisor 0027  
                   __size_of_isspace 0026                      ___lwdiv@counter 00E0  
                           __ptext10 0D58                             __ptext11 0098  
                           __ptext20 0A10                             __ptext12 1136  
                           __ptext21 1248                             __ptext13 10AC  
                           __ptext30 122A                             __ptext22 1276  
                           __ptext14 12A4                             __ptext31 10DA  
                           __ptext23 12D4                             __ptext15 0384  
                           __ptext40 12EC                             __ptext32 0AB2  
                           __ptext24 1010                             __ptext16 12BC  
                           __ptext41 12F0                             __ptext33 12B0  
                           __ptext25 1296                             __ptext17 0F6C  
                           __ptext50 1078                             __ptext34 12D8  
                           __ptext26 12C6                             __ptext18 0E22  
                           __ptext43 1108                             __ptext35 12DC  
                           __ptext27 1044                             __ptext19 0DC4  
                           __ptext44 0820                             __ptext36 12E0  
                           __ptext28 11AE                             __ptext45 0BDC  
                           __ptext37 11CE                             __ptext29 0CE8  
                           __ptext46 0C62                             __ptext38 12E4  
                           __ptext47 0F2C                             __ptext39 12E8  
                           __ptext48 0FA6                             __ptext49 0B4C  
                   __size_of_isupper 001E                     __size_of_strncmp 0086  
                   __size_of_toupper 0014                           strcpy@from 0027  
                      __size_of_main 00AE                        __size_of_rand 0054  
                          wait_5ms@i 002A                            wait_5ms@j 0025  
                         strncmp@len 000B             process_data_opt@exponent 01A9  
                           _wait_5ms 0FDC                    ?_process_data_opt 00F5  
                           int$flags 003B                           strtol@base 00EC  
                         strtol@sign 00F2                    ??_TMR2_StartTimer 0025  
 __end_of_INTERRUPT_InterruptManager 0094           _INTERRUPT_InterruptManager 0008  
                          printf@idx 00ED                            printf@val 00F2  
                 ??_process_data_opt 00F6                  _EUSART1_Receive_ISR 0820  
                         _INTCONbits 000FF2                             isalpha@c 002A  
                           isdigit@c 0027               ??_INTERRUPT_Initialize 0025  
                        ??_read_line 0025                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0001                            strchr@chr 0003  
                   ___lwmod@dividend 00E3                            strchr@ptr 0001  
                           isspace@c 0027              ?_PIN_MANAGER_Initialize 0001  
                   ??_I2C_Write_Byte 0025                           _RCSTA1bits 000FAB  
                           isupper@c 0027         __end_of_EUSART1_Transmit_ISR 1136  
                          strncmp@s1 0007                            strncmp@s2 0009  
                           printf@ap 00EE               __size_of_EUSART1_Write 003A  
                           strcmp@s1 0001                             strcmp@s2 0003  
                    ___lwmod@divisor 00E5                             strcpy@cp 0029  
                           strlen@cp 0005                             strcpy@to 0025  
                    ___lwmod@counter 0029                             toupper@c 0025  
                  __CFG_T3CMX$PORTC0 000000                             strstr@s1 0010  
                           strstr@s2 0012                ??_EUSART1_Receive_ISR 0014  
     __end_of_PIN_MANAGER_Initialize 1044                    __CFG_FOSC$INTIO67 000000  
           __size_of_I2C_SDA_OUT_SET 0004              __size_of_I2C_SDA_IN_SET 0004  
             __size_of_I2C_SDA_CLEAR 0004                __size_of_I2C_SDA_READ 000C  
           __end_of_EPWM1_Initialize 11CE                 __size_of_I2C_SDA_SET 0004  
             __size_of_I2C_SCL_CLEAR 0004  
