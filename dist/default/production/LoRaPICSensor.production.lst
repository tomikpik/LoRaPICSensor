

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Mar 20 22:58:34 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	smallconst
    50  001000                     __psmallconst:
    51                           	opt stack 0
    52  001000  00                 	db	0
    53  001001                     _dpowers:
    54                           	opt stack 0
    55  001001  0001               	dw	1
    56  001003  000A               	dw	10
    57  001005  0064               	dw	100
    58  001007  03E8               	dw	1000
    59  001009  2710               	dw	10000
    60  00100B                     __end_of_dpowers:
    61                           	opt stack 0
    62  00100B                     _hexpowers:
    63                           	opt stack 0
    64  00100B  0001               	dw	1
    65  00100D  0010               	dw	16
    66  00100F  0100               	dw	256
    67  001011  1000               	dw	4096
    68  001013                     __end_of_hexpowers:
    69                           	opt stack 0
    70  001013                     STR_8:
    71  001013  30                 	db	48	;'0'
    72  001014  31                 	db	49	;'1'
    73  001015  32                 	db	50	;'2'
    74  001016  33                 	db	51	;'3'
    75  001017  34                 	db	52	;'4'
    76  001018  35                 	db	53	;'5'
    77  001019  36                 	db	54	;'6'
    78  00101A  37                 	db	55	;'7'
    79  00101B  38                 	db	56	;'8'
    80  00101C  39                 	db	57	;'9'
    81  00101D  61                 	db	97	;'a'
    82  00101E  62                 	db	98	;'b'
    83  00101F  63                 	db	99	;'c'
    84  001020  64                 	db	100	;'d'
    85  001021  65                 	db	101	;'e'
    86  001022  66                 	db	102	;'f'
    87  001023  00                 	db	0
    88  001024  73                 	db	115	;'s'
    89  001025  79                 	db	121	;'y'
    90  001026  73                 	db	115	;'s'
    91  001027  20                 	db	32
    92  001028  67                 	db	103	;'g'
    93  001029  65                 	db	101	;'e'
    94  00102A  74                 	db	116	;'t'
    95  00102B  20                 	db	32
    96  00102C  68                 	db	104	;'h'
    97  00102D  77                 	db	119	;'w'
    98  00102E  65                 	db	101	;'e'
    99  00102F  75                 	db	117	;'u'
   100  001030  69                 	db	105	;'i'
   101  001031  0D                 	db	13
   102  001032  0A                 	db	10
   103  001033  00                 	db	0
   104  001034                     STR_3:
   105  001034  72                 	db	114	;'r'
   106  001035  61                 	db	97	;'a'
   107  001036  64                 	db	100	;'d'
   108  001037  69                 	db	105	;'i'
   109  001038  6F                 	db	111	;'o'
   110  001039  5F                 	db	95	;'_'
   111  00103A  74                 	db	116	;'t'
   112  00103B  78                 	db	120	;'x'
   113  00103C  5F                 	db	95	;'_'
   114  00103D  6F                 	db	111	;'o'
   115  00103E  6B                 	db	107	;'k'
   116  00103F  00                 	db	0
   117  001040                     STR_1:
   118  001040  72                 	db	114	;'r'
   119  001041  61                 	db	97	;'a'
   120  001042  64                 	db	100	;'d'
   121  001043  69                 	db	105	;'i'
   122  001044  6F                 	db	111	;'o'
   123  001045  5F                 	db	95	;'_'
   124  001046  65                 	db	101	;'e'
   125  001047  72                 	db	114	;'r'
   126  001048  72                 	db	114	;'r'
   127  001049  00                 	db	0
   128  00104A                     STR_2:
   129  00104A  72                 	db	114	;'r'
   130  00104B  61                 	db	97	;'a'
   131  00104C  64                 	db	100	;'d'
   132  00104D  69                 	db	105	;'i'
   133  00104E  6F                 	db	111	;'o'
   134  00104F  5F                 	db	95	;'_'
   135  001050  72                 	db	114	;'r'
   136  001051  78                 	db	120	;'x'
   137  001052  00                 	db	0
   138  001053                     STR_7:
   139  001053  25                 	db	37
   140  001054  78                 	db	120	;'x'
   141  001055  20                 	db	32
   142  001056  25                 	db	37
   143  001057  78                 	db	120	;'x'
   144  001058  0D                 	db	13
   145  001059  0A                 	db	10
   146  00105A  00                 	db	0
   147  00105B                     STR_6:
   148  00105B  3E                 	db	62	;'>'
   149  00105C  20                 	db	32
   150  00105D  25                 	db	37
   151  00105E  64                 	db	100	;'d'
   152  00105F  0D                 	db	13
   153  001060  0A                 	db	10
   154  001061  00                 	db	0
   155  0000                     
   156                           ; #config settings
   157  001062  00                 	db	0	; dummy byte at the end
   158  0000                     
   159                           	psect	nvCOMRAM
   160  00003A                     __pnvCOMRAM:
   161                           	opt stack 0
   162  00003A                     _eusart1TxBufferRemaining:
   163                           	opt stack 0
   164  00003A                     	ds	1
   165  0000                     _ANSELA	set	3896
   166  0000                     _ANSELB	set	3897
   167  0000                     _ANSELC	set	3898
   168  0000                     _ANSELCbits	set	3898
   169  0000                     _CCPTMRS0bits	set	3913
   170  0000                     _BAUDCON1	set	4024
   171  0000                     _CCP1CON	set	4029
   172  0000                     _CCPR1H	set	4031
   173  0000                     _CCPR1L	set	4030
   174  0000                     _ECCP1AS	set	4022
   175  0000                     _INTCON2bits	set	4081
   176  0000                     _INTCONbits	set	4082
   177  0000                     _IPR1bits	set	3999
   178  0000                     _LATA	set	3977
   179  0000                     _LATB	set	3978
   180  0000                     _LATC	set	3979
   181  0000                     _OSCCON	set	4051
   182  0000                     _OSCCON2	set	4050
   183  0000                     _OSCTUNE	set	3995
   184  0000                     _PIE1bits	set	3997
   185  0000                     _PIR1bits	set	3998
   186  0000                     _PORTCbits	set	3970
   187  0000                     _PR2	set	4027
   188  0000                     _PSTR1CON	set	4025
   189  0000                     _PWM1CON	set	4023
   190  0000                     _RCONbits	set	4048
   191  0000                     _RCREG1	set	4014
   192  0000                     _RCSTA1	set	4011
   193  0000                     _RCSTA1bits	set	4011
   194  0000                     _SPBRG1	set	4015
   195  0000                     _SPBRGH1	set	4016
   196  0000                     _T2CON	set	4026
   197  0000                     _T2CONbits	set	4026
   198  0000                     _TMR2	set	4028
   199  0000                     _TRISA	set	3986
   200  0000                     _TRISB	set	3987
   201  0000                     _TRISC	set	3988
   202  0000                     _TXREG1	set	4013
   203  0000                     _TXSTA1	set	4012
   204  0000                     _WPUB	set	3937
   205  0000                     _LATC3	set	31835
   206  0000                     _LATC4	set	31836
   207  0000                     _TRISC3	set	31907
   208  0000                     _TRISC4	set	31908
   209                           
   210                           	psect	cinit
   211  001CB6                     __pcinit:
   212                           	opt stack 0
   213  001CB6                     start_initialization:
   214                           	opt stack 0
   215  001CB6                     __initialization:
   216                           	opt stack 0
   217                           
   218                           ; Clear objects allocated to BANK2 (128 bytes)
   219  001CB6  EE02  F000         	lfsr	0,__pbssBANK2
   220  001CBA  0E80               	movlw	128
   221  001CBC                     clear_0:
   222  001CBC  6AEE               	clrf	postinc0,c
   223  001CBE  06E8               	decf	wreg,f,c
   224  001CC0  E1FD               	bnz	clear_0
   225                           
   226                           ; Clear objects allocated to BANK1 (168 bytes)
   227  001CC2  EE01  F000         	lfsr	0,__pbssBANK1
   228  001CC6  0EA8               	movlw	168
   229  001CC8                     clear_1:
   230  001CC8  6AEE               	clrf	postinc0,c
   231  001CCA  06E8               	decf	wreg,f,c
   232  001CCC  E1FD               	bnz	clear_1
   233                           
   234                           ; Clear objects allocated to BANK0 (128 bytes)
   235  001CCE  EE00  F060         	lfsr	0,__pbssBANK0
   236  001CD2  0E80               	movlw	128
   237  001CD4                     clear_2:
   238  001CD4  6AEE               	clrf	postinc0,c
   239  001CD6  06E8               	decf	wreg,f,c
   240  001CD8  E1FD               	bnz	clear_2
   241                           
   242                           ; Clear objects allocated to COMRAM (11 bytes)
   243  001CDA  EE00  F02F         	lfsr	0,__pbssCOMRAM
   244  001CDE  0E0B               	movlw	11
   245  001CE0                     clear_3:
   246  001CE0  6AEE               	clrf	postinc0,c
   247  001CE2  06E8               	decf	wreg,f,c
   248  001CE4  E1FD               	bnz	clear_3
   249  001CE6                     end_of_initialization:
   250                           	opt stack 0
   251  001CE6                     __end_of__initialization:
   252                           	opt stack 0
   253  001CE6  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   254  001CE8  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   255  001CEA  0100               	movlb	0
   256  001CEC  EF4C  F00C         	goto	_main	;jump to C main() function
   257                           postinc0	equ	0xFEE
   258                           wreg	equ	0xFE8
   259                           
   260                           	psect	bssCOMRAM
   261  00002F                     __pbssCOMRAM:
   262                           	opt stack 0
   263  00002F                     _index:
   264                           	opt stack 0
   265  00002F                     	ds	2
   266  000031                     _eusart1RxCount:
   267                           	opt stack 0
   268  000031                     	ds	1
   269  000032                     _eusart1RxHead:
   270                           	opt stack 0
   271  000032                     	ds	1
   272  000033                     _eusart1RxTail:
   273                           	opt stack 0
   274  000033                     	ds	1
   275  000034                     _eusart1TxHead:
   276                           	opt stack 0
   277  000034                     	ds	1
   278  000035                     _eusart1TxTail:
   279                           	opt stack 0
   280  000035                     	ds	1
   281  000036                     _inc:
   282                           	opt stack 0
   283  000036                     	ds	1
   284  000037                     _ready:
   285                           	opt stack 0
   286  000037                     	ds	1
   287  000038                     _uartState:
   288                           	opt stack 0
   289  000038                     	ds	1
   290  000039                     _val:
   291                           	opt stack 0
   292  000039                     	ds	1
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           
   296                           	psect	bssBANK0
   297  000060                     __pbssBANK0:
   298                           	opt stack 0
   299  000060                     _line:
   300                           	opt stack 0
   301  000060                     	ds	128
   302                           postinc0	equ	0xFEE
   303                           wreg	equ	0xFE8
   304                           
   305                           	psect	bssBANK1
   306  000100                     __pbssBANK1:
   307                           	opt stack 0
   308  000100                     _eusart1TxBuffer:
   309                           	opt stack 0
   310  000100                     	ds	128
   311  000180                     _uuid:
   312                           	opt stack 0
   313  000180                     	ds	40
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           
   317                           	psect	bssBANK2
   318  000200                     __pbssBANK2:
   319                           	opt stack 0
   320  000200                     _eusart1RxBuffer:
   321                           	opt stack 0
   322  000200                     	ds	128
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           
   326                           	psect	cstackBANK1
   327  0001A8                     __pcstackBANK1:
   328                           	opt stack 0
   329  0001A8                     process_data_opt@msb:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x0
   333  0001A8                     	ds	1
   334  0001A9                     process_data_opt@exponent:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x1
   338  0001A9                     	ds	2
   339  0001AB                     process_data_opt@raw:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x3
   343  0001AB                     	ds	2
   344  0001AD                     process_data_opt@Illumination:
   345                           	opt stack 0
   346                           
   347                           ; 4 bytes @ 0x5
   348  0001AD                     	ds	4
   349  0001B1                     process_data_opt@result:
   350                           	opt stack 0
   351                           
   352                           ; 4 bytes @ 0x9
   353  0001B1                     	ds	4
   354                           postinc0	equ	0xFEE
   355                           wreg	equ	0xFE8
   356                           
   357                           	psect	cstackBANK0
   358  0000E0                     __pcstackBANK0:
   359                           	opt stack 0
   360  0000E0                     ?___lwmod:
   361                           	opt stack 0
   362  0000E0                     ___lwmod@dividend:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x0
   366  0000E0                     	ds	2
   367  0000E2                     ___lwmod@divisor:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x2
   371  0000E2                     	ds	2
   372  0000E4                     ?_printf:
   373                           	opt stack 0
   374  0000E4                     printf@f:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x4
   378  0000E4                     	ds	6
   379  0000EA                     printf@idx:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0xA
   383  0000EA                     	ds	1
   384  0000EB                     printf@ap:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0xB
   388  0000EB                     	ds	2
   389  0000ED                     printf@prec:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0xD
   393  0000ED                     	ds	1
   394  0000EE                     printf@flag:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0xE
   398  0000EE                     	ds	1
   399  0000EF                     printf@val:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0xF
   403  0000EF                     	ds	2
   404  0000F1                     printf@c:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x11
   408  0000F1                     	ds	1
   409  0000F2                     ??_process_data_opt:
   410                           
   411                           ; 1 bytes @ 0x12
   412  0000F2                     	ds	4
   413  0000F6                     ??_main:
   414                           
   415                           ; 1 bytes @ 0x16
   416  0000F6                     	ds	1
   417  0000F7                     main@msb:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x17
   421  0000F7                     	ds	1
   422  0000F8                     main@lsb:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x18
   426  0000F8                     	ds	1
   427                           postinc0	equ	0xFEE
   428                           wreg	equ	0xFE8
   429                           
   430                           	psect	cstackCOMRAM
   431  000001                     __pcstackCOMRAM:
   432                           	opt stack 0
   433  000001                     ?_strcmp:
   434                           	opt stack 0
   435  000001                     ?_strlen:
   436                           	opt stack 0
   437  000001                     ?_strchr:
   438                           	opt stack 0
   439  000001                     EUSART1_Read@readValue:
   440                           	opt stack 0
   441  000001                     strcmp@s1:
   442                           	opt stack 0
   443  000001                     strchr@ptr:
   444                           	opt stack 0
   445  000001                     strlen@s:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x0
   449  000001                     	ds	2
   450  000003                     ??_strlen:
   451  000003                     strcmp@s2:
   452                           	opt stack 0
   453  000003                     strchr@chr:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x2
   457  000003                     	ds	2
   458  000005                     ??_strcmp:
   459  000005                     strlen@cp:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x4
   463  000005                     	ds	1
   464  000006                     strcmp@r:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x5
   468  000006                     	ds	1
   469  000007                     ?_strncmp:
   470                           	opt stack 0
   471  000007                     strncmp@s1:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x6
   475  000007                     	ds	2
   476  000009                     strncmp@s2:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x8
   480  000009                     	ds	2
   481  00000B                     strncmp@len:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0xA
   485  00000B                     	ds	2
   486  00000D                     ??_strncmp:
   487                           
   488                           ; 1 bytes @ 0xC
   489  00000D                     	ds	3
   490  000010                     ?_strstr:
   491                           	opt stack 0
   492  000010                     strstr@s1:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0xF
   496  000010                     	ds	2
   497  000012                     strstr@s2:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x11
   501  000012                     	ds	2
   502  000014                     ??_EUSART1_Receive_ISR:
   503  000014                     
   504                           ; 1 bytes @ 0x13
   505  000014                     	ds	1
   506  000015                     EUSART1_Receive_ISR@state:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x14
   510  000015                     	ds	2
   511  000017                     ??_INTERRUPT_InterruptManager:
   512                           
   513                           ; 1 bytes @ 0x16
   514  000017                     	ds	14
   515  000025                     ??_I2C_Stop:
   516  000025                     ??_I2C_Start:
   517  000025                     ??_I2C_Write_Byte:
   518  000025                     ??_I2C_Read_Byte:
   519  000025                     ?___lwdiv:
   520                           	opt stack 0
   521  000025                     EUSART1_Write@txData:
   522                           	opt stack 0
   523  000025                     wait_5ms@j:
   524                           	opt stack 0
   525  000025                     ___lwdiv@dividend:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x24
   529  000025                     	ds	1
   530  000026                     putch@txData:
   531                           	opt stack 0
   532  000026                     I2C_Read_Byte@RxData:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x25
   536  000026                     	ds	1
   537  000027                     ??_wait_5ms:
   538  000027                     ___lwdiv@divisor:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x26
   542  000027                     	ds	1
   543  000028                     I2C_Write_Byte@Byte:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x27
   547  000028                     	ds	1
   548  000029                     I2C_Write_Byte@i:
   549                           	opt stack 0
   550  000029                     ___lwdiv@counter:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x28
   554  000029                     	ds	1
   555  00002A                     wait_5ms@i:
   556                           	opt stack 0
   557  00002A                     ___lwdiv@quotient:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x29
   561  00002A                     	ds	2
   562  00002C                     ___lwmod@counter:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x2B
   566  00002C                     	ds	1
   567  00002D                     ??_printf:
   568                           
   569                           ; 1 bytes @ 0x2C
   570  00002D                     	ds	1
   571  00002E                     process_data_opt@lsb:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x2D
   575  00002E                     	ds	1
   576                           postinc0	equ	0xFEE
   577                           wreg	equ	0xFE8
   578                           
   579 ;;
   580 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   581 ;;
   582 ;; *************** function _main *****************
   583 ;; Defined at:
   584 ;;		line 111 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  lsb             1   24[BANK0 ] unsigned char 
   589 ;;  msb             1   23[BANK0 ] unsigned char 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;Total ram usage:        3 bytes
   604 ;; Hardware stack levels required when called:    8
   605 ;; This function calls:
   606 ;;		_I2C_Init
   607 ;;		_I2C_Read_Byte
   608 ;;		_I2C_Start
   609 ;;		_I2C_Stop
   610 ;;		_I2C_Write_Byte
   611 ;;		_SYSTEM_Initialize
   612 ;;		_printf
   613 ;;		_process_data_opt
   614 ;;		_wait_5ms
   615 ;; This function is called by:
   616 ;;		Startup code after reset
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text0
   621  001898                     __ptext0:
   622                           	opt stack 0
   623  001898                     _main:
   624                           	opt stack 23
   625                           
   626                           ;main.c: 112: SYSTEM_Initialize();
   627                           
   628                           ;incstack = 0
   629  001898  EC55  F00F         	call	_SYSTEM_Initialize	;wreg free
   630                           
   631                           ;main.c: 113: (INTCONbits.GIE = 1);
   632  00189C  8EF2               	bsf	intcon,7,c	;volatile
   633                           
   634                           ;main.c: 114: (INTCONbits.PEIE = 1);
   635  00189E  8CF2               	bsf	intcon,6,c	;volatile
   636                           
   637                           ;main.c: 115: ANSELCbits.ANSC4=0;
   638  0018A0  010F               	movlb	15	; () banked
   639  0018A2  993A               	bcf	58,4,b	;volatile
   640                           
   641                           ; BSR set to: 15
   642                           ;main.c: 117: I2C_Init();
   643  0018A4  EC7C  F00F         	call	_I2C_Init	;wreg free
   644                           
   645                           ;main.c: 118: wait_5ms(4);
   646  0018A8  0E00               	movlw	0
   647  0018AA  6E26               	movwf	wait_5ms@j+1,c
   648  0018AC  0E04               	movlw	4
   649  0018AE  6E25               	movwf	wait_5ms@j,c
   650  0018B0  ECB0  F00E         	call	_wait_5ms	;wreg free
   651                           
   652                           ;main.c: 119: I2C_Stop();
   653  0018B4  EC1A  F00E         	call	_I2C_Stop	;wreg free
   654                           
   655                           ;main.c: 120: wait_5ms(4);
   656  0018B8  0E00               	movlw	0
   657  0018BA  6E26               	movwf	wait_5ms@j+1,c
   658  0018BC  0E04               	movlw	4
   659  0018BE  6E25               	movwf	wait_5ms@j,c
   660  0018C0  ECB0  F00E         	call	_wait_5ms	;wreg free
   661                           
   662                           ;main.c: 123: I2C_Start();
   663  0018C4  EC2F  F00F         	call	_I2C_Start	;wreg free
   664                           
   665                           ;main.c: 124: I2C_Write_Byte(0x88);
   666  0018C8  0E88               	movlw	136
   667  0018CA  ECF7  F00C         	call	_I2C_Write_Byte
   668                           
   669                           ;main.c: 125: I2C_Write_Byte(0x01);
   670  0018CE  0E01               	movlw	1
   671  0018D0  ECF7  F00C         	call	_I2C_Write_Byte
   672                           
   673                           ;main.c: 126: I2C_Write_Byte(0xC4);
   674  0018D4  0EC4               	movlw	196
   675  0018D6  ECF7  F00C         	call	_I2C_Write_Byte
   676                           
   677                           ;main.c: 127: I2C_Write_Byte(0x10);
   678  0018DA  0E10               	movlw	16
   679  0018DC  ECF7  F00C         	call	_I2C_Write_Byte
   680                           
   681                           ;main.c: 128: I2C_Stop();
   682  0018E0  EC1A  F00E         	call	_I2C_Stop	;wreg free
   683                           
   684                           ;main.c: 130: _delay((unsigned long)((1)*(64000000/4000.0)));
   685  0018E4  0E15               	movlw	21
   686  0018E6  0100               	movlb	0	; () banked
   687  0018E8  6FF6               	movwf	??_main& (0+255),b
   688  0018EA  0EC6               	movlw	198
   689  0018EC                     u1947:
   690  0018EC  2EE8               	decfsz	wreg,f,c
   691  0018EE  D7FE               	goto	u1947
   692  0018F0  2FF6               	decfsz	??_main& (0+255),f,b
   693  0018F2  D7FC               	goto	u1947
   694  0018F4  D000               	nop2	
   695  0018F6                     l2671:
   696                           
   697                           ;main.c: 134: I2C_Start();
   698  0018F6  EC2F  F00F         	call	_I2C_Start	;wreg free
   699                           
   700                           ;main.c: 135: I2C_Write_Byte(0x88);
   701  0018FA  0E88               	movlw	136
   702  0018FC  ECF7  F00C         	call	_I2C_Write_Byte
   703                           
   704                           ;main.c: 136: I2C_Write_Byte(0x7E);
   705  001900  0E7E               	movlw	126
   706  001902  ECF7  F00C         	call	_I2C_Write_Byte
   707                           
   708                           ;main.c: 137: I2C_Start();
   709  001906  EC2F  F00F         	call	_I2C_Start	;wreg free
   710                           
   711                           ;main.c: 138: I2C_Write_Byte(0x89);
   712  00190A  0E89               	movlw	137
   713  00190C  ECF7  F00C         	call	_I2C_Write_Byte
   714                           
   715                           ;main.c: 139: uint8_t msb = I2C_Read_Byte();
   716  001910  ECD2  F00A         	call	_I2C_Read_Byte	;wreg free
   717  001914  0100               	movlb	0	; () banked
   718  001916  6FF7               	movwf	main@msb& (0+255),b
   719                           
   720                           ; BSR set to: 0
   721                           ;main.c: 140: uint8_t lsb = I2C_Read_Byte();
   722  001918  ECD2  F00A         	call	_I2C_Read_Byte	;wreg free
   723  00191C  0100               	movlb	0	; () banked
   724  00191E  6FF8               	movwf	main@lsb& (0+255),b
   725                           
   726                           ; BSR set to: 0
   727                           ;main.c: 141: I2C_Stop();
   728  001920  EC1A  F00E         	call	_I2C_Stop	;wreg free
   729                           
   730                           ;main.c: 142: printf("%x %x\r\n",msb,lsb);
   731  001924  0E53               	movlw	low STR_7
   732  001926  0100               	movlb	0	; () banked
   733  001928  6FE4               	movwf	printf@f& (0+255),b
   734  00192A  0E10               	movlw	high STR_7
   735  00192C  0100               	movlb	0	; () banked
   736  00192E  6FE5               	movwf	(printf@f+1)& (0+255),b
   737  001930  C0F7  F0E6         	movff	main@msb,?_printf+2
   738  001934  0100               	movlb	0	; () banked
   739  001936  6BE7               	clrf	(?_printf+3)& (0+255),b
   740  001938  C0F8  F0E8         	movff	main@lsb,?_printf+4
   741  00193C  0100               	movlb	0	; () banked
   742  00193E  6BE9               	clrf	(?_printf+5)& (0+255),b
   743  001940  ECA7  F009         	call	_printf	;wreg free
   744                           
   745                           ;main.c: 143: process_data_opt(msb,lsb);
   746  001944  C0F8  F02E         	movff	main@lsb,process_data_opt@lsb
   747  001948  0100               	movlb	0	; () banked
   748  00194A  51F7               	movf	main@msb& (0+255),w,b
   749  00194C  EC32  F008         	call	_process_data_opt
   750                           
   751                           ;main.c: 145: wait_5ms(200);
   752  001950  0E00               	movlw	0
   753  001952  6E26               	movwf	wait_5ms@j+1,c
   754  001954  0EC8               	movlw	200
   755  001956  6E25               	movwf	wait_5ms@j,c
   756  001958  ECB0  F00E         	call	_wait_5ms	;wreg free
   757  00195C  D7CC               	goto	l2671
   758  00195E                     __end_of_main:
   759                           	opt stack 0
   760                           intcon	equ	0xFF2
   761                           postinc0	equ	0xFEE
   762                           wreg	equ	0xFE8
   763                           
   764 ;; *************** function _wait_5ms *****************
   765 ;; Defined at:
   766 ;;		line 42 in file "main.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  j               2   36[COMRAM] int 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  i               1   41[COMRAM] unsigned char 
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;Total ram usage:        6 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    4
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text1
   795  001D60                     __ptext1:
   796                           	opt stack 0
   797  001D60                     _wait_5ms:
   798                           	opt stack 26
   799                           
   800                           ;main.c: 43: for(uint8_t i=0;i<j;i++) { _delay((unsigned long)((5)*(64000000/4000.0))); 
      +                          }
   801                           
   802                           ;incstack = 0
   803  001D60  0E00               	movlw	0
   804  001D62  6E2A               	movwf	wait_5ms@i,c
   805  001D64  D009               	goto	l278
   806  001D66                     l2139:
   807  001D66  0E68               	movlw	104
   808  001D68  6E27               	movwf	??_wait_5ms& (0+255),c
   809  001D6A  0EE4               	movlw	228
   810  001D6C                     u1957:
   811  001D6C  2EE8               	decfsz	wreg,f,c
   812  001D6E  D7FE               	goto	u1957
   813  001D70  2E27               	decfsz	??_wait_5ms& (0+255),f,c
   814  001D72  D7FC               	goto	u1957
   815  001D74  D000               	nop2	
   816  001D76  2A2A               	incf	wait_5ms@i,f,c
   817  001D78                     l278:
   818  001D78  502A               	movf	wait_5ms@i,w,c
   819  001D7A  6E27               	movwf	??_wait_5ms& (0+255),c
   820  001D7C  6A28               	clrf	(??_wait_5ms+1)& (0+255),c
   821  001D7E  5025               	movf	wait_5ms@j,w,c
   822  001D80  5C27               	subwf	??_wait_5ms,w,c
   823  001D82  5028               	movf	??_wait_5ms+1,w,c
   824  001D84  0A80               	xorlw	128
   825  001D86  6E29               	movwf	(??_wait_5ms+2)& (0+255),c
   826  001D88  5026               	movf	wait_5ms@j+1,w,c
   827  001D8A  0A80               	xorlw	128
   828  001D8C  5829               	subwfb	(??_wait_5ms+2)& (0+255),w,c
   829  001D8E  B0D8               	btfsc	status,0,c
   830  001D90  0012               	return	
   831  001D92  D7E9               	goto	l2139
   832  001D94                     __end_of_wait_5ms:
   833                           	opt stack 0
   834                           intcon	equ	0xFF2
   835                           postinc0	equ	0xFEE
   836                           wreg	equ	0xFE8
   837                           status	equ	0xFD8
   838                           
   839 ;; *************** function _process_data_opt *****************
   840 ;; Defined at:
   841 ;;		line 56 in file "main.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;  msb             1    wreg     unsigned char 
   844 ;;  lsb             1   45[COMRAM] unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  msb             1    0[BANK1 ] unsigned char 
   847 ;;  result          4    9[BANK1 ] unsigned long 
   848 ;;  Illumination    4    5[BANK1 ] unsigned long 
   849 ;;  raw             2    3[BANK1 ] int 
   850 ;;  exponent        2    1[BANK1 ] unsigned int 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   860 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Totals:         1       4      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;Total ram usage:       18 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    7
   867 ;; This function calls:
   868 ;;		_printf
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text2
   875  001064                     __ptext2:
   876                           	opt stack 0
   877  001064                     _process_data_opt:
   878                           	opt stack 23
   879                           
   880                           ;incstack = 0
   881                           ;process_data_opt@msb stored from wreg
   882  001064  0101               	movlb	1	; () banked
   883  001066  6FA8               	movwf	process_data_opt@msb& (0+255),b
   884                           
   885                           ;main.c: 57: int16_t raw;
   886                           ;main.c: 58: uint16_t exponent = 0;
   887  001068  0E00               	movlw	0
   888  00106A  0101               	movlb	1	; () banked
   889  00106C  6FAA               	movwf	(process_data_opt@exponent+1)& (0+255),b
   890  00106E  0E00               	movlw	0
   891  001070  6FA9               	movwf	process_data_opt@exponent& (0+255),b
   892                           
   893                           ;main.c: 59: uint32_t result = 0;
   894  001072  0E00               	movlw	0
   895  001074  0101               	movlb	1	; () banked
   896  001076  6FB1               	movwf	process_data_opt@result& (0+255),b
   897  001078  0E00               	movlw	0
   898  00107A  6FB2               	movwf	(process_data_opt@result+1)& (0+255),b
   899  00107C  0E00               	movlw	0
   900  00107E  6FB3               	movwf	(process_data_opt@result+2)& (0+255),b
   901  001080  0E00               	movlw	0
   902  001082  6FB4               	movwf	(process_data_opt@result+3)& (0+255),b
   903                           
   904                           ;main.c: 60: uint32_t Illumination = 0;
   905  001084  0E00               	movlw	0
   906  001086  0101               	movlb	1	; () banked
   907  001088  6FAD               	movwf	process_data_opt@Illumination& (0+255),b
   908  00108A  0E00               	movlw	0
   909  00108C  6FAE               	movwf	(process_data_opt@Illumination+1)& (0+255),b
   910  00108E  0E00               	movlw	0
   911  001090  6FAF               	movwf	(process_data_opt@Illumination+2)& (0+255),b
   912  001092  0E00               	movlw	0
   913  001094  6FB0               	movwf	(process_data_opt@Illumination+3)& (0+255),b
   914                           
   915                           ; BSR set to: 1
   916                           ;main.c: 63: raw = ((msb << 8) | lsb);
   917  001096  502E               	movf	process_data_opt@lsb,w,c
   918  001098  C1A8  F0F2         	movff	process_data_opt@msb,??_process_data_opt
   919  00109C  0100               	movlb	0	; () banked
   920  00109E  6BF3               	clrf	(??_process_data_opt+1)& (0+255),b
   921  0010A0  C0F2  F0F3         	movff	??_process_data_opt,??_process_data_opt+1
   922  0010A4  0100               	movlb	0	; () banked
   923  0010A6  6BF2               	clrf	??_process_data_opt& (0+255),b
   924  0010A8  0100               	movlb	0	; () banked
   925  0010AA  11F2               	iorwf	??_process_data_opt& (0+255),w,b
   926  0010AC  0101               	movlb	1	; () banked
   927  0010AE  6FAB               	movwf	process_data_opt@raw& (0+255),b
   928  0010B0  0100               	movlb	0	; () banked
   929  0010B2  51F3               	movf	(??_process_data_opt+1)& (0+255),w,b
   930  0010B4  0101               	movlb	1	; () banked
   931  0010B6  6FAC               	movwf	(process_data_opt@raw+1)& (0+255),b
   932                           
   933                           ; BSR set to: 1
   934                           ;main.c: 65: result = raw&0x0FFF;
   935  0010B8  0EFF               	movlw	255
   936  0010BA  0100               	movlb	0	; () banked
   937  0010BC  6FF2               	movwf	??_process_data_opt& (0+255),b
   938  0010BE  0E0F               	movlw	15
   939  0010C0  0100               	movlb	0	; () banked
   940  0010C2  6FF3               	movwf	(??_process_data_opt+1)& (0+255),b
   941  0010C4  C1AB  F0F4         	movff	process_data_opt@raw,??_process_data_opt+2
   942  0010C8  C1AC  F0F5         	movff	process_data_opt@raw+1,??_process_data_opt+3
   943  0010CC  0100               	movlb	0	; () banked
   944  0010CE  51F2               	movf	??_process_data_opt& (0+255),w,b
   945  0010D0  0100               	movlb	0	; () banked
   946  0010D2  17F4               	andwf	(??_process_data_opt+2)& (0+255),f,b
   947  0010D4  0100               	movlb	0	; () banked
   948  0010D6  51F3               	movf	(??_process_data_opt+1)& (0+255),w,b
   949  0010D8  0100               	movlb	0	; () banked
   950  0010DA  17F5               	andwf	(??_process_data_opt+3)& (0+255),f,b
   951  0010DC  C0F4  F1B1         	movff	??_process_data_opt+2,process_data_opt@result
   952  0010E0  C0F5  F1B2         	movff	??_process_data_opt+3,process_data_opt@result+1
   953  0010E4  0101               	movlb	1	; () banked
   954  0010E6  0E00               	movlw	0
   955  0010E8  BFB2               	btfsc	(process_data_opt@result+1)& (0+255),7,b
   956  0010EA  0EFF               	movlw	-1
   957  0010EC  6FB3               	movwf	(process_data_opt@result+2)& (0+255),b
   958  0010EE  6FB4               	movwf	(process_data_opt@result+3)& (0+255),b
   959                           
   960                           ; BSR set to: 1
   961                           ;main.c: 66: exponent = (raw>>12)&0x000F;
   962  0010F0  C1AB  F0F2         	movff	process_data_opt@raw,??_process_data_opt
   963  0010F4  C1AC  F0F3         	movff	process_data_opt@raw+1,??_process_data_opt+1
   964  0010F8  0E0C               	movlw	12
   965  0010FA  0100               	movlb	0	; () banked
   966  0010FC  6FF4               	movwf	(??_process_data_opt+2)& (0+255),b
   967  0010FE                     u1845:
   968  0010FE  0100               	movlb	0	; () banked
   969  001100  35F3               	rlcf	(??_process_data_opt+1)& (0+255),w,b
   970  001102  33F3               	rrcf	(??_process_data_opt+1)& (0+255),f,b
   971  001104  33F2               	rrcf	??_process_data_opt& (0+255),f,b
   972  001106  0100               	movlb	0	; () banked
   973  001108  2FF4               	decfsz	(??_process_data_opt+2)& (0+255),f,b
   974  00110A  D7F9               	goto	u1845
   975  00110C  0E0F               	movlw	15
   976  00110E  0100               	movlb	0	; () banked
   977  001110  15F2               	andwf	??_process_data_opt& (0+255),w,b
   978  001112  0101               	movlb	1	; () banked
   979  001114  6FA9               	movwf	process_data_opt@exponent& (0+255),b
   980  001116  0101               	movlb	1	; () banked
   981  001118  6BAA               	clrf	(process_data_opt@exponent+1)& (0+255),b
   982                           
   983                           ;main.c: 68: switch(exponent){
   984  00111A  D0D9               	goto	l2625
   985  00111C                     l2601:
   986                           
   987                           ;main.c: 70: Illumination = result>>6;
   988  00111C  C1B1  F0F2         	movff	process_data_opt@result,??_process_data_opt
   989  001120  C1B2  F0F3         	movff	process_data_opt@result+1,??_process_data_opt+1
   990  001124  C1B3  F0F4         	movff	process_data_opt@result+2,??_process_data_opt+2
   991  001128  C1B4  F0F5         	movff	process_data_opt@result+3,??_process_data_opt+3
   992  00112C  0E07               	movlw	7
   993  00112E  D006               	goto	u1850
   994  001130                     u1855:
   995  001130  0100               	movlb	0	; () banked
   996  001132  90D8               	bcf	status,0,c
   997  001134  33F5               	rrcf	(??_process_data_opt+3)& (0+255),f,b
   998  001136  33F4               	rrcf	(??_process_data_opt+2)& (0+255),f,b
   999  001138  33F3               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  1000  00113A  33F2               	rrcf	??_process_data_opt& (0+255),f,b
  1001  00113C                     u1850:
  1002  00113C  2EE8               	decfsz	wreg,f,c
  1003  00113E  D7F8               	goto	u1855
  1004  001140  D0BD               	goto	L9
  1005  001142                     l2603:
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;main.c: 73: Illumination = result>>5;
  1009  001142  C1B1  F0F2         	movff	process_data_opt@result,??_process_data_opt
  1010  001146  C1B2  F0F3         	movff	process_data_opt@result+1,??_process_data_opt+1
  1011  00114A  C1B3  F0F4         	movff	process_data_opt@result+2,??_process_data_opt+2
  1012  00114E  C1B4  F0F5         	movff	process_data_opt@result+3,??_process_data_opt+3
  1013  001152  0E06               	movlw	6
  1014  001154  D006               	goto	u1860
  1015  001156                     u1865:
  1016  001156  0100               	movlb	0	; () banked
  1017  001158  90D8               	bcf	status,0,c
  1018  00115A  33F5               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  1019  00115C  33F4               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  1020  00115E  33F3               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  1021  001160  33F2               	rrcf	??_process_data_opt& (0+255),f,b
  1022  001162                     u1860:
  1023  001162  2EE8               	decfsz	wreg,f,c
  1024  001164  D7F8               	goto	u1865
  1025  001166  D0AA               	goto	L9
  1026  001168                     l2605:
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;main.c: 76: Illumination = result>>4;
  1030  001168  C1B1  F0F2         	movff	process_data_opt@result,??_process_data_opt
  1031  00116C  C1B2  F0F3         	movff	process_data_opt@result+1,??_process_data_opt+1
  1032  001170  C1B3  F0F4         	movff	process_data_opt@result+2,??_process_data_opt+2
  1033  001174  C1B4  F0F5         	movff	process_data_opt@result+3,??_process_data_opt+3
  1034  001178  0E05               	movlw	5
  1035  00117A  D006               	goto	u1870
  1036  00117C                     u1875:
  1037  00117C  0100               	movlb	0	; () banked
  1038  00117E  90D8               	bcf	status,0,c
  1039  001180  33F5               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  1040  001182  33F4               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  1041  001184  33F3               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  1042  001186  33F2               	rrcf	??_process_data_opt& (0+255),f,b
  1043  001188                     u1870:
  1044  001188  2EE8               	decfsz	wreg,f,c
  1045  00118A  D7F8               	goto	u1875
  1046  00118C  D097               	goto	L9
  1047  00118E                     l2607:
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;main.c: 79: Illumination = result>>3;
  1051  00118E  C1B1  F0F2         	movff	process_data_opt@result,??_process_data_opt
  1052  001192  C1B2  F0F3         	movff	process_data_opt@result+1,??_process_data_opt+1
  1053  001196  C1B3  F0F4         	movff	process_data_opt@result+2,??_process_data_opt+2
  1054  00119A  C1B4  F0F5         	movff	process_data_opt@result+3,??_process_data_opt+3
  1055  00119E  0E04               	movlw	4
  1056  0011A0  D006               	goto	u1880
  1057  0011A2                     u1885:
  1058  0011A2  0100               	movlb	0	; () banked
  1059  0011A4  90D8               	bcf	status,0,c
  1060  0011A6  33F5               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  1061  0011A8  33F4               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  1062  0011AA  33F3               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  1063  0011AC  33F2               	rrcf	??_process_data_opt& (0+255),f,b
  1064  0011AE                     u1880:
  1065  0011AE  2EE8               	decfsz	wreg,f,c
  1066  0011B0  D7F8               	goto	u1885
  1067  0011B2  D084               	goto	L9
  1068  0011B4                     l2609:
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;main.c: 82: Illumination = result>>2;
  1072  0011B4  C1B1  F0F2         	movff	process_data_opt@result,??_process_data_opt
  1073  0011B8  C1B2  F0F3         	movff	process_data_opt@result+1,??_process_data_opt+1
  1074  0011BC  C1B3  F0F4         	movff	process_data_opt@result+2,??_process_data_opt+2
  1075  0011C0  C1B4  F0F5         	movff	process_data_opt@result+3,??_process_data_opt+3
  1076  0011C4  0E03               	movlw	3
  1077  0011C6  D006               	goto	u1890
  1078  0011C8                     u1895:
  1079  0011C8  0100               	movlb	0	; () banked
  1080  0011CA  90D8               	bcf	status,0,c
  1081  0011CC  33F5               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  1082  0011CE  33F4               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  1083  0011D0  33F3               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  1084  0011D2  33F2               	rrcf	??_process_data_opt& (0+255),f,b
  1085  0011D4                     u1890:
  1086  0011D4  2EE8               	decfsz	wreg,f,c
  1087  0011D6  D7F8               	goto	u1895
  1088  0011D8  D071               	goto	L9
  1089  0011DA                     l2611:
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;main.c: 85: Illumination = result>>1;
  1093  0011DA  C1B1  F0F2         	movff	process_data_opt@result,??_process_data_opt
  1094  0011DE  C1B2  F0F3         	movff	process_data_opt@result+1,??_process_data_opt+1
  1095  0011E2  C1B3  F0F4         	movff	process_data_opt@result+2,??_process_data_opt+2
  1096  0011E6  C1B4  F0F5         	movff	process_data_opt@result+3,??_process_data_opt+3
  1097  0011EA  0100               	movlb	0	; () banked
  1098  0011EC  90D8               	bcf	status,0,c
  1099  0011EE  33F5               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  1100  0011F0  33F4               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  1101  0011F2  33F3               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  1102  0011F4  33F2               	rrcf	??_process_data_opt& (0+255),f,b
  1103  0011F6  D062               	goto	L9
  1104  0011F8                     l301:
  1105                           
  1106                           ; BSR set to: 0
  1107                           ;main.c: 88: Illumination = result;
  1108  0011F8  C1B1  F1AD         	movff	process_data_opt@result,process_data_opt@Illumination
  1109  0011FC  C1B2  F1AE         	movff	process_data_opt@result+1,process_data_opt@Illumination+1
  1110  001200  C1B3  F1AF         	movff	process_data_opt@result+2,process_data_opt@Illumination+2
  1111  001204  C1B4  F1B0         	movff	process_data_opt@result+3,process_data_opt@Illumination+3
  1112                           
  1113                           ;main.c: 89: break;
  1114  001208  D091               	goto	l2627
  1115  00120A                     l2613:
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;main.c: 91: Illumination = result<<1;
  1119  00120A  90D8               	bcf	status,0,c
  1120  00120C  0101               	movlb	1	; () banked
  1121  00120E  35B1               	rlcf	process_data_opt@result& (0+255),w,b
  1122  001210  0101               	movlb	1	; () banked
  1123  001212  6FAD               	movwf	process_data_opt@Illumination& (0+255),b
  1124  001214  0101               	movlb	1	; () banked
  1125  001216  35B2               	rlcf	(process_data_opt@result+1)& (0+255),w,b
  1126  001218  0101               	movlb	1	; () banked
  1127  00121A  6FAE               	movwf	(process_data_opt@Illumination+1)& (0+255),b
  1128  00121C  0101               	movlb	1	; () banked
  1129  00121E  35B3               	rlcf	(process_data_opt@result+2)& (0+255),w,b
  1130  001220  0101               	movlb	1	; () banked
  1131  001222  6FAF               	movwf	(process_data_opt@Illumination+2)& (0+255),b
  1132  001224  0101               	movlb	1	; () banked
  1133  001226  35B4               	rlcf	(process_data_opt@result+3)& (0+255),w,b
  1134  001228  0101               	movlb	1	; () banked
  1135  00122A  6FB0               	movwf	(process_data_opt@Illumination+3)& (0+255),b
  1136                           
  1137                           ;main.c: 92: break;
  1138  00122C  D07F               	goto	l2627
  1139  00122E                     l2615:
  1140                           
  1141                           ;main.c: 94: Illumination = result<<2;
  1142  00122E  C1B1  F0F2         	movff	process_data_opt@result,??_process_data_opt
  1143  001232  C1B2  F0F3         	movff	process_data_opt@result+1,??_process_data_opt+1
  1144  001236  C1B3  F0F4         	movff	process_data_opt@result+2,??_process_data_opt+2
  1145  00123A  C1B4  F0F5         	movff	process_data_opt@result+3,??_process_data_opt+3
  1146  00123E  0E02               	movlw	2
  1147  001240                     u1905:
  1148  001240  90D8               	bcf	status,0,c
  1149  001242  0100               	movlb	0	; () banked
  1150  001244  37F2               	rlcf	??_process_data_opt& (0+255),f,b
  1151  001246  37F3               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  1152  001248  37F4               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  1153  00124A  37F5               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  1154  00124C  2EE8               	decfsz	wreg,f,c
  1155  00124E  D7F8               	goto	u1905
  1156  001250  D035               	goto	L9
  1157  001252                     l2617:
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;main.c: 97: Illumination = result<<3;
  1161  001252  C1B1  F0F2         	movff	process_data_opt@result,??_process_data_opt
  1162  001256  C1B2  F0F3         	movff	process_data_opt@result+1,??_process_data_opt+1
  1163  00125A  C1B3  F0F4         	movff	process_data_opt@result+2,??_process_data_opt+2
  1164  00125E  C1B4  F0F5         	movff	process_data_opt@result+3,??_process_data_opt+3
  1165  001262  0E03               	movlw	3
  1166  001264                     u1915:
  1167  001264  90D8               	bcf	status,0,c
  1168  001266  0100               	movlb	0	; () banked
  1169  001268  37F2               	rlcf	??_process_data_opt& (0+255),f,b
  1170  00126A  37F3               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  1171  00126C  37F4               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  1172  00126E  37F5               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  1173  001270  2EE8               	decfsz	wreg,f,c
  1174  001272  D7F8               	goto	u1915
  1175  001274  D023               	goto	L9
  1176  001276                     l2619:
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;main.c: 100: Illumination = result<<4;
  1180  001276  C1B1  F0F2         	movff	process_data_opt@result,??_process_data_opt
  1181  00127A  C1B2  F0F3         	movff	process_data_opt@result+1,??_process_data_opt+1
  1182  00127E  C1B3  F0F4         	movff	process_data_opt@result+2,??_process_data_opt+2
  1183  001282  C1B4  F0F5         	movff	process_data_opt@result+3,??_process_data_opt+3
  1184  001286  0E04               	movlw	4
  1185  001288                     u1925:
  1186  001288  90D8               	bcf	status,0,c
  1187  00128A  0100               	movlb	0	; () banked
  1188  00128C  37F2               	rlcf	??_process_data_opt& (0+255),f,b
  1189  00128E  37F3               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  1190  001290  37F4               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  1191  001292  37F5               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  1192  001294  2EE8               	decfsz	wreg,f,c
  1193  001296  D7F8               	goto	u1925
  1194  001298  D011               	goto	L9
  1195  00129A                     l2621:
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;main.c: 103: Illumination = result<<5;
  1199  00129A  C1B1  F0F2         	movff	process_data_opt@result,??_process_data_opt
  1200  00129E  C1B2  F0F3         	movff	process_data_opt@result+1,??_process_data_opt+1
  1201  0012A2  C1B3  F0F4         	movff	process_data_opt@result+2,??_process_data_opt+2
  1202  0012A6  C1B4  F0F5         	movff	process_data_opt@result+3,??_process_data_opt+3
  1203  0012AA  0E05               	movlw	5
  1204  0012AC                     u1935:
  1205  0012AC  90D8               	bcf	status,0,c
  1206  0012AE  0100               	movlb	0	; () banked
  1207  0012B0  37F2               	rlcf	??_process_data_opt& (0+255),f,b
  1208  0012B2  37F3               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  1209  0012B4  37F4               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  1210  0012B6  37F5               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  1211  0012B8  2EE8               	decfsz	wreg,f,c
  1212  0012BA  D7F8               	goto	u1935
  1213  0012BC                     L9:
  1214  0012BC  C0F2  F1AD         	movff	??_process_data_opt,process_data_opt@Illumination
  1215  0012C0  C0F3  F1AE         	movff	??_process_data_opt+1,process_data_opt@Illumination+1
  1216  0012C4  C0F4  F1AF         	movff	??_process_data_opt+2,process_data_opt@Illumination+2
  1217  0012C8  C0F5  F1B0         	movff	??_process_data_opt+3,process_data_opt@Illumination+3
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;main.c: 105: }
  1221                           
  1222                           ;main.c: 104: break;
  1223  0012CC  D02F               	goto	l2627
  1224  0012CE                     l2625:
  1225  0012CE  C1A9  F0F2         	movff	process_data_opt@exponent,??_process_data_opt
  1226  0012D2  C1AA  F0F3         	movff	process_data_opt@exponent+1,??_process_data_opt+1
  1227                           
  1228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1229                           ; Switch size 1, requested type "space"
  1230                           ; Number of cases is 1, Range of values is 0 to 0
  1231                           ; switch strategies available:
  1232                           ; Name         Instructions Cycles
  1233                           ; simple_byte            4     3 (average)
  1234                           ;	Chosen strategy is simple_byte
  1235  0012D6  0100               	movlb	0	; () banked
  1236  0012D8  51F3               	movf	(??_process_data_opt+1)& (0+255),w,b
  1237  0012DA  0A00               	xorlw	0	; case 0
  1238  0012DC  A4D8               	btfss	status,2,c
  1239  0012DE  D026               	goto	l2627
  1240                           
  1241                           ; BSR set to: 0
  1242                           ; Switch size 1, requested type "space"
  1243                           ; Number of cases is 12, Range of values is 0 to 11
  1244                           ; switch strategies available:
  1245                           ; Name         Instructions Cycles
  1246                           ; simple_byte           37    19 (average)
  1247                           ;	Chosen strategy is simple_byte
  1248  0012E0  0100               	movlb	0	; () banked
  1249  0012E2  51F2               	movf	??_process_data_opt& (0+255),w,b
  1250  0012E4  0A00               	xorlw	0	; case 0
  1251  0012E6  B4D8               	btfsc	status,2,c
  1252  0012E8  D719               	goto	l2601
  1253  0012EA  0A01               	xorlw	1	; case 1
  1254  0012EC  B4D8               	btfsc	status,2,c
  1255  0012EE  D729               	goto	l2603
  1256  0012F0  0A03               	xorlw	3	; case 2
  1257  0012F2  B4D8               	btfsc	status,2,c
  1258  0012F4  D739               	goto	l2605
  1259  0012F6  0A01               	xorlw	1	; case 3
  1260  0012F8  B4D8               	btfsc	status,2,c
  1261  0012FA  D749               	goto	l2607
  1262  0012FC  0A07               	xorlw	7	; case 4
  1263  0012FE  B4D8               	btfsc	status,2,c
  1264  001300  D759               	goto	l2609
  1265  001302  0A01               	xorlw	1	; case 5
  1266  001304  B4D8               	btfsc	status,2,c
  1267  001306  D769               	goto	l2611
  1268  001308  0A03               	xorlw	3	; case 6
  1269  00130A  B4D8               	btfsc	status,2,c
  1270  00130C  D775               	goto	l301
  1271  00130E  0A01               	xorlw	1	; case 7
  1272  001310  B4D8               	btfsc	status,2,c
  1273  001312  D77B               	goto	l2613
  1274  001314  0A0F               	xorlw	15	; case 8
  1275  001316  B4D8               	btfsc	status,2,c
  1276  001318  D78A               	goto	l2615
  1277  00131A  0A01               	xorlw	1	; case 9
  1278  00131C  B4D8               	btfsc	status,2,c
  1279  00131E  D799               	goto	l2617
  1280  001320  0A03               	xorlw	3	; case 10
  1281  001322  B4D8               	btfsc	status,2,c
  1282  001324  D7A8               	goto	l2619
  1283  001326  0A01               	xorlw	1	; case 11
  1284  001328  B4D8               	btfsc	status,2,c
  1285  00132A  D7B7               	goto	l2621
  1286  00132C                     l2627:
  1287                           
  1288                           ;main.c: 106: printf("> %d\r\n",Illumination);
  1289  00132C  0E5B               	movlw	low STR_6
  1290  00132E  0100               	movlb	0	; () banked
  1291  001330  6FE4               	movwf	printf@f& (0+255),b
  1292  001332  0E10               	movlw	high STR_6
  1293  001334  0100               	movlb	0	; () banked
  1294  001336  6FE5               	movwf	(printf@f+1)& (0+255),b
  1295  001338  C1AD  F0E6         	movff	process_data_opt@Illumination,?_printf+2
  1296  00133C  C1AE  F0E7         	movff	process_data_opt@Illumination+1,?_printf+3
  1297  001340  C1AF  F0E8         	movff	process_data_opt@Illumination+2,?_printf+4
  1298  001344  C1B0  F0E9         	movff	process_data_opt@Illumination+3,?_printf+5
  1299  001348  ECA7  F009         	call	_printf	;wreg free
  1300  00134C  0012               	return		;funcret
  1301  00134E                     __end_of_process_data_opt:
  1302                           	opt stack 0
  1303                           intcon	equ	0xFF2
  1304                           postinc0	equ	0xFEE
  1305                           wreg	equ	0xFE8
  1306                           status	equ	0xFD8
  1307                           
  1308 ;; *************** function _printf *****************
  1309 ;; Defined at:
  1310 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;  f               2    4[BANK0 ] PTR const unsigned char 
  1313 ;;		 -> STR_7(8), STR_6(7), STR_5(16), 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  idx             1   10[BANK0 ] unsigned char 
  1316 ;;  tmpval          4    0        struct .
  1317 ;;  cp              3    0        PTR const unsigned char 
  1318 ;;  val             2   15[BANK0 ] unsigned int 
  1319 ;;  ap              2   11[BANK0 ] PTR void [1]
  1320 ;;		 -> ?_printf(2), 
  1321 ;;  len             2    0        unsigned int 
  1322 ;;  c               1   17[BANK0 ] char 
  1323 ;;  flag            1   14[BANK0 ] unsigned char 
  1324 ;;  prec            1   13[BANK0 ] char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  2    4[BANK0 ] int 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1334 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;Total ram usage:       15 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    6
  1341 ;; This function calls:
  1342 ;;		___lwdiv
  1343 ;;		___lwmod
  1344 ;;		_putch
  1345 ;; This function is called by:
  1346 ;;		_process_data_opt
  1347 ;;		_main
  1348 ;;		_getUUID
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text3
  1353  00134E                     __ptext3:
  1354                           	opt stack 0
  1355  00134E                     _printf:
  1356                           	opt stack 23
  1357                           
  1358                           ;doprnt.c: 466: va_list ap;
  1359                           ;doprnt.c: 499: signed char c;
  1360                           ;doprnt.c: 506: signed char prec;
  1361                           ;doprnt.c: 508: unsigned char flag;
  1362                           ;doprnt.c: 523: union {
  1363                           ;doprnt.c: 524: unsigned long vd;
  1364                           ;doprnt.c: 525: double integ;
  1365                           ;doprnt.c: 526: } tmpval;
  1366                           ;doprnt.c: 528: unsigned int val;
  1367                           ;doprnt.c: 529: unsigned len;
  1368                           ;doprnt.c: 530: const char * cp;
  1369                           ;doprnt.c: 533: *ap = __va_start();
  1370                           
  1371                           ;incstack = 0
  1372  00134E  0EE6               	movlw	low (?_printf+2)
  1373  001350  0100               	movlb	0	; () banked
  1374  001352  6FEB               	movwf	printf@ap& (0+255),b
  1375  001354  0E00               	movlw	high (?_printf+2)
  1376  001356  0100               	movlb	0	; () banked
  1377  001358  6FEC               	movwf	(printf@ap+1)& (0+255),b
  1378                           
  1379                           ;doprnt.c: 536: while(c = *f++) {
  1380  00135A  D114               	goto	l2591
  1381  00135C                     l2513:
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;doprnt.c: 538: if(c != '%')
  1385  00135C  0E25               	movlw	37
  1386  00135E  0100               	movlb	0	; () banked
  1387  001360  19F1               	xorwf	printf@c& (0+255),w,b
  1388  001362  B4D8               	btfsc	status,2,c
  1389  001364  D005               	goto	l2517
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;doprnt.c: 540: {
  1393                           ;doprnt.c: 541: (putch(c) );
  1394  001366  0100               	movlb	0	; () banked
  1395  001368  51F1               	movf	printf@c& (0+255),w,b
  1396  00136A  EC72  F00F         	call	_putch
  1397                           
  1398                           ;doprnt.c: 542: continue;
  1399  00136E  D10A               	goto	l2591
  1400  001370                     l2517:
  1401                           
  1402                           ;doprnt.c: 543: }
  1403                           ;doprnt.c: 548: flag = 0;
  1404  001370  0E00               	movlw	0
  1405  001372  0100               	movlb	0	; () banked
  1406  001374  6FEE               	movwf	printf@flag& (0+255),b
  1407                           
  1408                           ;doprnt.c: 635: switch(c = *f++) {
  1409  001376  D003               	goto	l2523
  1410  001378                     l2519:
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;doprnt.c: 721: flag |= 0x80;
  1414  001378  0100               	movlb	0	; () banked
  1415  00137A  8FEE               	bsf	printf@flag& (0+255),7,b
  1416                           
  1417                           ;doprnt.c: 723: break;
  1418  00137C  D01A               	goto	l374
  1419  00137E                     l2523:
  1420                           
  1421                           ; BSR set to: 0
  1422  00137E  C0E4  FFF6         	movff	printf@f,tblptrl
  1423  001382  C0E5  FFF7         	movff	printf@f+1,tblptrh
  1424  001386  0100               	movlb	0	; () banked
  1425  001388  4BE4               	infsnz	printf@f& (0+255),f,b
  1426  00138A  2BE5               	incf	(printf@f+1)& (0+255),f,b
  1427  00138C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1428  00138C  6AF8               	clrf	tblptru,c
  1429  00138E                     	endif
  1430  00138E                     	if	0	;tblptru may be non-zero
  1431  00138E                     	endif
  1432  00138E  0008               	tblrd		*
  1433  001390  CFF5 F0F1          	movff	tablat,printf@c
  1434  001394  0100               	movlb	0	; () banked
  1435  001396  51F1               	movf	printf@c& (0+255),w,b
  1436                           
  1437                           ; Switch size 1, requested type "space"
  1438                           ; Number of cases is 4, Range of values is 0 to 120
  1439                           ; switch strategies available:
  1440                           ; Name         Instructions Cycles
  1441                           ; simple_byte           13     7 (average)
  1442                           ;	Chosen strategy is simple_byte
  1443  001398  0A00               	xorlw	0	; case 0
  1444  00139A  B4D8               	btfsc	status,2,c
  1445  00139C  0012               	return	
  1446  00139E  0A64               	xorlw	100	; case 100
  1447  0013A0  B4D8               	btfsc	status,2,c
  1448  0013A2  D007               	goto	l374
  1449  0013A4  0A0D               	xorlw	13	; case 105
  1450  0013A6  B4D8               	btfsc	status,2,c
  1451  0013A8  D004               	goto	l374
  1452  0013AA  0A11               	xorlw	17	; case 120
  1453  0013AC  B4D8               	btfsc	status,2,c
  1454  0013AE  D7E4               	goto	l2519
  1455  0013B0  D0E9               	goto	l2591
  1456  0013B2                     l374:
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  1460  0013B2  0100               	movlb	0	; () banked
  1461  0013B4  BFEE               	btfsc	printf@flag& (0+255),7,b
  1462  0013B6  D019               	goto	l2535
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;doprnt.c: 1253: {
  1466                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1467  0013B8  C0EB  FFD9         	movff	printf@ap,fsr2l
  1468  0013BC  C0EC  FFDA         	movff	printf@ap+1,fsr2h
  1469  0013C0  CFDE F0EF          	movff	postinc2,printf@val
  1470  0013C4  CFDD F0F0          	movff	postdec2,printf@val+1
  1471                           
  1472                           ; BSR set to: 0
  1473  0013C8  0E02               	movlw	2
  1474  0013CA  0100               	movlb	0	; () banked
  1475  0013CC  27EB               	addwf	printf@ap& (0+255),f,b
  1476  0013CE  0E00               	movlw	0
  1477  0013D0  23EC               	addwfc	(printf@ap+1)& (0+255),f,b
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;doprnt.c: 1261: if((int)val < 0) {
  1481  0013D2  0100               	movlb	0	; () banked
  1482  0013D4  AFF0               	btfss	(printf@val+1)& (0+255),7,b
  1483  0013D6  D059               	goto	l2569
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;doprnt.c: 1262: flag |= 0x03;
  1487  0013D8  0E03               	movlw	3
  1488  0013DA  0100               	movlb	0	; () banked
  1489  0013DC  13EE               	iorwf	printf@flag& (0+255),f,b
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;doprnt.c: 1263: val = -val;
  1493  0013DE  0100               	movlb	0	; () banked
  1494  0013E0  6DEF               	negf	printf@val& (0+255),b
  1495  0013E2  1FF0               	comf	(printf@val+1)& (0+255),f,b
  1496  0013E4  B0D8               	btfsc	status,0,c
  1497  0013E6  2BF0               	incf	(printf@val+1)& (0+255),f,b
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;doprnt.c: 1264: }
  1501                           ;doprnt.c: 1266: }
  1502  0013E8  D050               	goto	l2569
  1503  0013EA                     l2535:
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;doprnt.c: 1268: else
  1507                           ;doprnt.c: 1273: {
  1508                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1509  0013EA  C0EB  FFD9         	movff	printf@ap,fsr2l
  1510  0013EE  C0EC  FFDA         	movff	printf@ap+1,fsr2h
  1511  0013F2  CFDE F0EF          	movff	postinc2,printf@val
  1512  0013F6  CFDD F0F0          	movff	postdec2,printf@val+1
  1513                           
  1514                           ; BSR set to: 0
  1515  0013FA  0E02               	movlw	2
  1516  0013FC  0100               	movlb	0	; () banked
  1517  0013FE  27EB               	addwf	printf@ap& (0+255),f,b
  1518  001400  0E00               	movlw	0
  1519  001402  23EC               	addwfc	(printf@ap+1)& (0+255),f,b
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;doprnt.c: 1287: }
  1523                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  1524  001404  D042               	goto	l2569
  1525  001406                     l2539:
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1529  001406  0E01               	movlw	1
  1530  001408  0100               	movlb	0	; () banked
  1531  00140A  6FF1               	movwf	printf@c& (0+255),b
  1532  00140C                     l2541:
  1533                           
  1534                           ; BSR set to: 0
  1535  00140C  0E05               	movlw	5
  1536  00140E  0100               	movlb	0	; () banked
  1537  001410  19F1               	xorwf	printf@c& (0+255),w,b
  1538  001412  B4D8               	btfsc	status,2,c
  1539  001414  D043               	goto	l2571
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;doprnt.c: 1306: if(val < dpowers[c])
  1543                           
  1544                           ; BSR set to: 0
  1545                           
  1546                           ; BSR set to: 0
  1547  001416  0100               	movlb	0	; () banked
  1548  001418  51F1               	movf	printf@c& (0+255),w,b
  1549  00141A  0D02               	mullw	2
  1550  00141C  0E01               	movlw	low _dpowers
  1551  00141E  24F3               	addwf	prodl,w,c
  1552  001420  6EF6               	movwf	tblptrl,c
  1553  001422  0E10               	movlw	high _dpowers
  1554  001424  20F4               	addwfc	prodh,w,c
  1555  001426  6EF7               	movwf	tblptrh,c
  1556  001428                     	if	1	;There are 3 active tblptr bytes
  1557  001428  6AF8               	clrf	tblptru,c
  1558  00142A  0E00               	movlw	low (__mediumconst shr (0+16))
  1559  00142C  22F8               	addwfc	tblptru,f,c
  1560  00142E                     	endif
  1561  00142E  0009               	tblrd		*+
  1562  001430  50F5               	movf	tablat,w,c
  1563  001432  0100               	movlb	0	; () banked
  1564  001434  5DEF               	subwf	printf@val& (0+255),w,b
  1565  001436  0009               	tblrd		*+
  1566  001438  50F5               	movf	tablat,w,c
  1567  00143A  0100               	movlb	0	; () banked
  1568  00143C  59F0               	subwfb	(printf@val+1)& (0+255),w,b
  1569  00143E  A0D8               	btfss	status,0,c
  1570  001440  D02D               	goto	l2571
  1571                           
  1572                           ; BSR set to: 0
  1573                           
  1574                           ; BSR set to: 0
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;doprnt.c: 1307: break;
  1578  001442  0100               	movlb	0	; () banked
  1579  001444  2BF1               	incf	printf@c& (0+255),f,b
  1580  001446  D7E2               	goto	l2541
  1581  001448                     l2553:
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1585  001448  0E01               	movlw	1
  1586  00144A  0100               	movlb	0	; () banked
  1587  00144C  6FF1               	movwf	printf@c& (0+255),b
  1588  00144E                     l2555:
  1589                           
  1590                           ; BSR set to: 0
  1591  00144E  0E04               	movlw	4
  1592  001450  0100               	movlb	0	; () banked
  1593  001452  19F1               	xorwf	printf@c& (0+255),w,b
  1594  001454  B4D8               	btfsc	status,2,c
  1595  001456  D022               	goto	l2571
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1599                           
  1600                           ; BSR set to: 0
  1601                           
  1602                           ; BSR set to: 0
  1603  001458  0100               	movlb	0	; () banked
  1604  00145A  51F1               	movf	printf@c& (0+255),w,b
  1605  00145C  0D02               	mullw	2
  1606  00145E  0E0B               	movlw	low _hexpowers
  1607  001460  24F3               	addwf	prodl,w,c
  1608  001462  6EF6               	movwf	tblptrl,c
  1609  001464  0E10               	movlw	high _hexpowers
  1610  001466  20F4               	addwfc	prodh,w,c
  1611  001468  6EF7               	movwf	tblptrh,c
  1612  00146A                     	if	1	;There are 3 active tblptr bytes
  1613  00146A  6AF8               	clrf	tblptru,c
  1614  00146C  0E00               	movlw	low (__mediumconst shr (0+16))
  1615  00146E  22F8               	addwfc	tblptru,f,c
  1616  001470                     	endif
  1617  001470  0009               	tblrd		*+
  1618  001472  50F5               	movf	tablat,w,c
  1619  001474  0100               	movlb	0	; () banked
  1620  001476  5DEF               	subwf	printf@val& (0+255),w,b
  1621  001478  0009               	tblrd		*+
  1622  00147A  50F5               	movf	tablat,w,c
  1623  00147C  0100               	movlb	0	; () banked
  1624  00147E  59F0               	subwfb	(printf@val+1)& (0+255),w,b
  1625  001480  A0D8               	btfss	status,0,c
  1626  001482  D00C               	goto	l2571
  1627                           
  1628                           ; BSR set to: 0
  1629                           
  1630                           ; BSR set to: 0
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;doprnt.c: 1318: break;
  1634  001484  0100               	movlb	0	; () banked
  1635  001486  2BF1               	incf	printf@c& (0+255),f,b
  1636  001488  D7E2               	goto	l2555
  1637  00148A                     l2569:
  1638                           
  1639                           ; BSR set to: 0
  1640  00148A  0100               	movlb	0	; () banked
  1641  00148C  51EE               	movf	printf@flag& (0+255),w,b
  1642  00148E  0B80               	andlw	128
  1643                           
  1644                           ; Switch size 1, requested type "space"
  1645                           ; Number of cases is 2, Range of values is 0 to 128
  1646                           ; switch strategies available:
  1647                           ; Name         Instructions Cycles
  1648                           ; simple_byte            7     4 (average)
  1649                           ;	Chosen strategy is simple_byte
  1650  001490  0A00               	xorlw	0	; case 0
  1651  001492  B4D8               	btfsc	status,2,c
  1652  001494  D7B8               	goto	l2539
  1653  001496  0A80               	xorlw	128	; case 128
  1654  001498  B4D8               	btfsc	status,2,c
  1655  00149A  D7D6               	goto	l2553
  1656  00149C                     l2571:
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;doprnt.c: 1422: {
  1660                           ;doprnt.c: 1438: if(flag & 0x03)
  1661  00149C  C0EE  F02D         	movff	printf@flag,??_printf
  1662  0014A0  0E03               	movlw	3
  1663  0014A2  162D               	andwf	??_printf,f,c
  1664  0014A4  B4D8               	btfsc	status,2,c
  1665  0014A6  D003               	goto	l2575
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;doprnt.c: 1439: (putch('-') );
  1669  0014A8  0E2D               	movlw	45
  1670  0014AA  EC72  F00F         	call	_putch
  1671  0014AE                     l2575:
  1672                           
  1673                           ;doprnt.c: 1469: }
  1674                           ;doprnt.c: 1472: prec = c;
  1675  0014AE  C0F1  F0ED         	movff	printf@c,printf@prec
  1676                           
  1677                           ;doprnt.c: 1474: while(prec--) {
  1678  0014B2  D062               	goto	l2589
  1679  0014B4                     l2577:
  1680                           
  1681                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1682  0014B4  0100               	movlb	0	; () banked
  1683  0014B6  51ED               	movf	printf@prec& (0+255),w,b
  1684  0014B8  0D02               	mullw	2
  1685  0014BA  0E01               	movlw	low _dpowers
  1686  0014BC  24F3               	addwf	prodl,w,c
  1687  0014BE  6EF6               	movwf	tblptrl,c
  1688  0014C0  0E10               	movlw	high _dpowers
  1689  0014C2  20F4               	addwfc	prodh,w,c
  1690  0014C4  6EF7               	movwf	tblptrh,c
  1691  0014C6                     	if	1	;There are 3 active tblptr bytes
  1692  0014C6  6AF8               	clrf	tblptru,c
  1693  0014C8  0E00               	movlw	low (__mediumconst shr (0+16))
  1694  0014CA  22F8               	addwfc	tblptru,f,c
  1695  0014CC                     	endif
  1696  0014CC  0009               	tblrd		*+
  1697  0014CE  CFF5 F027          	movff	tablat,___lwdiv@divisor
  1698  0014D2  000A               	tblrd		*-
  1699  0014D4  CFF5 F028          	movff	tablat,___lwdiv@divisor+1
  1700  0014D8  C0EF  F025         	movff	printf@val,___lwdiv@dividend
  1701  0014DC  C0F0  F026         	movff	printf@val+1,___lwdiv@dividend+1
  1702  0014E0  ECF1  F00D         	call	___lwdiv	;wreg free
  1703  0014E4  C025  F0E0         	movff	?___lwdiv,___lwmod@dividend
  1704  0014E8  C026  F0E1         	movff	?___lwdiv+1,___lwmod@dividend+1
  1705  0014EC  0E00               	movlw	0
  1706  0014EE  0100               	movlb	0	; () banked
  1707  0014F0  6FE3               	movwf	(___lwmod@divisor+1)& (0+255),b
  1708  0014F2  0E0A               	movlw	10
  1709  0014F4  6FE2               	movwf	___lwmod@divisor& (0+255),b
  1710  0014F6  ECC3  F00D         	call	___lwmod	;wreg free
  1711  0014FA  0100               	movlb	0	; () banked
  1712  0014FC  51E0               	movf	?___lwmod& (0+255),w,b
  1713  0014FE  0F30               	addlw	48
  1714  001500  0100               	movlb	0	; () banked
  1715  001502  6FF1               	movwf	printf@c& (0+255),b
  1716                           
  1717                           ;doprnt.c: 1491: break;
  1718  001504  D035               	goto	l2587
  1719  001506                     l2579:
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;doprnt.c: 1499: {
  1723                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  1724  001506  C0EF  F025         	movff	printf@val,___lwdiv@dividend
  1725  00150A  C0F0  F026         	movff	printf@val+1,___lwdiv@dividend+1
  1726  00150E  0100               	movlb	0	; () banked
  1727  001510  51ED               	movf	printf@prec& (0+255),w,b
  1728  001512  0D02               	mullw	2
  1729  001514  0E0B               	movlw	low _hexpowers
  1730  001516  24F3               	addwf	prodl,w,c
  1731  001518  6EF6               	movwf	tblptrl,c
  1732  00151A  0E10               	movlw	high _hexpowers
  1733  00151C  20F4               	addwfc	prodh,w,c
  1734  00151E  6EF7               	movwf	tblptrh,c
  1735  001520                     	if	1	;There are 3 active tblptr bytes
  1736  001520  6AF8               	clrf	tblptru,c
  1737  001522  0E00               	movlw	low (__mediumconst shr (0+16))
  1738  001524  22F8               	addwfc	tblptru,f,c
  1739  001526                     	endif
  1740  001526  0009               	tblrd		*+
  1741  001528  CFF5 F027          	movff	tablat,___lwdiv@divisor
  1742  00152C  000A               	tblrd		*-
  1743  00152E  CFF5 F028          	movff	tablat,___lwdiv@divisor+1
  1744  001532  ECF1  F00D         	call	___lwdiv	;wreg free
  1745  001536  5025               	movf	?___lwdiv,w,c
  1746  001538  0B0F               	andlw	15
  1747  00153A  0100               	movlb	0	; () banked
  1748  00153C  6FEA               	movwf	printf@idx& (0+255),b
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  1752  00153E  0100               	movlb	0	; () banked
  1753  001540  51EA               	movf	printf@idx& (0+255),w,b
  1754  001542  0D01               	mullw	1
  1755  001544  0E13               	movlw	low STR_8
  1756  001546  24F3               	addwf	prodl,w,c
  1757  001548  6EF6               	movwf	tblptrl,c
  1758  00154A  0E10               	movlw	high STR_8
  1759  00154C  20F4               	addwfc	prodh,w,c
  1760  00154E  6EF7               	movwf	tblptrh,c
  1761  001550                     	if	1	;There are 3 active tblptr bytes
  1762  001550  6AF8               	clrf	tblptru,c
  1763  001552  0E00               	movlw	low (__mediumconst shr (0+16))
  1764  001554  22F8               	addwfc	tblptru,f,c
  1765  001556                     	endif
  1766  001556  0008               	tblrd		*
  1767  001558  CFF5 F0F1          	movff	tablat,printf@c
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;doprnt.c: 1523: }
  1771                           
  1772                           ;doprnt.c: 1508: }
  1773                           ;doprnt.c: 1510: break;
  1774  00155C  D009               	goto	l2587
  1775  00155E                     l2585:
  1776  00155E  0100               	movlb	0	; () banked
  1777  001560  51EE               	movf	printf@flag& (0+255),w,b
  1778  001562  0B80               	andlw	128
  1779                           
  1780                           ; Switch size 1, requested type "space"
  1781                           ; Number of cases is 2, Range of values is 0 to 128
  1782                           ; switch strategies available:
  1783                           ; Name         Instructions Cycles
  1784                           ; simple_byte            7     4 (average)
  1785                           ;	Chosen strategy is simple_byte
  1786  001564  0A00               	xorlw	0	; case 0
  1787  001566  B4D8               	btfsc	status,2,c
  1788  001568  D7A5               	goto	l2577
  1789  00156A  0A80               	xorlw	128	; case 128
  1790  00156C  B4D8               	btfsc	status,2,c
  1791  00156E  D7CB               	goto	l2579
  1792  001570                     l2587:
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;doprnt.c: 1524: (putch(c) );
  1796  001570  0100               	movlb	0	; () banked
  1797  001572  51F1               	movf	printf@c& (0+255),w,b
  1798  001574  EC72  F00F         	call	_putch
  1799  001578                     l2589:
  1800  001578  0100               	movlb	0	; () banked
  1801  00157A  07ED               	decf	printf@prec& (0+255),f,b
  1802  00157C  0100               	movlb	0	; () banked
  1803  00157E  29ED               	incf	printf@prec& (0+255),w,b
  1804  001580  A4D8               	btfss	status,2,c
  1805  001582  D7ED               	goto	l2585
  1806  001584                     l2591:
  1807  001584  C0E4  FFF6         	movff	printf@f,tblptrl
  1808  001588  C0E5  FFF7         	movff	printf@f+1,tblptrh
  1809  00158C  0100               	movlb	0	; () banked
  1810  00158E  4BE4               	infsnz	printf@f& (0+255),f,b
  1811  001590  2BE5               	incf	(printf@f+1)& (0+255),f,b
  1812  001592                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1813  001592  6AF8               	clrf	tblptru,c
  1814  001594                     	endif
  1815  001594                     	if	0	;tblptru may be non-zero
  1816  001594                     	endif
  1817  001594  0008               	tblrd		*
  1818  001596  CFF5 F0F1          	movff	tablat,printf@c
  1819  00159A  0100               	movlb	0	; () banked
  1820  00159C  51F1               	movf	printf@c& (0+255),w,b
  1821  00159E  B4D8               	btfsc	status,2,c
  1822  0015A0  0012               	return	
  1823  0015A2  D6DC               	goto	l2513
  1824  0015A4                     __end_of_printf:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           prodh	equ	0xFF4
  1831                           prodl	equ	0xFF3
  1832                           intcon	equ	0xFF2
  1833                           postinc0	equ	0xFEE
  1834                           wreg	equ	0xFE8
  1835                           postinc2	equ	0xFDE
  1836                           postdec2	equ	0xFDD
  1837                           fsr2h	equ	0xFDA
  1838                           fsr2l	equ	0xFD9
  1839                           status	equ	0xFD8
  1840                           
  1841 ;; *************** function _putch *****************
  1842 ;; Defined at:
  1843 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  txData          1    wreg     unsigned char 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  txData          1   37[COMRAM] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;Total ram usage:        1 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    5
  1864 ;; This function calls:
  1865 ;;		_EUSART1_Write
  1866 ;; This function is called by:
  1867 ;;		_printf
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text4
  1872  001EE4                     __ptext4:
  1873                           	opt stack 0
  1874  001EE4                     _putch:
  1875                           	opt stack 23
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;incstack = 0
  1879                           ;putch@txData stored from wreg
  1880  001EE4  6E26               	movwf	putch@txData,c
  1881                           
  1882                           ;eusart1.c: 172: EUSART1_Write(txData);
  1883  001EE6  5026               	movf	putch@txData,w,c
  1884  001EE8  EC78  F00E         	call	_EUSART1_Write
  1885  001EEC  0012               	return		;funcret
  1886  001EEE                     __end_of_putch:
  1887                           	opt stack 0
  1888                           tblptru	equ	0xFF8
  1889                           tblptrh	equ	0xFF7
  1890                           tblptrl	equ	0xFF6
  1891                           tablat	equ	0xFF5
  1892                           prodh	equ	0xFF4
  1893                           prodl	equ	0xFF3
  1894                           intcon	equ	0xFF2
  1895                           postinc0	equ	0xFEE
  1896                           wreg	equ	0xFE8
  1897                           postinc2	equ	0xFDE
  1898                           postdec2	equ	0xFDD
  1899                           fsr2h	equ	0xFDA
  1900                           fsr2l	equ	0xFD9
  1901                           status	equ	0xFD8
  1902                           
  1903 ;; *************** function _EUSART1_Write *****************
  1904 ;; Defined at:
  1905 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  txData          1    wreg     unsigned char 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  txData          1   36[COMRAM] unsigned char 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;Total ram usage:        1 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    4
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_putch
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text5
  1934  001CF0                     __ptext5:
  1935                           	opt stack 0
  1936  001CF0                     _EUSART1_Write:
  1937                           	opt stack 23
  1938                           
  1939                           ;incstack = 0
  1940                           ;EUSART1_Write@txData stored from wreg
  1941  001CF0  6E25               	movwf	EUSART1_Write@txData,c
  1942  001CF2                     l2455:
  1943  001CF2  503A               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  1944  001CF4  B4D8               	btfsc	status,2,c
  1945  001CF6  D7FD               	goto	l2455
  1946                           
  1947                           ;eusart1.c: 146: }
  1948                           ;eusart1.c: 148: if(0 == PIE1bits.TX1IE)
  1949  001CF8  B89D               	btfsc	3997,4,c	;volatile
  1950  001CFA  D003               	goto	l110
  1951                           
  1952                           ;eusart1.c: 149: {
  1953                           ;eusart1.c: 150: TXREG1 = txData;
  1954  001CFC  C025  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1955                           
  1956                           ;eusart1.c: 151: }
  1957  001D00  D012               	goto	l2469
  1958  001D02                     l110:
  1959                           
  1960                           ;eusart1.c: 152: else
  1961                           ;eusart1.c: 153: {
  1962                           ;eusart1.c: 154: PIE1bits.TX1IE = 0;
  1963  001D02  989D               	bcf	3997,4,c	;volatile
  1964                           
  1965                           ;eusart1.c: 155: eusart1TxBuffer[eusart1TxHead++] = txData;
  1966  001D04  5034               	movf	_eusart1TxHead,w,c
  1967  001D06  0D01               	mullw	1
  1968  001D08  0E00               	movlw	low _eusart1TxBuffer
  1969  001D0A  24F3               	addwf	prodl,w,c
  1970  001D0C  6ED9               	movwf	fsr2l,c
  1971  001D0E  0E01               	movlw	high _eusart1TxBuffer
  1972  001D10  20F4               	addwfc	prodh,w,c
  1973  001D12  6EDA               	movwf	fsr2h,c
  1974  001D14  C025  FFDF         	movff	EUSART1_Write@txData,indf2
  1975  001D18  2A34               	incf	_eusart1TxHead,f,c
  1976                           
  1977                           ;eusart1.c: 156: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  1978  001D1A  0E7F               	movlw	127
  1979  001D1C  6434               	cpfsgt	_eusart1TxHead,c
  1980  001D1E  D002               	goto	l2467
  1981                           
  1982                           ;eusart1.c: 157: {
  1983                           ;eusart1.c: 158: eusart1TxHead = 0;
  1984  001D20  0E00               	movlw	0
  1985  001D22  6E34               	movwf	_eusart1TxHead,c
  1986  001D24                     l2467:
  1987                           
  1988                           ;eusart1.c: 159: }
  1989                           ;eusart1.c: 160: eusart1TxBufferRemaining--;
  1990  001D24  063A               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  1991  001D26                     l2469:
  1992                           
  1993                           ;eusart1.c: 161: }
  1994                           ;eusart1.c: 162: PIE1bits.TX1IE = 1;
  1995  001D26  889D               	bsf	3997,4,c	;volatile
  1996  001D28  0012               	return		;funcret
  1997  001D2A                     __end_of_EUSART1_Write:
  1998                           	opt stack 0
  1999                           tblptru	equ	0xFF8
  2000                           tblptrh	equ	0xFF7
  2001                           tblptrl	equ	0xFF6
  2002                           tablat	equ	0xFF5
  2003                           prodh	equ	0xFF4
  2004                           prodl	equ	0xFF3
  2005                           intcon	equ	0xFF2
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           indf2	equ	0xFDF
  2009                           postinc2	equ	0xFDE
  2010                           postdec2	equ	0xFDD
  2011                           fsr2h	equ	0xFDA
  2012                           fsr2l	equ	0xFD9
  2013                           status	equ	0xFD8
  2014                           
  2015 ;; *************** function ___lwmod *****************
  2016 ;; Defined at:
  2017 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  dividend        2    0[BANK0 ] unsigned int 
  2020 ;;  divisor         2    2[BANK0 ] unsigned int 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  counter         1   43[COMRAM] unsigned char 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  2    0[BANK0 ] unsigned int 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2032 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;Total ram usage:        5 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    4
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_printf
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text6
  2047  001B86                     __ptext6:
  2048                           	opt stack 0
  2049  001B86                     ___lwmod:
  2050                           	opt stack 24
  2051                           
  2052                           ;incstack = 0
  2053  001B86  0100               	movlb	0	; () banked
  2054  001B88  51E2               	movf	___lwmod@divisor& (0+255),w,b
  2055  001B8A  0100               	movlb	0	; () banked
  2056  001B8C  11E3               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  2057  001B8E  B4D8               	btfsc	status,2,c
  2058  001B90  D023               	goto	l812
  2059                           
  2060                           ; BSR set to: 0
  2061  001B92  0E01               	movlw	1
  2062  001B94  6E2C               	movwf	___lwmod@counter,c
  2063  001B96  D005               	goto	l2501
  2064  001B98                     l2499:
  2065                           
  2066                           ; BSR set to: 0
  2067  001B98  0100               	movlb	0	; () banked
  2068  001B9A  90D8               	bcf	status,0,c
  2069  001B9C  37E2               	rlcf	___lwmod@divisor& (0+255),f,b
  2070  001B9E  37E3               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2071  001BA0  2A2C               	incf	___lwmod@counter,f,c
  2072  001BA2                     l2501:
  2073                           
  2074                           ; BSR set to: 0
  2075  001BA2  0100               	movlb	0	; () banked
  2076  001BA4  AFE3               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2077  001BA6  D7F8               	goto	l2499
  2078  001BA8                     l2503:
  2079                           
  2080                           ; BSR set to: 0
  2081  001BA8  0100               	movlb	0	; () banked
  2082  001BAA  51E2               	movf	___lwmod@divisor& (0+255),w,b
  2083  001BAC  0100               	movlb	0	; () banked
  2084  001BAE  5DE0               	subwf	___lwmod@dividend& (0+255),w,b
  2085  001BB0  0100               	movlb	0	; () banked
  2086  001BB2  51E3               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2087  001BB4  0100               	movlb	0	; () banked
  2088  001BB6  59E1               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2089  001BB8  A0D8               	btfss	status,0,c
  2090  001BBA  D008               	goto	l2507
  2091                           
  2092                           ; BSR set to: 0
  2093  001BBC  0100               	movlb	0	; () banked
  2094  001BBE  51E2               	movf	___lwmod@divisor& (0+255),w,b
  2095  001BC0  0100               	movlb	0	; () banked
  2096  001BC2  5FE0               	subwf	___lwmod@dividend& (0+255),f,b
  2097  001BC4  0100               	movlb	0	; () banked
  2098  001BC6  51E3               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2099  001BC8  0100               	movlb	0	; () banked
  2100  001BCA  5BE1               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2101  001BCC                     l2507:
  2102                           
  2103                           ; BSR set to: 0
  2104  001BCC  0100               	movlb	0	; () banked
  2105  001BCE  90D8               	bcf	status,0,c
  2106  001BD0  33E3               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2107  001BD2  33E2               	rrcf	___lwmod@divisor& (0+255),f,b
  2108                           
  2109                           ; BSR set to: 0
  2110  001BD4  2E2C               	decfsz	___lwmod@counter,f,c
  2111  001BD6  D7E8               	goto	l2503
  2112  001BD8                     l812:
  2113                           
  2114                           ; BSR set to: 0
  2115  001BD8  C0E0  F0E0         	movff	___lwmod@dividend,?___lwmod
  2116  001BDC  C0E1  F0E1         	movff	___lwmod@dividend+1,?___lwmod+1
  2117                           
  2118                           ; BSR set to: 0
  2119  001BE0  0012               	return		;funcret
  2120  001BE2                     __end_of___lwmod:
  2121                           	opt stack 0
  2122                           tblptru	equ	0xFF8
  2123                           tblptrh	equ	0xFF7
  2124                           tblptrl	equ	0xFF6
  2125                           tablat	equ	0xFF5
  2126                           prodh	equ	0xFF4
  2127                           prodl	equ	0xFF3
  2128                           intcon	equ	0xFF2
  2129                           postinc0	equ	0xFEE
  2130                           wreg	equ	0xFE8
  2131                           indf2	equ	0xFDF
  2132                           postinc2	equ	0xFDE
  2133                           postdec2	equ	0xFDD
  2134                           fsr2h	equ	0xFDA
  2135                           fsr2l	equ	0xFD9
  2136                           status	equ	0xFD8
  2137                           
  2138 ;; *************** function ___lwdiv *****************
  2139 ;; Defined at:
  2140 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  dividend        2   36[COMRAM] unsigned int 
  2143 ;;  divisor         2   38[COMRAM] unsigned int 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  quotient        2   41[COMRAM] unsigned int 
  2146 ;;  counter         1   40[COMRAM] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  2   36[COMRAM] unsigned int 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2157 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;Total ram usage:        7 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    4
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_printf
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text7
  2171  001BE2                     __ptext7:
  2172                           	opt stack 0
  2173  001BE2                     ___lwdiv:
  2174                           	opt stack 24
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;incstack = 0
  2178  001BE2  0E00               	movlw	0
  2179  001BE4  6E2B               	movwf	___lwdiv@quotient+1,c
  2180  001BE6  0E00               	movlw	0
  2181  001BE8  6E2A               	movwf	___lwdiv@quotient,c
  2182  001BEA  5027               	movf	___lwdiv@divisor,w,c
  2183  001BEC  1028               	iorwf	___lwdiv@divisor+1,w,c
  2184  001BEE  B4D8               	btfsc	status,2,c
  2185  001BF0  D01C               	goto	l802
  2186  001BF2  0E01               	movlw	1
  2187  001BF4  6E29               	movwf	___lwdiv@counter,c
  2188  001BF6  D004               	goto	l2481
  2189  001BF8                     l2479:
  2190  001BF8  90D8               	bcf	status,0,c
  2191  001BFA  3627               	rlcf	___lwdiv@divisor,f,c
  2192  001BFC  3628               	rlcf	___lwdiv@divisor+1,f,c
  2193  001BFE  2A29               	incf	___lwdiv@counter,f,c
  2194  001C00                     l2481:
  2195  001C00  AE28               	btfss	___lwdiv@divisor+1,7,c
  2196  001C02  D7FA               	goto	l2479
  2197  001C04                     l2483:
  2198  001C04  90D8               	bcf	status,0,c
  2199  001C06  362A               	rlcf	___lwdiv@quotient,f,c
  2200  001C08  362B               	rlcf	___lwdiv@quotient+1,f,c
  2201  001C0A  5027               	movf	___lwdiv@divisor,w,c
  2202  001C0C  5C25               	subwf	___lwdiv@dividend,w,c
  2203  001C0E  5028               	movf	___lwdiv@divisor+1,w,c
  2204  001C10  5826               	subwfb	___lwdiv@dividend+1,w,c
  2205  001C12  A0D8               	btfss	status,0,c
  2206  001C14  D005               	goto	l2491
  2207  001C16  5027               	movf	___lwdiv@divisor,w,c
  2208  001C18  5E25               	subwf	___lwdiv@dividend,f,c
  2209  001C1A  5028               	movf	___lwdiv@divisor+1,w,c
  2210  001C1C  5A26               	subwfb	___lwdiv@dividend+1,f,c
  2211  001C1E  802A               	bsf	___lwdiv@quotient,0,c
  2212  001C20                     l2491:
  2213  001C20  90D8               	bcf	status,0,c
  2214  001C22  3228               	rrcf	___lwdiv@divisor+1,f,c
  2215  001C24  3227               	rrcf	___lwdiv@divisor,f,c
  2216  001C26  2E29               	decfsz	___lwdiv@counter,f,c
  2217  001C28  D7ED               	goto	l2483
  2218  001C2A                     l802:
  2219  001C2A  C02A  F025         	movff	___lwdiv@quotient,?___lwdiv
  2220  001C2E  C02B  F026         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2221  001C32  0012               	return		;funcret
  2222  001C34                     __end_of___lwdiv:
  2223                           	opt stack 0
  2224                           tblptru	equ	0xFF8
  2225                           tblptrh	equ	0xFF7
  2226                           tblptrl	equ	0xFF6
  2227                           tablat	equ	0xFF5
  2228                           prodh	equ	0xFF4
  2229                           prodl	equ	0xFF3
  2230                           intcon	equ	0xFF2
  2231                           postinc0	equ	0xFEE
  2232                           wreg	equ	0xFE8
  2233                           indf2	equ	0xFDF
  2234                           postinc2	equ	0xFDE
  2235                           postdec2	equ	0xFDD
  2236                           fsr2h	equ	0xFDA
  2237                           fsr2l	equ	0xFD9
  2238                           status	equ	0xFD8
  2239                           
  2240 ;; *************** function _SYSTEM_Initialize *****************
  2241 ;; Defined at:
  2242 ;;		line 112 in file "mcc_generated_files/mcc.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    6
  2263 ;; This function calls:
  2264 ;;		_EPWM1_Initialize
  2265 ;;		_EUSART1_Initialize
  2266 ;;		_INTERRUPT_Initialize
  2267 ;;		_OSCILLATOR_Initialize
  2268 ;;		_PIN_MANAGER_Initialize
  2269 ;;		_TMR2_Initialize
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text8
  2276  001EAA                     __ptext8:
  2277                           	opt stack 0
  2278  001EAA                     _SYSTEM_Initialize:
  2279                           	opt stack 24
  2280                           
  2281                           ;mcc.c: 115: INTERRUPT_Initialize();
  2282                           
  2283                           ;incstack = 0
  2284  001EAA  EC77  F00F         	call	_INTERRUPT_Initialize	;wreg free
  2285                           
  2286                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  2287  001EAE  ECCA  F00E         	call	_PIN_MANAGER_Initialize	;wreg free
  2288                           
  2289                           ;mcc.c: 117: OSCILLATOR_Initialize();
  2290  001EB2  EC6B  F00F         	call	_OSCILLATOR_Initialize	;wreg free
  2291                           
  2292                           ;mcc.c: 118: EPWM1_Initialize();
  2293  001EB6  EC45  F00F         	call	_EPWM1_Initialize	;wreg free
  2294                           
  2295                           ;mcc.c: 119: TMR2_Initialize();
  2296  001EBA  EC62  F00F         	call	_TMR2_Initialize	;wreg free
  2297                           
  2298                           ;mcc.c: 120: EUSART1_Initialize();
  2299  001EBE  ECE4  F00E         	call	_EUSART1_Initialize	;wreg free
  2300  001EC2  0012               	return		;funcret
  2301  001EC4                     __end_of_SYSTEM_Initialize:
  2302                           	opt stack 0
  2303                           tblptru	equ	0xFF8
  2304                           tblptrh	equ	0xFF7
  2305                           tblptrl	equ	0xFF6
  2306                           tablat	equ	0xFF5
  2307                           prodh	equ	0xFF4
  2308                           prodl	equ	0xFF3
  2309                           intcon	equ	0xFF2
  2310                           postinc0	equ	0xFEE
  2311                           wreg	equ	0xFE8
  2312                           indf2	equ	0xFDF
  2313                           postinc2	equ	0xFDE
  2314                           postdec2	equ	0xFDD
  2315                           fsr2h	equ	0xFDA
  2316                           fsr2l	equ	0xFD9
  2317                           status	equ	0xFD8
  2318                           
  2319 ;; *************** function _TMR2_Initialize *****************
  2320 ;; Defined at:
  2321 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    5
  2342 ;; This function calls:
  2343 ;;		_TMR2_StartTimer
  2344 ;; This function is called by:
  2345 ;;		_SYSTEM_Initialize
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text9
  2350  001EC4                     __ptext9:
  2351                           	opt stack 0
  2352  001EC4                     _TMR2_Initialize:
  2353                           	opt stack 24
  2354                           
  2355                           ;tmr2.c: 63: T2CON = 0x00;
  2356                           
  2357                           ;incstack = 0
  2358  001EC4  0E00               	movlw	0
  2359  001EC6  6EBA               	movwf	4026,c	;volatile
  2360                           
  2361                           ;tmr2.c: 66: PR2 = 0xFF;
  2362  001EC8  68BB               	setf	4027,c	;volatile
  2363                           
  2364                           ;tmr2.c: 69: TMR2 = 0x00;
  2365  001ECA  0E00               	movlw	0
  2366  001ECC  6EBC               	movwf	4028,c	;volatile
  2367                           
  2368                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  2369  001ECE  929E               	bcf	3998,1,c	;volatile
  2370                           
  2371                           ;tmr2.c: 75: TMR2_StartTimer();
  2372  001ED0  EC81  F00F         	call	_TMR2_StartTimer	;wreg free
  2373  001ED4  0012               	return		;funcret
  2374  001ED6                     __end_of_TMR2_Initialize:
  2375                           	opt stack 0
  2376                           tblptru	equ	0xFF8
  2377                           tblptrh	equ	0xFF7
  2378                           tblptrl	equ	0xFF6
  2379                           tablat	equ	0xFF5
  2380                           prodh	equ	0xFF4
  2381                           prodl	equ	0xFF3
  2382                           intcon	equ	0xFF2
  2383                           postinc0	equ	0xFEE
  2384                           wreg	equ	0xFE8
  2385                           indf2	equ	0xFDF
  2386                           postinc2	equ	0xFDE
  2387                           postdec2	equ	0xFDD
  2388                           fsr2h	equ	0xFDA
  2389                           fsr2l	equ	0xFD9
  2390                           status	equ	0xFD8
  2391                           
  2392 ;; *************** function _TMR2_StartTimer *****************
  2393 ;; Defined at:
  2394 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		None
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;Total ram usage:        0 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    4
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_TMR2_Initialize
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text10
  2423  001F02                     __ptext10:
  2424                           	opt stack 0
  2425  001F02                     _TMR2_StartTimer:
  2426                           	opt stack 24
  2427                           
  2428                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  2429                           
  2430                           ;incstack = 0
  2431  001F02  84BA               	bsf	4026,2,c	;volatile
  2432  001F04  0012               	return		;funcret
  2433  001F06                     __end_of_TMR2_StartTimer:
  2434                           	opt stack 0
  2435                           tblptru	equ	0xFF8
  2436                           tblptrh	equ	0xFF7
  2437                           tblptrl	equ	0xFF6
  2438                           tablat	equ	0xFF5
  2439                           prodh	equ	0xFF4
  2440                           prodl	equ	0xFF3
  2441                           intcon	equ	0xFF2
  2442                           postinc0	equ	0xFEE
  2443                           wreg	equ	0xFE8
  2444                           indf2	equ	0xFDF
  2445                           postinc2	equ	0xFDE
  2446                           postdec2	equ	0xFDD
  2447                           fsr2h	equ	0xFDA
  2448                           fsr2l	equ	0xFD9
  2449                           status	equ	0xFD8
  2450                           
  2451 ;; *************** function _PIN_MANAGER_Initialize *****************
  2452 ;; Defined at:
  2453 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;		None
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;		None
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, status,2
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;Total ram usage:        0 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; Hardware stack levels required when called:    4
  2474 ;; This function calls:
  2475 ;;		Nothing
  2476 ;; This function is called by:
  2477 ;;		_SYSTEM_Initialize
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text11
  2482  001D94                     __ptext11:
  2483                           	opt stack 0
  2484  001D94                     _PIN_MANAGER_Initialize:
  2485                           	opt stack 25
  2486                           
  2487                           ;pin_manager.c: 51: LATB = 0x0;
  2488                           
  2489                           ;incstack = 0
  2490  001D94  0E00               	movlw	0
  2491  001D96  6E8A               	movwf	3978,c	;volatile
  2492                           
  2493                           ;pin_manager.c: 52: LATA = 0x0;
  2494  001D98  0E00               	movlw	0
  2495  001D9A  6E89               	movwf	3977,c	;volatile
  2496                           
  2497                           ;pin_manager.c: 53: LATC = 0x0;
  2498  001D9C  0E00               	movlw	0
  2499  001D9E  6E8B               	movwf	3979,c	;volatile
  2500                           
  2501                           ;pin_manager.c: 54: ANSELA = 0x2F;
  2502  001DA0  0E2F               	movlw	47
  2503  001DA2  010F               	movlb	15	; () banked
  2504  001DA4  6F38               	movwf	56,b	;volatile
  2505                           
  2506                           ;pin_manager.c: 55: ANSELB = 0x3E;
  2507  001DA6  0E3E               	movlw	62
  2508  001DA8  010F               	movlb	15	; () banked
  2509  001DAA  6F39               	movwf	57,b	;volatile
  2510                           
  2511                           ;pin_manager.c: 56: ANSELC = 0x38;
  2512  001DAC  0E38               	movlw	56
  2513  001DAE  010F               	movlb	15	; () banked
  2514  001DB0  6F3A               	movwf	58,b	;volatile
  2515                           
  2516                           ;pin_manager.c: 57: TRISB = 0xC8;
  2517  001DB2  0EC8               	movlw	200
  2518  001DB4  6E93               	movwf	3987,c	;volatile
  2519                           
  2520                           ;pin_manager.c: 58: TRISC = 0xF9;
  2521  001DB6  0EF9               	movlw	249
  2522  001DB8  6E94               	movwf	3988,c	;volatile
  2523                           
  2524                           ;pin_manager.c: 59: WPUB = 0xFE;
  2525  001DBA  0EFE               	movlw	254
  2526  001DBC  6E61               	movwf	3937,c	;volatile
  2527                           
  2528                           ;pin_manager.c: 60: TRISA = 0xEF;
  2529  001DBE  0EEF               	movlw	239
  2530  001DC0  6E92               	movwf	3986,c	;volatile
  2531                           
  2532                           ; BSR set to: 15
  2533                           ;pin_manager.c: 62: INTCON2bits.nRBPU = 0x1;
  2534  001DC2  8EF1               	bsf	intcon2,7,c	;volatile
  2535                           
  2536                           ; BSR set to: 15
  2537                           ;pin_manager.c: 66: INTCONbits.RBIE = 0;
  2538  001DC4  96F2               	bcf	intcon,3,c	;volatile
  2539                           
  2540                           ; BSR set to: 15
  2541  001DC6  0012               	return		;funcret
  2542  001DC8                     __end_of_PIN_MANAGER_Initialize:
  2543                           	opt stack 0
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           prodh	equ	0xFF4
  2549                           prodl	equ	0xFF3
  2550                           intcon	equ	0xFF2
  2551                           intcon2	equ	0xFF1
  2552                           postinc0	equ	0xFEE
  2553                           wreg	equ	0xFE8
  2554                           indf2	equ	0xFDF
  2555                           postinc2	equ	0xFDE
  2556                           postdec2	equ	0xFDD
  2557                           fsr2h	equ	0xFDA
  2558                           fsr2l	equ	0xFD9
  2559                           status	equ	0xFD8
  2560                           
  2561 ;; *************** function _OSCILLATOR_Initialize *****************
  2562 ;; Defined at:
  2563 ;;		line 123 in file "mcc_generated_files/mcc.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    4
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_SYSTEM_Initialize
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text12
  2592  001ED6                     __ptext12:
  2593                           	opt stack 0
  2594  001ED6                     _OSCILLATOR_Initialize:
  2595                           	opt stack 25
  2596                           
  2597                           ;mcc.c: 126: OSCCON = 0x70;
  2598                           
  2599                           ; BSR set to: 15
  2600                           ;incstack = 0
  2601  001ED6  0E70               	movlw	112
  2602  001ED8  6ED3               	movwf	4051,c	;volatile
  2603                           
  2604                           ;mcc.c: 128: OSCCON2 = 0x04;
  2605  001EDA  0E04               	movlw	4
  2606  001EDC  6ED2               	movwf	4050,c	;volatile
  2607                           
  2608                           ;mcc.c: 130: OSCTUNE = 0x40;
  2609  001EDE  0E40               	movlw	64
  2610  001EE0  6E9B               	movwf	3995,c	;volatile
  2611  001EE2  0012               	return		;funcret
  2612  001EE4                     __end_of_OSCILLATOR_Initialize:
  2613                           	opt stack 0
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           prodh	equ	0xFF4
  2619                           prodl	equ	0xFF3
  2620                           intcon	equ	0xFF2
  2621                           intcon2	equ	0xFF1
  2622                           postinc0	equ	0xFEE
  2623                           wreg	equ	0xFE8
  2624                           indf2	equ	0xFDF
  2625                           postinc2	equ	0xFDE
  2626                           postdec2	equ	0xFDD
  2627                           fsr2h	equ	0xFDA
  2628                           fsr2l	equ	0xFD9
  2629                           status	equ	0xFD8
  2630                           
  2631 ;; *************** function _INTERRUPT_Initialize *****************
  2632 ;; Defined at:
  2633 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;		None
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		None
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;Total ram usage:        0 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; Hardware stack levels required when called:    4
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_SYSTEM_Initialize
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text13
  2662  001EEE                     __ptext13:
  2663                           	opt stack 0
  2664  001EEE                     _INTERRUPT_Initialize:
  2665                           	opt stack 25
  2666                           
  2667                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  2668                           
  2669                           ;incstack = 0
  2670  001EEE  9ED0               	bcf	4048,7,c	;volatile
  2671                           
  2672                           ;interrupt_manager.c: 60: INTCON2bits.TMR0IP = 0;
  2673  001EF0  94F1               	bcf	intcon2,2,c	;volatile
  2674                           
  2675                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  2676  001EF2  989F               	bcf	3999,4,c	;volatile
  2677                           
  2678                           ;interrupt_manager.c: 64: IPR1bits.RC1IP = 0;
  2679  001EF4  9A9F               	bcf	3999,5,c	;volatile
  2680  001EF6  0012               	return		;funcret
  2681  001EF8                     __end_of_INTERRUPT_Initialize:
  2682                           	opt stack 0
  2683                           tblptru	equ	0xFF8
  2684                           tblptrh	equ	0xFF7
  2685                           tblptrl	equ	0xFF6
  2686                           tablat	equ	0xFF5
  2687                           prodh	equ	0xFF4
  2688                           prodl	equ	0xFF3
  2689                           intcon	equ	0xFF2
  2690                           intcon2	equ	0xFF1
  2691                           postinc0	equ	0xFEE
  2692                           wreg	equ	0xFE8
  2693                           indf2	equ	0xFDF
  2694                           postinc2	equ	0xFDE
  2695                           postdec2	equ	0xFDD
  2696                           fsr2h	equ	0xFDA
  2697                           fsr2l	equ	0xFD9
  2698                           status	equ	0xFD8
  2699                           
  2700 ;; *************** function _EUSART1_Initialize *****************
  2701 ;; Defined at:
  2702 ;;		line 84 in file "mcc_generated_files/eusart1.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;		None
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      void 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;Total ram usage:        0 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    4
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_SYSTEM_Initialize
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text14
  2731  001DC8                     __ptext14:
  2732                           	opt stack 0
  2733  001DC8                     _EUSART1_Initialize:
  2734                           	opt stack 25
  2735                           
  2736                           ;eusart1.c: 87: PIE1bits.RC1IE = 0;
  2737                           
  2738                           ;incstack = 0
  2739  001DC8  9A9D               	bcf	3997,5,c	;volatile
  2740                           
  2741                           ;eusart1.c: 88: PIE1bits.TX1IE = 0;
  2742  001DCA  989D               	bcf	3997,4,c	;volatile
  2743                           
  2744                           ;eusart1.c: 93: BAUDCON1 = 0x00;
  2745  001DCC  0E00               	movlw	0
  2746  001DCE  6EB8               	movwf	4024,c	;volatile
  2747                           
  2748                           ;eusart1.c: 96: RCSTA1 = 0x90;
  2749  001DD0  0E90               	movlw	144
  2750  001DD2  6EAB               	movwf	4011,c	;volatile
  2751                           
  2752                           ;eusart1.c: 99: TXSTA1 = 0x20;
  2753  001DD4  0E20               	movlw	32
  2754  001DD6  6EAC               	movwf	4012,c	;volatile
  2755                           
  2756                           ;eusart1.c: 102: SPBRG1 = 0x10;
  2757  001DD8  0E10               	movlw	16
  2758  001DDA  6EAF               	movwf	4015,c	;volatile
  2759                           
  2760                           ;eusart1.c: 105: SPBRGH1 = 0x00;
  2761  001DDC  0E00               	movlw	0
  2762  001DDE  6EB0               	movwf	4016,c	;volatile
  2763                           
  2764                           ;eusart1.c: 109: eusart1TxHead = 0;
  2765  001DE0  0E00               	movlw	0
  2766  001DE2  6E34               	movwf	_eusart1TxHead,c
  2767                           
  2768                           ;eusart1.c: 110: eusart1TxTail = 0;
  2769  001DE4  0E00               	movlw	0
  2770  001DE6  6E35               	movwf	_eusart1TxTail,c
  2771                           
  2772                           ;eusart1.c: 111: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  2773  001DE8  0E80               	movlw	128
  2774  001DEA  6E3A               	movwf	_eusart1TxBufferRemaining,c	;volatile
  2775                           
  2776                           ;eusart1.c: 113: eusart1RxHead = 0;
  2777  001DEC  0E00               	movlw	0
  2778  001DEE  6E32               	movwf	_eusart1RxHead,c
  2779                           
  2780                           ;eusart1.c: 114: eusart1RxTail = 0;
  2781  001DF0  0E00               	movlw	0
  2782  001DF2  6E33               	movwf	_eusart1RxTail,c
  2783                           
  2784                           ;eusart1.c: 115: eusart1RxCount = 0;
  2785  001DF4  0E00               	movlw	0
  2786  001DF6  6E31               	movwf	_eusart1RxCount,c	;volatile
  2787                           
  2788                           ;eusart1.c: 118: PIE1bits.RC1IE = 1;
  2789  001DF8  8A9D               	bsf	3997,5,c	;volatile
  2790  001DFA  0012               	return		;funcret
  2791  001DFC                     __end_of_EUSART1_Initialize:
  2792                           	opt stack 0
  2793                           tblptru	equ	0xFF8
  2794                           tblptrh	equ	0xFF7
  2795                           tblptrl	equ	0xFF6
  2796                           tablat	equ	0xFF5
  2797                           prodh	equ	0xFF4
  2798                           prodl	equ	0xFF3
  2799                           intcon	equ	0xFF2
  2800                           intcon2	equ	0xFF1
  2801                           postinc0	equ	0xFEE
  2802                           wreg	equ	0xFE8
  2803                           indf2	equ	0xFDF
  2804                           postinc2	equ	0xFDE
  2805                           postdec2	equ	0xFDD
  2806                           fsr2h	equ	0xFDA
  2807                           fsr2l	equ	0xFD9
  2808                           status	equ	0xFD8
  2809                           
  2810 ;; *************** function _EPWM1_Initialize *****************
  2811 ;; Defined at:
  2812 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;		None
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;		None
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;Total ram usage:        0 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    4
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_SYSTEM_Initialize
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text15
  2841  001E8A                     __ptext15:
  2842                           	opt stack 0
  2843  001E8A                     _EPWM1_Initialize:
  2844                           	opt stack 25
  2845                           
  2846                           ;epwm1.c: 69: CCP1CON = 0x0E;
  2847                           
  2848                           ;incstack = 0
  2849  001E8A  0E0E               	movlw	14
  2850  001E8C  6EBD               	movwf	4029,c	;volatile
  2851                           
  2852                           ;epwm1.c: 72: ECCP1AS = 0x00;
  2853  001E8E  0E00               	movlw	0
  2854  001E90  6EB6               	movwf	4022,c	;volatile
  2855                           
  2856                           ;epwm1.c: 75: PWM1CON = 0x82;
  2857  001E92  0E82               	movlw	130
  2858  001E94  6EB7               	movwf	4023,c	;volatile
  2859                           
  2860                           ;epwm1.c: 78: PSTR1CON = 0x01;
  2861  001E96  0E01               	movlw	1
  2862  001E98  6EB9               	movwf	4025,c	;volatile
  2863                           
  2864                           ;epwm1.c: 81: CCPR1L = 0x00;
  2865  001E9A  0E00               	movlw	0
  2866  001E9C  6EBE               	movwf	4030,c	;volatile
  2867                           
  2868                           ;epwm1.c: 84: CCPR1H = 0x00;
  2869  001E9E  0E00               	movlw	0
  2870  001EA0  6EBF               	movwf	4031,c	;volatile
  2871                           
  2872                           ;epwm1.c: 88: CCPTMRS0bits.C1TSEL = 0x0;
  2873  001EA2  0EFC               	movlw	-4
  2874  001EA4  010F               	movlb	15	; () banked
  2875  001EA6  1749               	andwf	73,f,b	;volatile
  2876                           
  2877                           ; BSR set to: 15
  2878  001EA8  0012               	return		;funcret
  2879  001EAA                     __end_of_EPWM1_Initialize:
  2880                           	opt stack 0
  2881                           tblptru	equ	0xFF8
  2882                           tblptrh	equ	0xFF7
  2883                           tblptrl	equ	0xFF6
  2884                           tablat	equ	0xFF5
  2885                           prodh	equ	0xFF4
  2886                           prodl	equ	0xFF3
  2887                           intcon	equ	0xFF2
  2888                           intcon2	equ	0xFF1
  2889                           postinc0	equ	0xFEE
  2890                           wreg	equ	0xFE8
  2891                           indf2	equ	0xFDF
  2892                           postinc2	equ	0xFDE
  2893                           postdec2	equ	0xFDD
  2894                           fsr2h	equ	0xFDA
  2895                           fsr2l	equ	0xFD9
  2896                           status	equ	0xFD8
  2897                           
  2898 ;; *************** function _I2C_Write_Byte *****************
  2899 ;; Defined at:
  2900 ;;		line 100 in file "soft_i2c.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  Byte            1    wreg     unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  Byte            1   39[COMRAM] unsigned char 
  2905 ;;  i               1   40[COMRAM] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;		None               void
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;Total ram usage:        5 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    4
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text16
  2930  0019EE                     __ptext16:
  2931                           	opt stack 0
  2932  0019EE                     _I2C_Write_Byte:
  2933                           	opt stack 26
  2934                           
  2935                           ; BSR set to: 15
  2936                           ;incstack = 0
  2937                           ;I2C_Write_Byte@Byte stored from wreg
  2938  0019EE  6E28               	movwf	I2C_Write_Byte@Byte,c
  2939                           
  2940                           ;soft_i2c.c: 102: unsigned char i;
  2941                           ;soft_i2c.c: 104: for(i=0;i<8;i++)
  2942  0019F0  0E00               	movlw	0
  2943  0019F2  6E29               	movwf	I2C_Write_Byte@i,c
  2944  0019F4                     l2205:
  2945  0019F4  0E07               	movlw	7
  2946  0019F6  6429               	cpfsgt	I2C_Write_Byte@i,c
  2947  0019F8  D001               	goto	l346
  2948  0019FA  D02B               	goto	l347
  2949  0019FC                     l346:
  2950                           
  2951                           ;soft_i2c.c: 105: {
  2952                           ;soft_i2c.c: 106: TRISC3 = 0;
  2953  0019FC  9694               	bcf	3988,3,c	;volatile
  2954                           
  2955                           ;soft_i2c.c: 108: _delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  2956  0019FE  0E34               	movlw	52
  2957  001A00  6E25               	movwf	??_I2C_Write_Byte& (0+255),c
  2958  001A02  0EF2               	movlw	242
  2959  001A04                     u1967:
  2960  001A04  2EE8               	decfsz	wreg,f,c
  2961  001A06  D7FE               	goto	u1967
  2962  001A08  2E25               	decfsz	??_I2C_Write_Byte& (0+255),f,c
  2963  001A0A  D7FC               	goto	u1967
  2964                           
  2965                           ;soft_i2c.c: 111: if((Byte<<i)&0x80)
  2966  001A0C  C029  F025         	movff	I2C_Write_Byte@i,??_I2C_Write_Byte
  2967  001A10  5028               	movf	I2C_Write_Byte@Byte,w,c
  2968  001A12  6E26               	movwf	(??_I2C_Write_Byte+1)& (0+255),c
  2969  001A14  6A27               	clrf	(??_I2C_Write_Byte+2)& (0+255),c
  2970  001A16  2A25               	incf	??_I2C_Write_Byte,f,c
  2971  001A18  D003               	goto	u1474
  2972  001A1A                     u1475:
  2973  001A1A  90D8               	bcf	status,0,c
  2974  001A1C  3626               	rlcf	??_I2C_Write_Byte+1,f,c
  2975  001A1E  3627               	rlcf	??_I2C_Write_Byte+2,f,c
  2976  001A20                     u1474:
  2977  001A20  2E25               	decfsz	??_I2C_Write_Byte,f,c
  2978  001A22  D7FB               	goto	u1475
  2979  001A24  AE26               	btfss	??_I2C_Write_Byte+1,7,c
  2980  001A26  D002               	goto	l348
  2981                           
  2982                           ;soft_i2c.c: 112: TRISC4 = 1;
  2983  001A28  8894               	bsf	3988,4,c	;volatile
  2984  001A2A  D001               	goto	l2215
  2985  001A2C                     l348:
  2986                           
  2987                           ;soft_i2c.c: 113: else
  2988                           ;soft_i2c.c: 114: TRISC4 = 0;
  2989  001A2C  9894               	bcf	3988,4,c	;volatile
  2990  001A2E                     l2215:
  2991                           
  2992                           ;soft_i2c.c: 116: _delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  2993  001A2E  0E34               	movlw	52
  2994  001A30  6E25               	movwf	??_I2C_Write_Byte& (0+255),c
  2995  001A32  0EF2               	movlw	242
  2996  001A34                     u1977:
  2997  001A34  2EE8               	decfsz	wreg,f,c
  2998  001A36  D7FE               	goto	u1977
  2999  001A38  2E25               	decfsz	??_I2C_Write_Byte& (0+255),f,c
  3000  001A3A  D7FC               	goto	u1977
  3001                           
  3002                           ;soft_i2c.c: 117: TRISC3 = 1;
  3003  001A3C  8694               	bsf	3988,3,c	;volatile
  3004                           
  3005                           ;soft_i2c.c: 118: _delay((unsigned long)((5000)*(64000000/4000000.0)));
  3006  001A3E  0E68               	movlw	104
  3007  001A40  6E25               	movwf	??_I2C_Write_Byte& (0+255),c
  3008  001A42  0EE4               	movlw	228
  3009  001A44                     u1987:
  3010  001A44  2EE8               	decfsz	wreg,f,c
  3011  001A46  D7FE               	goto	u1987
  3012  001A48  2E25               	decfsz	??_I2C_Write_Byte& (0+255),f,c
  3013  001A4A  D7FC               	goto	u1987
  3014  001A4C  D000               	nop2	
  3015  001A4E  2A29               	incf	I2C_Write_Byte@i,f,c
  3016  001A50  D7D1               	goto	l2205
  3017  001A52                     l347:
  3018                           
  3019                           ;soft_i2c.c: 119: }
  3020                           ;soft_i2c.c: 122: TRISC3 = 0;
  3021  001A52  9694               	bcf	3988,3,c	;volatile
  3022                           
  3023                           ;soft_i2c.c: 123: TRISC4 = 1;
  3024  001A54  8894               	bsf	3988,4,c	;volatile
  3025                           
  3026                           ;soft_i2c.c: 124: _delay((unsigned long)((5000)*(64000000/4000000.0)));
  3027  001A56  0E68               	movlw	104
  3028  001A58  6E25               	movwf	??_I2C_Write_Byte& (0+255),c
  3029  001A5A  0EE4               	movlw	228
  3030  001A5C                     u1997:
  3031  001A5C  2EE8               	decfsz	wreg,f,c
  3032  001A5E  D7FE               	goto	u1997
  3033  001A60  2E25               	decfsz	??_I2C_Write_Byte& (0+255),f,c
  3034  001A62  D7FC               	goto	u1997
  3035  001A64  D000               	nop2	
  3036                           
  3037                           ;soft_i2c.c: 125: TRISC3 = 1;
  3038  001A66  8694               	bsf	3988,3,c	;volatile
  3039                           
  3040                           ;soft_i2c.c: 126: _delay((unsigned long)((5000)*(64000000/4000000.0)));
  3041  001A68  0E68               	movlw	104
  3042  001A6A  6E25               	movwf	??_I2C_Write_Byte& (0+255),c
  3043  001A6C  0EE4               	movlw	228
  3044  001A6E                     u2007:
  3045  001A6E  2EE8               	decfsz	wreg,f,c
  3046  001A70  D7FE               	goto	u2007
  3047  001A72  2E25               	decfsz	??_I2C_Write_Byte& (0+255),f,c
  3048  001A74  D7FC               	goto	u2007
  3049  001A76  D000               	nop2	
  3050                           
  3051                           ;soft_i2c.c: 128: return LATC4;
  3052                           ;	Return value of _I2C_Write_Byte is never used
  3053  001A78  0012               	return	
  3054  001A7A                     __end_of_I2C_Write_Byte:
  3055                           	opt stack 0
  3056                           tblptru	equ	0xFF8
  3057                           tblptrh	equ	0xFF7
  3058                           tblptrl	equ	0xFF6
  3059                           tablat	equ	0xFF5
  3060                           prodh	equ	0xFF4
  3061                           prodl	equ	0xFF3
  3062                           intcon	equ	0xFF2
  3063                           intcon2	equ	0xFF1
  3064                           postinc0	equ	0xFEE
  3065                           wreg	equ	0xFE8
  3066                           indf2	equ	0xFDF
  3067                           postinc2	equ	0xFDE
  3068                           postdec2	equ	0xFDD
  3069                           fsr2h	equ	0xFDA
  3070                           fsr2l	equ	0xFD9
  3071                           status	equ	0xFD8
  3072                           
  3073 ;; *************** function _I2C_Stop *****************
  3074 ;; Defined at:
  3075 ;;		line 56 in file "soft_i2c.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;Total ram usage:        1 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    4
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_main
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text17
  3104  001C34                     __ptext17:
  3105                           	opt stack 0
  3106  001C34                     _I2C_Stop:
  3107                           	opt stack 26
  3108                           
  3109                           ;soft_i2c.c: 58: TRISC3 = 0;
  3110                           
  3111                           ;incstack = 0
  3112  001C34  9694               	bcf	3988,3,c	;volatile
  3113                           
  3114                           ;soft_i2c.c: 60: _delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  3115  001C36  0E34               	movlw	52
  3116  001C38  6E25               	movwf	??_I2C_Stop& (0+255),c
  3117  001C3A  0EF2               	movlw	242
  3118  001C3C                     u2017:
  3119  001C3C  2EE8               	decfsz	wreg,f,c
  3120  001C3E  D7FE               	goto	u2017
  3121  001C40  2E25               	decfsz	??_I2C_Stop& (0+255),f,c
  3122  001C42  D7FC               	goto	u2017
  3123                           
  3124                           ;soft_i2c.c: 62: TRISC4 = 0;
  3125  001C44  9894               	bcf	3988,4,c	;volatile
  3126                           
  3127                           ;soft_i2c.c: 64: _delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  3128  001C46  0E34               	movlw	52
  3129  001C48  6E25               	movwf	??_I2C_Stop& (0+255),c
  3130  001C4A  0EF2               	movlw	242
  3131  001C4C                     u2027:
  3132  001C4C  2EE8               	decfsz	wreg,f,c
  3133  001C4E  D7FE               	goto	u2027
  3134  001C50  2E25               	decfsz	??_I2C_Stop& (0+255),f,c
  3135  001C52  D7FC               	goto	u2027
  3136                           
  3137                           ;soft_i2c.c: 65: TRISC3 = 1;
  3138  001C54  8694               	bsf	3988,3,c	;volatile
  3139                           
  3140                           ;soft_i2c.c: 66: _delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  3141  001C56  0E34               	movlw	52
  3142  001C58  6E25               	movwf	??_I2C_Stop& (0+255),c
  3143  001C5A  0EF2               	movlw	242
  3144  001C5C                     u2037:
  3145  001C5C  2EE8               	decfsz	wreg,f,c
  3146  001C5E  D7FE               	goto	u2037
  3147  001C60  2E25               	decfsz	??_I2C_Stop& (0+255),f,c
  3148  001C62  D7FC               	goto	u2037
  3149                           
  3150                           ;soft_i2c.c: 67: TRISC4 = 1;
  3151  001C64  8894               	bsf	3988,4,c	;volatile
  3152                           
  3153                           ;soft_i2c.c: 68: _delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  3154  001C66  0E34               	movlw	52
  3155  001C68  6E25               	movwf	??_I2C_Stop& (0+255),c
  3156  001C6A  0EF2               	movlw	242
  3157  001C6C                     u2047:
  3158  001C6C  2EE8               	decfsz	wreg,f,c
  3159  001C6E  D7FE               	goto	u2047
  3160  001C70  2E25               	decfsz	??_I2C_Stop& (0+255),f,c
  3161  001C72  D7FC               	goto	u2047
  3162  001C74  0012               	return		;funcret
  3163  001C76                     __end_of_I2C_Stop:
  3164                           	opt stack 0
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           prodh	equ	0xFF4
  3170                           prodl	equ	0xFF3
  3171                           intcon	equ	0xFF2
  3172                           intcon2	equ	0xFF1
  3173                           postinc0	equ	0xFEE
  3174                           wreg	equ	0xFE8
  3175                           indf2	equ	0xFDF
  3176                           postinc2	equ	0xFDE
  3177                           postdec2	equ	0xFDD
  3178                           fsr2h	equ	0xFDA
  3179                           fsr2l	equ	0xFD9
  3180                           status	equ	0xFD8
  3181                           
  3182 ;; *************** function _I2C_Start *****************
  3183 ;; Defined at:
  3184 ;;		line 25 in file "soft_i2c.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;Total ram usage:        1 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    4
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text18
  3213  001E5E                     __ptext18:
  3214                           	opt stack 0
  3215  001E5E                     _I2C_Start:
  3216                           	opt stack 26
  3217                           
  3218                           ;soft_i2c.c: 27: LATC4 = 0;
  3219                           
  3220                           ;incstack = 0
  3221  001E5E  988B               	bcf	3979,4,c	;volatile
  3222                           
  3223                           ;soft_i2c.c: 28: LATC3 = 0;
  3224  001E60  968B               	bcf	3979,3,c	;volatile
  3225                           
  3226                           ;soft_i2c.c: 30: TRISC3 = 1;
  3227  001E62  8694               	bsf	3988,3,c	;volatile
  3228                           
  3229                           ;soft_i2c.c: 31: TRISC4 = 1;
  3230  001E64  8894               	bsf	3988,4,c	;volatile
  3231                           
  3232                           ;soft_i2c.c: 32: _delay((unsigned long)((5000)*(64000000/4000000.0)));
  3233  001E66  0E68               	movlw	104
  3234  001E68  6E25               	movwf	??_I2C_Start& (0+255),c
  3235  001E6A  0EE4               	movlw	228
  3236  001E6C                     u2057:
  3237  001E6C  2EE8               	decfsz	wreg,f,c
  3238  001E6E  D7FE               	goto	u2057
  3239  001E70  2E25               	decfsz	??_I2C_Start& (0+255),f,c
  3240  001E72  D7FC               	goto	u2057
  3241  001E74  D000               	nop2	
  3242                           
  3243                           ;soft_i2c.c: 33: TRISC4 = 0;
  3244  001E76  9894               	bcf	3988,4,c	;volatile
  3245                           
  3246                           ;soft_i2c.c: 34: _delay((unsigned long)((5000)*(64000000/4000000.0)));
  3247  001E78  0E68               	movlw	104
  3248  001E7A  6E25               	movwf	??_I2C_Start& (0+255),c
  3249  001E7C  0EE4               	movlw	228
  3250  001E7E                     u2067:
  3251  001E7E  2EE8               	decfsz	wreg,f,c
  3252  001E80  D7FE               	goto	u2067
  3253  001E82  2E25               	decfsz	??_I2C_Start& (0+255),f,c
  3254  001E84  D7FC               	goto	u2067
  3255  001E86  D000               	nop2	
  3256  001E88  0012               	return		;funcret
  3257  001E8A                     __end_of_I2C_Start:
  3258                           	opt stack 0
  3259                           tblptru	equ	0xFF8
  3260                           tblptrh	equ	0xFF7
  3261                           tblptrl	equ	0xFF6
  3262                           tablat	equ	0xFF5
  3263                           prodh	equ	0xFF4
  3264                           prodl	equ	0xFF3
  3265                           intcon	equ	0xFF2
  3266                           intcon2	equ	0xFF1
  3267                           postinc0	equ	0xFEE
  3268                           wreg	equ	0xFE8
  3269                           indf2	equ	0xFDF
  3270                           postinc2	equ	0xFDE
  3271                           postdec2	equ	0xFDD
  3272                           fsr2h	equ	0xFDA
  3273                           fsr2l	equ	0xFD9
  3274                           status	equ	0xFD8
  3275                           
  3276 ;; *************** function _I2C_Read_Byte *****************
  3277 ;; Defined at:
  3278 ;;		line 133 in file "soft_i2c.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;		None
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  RxData          1   37[COMRAM] unsigned char 
  3283 ;;  i               1    0        unsigned char 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      unsigned char 
  3286 ;; Registers used:
  3287 ;;		wreg, status,2, status,0
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;Total ram usage:        2 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    4
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_main
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text19
  3308  0015A4                     __ptext19:
  3309                           	opt stack 0
  3310  0015A4                     _I2C_Read_Byte:
  3311                           	opt stack 26
  3312                           
  3313                           ;soft_i2c.c: 135: unsigned char i, RxData = 0;
  3314                           
  3315                           ;incstack = 0
  3316  0015A4  0E00               	movlw	0
  3317  0015A6  6E26               	movwf	I2C_Read_Byte@RxData,c
  3318                           
  3319                           ;soft_i2c.c: 137: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((5000)*(64000000/400000
      +                          0.0))); TRISC3 = 1;_delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  3320  0015A8  9694               	bcf	3988,3,c	;volatile
  3321  0015AA  8894               	bsf	3988,4,c	;volatile
  3322  0015AC  0E68               	movlw	104
  3323  0015AE  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3324  0015B0  0EE4               	movlw	228
  3325  0015B2                     u2077:
  3326  0015B2  2EE8               	decfsz	wreg,f,c
  3327  0015B4  D7FE               	goto	u2077
  3328  0015B6  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3329  0015B8  D7FC               	goto	u2077
  3330  0015BA  D000               	nop2	
  3331  0015BC  8694               	bsf	3988,3,c	;volatile
  3332  0015BE  0E34               	movlw	52
  3333  0015C0  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3334  0015C2  0EF2               	movlw	242
  3335  0015C4                     u2087:
  3336  0015C4  2EE8               	decfsz	wreg,f,c
  3337  0015C6  D7FE               	goto	u2087
  3338  0015C8  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3339  0015CA  D7FC               	goto	u2087
  3340                           
  3341                           ;soft_i2c.c: 138: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  3342  0015CC  A882               	btfss	3970,4,c	;volatile
  3343  0015CE  D002               	goto	u1500
  3344  0015D0  0E01               	movlw	1
  3345  0015D2  D001               	goto	u1506
  3346  0015D4                     u1500:
  3347  0015D4  0E00               	movlw	0
  3348  0015D6                     u1506:
  3349  0015D6  1226               	iorwf	I2C_Read_Byte@RxData,f,c
  3350  0015D8  5026               	movf	I2C_Read_Byte@RxData,w,c
  3351  0015DA  2426               	addwf	I2C_Read_Byte@RxData,w,c
  3352  0015DC  6E26               	movwf	I2C_Read_Byte@RxData,c
  3353                           
  3354                           ;soft_i2c.c: 139: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((5000)*(64000000/400000
      +                          0.0))); TRISC3 = 1;_delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  3355  0015DE  9694               	bcf	3988,3,c	;volatile
  3356  0015E0  8894               	bsf	3988,4,c	;volatile
  3357  0015E2  0E68               	movlw	104
  3358  0015E4  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3359  0015E6  0EE4               	movlw	228
  3360  0015E8                     u2097:
  3361  0015E8  2EE8               	decfsz	wreg,f,c
  3362  0015EA  D7FE               	goto	u2097
  3363  0015EC  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3364  0015EE  D7FC               	goto	u2097
  3365  0015F0  D000               	nop2	
  3366  0015F2  8694               	bsf	3988,3,c	;volatile
  3367  0015F4  0E34               	movlw	52
  3368  0015F6  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3369  0015F8  0EF2               	movlw	242
  3370  0015FA                     u2107:
  3371  0015FA  2EE8               	decfsz	wreg,f,c
  3372  0015FC  D7FE               	goto	u2107
  3373  0015FE  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3374  001600  D7FC               	goto	u2107
  3375                           
  3376                           ;soft_i2c.c: 140: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  3377  001602  A882               	btfss	3970,4,c	;volatile
  3378  001604  D002               	goto	u1510
  3379  001606  0E01               	movlw	1
  3380  001608  D001               	goto	u1516
  3381  00160A                     u1510:
  3382  00160A  0E00               	movlw	0
  3383  00160C                     u1516:
  3384  00160C  1226               	iorwf	I2C_Read_Byte@RxData,f,c
  3385  00160E  5026               	movf	I2C_Read_Byte@RxData,w,c
  3386  001610  2426               	addwf	I2C_Read_Byte@RxData,w,c
  3387  001612  6E26               	movwf	I2C_Read_Byte@RxData,c
  3388                           
  3389                           ;soft_i2c.c: 141: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((5000)*(64000000/400000
      +                          0.0))); TRISC3 = 1;_delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  3390  001614  9694               	bcf	3988,3,c	;volatile
  3391  001616  8894               	bsf	3988,4,c	;volatile
  3392  001618  0E68               	movlw	104
  3393  00161A  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3394  00161C  0EE4               	movlw	228
  3395  00161E                     u2117:
  3396  00161E  2EE8               	decfsz	wreg,f,c
  3397  001620  D7FE               	goto	u2117
  3398  001622  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3399  001624  D7FC               	goto	u2117
  3400  001626  D000               	nop2	
  3401  001628  8694               	bsf	3988,3,c	;volatile
  3402  00162A  0E34               	movlw	52
  3403  00162C  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3404  00162E  0EF2               	movlw	242
  3405  001630                     u2127:
  3406  001630  2EE8               	decfsz	wreg,f,c
  3407  001632  D7FE               	goto	u2127
  3408  001634  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3409  001636  D7FC               	goto	u2127
  3410                           
  3411                           ;soft_i2c.c: 142: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  3412  001638  A882               	btfss	3970,4,c	;volatile
  3413  00163A  D002               	goto	u1520
  3414  00163C  0E01               	movlw	1
  3415  00163E  D001               	goto	u1526
  3416  001640                     u1520:
  3417  001640  0E00               	movlw	0
  3418  001642                     u1526:
  3419  001642  1226               	iorwf	I2C_Read_Byte@RxData,f,c
  3420  001644  5026               	movf	I2C_Read_Byte@RxData,w,c
  3421  001646  2426               	addwf	I2C_Read_Byte@RxData,w,c
  3422  001648  6E26               	movwf	I2C_Read_Byte@RxData,c
  3423                           
  3424                           ;soft_i2c.c: 143: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((5000)*(64000000/400000
      +                          0.0))); TRISC3 = 1;_delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  3425  00164A  9694               	bcf	3988,3,c	;volatile
  3426  00164C  8894               	bsf	3988,4,c	;volatile
  3427  00164E  0E68               	movlw	104
  3428  001650  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3429  001652  0EE4               	movlw	228
  3430  001654                     u2137:
  3431  001654  2EE8               	decfsz	wreg,f,c
  3432  001656  D7FE               	goto	u2137
  3433  001658  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3434  00165A  D7FC               	goto	u2137
  3435  00165C  D000               	nop2	
  3436  00165E  8694               	bsf	3988,3,c	;volatile
  3437  001660  0E34               	movlw	52
  3438  001662  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3439  001664  0EF2               	movlw	242
  3440  001666                     u2147:
  3441  001666  2EE8               	decfsz	wreg,f,c
  3442  001668  D7FE               	goto	u2147
  3443  00166A  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3444  00166C  D7FC               	goto	u2147
  3445                           
  3446                           ;soft_i2c.c: 144: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  3447  00166E  A882               	btfss	3970,4,c	;volatile
  3448  001670  D002               	goto	u1530
  3449  001672  0E01               	movlw	1
  3450  001674  D001               	goto	u1536
  3451  001676                     u1530:
  3452  001676  0E00               	movlw	0
  3453  001678                     u1536:
  3454  001678  1226               	iorwf	I2C_Read_Byte@RxData,f,c
  3455  00167A  5026               	movf	I2C_Read_Byte@RxData,w,c
  3456  00167C  2426               	addwf	I2C_Read_Byte@RxData,w,c
  3457  00167E  6E26               	movwf	I2C_Read_Byte@RxData,c
  3458                           
  3459                           ;soft_i2c.c: 145: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((5000)*(64000000/400000
      +                          0.0))); TRISC3 = 1;_delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  3460  001680  9694               	bcf	3988,3,c	;volatile
  3461  001682  8894               	bsf	3988,4,c	;volatile
  3462  001684  0E68               	movlw	104
  3463  001686  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3464  001688  0EE4               	movlw	228
  3465  00168A                     u2157:
  3466  00168A  2EE8               	decfsz	wreg,f,c
  3467  00168C  D7FE               	goto	u2157
  3468  00168E  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3469  001690  D7FC               	goto	u2157
  3470  001692  D000               	nop2	
  3471  001694  8694               	bsf	3988,3,c	;volatile
  3472  001696  0E34               	movlw	52
  3473  001698  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3474  00169A  0EF2               	movlw	242
  3475  00169C                     u2167:
  3476  00169C  2EE8               	decfsz	wreg,f,c
  3477  00169E  D7FE               	goto	u2167
  3478  0016A0  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3479  0016A2  D7FC               	goto	u2167
  3480                           
  3481                           ;soft_i2c.c: 146: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  3482  0016A4  A882               	btfss	3970,4,c	;volatile
  3483  0016A6  D002               	goto	u1540
  3484  0016A8  0E01               	movlw	1
  3485  0016AA  D001               	goto	u1546
  3486  0016AC                     u1540:
  3487  0016AC  0E00               	movlw	0
  3488  0016AE                     u1546:
  3489  0016AE  1226               	iorwf	I2C_Read_Byte@RxData,f,c
  3490  0016B0  5026               	movf	I2C_Read_Byte@RxData,w,c
  3491  0016B2  2426               	addwf	I2C_Read_Byte@RxData,w,c
  3492  0016B4  6E26               	movwf	I2C_Read_Byte@RxData,c
  3493                           
  3494                           ;soft_i2c.c: 147: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((5000)*(64000000/400000
      +                          0.0))); TRISC3 = 1;_delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  3495  0016B6  9694               	bcf	3988,3,c	;volatile
  3496  0016B8  8894               	bsf	3988,4,c	;volatile
  3497  0016BA  0E68               	movlw	104
  3498  0016BC  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3499  0016BE  0EE4               	movlw	228
  3500  0016C0                     u2177:
  3501  0016C0  2EE8               	decfsz	wreg,f,c
  3502  0016C2  D7FE               	goto	u2177
  3503  0016C4  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3504  0016C6  D7FC               	goto	u2177
  3505  0016C8  D000               	nop2	
  3506  0016CA  8694               	bsf	3988,3,c	;volatile
  3507  0016CC  0E34               	movlw	52
  3508  0016CE  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3509  0016D0  0EF2               	movlw	242
  3510  0016D2                     u2187:
  3511  0016D2  2EE8               	decfsz	wreg,f,c
  3512  0016D4  D7FE               	goto	u2187
  3513  0016D6  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3514  0016D8  D7FC               	goto	u2187
  3515                           
  3516                           ;soft_i2c.c: 148: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  3517  0016DA  A882               	btfss	3970,4,c	;volatile
  3518  0016DC  D002               	goto	u1550
  3519  0016DE  0E01               	movlw	1
  3520  0016E0  D001               	goto	u1556
  3521  0016E2                     u1550:
  3522  0016E2  0E00               	movlw	0
  3523  0016E4                     u1556:
  3524  0016E4  1226               	iorwf	I2C_Read_Byte@RxData,f,c
  3525  0016E6  5026               	movf	I2C_Read_Byte@RxData,w,c
  3526  0016E8  2426               	addwf	I2C_Read_Byte@RxData,w,c
  3527  0016EA  6E26               	movwf	I2C_Read_Byte@RxData,c
  3528                           
  3529                           ;soft_i2c.c: 149: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((5000)*(64000000/400000
      +                          0.0))); TRISC3 = 1;_delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  3530  0016EC  9694               	bcf	3988,3,c	;volatile
  3531  0016EE  8894               	bsf	3988,4,c	;volatile
  3532  0016F0  0E68               	movlw	104
  3533  0016F2  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3534  0016F4  0EE4               	movlw	228
  3535  0016F6                     u2197:
  3536  0016F6  2EE8               	decfsz	wreg,f,c
  3537  0016F8  D7FE               	goto	u2197
  3538  0016FA  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3539  0016FC  D7FC               	goto	u2197
  3540  0016FE  D000               	nop2	
  3541  001700  8694               	bsf	3988,3,c	;volatile
  3542  001702  0E34               	movlw	52
  3543  001704  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3544  001706  0EF2               	movlw	242
  3545  001708                     u2207:
  3546  001708  2EE8               	decfsz	wreg,f,c
  3547  00170A  D7FE               	goto	u2207
  3548  00170C  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3549  00170E  D7FC               	goto	u2207
  3550                           
  3551                           ;soft_i2c.c: 150: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  3552  001710  A882               	btfss	3970,4,c	;volatile
  3553  001712  D002               	goto	u1560
  3554  001714  0E01               	movlw	1
  3555  001716  D001               	goto	u1566
  3556  001718                     u1560:
  3557  001718  0E00               	movlw	0
  3558  00171A                     u1566:
  3559  00171A  1226               	iorwf	I2C_Read_Byte@RxData,f,c
  3560  00171C  5026               	movf	I2C_Read_Byte@RxData,w,c
  3561  00171E  2426               	addwf	I2C_Read_Byte@RxData,w,c
  3562  001720  6E26               	movwf	I2C_Read_Byte@RxData,c
  3563                           
  3564                           ;soft_i2c.c: 151: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((5000)*(64000000/400000
      +                          0.0))); TRISC3 = 1;_delay((unsigned long)((5000/2)*(64000000/4000000.0)));
  3565  001722  9694               	bcf	3988,3,c	;volatile
  3566  001724  8894               	bsf	3988,4,c	;volatile
  3567  001726  0E68               	movlw	104
  3568  001728  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3569  00172A  0EE4               	movlw	228
  3570  00172C                     u2217:
  3571  00172C  2EE8               	decfsz	wreg,f,c
  3572  00172E  D7FE               	goto	u2217
  3573  001730  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3574  001732  D7FC               	goto	u2217
  3575  001734  D000               	nop2	
  3576  001736  8694               	bsf	3988,3,c	;volatile
  3577  001738  0E34               	movlw	52
  3578  00173A  6E25               	movwf	??_I2C_Read_Byte& (0+255),c
  3579  00173C  0EF2               	movlw	242
  3580  00173E                     u2227:
  3581  00173E  2EE8               	decfsz	wreg,f,c
  3582  001740  D7FE               	goto	u2227
  3583  001742  2E25               	decfsz	??_I2C_Read_Byte& (0+255),f,c
  3584  001744  D7FC               	goto	u2227
  3585                           
  3586                           ;soft_i2c.c: 152: RxData |= PORTCbits.RC4;
  3587  001746  A882               	btfss	3970,4,c	;volatile
  3588  001748  D002               	goto	u1570
  3589  00174A  0E01               	movlw	1
  3590  00174C  D001               	goto	u1576
  3591  00174E                     u1570:
  3592  00174E  0E00               	movlw	0
  3593  001750                     u1576:
  3594  001750  1226               	iorwf	I2C_Read_Byte@RxData,f,c
  3595                           
  3596                           ;soft_i2c.c: 154: return RxData;
  3597  001752  5026               	movf	I2C_Read_Byte@RxData,w,c
  3598  001754  0012               	return	
  3599  001756                     __end_of_I2C_Read_Byte:
  3600                           	opt stack 0
  3601                           tblptru	equ	0xFF8
  3602                           tblptrh	equ	0xFF7
  3603                           tblptrl	equ	0xFF6
  3604                           tablat	equ	0xFF5
  3605                           prodh	equ	0xFF4
  3606                           prodl	equ	0xFF3
  3607                           intcon	equ	0xFF2
  3608                           intcon2	equ	0xFF1
  3609                           postinc0	equ	0xFEE
  3610                           wreg	equ	0xFE8
  3611                           indf2	equ	0xFDF
  3612                           postinc2	equ	0xFDE
  3613                           postdec2	equ	0xFDD
  3614                           fsr2h	equ	0xFDA
  3615                           fsr2l	equ	0xFD9
  3616                           status	equ	0xFD8
  3617                           
  3618 ;; *************** function _I2C_Init *****************
  3619 ;; Defined at:
  3620 ;;		line 12 in file "soft_i2c.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;		None
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;		None
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      void 
  3627 ;; Registers used:
  3628 ;;		None
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;Total ram usage:        0 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    4
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_main
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text20
  3649  001EF8                     __ptext20:
  3650                           	opt stack 0
  3651  001EF8                     _I2C_Init:
  3652                           	opt stack 26
  3653                           
  3654                           ;soft_i2c.c: 15: TRISC4 = 1;
  3655                           
  3656                           ;incstack = 0
  3657  001EF8  8894               	bsf	3988,4,c	;volatile
  3658                           
  3659                           ;soft_i2c.c: 16: TRISC3 = 1;
  3660  001EFA  8694               	bsf	3988,3,c	;volatile
  3661                           
  3662                           ;soft_i2c.c: 19: LATC4 = 0;
  3663  001EFC  988B               	bcf	3979,4,c	;volatile
  3664                           
  3665                           ;soft_i2c.c: 20: LATC3 = 0;
  3666  001EFE  968B               	bcf	3979,3,c	;volatile
  3667  001F00  0012               	return		;funcret
  3668  001F02                     __end_of_I2C_Init:
  3669                           	opt stack 0
  3670                           tblptru	equ	0xFF8
  3671                           tblptrh	equ	0xFF7
  3672                           tblptrl	equ	0xFF6
  3673                           tablat	equ	0xFF5
  3674                           prodh	equ	0xFF4
  3675                           prodl	equ	0xFF3
  3676                           intcon	equ	0xFF2
  3677                           intcon2	equ	0xFF1
  3678                           postinc0	equ	0xFEE
  3679                           wreg	equ	0xFE8
  3680                           indf2	equ	0xFDF
  3681                           postinc2	equ	0xFDE
  3682                           postdec2	equ	0xFDD
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function _INTERRUPT_InterruptManager *****************
  3688 ;; Defined at:
  3689 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;Total ram usage:       14 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    3
  3710 ;; This function calls:
  3711 ;;		_EUSART1_Receive_ISR
  3712 ;;		_EUSART1_Transmit_ISR
  3713 ;; This function is called by:
  3714 ;;		Interrupt level 2
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	intcode
  3719  000008                     __pintcode:
  3720                           	opt stack 0
  3721  000008                     _INTERRUPT_InterruptManager:
  3722                           	opt stack 23
  3723                           
  3724                           ;incstack = 0
  3725  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3726  00000A  CFFA F017          	movff	pclath,??_INTERRUPT_InterruptManager
  3727  00000E  CFFB F018          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3728  000012  CFE9 F019          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3729  000016  CFEA F01A          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3730  00001A  CFE1 F01B          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3731  00001E  CFE2 F01C          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3732  000022  CFD9 F01D          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3733  000026  CFDA F01E          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3734  00002A  CFF3 F01F          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3735  00002E  CFF4 F020          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3736  000032  CFF6 F021          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3737  000036  CFF7 F022          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3738  00003A  CFF8 F023          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3739  00003E  CFF5 F024          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3740                           
  3741                           ;interrupt_manager.c: 77: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  3742  000042  B89D               	btfsc	3997,4,c	;volatile
  3743  000044  A89E               	btfss	3998,4,c	;volatile
  3744  000046  D003               	goto	i2l20
  3745                           
  3746                           ;interrupt_manager.c: 78: {
  3747                           ;interrupt_manager.c: 79: EUSART1_Transmit_ISR();
  3748  000048  EC18  F00F         	call	_EUSART1_Transmit_ISR	;wreg free
  3749                           
  3750                           ;interrupt_manager.c: 80: }
  3751  00004C  D005               	goto	i2l24
  3752  00004E                     i2l20:
  3753                           
  3754                           ;interrupt_manager.c: 81: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  3755  00004E  BA9D               	btfsc	3997,5,c	;volatile
  3756  000050  AA9E               	btfss	3998,5,c	;volatile
  3757  000052  D002               	goto	i2l24
  3758                           
  3759                           ;interrupt_manager.c: 82: {
  3760                           ;interrupt_manager.c: 83: EUSART1_Receive_ISR();
  3761  000054  ECAB  F00B         	call	_EUSART1_Receive_ISR	;wreg free
  3762  000058                     i2l24:
  3763  000058  C024  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3764  00005C  C023  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3765  000060  C022  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3766  000064  C021  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3767  000068  C020  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3768  00006C  C01F  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3769  000070  C01E  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3770  000074  C01D  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3771  000078  C01C  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3772  00007C  C01B  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3773  000080  C01A  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3774  000084  C019  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3775  000088  C018  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3776  00008C  C017  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3777  000090  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3778  000092  0011               	retfie		f
  3779  000094                     __end_of_INTERRUPT_InterruptManager:
  3780                           	opt stack 0
  3781                           pclatu	equ	0xFFB
  3782                           pclath	equ	0xFFA
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           prodh	equ	0xFF4
  3788                           prodl	equ	0xFF3
  3789                           intcon	equ	0xFF2
  3790                           intcon2	equ	0xFF1
  3791                           postinc0	equ	0xFEE
  3792                           fsr0h	equ	0xFEA
  3793                           fsr0l	equ	0xFE9
  3794                           wreg	equ	0xFE8
  3795                           fsr1h	equ	0xFE2
  3796                           fsr1l	equ	0xFE1
  3797                           indf2	equ	0xFDF
  3798                           postinc2	equ	0xFDE
  3799                           postdec2	equ	0xFDD
  3800                           fsr2h	equ	0xFDA
  3801                           fsr2l	equ	0xFD9
  3802                           status	equ	0xFD8
  3803                           
  3804 ;; *************** function _EUSART1_Transmit_ISR *****************
  3805 ;; Defined at:
  3806 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;Total ram usage:        0 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_INTERRUPT_InterruptManager
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text22
  3834  001E30                     __ptext22:
  3835                           	opt stack 0
  3836  001E30                     _EUSART1_Transmit_ISR:
  3837                           	opt stack 25
  3838                           
  3839                           ;eusart1.c: 179: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  3840                           
  3841                           ;incstack = 0
  3842  001E30  0E80               	movlw	128
  3843  001E32  603A               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  3844  001E34  D012               	goto	i2l122
  3845                           
  3846                           ;eusart1.c: 180: {
  3847                           ;eusart1.c: 181: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  3848  001E36  5035               	movf	_eusart1TxTail,w,c
  3849  001E38  0D01               	mullw	1
  3850  001E3A  0E00               	movlw	low _eusart1TxBuffer
  3851  001E3C  24F3               	addwf	prodl,w,c
  3852  001E3E  6ED9               	movwf	fsr2l,c
  3853  001E40  0E01               	movlw	high _eusart1TxBuffer
  3854  001E42  20F4               	addwfc	prodh,w,c
  3855  001E44  6EDA               	movwf	fsr2h,c
  3856  001E46  50DF               	movf	indf2,w,c
  3857  001E48  6EAD               	movwf	4013,c	;volatile
  3858  001E4A  2A35               	incf	_eusart1TxTail,f,c
  3859                           
  3860                           ;eusart1.c: 182: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  3861  001E4C  0E7F               	movlw	127
  3862  001E4E  6435               	cpfsgt	_eusart1TxTail,c
  3863  001E50  D002               	goto	i2l2057
  3864                           
  3865                           ;eusart1.c: 183: {
  3866                           ;eusart1.c: 184: eusart1TxTail = 0;
  3867  001E52  0E00               	movlw	0
  3868  001E54  6E35               	movwf	_eusart1TxTail,c
  3869  001E56                     i2l2057:
  3870                           
  3871                           ;eusart1.c: 185: }
  3872                           ;eusart1.c: 186: eusart1TxBufferRemaining++;
  3873  001E56  2A3A               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  3874                           
  3875                           ;eusart1.c: 187: }
  3876  001E58  0012               	return	
  3877  001E5A                     i2l122:
  3878                           
  3879                           ;eusart1.c: 188: else
  3880                           ;eusart1.c: 189: {
  3881                           ;eusart1.c: 190: PIE1bits.TX1IE = 0;
  3882  001E5A  989D               	bcf	3997,4,c	;volatile
  3883  001E5C  0012               	return	
  3884  001E5E                     __end_of_EUSART1_Transmit_ISR:
  3885                           	opt stack 0
  3886                           pclatu	equ	0xFFB
  3887                           pclath	equ	0xFFA
  3888                           tblptru	equ	0xFF8
  3889                           tblptrh	equ	0xFF7
  3890                           tblptrl	equ	0xFF6
  3891                           tablat	equ	0xFF5
  3892                           prodh	equ	0xFF4
  3893                           prodl	equ	0xFF3
  3894                           intcon	equ	0xFF2
  3895                           intcon2	equ	0xFF1
  3896                           postinc0	equ	0xFEE
  3897                           fsr0h	equ	0xFEA
  3898                           fsr0l	equ	0xFE9
  3899                           wreg	equ	0xFE8
  3900                           fsr1h	equ	0xFE2
  3901                           fsr1l	equ	0xFE1
  3902                           indf2	equ	0xFDF
  3903                           postinc2	equ	0xFDE
  3904                           postdec2	equ	0xFDD
  3905                           fsr2h	equ	0xFDA
  3906                           fsr2l	equ	0xFD9
  3907                           status	equ	0xFD8
  3908                           
  3909 ;; *************** function _EUSART1_Receive_ISR *****************
  3910 ;; Defined at:
  3911 ;;		line 194 in file "mcc_generated_files/eusart1.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  state           2   20[COMRAM] int 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;Total ram usage:        3 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; Hardware stack levels required when called:    2
  3932 ;; This function calls:
  3933 ;;		_EUSART1_Read
  3934 ;;		_strcmp
  3935 ;;		_strstr
  3936 ;; This function is called by:
  3937 ;;		_INTERRUPT_InterruptManager
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text23
  3942  001756                     __ptext23:
  3943                           	opt stack 0
  3944  001756                     _EUSART1_Receive_ISR:
  3945                           	opt stack 23
  3946                           
  3947                           ;eusart1.c: 196: if(1 == RCSTA1bits.OERR)
  3948                           
  3949                           ;incstack = 0
  3950  001756  A2AB               	btfss	4011,1,c	;volatile
  3951  001758  D002               	goto	i2l2063
  3952                           
  3953                           ;eusart1.c: 197: {
  3954                           ;eusart1.c: 200: RCSTA1bits.CREN = 0;
  3955  00175A  98AB               	bcf	4011,4,c	;volatile
  3956                           
  3957                           ;eusart1.c: 201: RCSTA1bits.CREN = 1;
  3958  00175C  88AB               	bsf	4011,4,c	;volatile
  3959  00175E                     i2l2063:
  3960                           
  3961                           ;eusart1.c: 202: }
  3962                           ;eusart1.c: 207: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  3963  00175E  5032               	movf	_eusart1RxHead,w,c
  3964  001760  0D01               	mullw	1
  3965  001762  0E00               	movlw	low _eusart1RxBuffer
  3966  001764  24F3               	addwf	prodl,w,c
  3967  001766  6ED9               	movwf	fsr2l,c
  3968  001768  0E02               	movlw	high _eusart1RxBuffer
  3969  00176A  20F4               	addwfc	prodh,w,c
  3970  00176C  6EDA               	movwf	fsr2h,c
  3971  00176E  CFAE FFDF          	movff	4014,indf2	;volatile
  3972  001772  2A32               	incf	_eusart1RxHead,f,c
  3973                           
  3974                           ;eusart1.c: 208: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  3975  001774  0E7F               	movlw	127
  3976  001776  6432               	cpfsgt	_eusart1RxHead,c
  3977  001778  D002               	goto	i2l2071
  3978                           
  3979                           ;eusart1.c: 209: {
  3980                           ;eusart1.c: 210: eusart1RxHead = 0;
  3981  00177A  0E00               	movlw	0
  3982  00177C  6E32               	movwf	_eusart1RxHead,c
  3983  00177E                     i2l2071:
  3984                           
  3985                           ;eusart1.c: 211: }
  3986                           ;eusart1.c: 212: eusart1RxCount++;
  3987  00177E  2A31               	incf	_eusart1RxCount,f,c	;volatile
  3988                           
  3989                           ;eusart1.c: 214: int state = 0;
  3990  001780  0E00               	movlw	0
  3991  001782  6E16               	movwf	EUSART1_Receive_ISR@state+1,c
  3992  001784  0E00               	movlw	0
  3993  001786  6E15               	movwf	EUSART1_Receive_ISR@state,c
  3994                           
  3995                           ;eusart1.c: 216: if(ready)return;
  3996  001788  5037               	movf	_ready,w,c	;volatile
  3997  00178A  A4D8               	btfss	status,2,c
  3998  00178C  0012               	return	
  3999  00178E  D01C               	goto	i2l2087
  4000  001790                     i2l2079:
  4001                           
  4002                           ;eusart1.c: 219: line[index]=EUSART1_Read();
  4003  001790  ECFE  F00E         	call	_EUSART1_Read	;wreg free
  4004  001794  6E14               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  4005  001796  0E60               	movlw	low _line
  4006  001798  242F               	addwf	_index,w,c
  4007  00179A  6ED9               	movwf	fsr2l,c
  4008  00179C  0E00               	movlw	high _line
  4009  00179E  2030               	addwfc	_index+1,w,c
  4010  0017A0  6EDA               	movwf	fsr2h,c
  4011  0017A2  C014  FFDF         	movff	??_EUSART1_Receive_ISR,indf2
  4012                           
  4013                           ;eusart1.c: 220: if (line[index] == '\n'){
  4014  0017A6  0E60               	movlw	low _line
  4015  0017A8  242F               	addwf	_index,w,c
  4016  0017AA  6ED9               	movwf	fsr2l,c
  4017  0017AC  0E00               	movlw	high _line
  4018  0017AE  2030               	addwfc	_index+1,w,c
  4019  0017B0  6EDA               	movwf	fsr2h,c
  4020  0017B2  0E0A               	movlw	10
  4021  0017B4  18DE               	xorwf	postinc2,w,c
  4022  0017B6  A4D8               	btfss	status,2,c
  4023  0017B8  D005               	goto	i2l2085
  4024                           
  4025                           ;eusart1.c: 221: state=1;
  4026  0017BA  0E00               	movlw	0
  4027  0017BC  6E16               	movwf	EUSART1_Receive_ISR@state+1,c
  4028  0017BE  0E01               	movlw	1
  4029  0017C0  6E15               	movwf	EUSART1_Receive_ISR@state,c
  4030                           
  4031                           ;eusart1.c: 222: break;
  4032  0017C2  D005               	goto	i2l2089
  4033  0017C4                     i2l2085:
  4034                           
  4035                           ;eusart1.c: 223: }
  4036                           ;eusart1.c: 224: index++;
  4037  0017C4  4A2F               	infsnz	_index,f,c
  4038  0017C6  2A30               	incf	_index+1,f,c
  4039  0017C8                     i2l2087:
  4040  0017C8  5031               	movf	_eusart1RxCount,w,c	;volatile
  4041  0017CA  A4D8               	btfss	status,2,c
  4042  0017CC  D7E1               	goto	i2l2079
  4043  0017CE                     i2l2089:
  4044                           
  4045                           ;eusart1.c: 225: }
  4046                           ;eusart1.c: 227: if(state==1){
  4047  0017CE  0415               	decf	EUSART1_Receive_ISR@state,w,c
  4048  0017D0  1016               	iorwf	EUSART1_Receive_ISR@state+1,w,c
  4049  0017D2  A4D8               	btfss	status,2,c
  4050  0017D4  0012               	return	
  4051                           
  4052                           ;eusart1.c: 228: line[--index] = '\0';
  4053  0017D6  062F               	decf	_index,f,c
  4054  0017D8  A0D8               	btfss	status,0,c
  4055  0017DA  0630               	decf	_index+1,f,c
  4056  0017DC  0E60               	movlw	low _line
  4057  0017DE  242F               	addwf	_index,w,c
  4058  0017E0  6ED9               	movwf	fsr2l,c
  4059  0017E2  0E00               	movlw	high _line
  4060  0017E4  2030               	addwfc	_index+1,w,c
  4061  0017E6  6EDA               	movwf	fsr2h,c
  4062  0017E8  0E00               	movlw	0
  4063  0017EA  6EDF               	movwf	indf2,c
  4064                           
  4065                           ;eusart1.c: 229: uartState=0;
  4066  0017EC  0E00               	movlw	0
  4067  0017EE  6E38               	movwf	_uartState,c	;volatile
  4068                           
  4069                           ;eusart1.c: 230: if(!strcmp("radio_err",line)){
  4070  0017F0  0E40               	movlw	low STR_1
  4071  0017F2  6E01               	movwf	strcmp@s1,c
  4072  0017F4  0E10               	movlw	high STR_1
  4073  0017F6  6E02               	movwf	strcmp@s1+1,c
  4074  0017F8  0E60               	movlw	low _line
  4075  0017FA  6E03               	movwf	strcmp@s2,c
  4076  0017FC  0E00               	movlw	high _line
  4077  0017FE  6E04               	movwf	strcmp@s2+1,c
  4078  001800  ECAF  F00C         	call	_strcmp	;wreg free
  4079  001804  5001               	movf	?_strcmp,w,c
  4080  001806  1002               	iorwf	?_strcmp+1,w,c
  4081  001808  A4D8               	btfss	status,2,c
  4082  00180A  D002               	goto	i2l2099
  4083                           
  4084                           ;eusart1.c: 231: uartState=5;
  4085  00180C  0E05               	movlw	5
  4086  00180E  D02B               	goto	L12
  4087  001810                     i2l2099:
  4088  001810  0E60               	movlw	low _line
  4089  001812  6E10               	movwf	strstr@s1,c
  4090  001814  0E00               	movlw	high _line
  4091  001816  6E11               	movwf	strstr@s1+1,c
  4092  001818  0E4A               	movlw	low STR_2
  4093  00181A  6E12               	movwf	strstr@s2,c
  4094  00181C  0E10               	movlw	high STR_2
  4095  00181E  6E13               	movwf	strstr@s2+1,c
  4096  001820  EC3D  F00D         	call	_strstr	;wreg free
  4097  001824  5010               	movf	?_strstr,w,c
  4098  001826  1011               	iorwf	?_strstr+1,w,c
  4099  001828  B4D8               	btfsc	status,2,c
  4100  00182A  D00E               	goto	i2l2109
  4101                           
  4102                           ;eusart1.c: 233: if(line[10]=='4'&&line[11]=='3'){
  4103  00182C  0E34               	movlw	52
  4104  00182E  0100               	movlb	0	; () banked
  4105  001830  196A               	xorwf	(_line+10)& (0+255),w,b	;volatile
  4106  001832  A4D8               	btfss	status,2,c
  4107  001834  D007               	goto	i2l2107
  4108                           
  4109                           ; BSR set to: 0
  4110  001836  0E33               	movlw	51
  4111  001838  0100               	movlb	0	; () banked
  4112  00183A  196B               	xorwf	(_line+11)& (0+255),w,b	;volatile
  4113  00183C  A4D8               	btfss	status,2,c
  4114  00183E  D002               	goto	i2l2107
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;eusart1.c: 234: uartState=4;
  4118  001840  0E04               	movlw	4
  4119  001842  D011               	goto	L12
  4120  001844                     i2l2107:
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;eusart1.c: 236: uartState=3;
  4124  001844  0E03               	movlw	3
  4125  001846  D00F               	goto	L12
  4126  001848                     i2l2109:
  4127  001848  0E60               	movlw	low _line
  4128  00184A  6E01               	movwf	strcmp@s1,c
  4129  00184C  0E00               	movlw	high _line
  4130  00184E  6E02               	movwf	strcmp@s1+1,c
  4131  001850  0E34               	movlw	low STR_3
  4132  001852  6E03               	movwf	strcmp@s2,c
  4133  001854  0E10               	movlw	high STR_3
  4134  001856  6E04               	movwf	strcmp@s2+1,c
  4135  001858  ECAF  F00C         	call	_strcmp	;wreg free
  4136  00185C  5001               	movf	?_strcmp,w,c
  4137  00185E  1002               	iorwf	?_strcmp+1,w,c
  4138  001860  A4D8               	btfss	status,2,c
  4139  001862  D003               	goto	i2l2113
  4140  001864  D010               	goto	i2l2115
  4141  001866                     L12:
  4142  001866  6E38               	movwf	_uartState,c	;volatile
  4143                           
  4144                           ;eusart1.c: 240: } else if (!strcmp(line, "ok") != (0)) {
  4145  001868  D010               	goto	i2l138
  4146  00186A                     i2l2113:
  4147  00186A  0E60               	movlw	low _line
  4148  00186C  6E01               	movwf	strcmp@s1,c
  4149  00186E  0E00               	movlw	high _line
  4150  001870  6E02               	movwf	strcmp@s1+1,c
  4151  001872  0E3D               	movlw	low (STR_3+9)
  4152  001874  6E03               	movwf	strcmp@s2,c
  4153  001876  0E10               	movlw	high (STR_3+9)
  4154  001878  6E04               	movwf	strcmp@s2+1,c
  4155  00187A  ECAF  F00C         	call	_strcmp	;wreg free
  4156  00187E  5001               	movf	?_strcmp,w,c
  4157  001880  1002               	iorwf	?_strcmp+1,w,c
  4158  001882  A4D8               	btfss	status,2,c
  4159  001884  D002               	goto	i2l138
  4160  001886                     i2l2115:
  4161                           
  4162                           ;eusart1.c: 241: uartState=1;
  4163  001886  0E01               	movlw	1
  4164  001888  D7EE               	goto	L12
  4165  00188A                     i2l138:
  4166                           
  4167                           ;eusart1.c: 242: }
  4168                           ;eusart1.c: 243: index=0;
  4169  00188A  0E00               	movlw	0
  4170  00188C  6E30               	movwf	_index+1,c
  4171  00188E  0E00               	movlw	0
  4172  001890  6E2F               	movwf	_index,c
  4173                           
  4174                           ;eusart1.c: 244: ready=1;
  4175  001892  0E01               	movlw	1
  4176  001894  6E37               	movwf	_ready,c	;volatile
  4177  001896  0012               	return	
  4178  001898                     __end_of_EUSART1_Receive_ISR:
  4179                           	opt stack 0
  4180                           pclatu	equ	0xFFB
  4181                           pclath	equ	0xFFA
  4182                           tblptru	equ	0xFF8
  4183                           tblptrh	equ	0xFF7
  4184                           tblptrl	equ	0xFF6
  4185                           tablat	equ	0xFF5
  4186                           prodh	equ	0xFF4
  4187                           prodl	equ	0xFF3
  4188                           intcon	equ	0xFF2
  4189                           intcon2	equ	0xFF1
  4190                           postinc0	equ	0xFEE
  4191                           fsr0h	equ	0xFEA
  4192                           fsr0l	equ	0xFE9
  4193                           wreg	equ	0xFE8
  4194                           fsr1h	equ	0xFE2
  4195                           fsr1l	equ	0xFE1
  4196                           indf2	equ	0xFDF
  4197                           postinc2	equ	0xFDE
  4198                           postdec2	equ	0xFDD
  4199                           fsr2h	equ	0xFDA
  4200                           fsr2l	equ	0xFD9
  4201                           status	equ	0xFD8
  4202                           
  4203 ;; *************** function _strstr *****************
  4204 ;; Defined at:
  4205 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strstr.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  4208 ;;		 -> NULL(0), line(128), 
  4209 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  4210 ;;		 -> STR_2(9), 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;		None
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  2   15[COMRAM] PTR unsigned char 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4222 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;Total ram usage:        4 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    1
  4229 ;; This function calls:
  4230 ;;		_strchr
  4231 ;;		_strlen
  4232 ;;		_strncmp
  4233 ;; This function is called by:
  4234 ;;		_EUSART1_Receive_ISR
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text24
  4239  001A7A                     __ptext24:
  4240                           	opt stack 0
  4241  001A7A                     _strstr:
  4242                           	opt stack 23
  4243                           
  4244                           ;incstack = 0
  4245  001A7A  D032               	goto	i2l1957
  4246  001A7C                     i2l1949:
  4247  001A7C  C010  F007         	movff	strstr@s1,strncmp@s1
  4248  001A80  C011  F008         	movff	strstr@s1+1,strncmp@s1+1
  4249  001A84  C012  F009         	movff	strstr@s2,strncmp@s2
  4250  001A88  C013  F00A         	movff	strstr@s2+1,strncmp@s2+1
  4251  001A8C  C012  F001         	movff	strstr@s2,strlen@s
  4252  001A90  C013  F002         	movff	strstr@s2+1,strlen@s+1
  4253  001A94  EC3B  F00E         	call	_strlen	;wreg free
  4254  001A98  C001  F00B         	movff	?_strlen,strncmp@len
  4255  001A9C  C002  F00C         	movff	?_strlen+1,strncmp@len+1
  4256  001AA0  EC80  F00D         	call	_strncmp	;wreg free
  4257  001AA4  5007               	movf	?_strncmp,w,c
  4258  001AA6  1008               	iorwf	?_strncmp+1,w,c
  4259  001AA8  A4D8               	btfss	status,2,c
  4260  001AAA  D005               	goto	i2l1955
  4261  001AAC  C010  F010         	movff	strstr@s1,?_strstr
  4262  001AB0  C011  F011         	movff	strstr@s1+1,?_strstr+1
  4263  001AB4  0012               	return	
  4264  001AB6                     i2l1955:
  4265  001AB6  0E01               	movlw	1
  4266  001AB8  2410               	addwf	strstr@s1,w,c
  4267  001ABA  6E01               	movwf	strchr@ptr,c
  4268  001ABC  0E00               	movlw	0
  4269  001ABE  2011               	addwfc	strstr@s1+1,w,c
  4270  001AC0  6E02               	movwf	strchr@ptr+1,c
  4271  001AC2  C012  FFF6         	movff	strstr@s2,tblptrl
  4272  001AC6  C013  FFF7         	movff	strstr@s2+1,tblptrh
  4273  001ACA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4274  001ACA  6AF8               	clrf	tblptru,c
  4275  001ACC                     	endif
  4276  001ACC                     	if	0	;tblptru may be non-zero
  4277  001ACC                     	endif
  4278  001ACC  0008               	tblrd		*
  4279  001ACE  50F5               	movf	tablat,w,c
  4280  001AD0  6E03               	movwf	strchr@chr,c
  4281  001AD2  6A04               	clrf	strchr@chr+1,c
  4282  001AD4  EC95  F00E         	call	_strchr	;wreg free
  4283  001AD8  C001  F010         	movff	?_strchr,strstr@s1
  4284  001ADC  C002  F011         	movff	?_strchr+1,strstr@s1+1
  4285  001AE0                     i2l1957:
  4286  001AE0  5010               	movf	strstr@s1,w,c
  4287  001AE2  1011               	iorwf	strstr@s1+1,w,c
  4288  001AE4  B4D8               	btfsc	status,2,c
  4289  001AE6  D007               	goto	i2l1961
  4290  001AE8  C010  FFD9         	movff	strstr@s1,fsr2l
  4291  001AEC  C011  FFDA         	movff	strstr@s1+1,fsr2h
  4292  001AF0  50DF               	movf	indf2,w,c
  4293  001AF2  A4D8               	btfss	status,2,c
  4294  001AF4  D7C3               	goto	i2l1949
  4295  001AF6                     i2l1961:
  4296  001AF6  0E00               	movlw	0
  4297  001AF8  6E10               	movwf	?_strstr,c
  4298  001AFA  0E00               	movlw	0
  4299  001AFC  6E11               	movwf	?_strstr+1,c
  4300  001AFE  0012               	return	
  4301  001B00                     __end_of_strstr:
  4302                           	opt stack 0
  4303                           pclatu	equ	0xFFB
  4304                           pclath	equ	0xFFA
  4305                           tblptru	equ	0xFF8
  4306                           tblptrh	equ	0xFF7
  4307                           tblptrl	equ	0xFF6
  4308                           tablat	equ	0xFF5
  4309                           prodh	equ	0xFF4
  4310                           prodl	equ	0xFF3
  4311                           intcon	equ	0xFF2
  4312                           intcon2	equ	0xFF1
  4313                           postinc0	equ	0xFEE
  4314                           fsr0h	equ	0xFEA
  4315                           fsr0l	equ	0xFE9
  4316                           wreg	equ	0xFE8
  4317                           fsr1h	equ	0xFE2
  4318                           fsr1l	equ	0xFE1
  4319                           indf2	equ	0xFDF
  4320                           postinc2	equ	0xFDE
  4321                           postdec2	equ	0xFDD
  4322                           fsr2h	equ	0xFDA
  4323                           fsr2l	equ	0xFD9
  4324                           status	equ	0xFD8
  4325                           
  4326 ;; *************** function _strncmp *****************
  4327 ;; Defined at:
  4328 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strncmp.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  s1              2    6[COMRAM] PTR const unsigned char 
  4331 ;;		 -> NULL(0), line(128), 
  4332 ;;  s2              2    8[COMRAM] PTR const unsigned char 
  4333 ;;		 -> STR_2(9), 
  4334 ;;  len             2   10[COMRAM] unsigned int 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;		None
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  2    6[COMRAM] int 
  4339 ;; Registers used:
  4340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4346 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;Total ram usage:        9 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_strstr
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text25
  4360  001B00                     __ptext25:
  4361                           	opt stack 0
  4362  001B00                     _strncmp:
  4363                           	opt stack 23
  4364                           
  4365                           ;incstack = 0
  4366  001B00  D035               	goto	i2l1871
  4367  001B02                     i2l1861:
  4368  001B02  C007  FFD9         	movff	strncmp@s1,fsr2l
  4369  001B06  C008  FFDA         	movff	strncmp@s1+1,fsr2h
  4370  001B0A  50DF               	movf	indf2,w,c
  4371  001B0C  B4D8               	btfsc	status,2,c
  4372  001B0E  D010               	goto	i2l1865
  4373  001B10  C007  FFD9         	movff	strncmp@s1,fsr2l
  4374  001B14  C008  FFDA         	movff	strncmp@s1+1,fsr2h
  4375  001B18  50DF               	movf	indf2,w,c
  4376  001B1A  6E0D               	movwf	??_strncmp& (0+255),c
  4377  001B1C  C009  FFF6         	movff	strncmp@s2,tblptrl
  4378  001B20  C00A  FFF7         	movff	strncmp@s2+1,tblptrh
  4379  001B24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4380  001B24  6AF8               	clrf	tblptru,c
  4381  001B26                     	endif
  4382  001B26                     	if	0	;tblptru may be non-zero
  4383  001B26                     	endif
  4384  001B26  0008               	tblrd		*
  4385  001B28  50F5               	movf	tablat,w,c
  4386  001B2A  180D               	xorwf	??_strncmp,w,c
  4387  001B2C  B4D8               	btfsc	status,2,c
  4388  001B2E  D01A               	goto	i2l1869
  4389  001B30                     i2l1865:
  4390  001B30  C009  FFF6         	movff	strncmp@s2,tblptrl
  4391  001B34  C00A  FFF7         	movff	strncmp@s2+1,tblptrh
  4392  001B38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4393  001B38  6AF8               	clrf	tblptru,c
  4394  001B3A                     	endif
  4395  001B3A                     	if	0	;tblptru may be non-zero
  4396  001B3A                     	endif
  4397  001B3A  0008               	tblrd		*
  4398  001B3C  50F5               	movf	tablat,w,c
  4399  001B3E  6E0D               	movwf	??_strncmp& (0+255),c
  4400  001B40  6A0E               	clrf	(??_strncmp+1)& (0+255),c
  4401  001B42  1E0D               	comf	??_strncmp,f,c
  4402  001B44  1E0E               	comf	??_strncmp+1,f,c
  4403  001B46  4A0D               	infsnz	??_strncmp,f,c
  4404  001B48  2A0E               	incf	??_strncmp+1,f,c
  4405  001B4A  C007  FFD9         	movff	strncmp@s1,fsr2l
  4406  001B4E  C008  FFDA         	movff	strncmp@s1+1,fsr2h
  4407  001B52  50DF               	movf	indf2,w,c
  4408  001B54  6E0F               	movwf	(??_strncmp+2)& (0+255),c
  4409  001B56  500F               	movf	??_strncmp+2,w,c
  4410  001B58  240D               	addwf	??_strncmp,w,c
  4411  001B5A  6E07               	movwf	?_strncmp,c
  4412  001B5C  0E00               	movlw	0
  4413  001B5E  200E               	addwfc	??_strncmp+1,w,c
  4414  001B60  6E08               	movwf	?_strncmp+1,c
  4415  001B62  0012               	return	
  4416  001B64                     i2l1869:
  4417  001B64  4A07               	infsnz	strncmp@s1,f,c
  4418  001B66  2A08               	incf	strncmp@s1+1,f,c
  4419  001B68  4A09               	infsnz	strncmp@s2,f,c
  4420  001B6A  2A0A               	incf	strncmp@s2+1,f,c
  4421  001B6C                     i2l1871:
  4422  001B6C  060B               	decf	strncmp@len,f,c
  4423  001B6E  A0D8               	btfss	status,0,c
  4424  001B70  060C               	decf	strncmp@len+1,f,c
  4425  001B72  280B               	incf	strncmp@len,w,c
  4426  001B74  E1C6               	bnz	i2l1861
  4427  001B76  280C               	incf	strncmp@len+1,w,c
  4428  001B78  A4D8               	btfss	status,2,c
  4429  001B7A  D7C3               	goto	i2l1861
  4430  001B7C  0E00               	movlw	0
  4431  001B7E  6E08               	movwf	?_strncmp+1,c
  4432  001B80  0E00               	movlw	0
  4433  001B82  6E07               	movwf	?_strncmp,c
  4434  001B84  0012               	return	
  4435  001B86                     __end_of_strncmp:
  4436                           	opt stack 0
  4437                           pclatu	equ	0xFFB
  4438                           pclath	equ	0xFFA
  4439                           tblptru	equ	0xFF8
  4440                           tblptrh	equ	0xFF7
  4441                           tblptrl	equ	0xFF6
  4442                           tablat	equ	0xFF5
  4443                           prodh	equ	0xFF4
  4444                           prodl	equ	0xFF3
  4445                           intcon	equ	0xFF2
  4446                           intcon2	equ	0xFF1
  4447                           postinc0	equ	0xFEE
  4448                           fsr0h	equ	0xFEA
  4449                           fsr0l	equ	0xFE9
  4450                           wreg	equ	0xFE8
  4451                           fsr1h	equ	0xFE2
  4452                           fsr1l	equ	0xFE1
  4453                           indf2	equ	0xFDF
  4454                           postinc2	equ	0xFDE
  4455                           postdec2	equ	0xFDD
  4456                           fsr2h	equ	0xFDA
  4457                           fsr2l	equ	0xFD9
  4458                           status	equ	0xFD8
  4459                           
  4460 ;; *************** function _strlen *****************
  4461 ;; Defined at:
  4462 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strlen.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4465 ;;		 -> STR_2(9), 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  cp              2    4[COMRAM] PTR const unsigned char 
  4468 ;;		 -> STR_2(9), 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  2    0[COMRAM] unsigned int 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;Total ram usage:        6 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_strstr
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text26
  4492  001C76                     __ptext26:
  4493                           	opt stack 0
  4494  001C76                     _strlen:
  4495                           	opt stack 23
  4496                           
  4497                           ;incstack = 0
  4498  001C76  C001  F005         	movff	strlen@s,strlen@cp
  4499  001C7A  C002  F006         	movff	strlen@s+1,strlen@cp+1
  4500  001C7E  D002               	goto	i2l1853
  4501  001C80                     i2l1851:
  4502  001C80  4A05               	infsnz	strlen@cp,f,c
  4503  001C82  2A06               	incf	strlen@cp+1,f,c
  4504  001C84                     i2l1853:
  4505  001C84  C005  FFF6         	movff	strlen@cp,tblptrl
  4506  001C88  C006  FFF7         	movff	strlen@cp+1,tblptrh
  4507  001C8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4508  001C8C  6AF8               	clrf	tblptru,c
  4509  001C8E                     	endif
  4510  001C8E                     	if	0	;tblptru may be non-zero
  4511  001C8E                     	endif
  4512  001C8E  0008               	tblrd		*
  4513  001C90  50F5               	movf	tablat,w,c
  4514  001C92  0900               	iorlw	0
  4515  001C94  A4D8               	btfss	status,2,c
  4516  001C96  D7F4               	goto	i2l1851
  4517  001C98  C001  F003         	movff	strlen@s,??_strlen
  4518  001C9C  C002  F004         	movff	strlen@s+1,??_strlen+1
  4519  001CA0  1E03               	comf	??_strlen,f,c
  4520  001CA2  1E04               	comf	??_strlen+1,f,c
  4521  001CA4  4A03               	infsnz	??_strlen,f,c
  4522  001CA6  2A04               	incf	??_strlen+1,f,c
  4523  001CA8  5005               	movf	strlen@cp,w,c
  4524  001CAA  2403               	addwf	??_strlen,w,c
  4525  001CAC  6E01               	movwf	?_strlen,c
  4526  001CAE  5006               	movf	strlen@cp+1,w,c
  4527  001CB0  2004               	addwfc	??_strlen+1,w,c
  4528  001CB2  6E02               	movwf	?_strlen+1,c
  4529  001CB4  0012               	return	
  4530  001CB6                     __end_of_strlen:
  4531                           	opt stack 0
  4532                           pclatu	equ	0xFFB
  4533                           pclath	equ	0xFFA
  4534                           tblptru	equ	0xFF8
  4535                           tblptrh	equ	0xFF7
  4536                           tblptrl	equ	0xFF6
  4537                           tablat	equ	0xFF5
  4538                           prodh	equ	0xFF4
  4539                           prodl	equ	0xFF3
  4540                           intcon	equ	0xFF2
  4541                           intcon2	equ	0xFF1
  4542                           postinc0	equ	0xFEE
  4543                           fsr0h	equ	0xFEA
  4544                           fsr0l	equ	0xFE9
  4545                           wreg	equ	0xFE8
  4546                           fsr1h	equ	0xFE2
  4547                           fsr1l	equ	0xFE1
  4548                           indf2	equ	0xFDF
  4549                           postinc2	equ	0xFDE
  4550                           postdec2	equ	0xFDD
  4551                           fsr2h	equ	0xFDA
  4552                           fsr2l	equ	0xFD9
  4553                           status	equ	0xFD8
  4554                           
  4555 ;; *************** function _strchr *****************
  4556 ;; Defined at:
  4557 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strchr.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
  4560 ;;		 -> NULL(0), line(128), 
  4561 ;;  chr             2    2[COMRAM] int 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;		None
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  2    0[COMRAM] PTR unsigned char 
  4566 ;; Registers used:
  4567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4573 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;Total ram usage:        5 bytes
  4578 ;; Hardware stack levels used:    1
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_strstr
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text27
  4587  001D2A                     __ptext27:
  4588                           	opt stack 0
  4589  001D2A                     _strchr:
  4590                           	opt stack 23
  4591  001D2A  C001  FFD9         	movff	strchr@ptr,fsr2l
  4592  001D2E  C002  FFDA         	movff	strchr@ptr+1,fsr2h
  4593  001D32  5003               	movf	strchr@chr,w,c
  4594  001D34  18DE               	xorwf	postinc2,w,c
  4595  001D36  A4D8               	btfss	status,2,c
  4596  001D38  D005               	goto	i2l1883
  4597  001D3A  C001  F001         	movff	strchr@ptr,?_strchr
  4598  001D3E  C002  F002         	movff	strchr@ptr+1,?_strchr+1
  4599  001D42  0012               	return	
  4600  001D44                     i2l1883:
  4601  001D44  C001  FFD9         	movff	strchr@ptr,fsr2l
  4602  001D48  C002  FFDA         	movff	strchr@ptr+1,fsr2h
  4603  001D4C  4A01               	infsnz	strchr@ptr,f,c
  4604  001D4E  2A02               	incf	strchr@ptr+1,f,c
  4605  001D50  50DF               	movf	indf2,w,c
  4606  001D52  A4D8               	btfss	status,2,c
  4607  001D54  D7EA               	goto	i2l1877
  4608  001D56  0E00               	movlw	0
  4609  001D58  6E01               	movwf	?_strchr,c
  4610  001D5A  0E00               	movlw	0
  4611  001D5C  6E02               	movwf	?_strchr+1,c
  4612  001D5E  0012               	return	
  4613  001D60                     __end_of_strchr:
  4614                           	opt stack 0
  4615                           pclatu	equ	0xFFB
  4616                           pclath	equ	0xFFA
  4617                           tblptru	equ	0xFF8
  4618                           tblptrh	equ	0xFF7
  4619                           tblptrl	equ	0xFF6
  4620                           tablat	equ	0xFF5
  4621                           prodh	equ	0xFF4
  4622                           prodl	equ	0xFF3
  4623                           intcon	equ	0xFF2
  4624                           intcon2	equ	0xFF1
  4625                           postinc0	equ	0xFEE
  4626                           fsr0h	equ	0xFEA
  4627                           fsr0l	equ	0xFE9
  4628                           wreg	equ	0xFE8
  4629                           fsr1h	equ	0xFE2
  4630                           fsr1l	equ	0xFE1
  4631                           indf2	equ	0xFDF
  4632                           postinc2	equ	0xFDE
  4633                           postdec2	equ	0xFDD
  4634                           fsr2h	equ	0xFDA
  4635                           fsr2l	equ	0xFD9
  4636                           status	equ	0xFD8
  4637                           
  4638 ;; *************** function _strcmp *****************
  4639 ;; Defined at:
  4640 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcmp.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  4643 ;;		 -> STR_1(10), line(128), 
  4644 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  4645 ;;		 -> STR_4(3), STR_3(12), line(128), 
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;  r               1    5[COMRAM] char 
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  2    0[COMRAM] int 
  4650 ;; Registers used:
  4651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4657 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;Total ram usage:        6 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; This function calls:
  4664 ;;		Nothing
  4665 ;; This function is called by:
  4666 ;;		_EUSART1_Receive_ISR
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text28
  4671  00195E                     __ptext28:
  4672                           	opt stack 0
  4673  00195E                     _strcmp:
  4674                           	opt stack 24
  4675                           
  4676                           ;incstack = 0
  4677  00195E  D004               	goto	i2l1939
  4678  001960                     i2l1937:
  4679  001960  4A01               	infsnz	strcmp@s1,f,c
  4680  001962  2A02               	incf	strcmp@s1+1,f,c
  4681  001964  4A03               	infsnz	strcmp@s2,f,c
  4682  001966  2A04               	incf	strcmp@s2+1,f,c
  4683  001968                     i2l1939:
  4684  001968  C001  FFF6         	movff	strcmp@s1,tblptrl
  4685  00196C  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  4686  001970  0E00               	movlw	low (__smallconst shr (0+16))
  4687  001972  6EF8               	movwf	tblptru,c
  4688  001974  0E0F               	movlw	(high __ramtop+-1)
  4689  001976  64F7               	cpfsgt	tblptrh,c
  4690  001978  D003               	bra	i2u100_47
  4691  00197A  0008               	tblrd		*
  4692  00197C  50F5               	movf	tablat,w,c
  4693  00197E  D005               	bra	i2u100_40
  4694  001980                     i2u100_47:
  4695  001980  CFF6 FFE9          	movff	tblptrl,fsr0l
  4696  001984  CFF7 FFEA          	movff	tblptrh,fsr0h
  4697  001988  50EF               	movf	indf0,w,c
  4698  00198A                     i2u100_40:
  4699  00198A  6E05               	movwf	??_strcmp& (0+255),c
  4700  00198C  C003  FFF6         	movff	strcmp@s2,tblptrl
  4701  001990  C004  FFF7         	movff	strcmp@s2+1,tblptrh
  4702  001994  0E00               	movlw	low (__smallconst shr (0+16))
  4703  001996  6EF8               	movwf	tblptru,c
  4704  001998  0E0F               	movlw	(high __ramtop+-1)
  4705  00199A  64F7               	cpfsgt	tblptrh,c
  4706  00199C  D003               	bra	i2u101_47
  4707  00199E  0008               	tblrd		*
  4708  0019A0  50F5               	movf	tablat,w,c
  4709  0019A2  D005               	bra	i2u101_40
  4710  0019A4                     i2u101_47:
  4711  0019A4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4712  0019A8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4713  0019AC  50EF               	movf	indf0,w,c
  4714  0019AE                     i2u101_40:
  4715  0019AE  0800               	sublw	0
  4716  0019B0  2405               	addwf	??_strcmp,w,c
  4717  0019B2  6E06               	movwf	strcmp@r,c
  4718  0019B4  5006               	movf	strcmp@r,w,c
  4719  0019B6  A4D8               	btfss	status,2,c
  4720  0019B8  D014               	goto	i2l1943
  4721  0019BA  C001  FFF6         	movff	strcmp@s1,tblptrl
  4722  0019BE  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  4723  0019C2  0E00               	movlw	low (__smallconst shr (0+16))
  4724  0019C4  6EF8               	movwf	tblptru,c
  4725  0019C6  0E0F               	movlw	(high __ramtop+-1)
  4726  0019C8  64F7               	cpfsgt	tblptrh,c
  4727  0019CA  D003               	bra	i2u103_47
  4728  0019CC  0008               	tblrd		*
  4729  0019CE  50F5               	movf	tablat,w,c
  4730  0019D0  D005               	bra	i2u103_40
  4731  0019D2                     i2u103_47:
  4732  0019D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  4733  0019D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  4734  0019DA  50EF               	movf	indf0,w,c
  4735  0019DC                     i2u103_40:
  4736  0019DC  0900               	iorlw	0
  4737  0019DE  A4D8               	btfss	status,2,c
  4738  0019E0  D7BF               	goto	i2l1937
  4739  0019E2                     i2l1943:
  4740  0019E2  5006               	movf	strcmp@r,w,c
  4741  0019E4  6E01               	movwf	?_strcmp,c
  4742  0019E6  6A02               	clrf	?_strcmp+1,c
  4743  0019E8  BE01               	btfsc	?_strcmp,7,c
  4744  0019EA  0602               	decf	?_strcmp+1,f,c
  4745  0019EC  0012               	return	
  4746  0019EE                     __end_of_strcmp:
  4747                           	opt stack 0
  4748                           pclatu	equ	0xFFB
  4749                           pclath	equ	0xFFA
  4750                           tblptru	equ	0xFF8
  4751                           tblptrh	equ	0xFF7
  4752                           tblptrl	equ	0xFF6
  4753                           tablat	equ	0xFF5
  4754                           prodh	equ	0xFF4
  4755                           prodl	equ	0xFF3
  4756                           intcon	equ	0xFF2
  4757                           intcon2	equ	0xFF1
  4758                           indf0	equ	0xFEF
  4759                           postinc0	equ	0xFEE
  4760                           fsr0h	equ	0xFEA
  4761                           fsr0l	equ	0xFE9
  4762                           wreg	equ	0xFE8
  4763                           fsr1h	equ	0xFE2
  4764                           fsr1l	equ	0xFE1
  4765                           indf2	equ	0xFDF
  4766                           postinc2	equ	0xFDE
  4767                           postdec2	equ	0xFDD
  4768                           fsr2h	equ	0xFDA
  4769                           fsr2l	equ	0xFD9
  4770                           status	equ	0xFD8
  4771                           
  4772 ;; *************** function _EUSART1_Read *****************
  4773 ;; Defined at:
  4774 ;;		line 121 in file "mcc_generated_files/eusart1.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;		None
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  readValue       1    0[COMRAM] unsigned char 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      unsigned char 
  4781 ;; Registers used:
  4782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;Total ram usage:        1 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_EUSART1_Receive_ISR
  4798 ;;		_getch
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text29
  4803  001DFC                     __ptext29:
  4804                           	opt stack 0
  4805  001DFC                     _EUSART1_Read:
  4806                           	opt stack 24
  4807                           
  4808                           ;eusart1.c: 123: uint8_t readValue = 0;
  4809                           
  4810                           ;incstack = 0
  4811  001DFC  0E00               	movlw	0
  4812  001DFE  6E01               	movwf	EUSART1_Read@readValue,c
  4813  001E00                     i2l1917:
  4814  001E00  5031               	movf	_eusart1RxCount,w,c	;volatile
  4815  001E02  B4D8               	btfsc	status,2,c
  4816  001E04  D7FD               	goto	i2l1917
  4817                           
  4818                           ;eusart1.c: 127: }
  4819                           ;eusart1.c: 129: PIE1bits.RC1IE = 0;
  4820  001E06  9A9D               	bcf	3997,5,c	;volatile
  4821                           
  4822                           ;eusart1.c: 131: readValue = eusart1RxBuffer[eusart1RxTail++];
  4823  001E08  5033               	movf	_eusart1RxTail,w,c
  4824  001E0A  0D01               	mullw	1
  4825  001E0C  0E00               	movlw	low _eusart1RxBuffer
  4826  001E0E  24F3               	addwf	prodl,w,c
  4827  001E10  6ED9               	movwf	fsr2l,c
  4828  001E12  0E02               	movlw	high _eusart1RxBuffer
  4829  001E14  20F4               	addwfc	prodh,w,c
  4830  001E16  6EDA               	movwf	fsr2h,c
  4831  001E18  50DF               	movf	indf2,w,c
  4832  001E1A  6E01               	movwf	EUSART1_Read@readValue,c
  4833  001E1C  2A33               	incf	_eusart1RxTail,f,c
  4834                           
  4835                           ;eusart1.c: 132: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  4836  001E1E  0E7F               	movlw	127
  4837  001E20  6433               	cpfsgt	_eusart1RxTail,c
  4838  001E22  D002               	goto	i2l1927
  4839                           
  4840                           ;eusart1.c: 133: {
  4841                           ;eusart1.c: 134: eusart1RxTail = 0;
  4842  001E24  0E00               	movlw	0
  4843  001E26  6E33               	movwf	_eusart1RxTail,c
  4844  001E28                     i2l1927:
  4845                           
  4846                           ;eusart1.c: 135: }
  4847                           ;eusart1.c: 136: eusart1RxCount--;
  4848  001E28  0631               	decf	_eusart1RxCount,f,c	;volatile
  4849                           
  4850                           ;eusart1.c: 137: PIE1bits.RC1IE = 1;
  4851  001E2A  8A9D               	bsf	3997,5,c	;volatile
  4852                           
  4853                           ;eusart1.c: 139: return readValue;
  4854  001E2C  5001               	movf	EUSART1_Read@readValue,w,c
  4855  001E2E  0012               	return	
  4856  001E30                     __end_of_EUSART1_Read:
  4857                           	opt stack 0
  4858                           pclatu	equ	0xFFB
  4859                           pclath	equ	0xFFA
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           prodh	equ	0xFF4
  4865                           prodl	equ	0xFF3
  4866                           intcon	equ	0xFF2
  4867                           intcon2	equ	0xFF1
  4868                           indf0	equ	0xFEF
  4869                           postinc0	equ	0xFEE
  4870                           fsr0h	equ	0xFEA
  4871                           fsr0l	equ	0xFE9
  4872                           wreg	equ	0xFE8
  4873                           fsr1h	equ	0xFE2
  4874                           fsr1l	equ	0xFE1
  4875                           indf2	equ	0xFDF
  4876                           postinc2	equ	0xFDE
  4877                           postdec2	equ	0xFDD
  4878                           fsr2h	equ	0xFDA
  4879                           fsr2l	equ	0xFD9
  4880                           status	equ	0xFD8
  4881                           pclatu	equ	0xFFB
  4882                           pclath	equ	0xFFA
  4883                           tblptru	equ	0xFF8
  4884                           tblptrh	equ	0xFF7
  4885                           tblptrl	equ	0xFF6
  4886                           tablat	equ	0xFF5
  4887                           prodh	equ	0xFF4
  4888                           prodl	equ	0xFF3
  4889                           intcon	equ	0xFF2
  4890                           intcon2	equ	0xFF1
  4891                           indf0	equ	0xFEF
  4892                           postinc0	equ	0xFEE
  4893                           fsr0h	equ	0xFEA
  4894                           fsr0l	equ	0xFE9
  4895                           wreg	equ	0xFE8
  4896                           fsr1h	equ	0xFE2
  4897                           fsr1l	equ	0xFE1
  4898                           indf2	equ	0xFDF
  4899                           postinc2	equ	0xFDE
  4900                           postdec2	equ	0xFDD
  4901                           fsr2h	equ	0xFDA
  4902                           fsr2l	equ	0xFD9
  4903                           status	equ	0xFD8
  4904                           
  4905                           	psect	rparam
  4906  0000                     pclatu	equ	0xFFB
  4907                           pclath	equ	0xFFA
  4908                           tblptru	equ	0xFF8
  4909                           tblptrh	equ	0xFF7
  4910                           tblptrl	equ	0xFF6
  4911                           tablat	equ	0xFF5
  4912                           prodh	equ	0xFF4
  4913                           prodl	equ	0xFF3
  4914                           intcon	equ	0xFF2
  4915                           intcon2	equ	0xFF1
  4916                           indf0	equ	0xFEF
  4917                           postinc0	equ	0xFEE
  4918                           fsr0h	equ	0xFEA
  4919                           fsr0l	equ	0xFE9
  4920                           wreg	equ	0xFE8
  4921                           fsr1h	equ	0xFE2
  4922                           fsr1l	equ	0xFE1
  4923                           indf2	equ	0xFDF
  4924                           postinc2	equ	0xFDE
  4925                           postdec2	equ	0xFDD
  4926                           fsr2h	equ	0xFDA
  4927                           fsr2l	equ	0xFD9
  4928                           status	equ	0xFD8
  4929                           
  4930                           	psect	temp
  4931  00003B                     btemp:
  4932                           	opt stack 0
  4933  00003B                     	ds	1
  4934  0000                     int$flags	set	btemp
  4935                           pclatu	equ	0xFFB
  4936                           pclath	equ	0xFFA
  4937                           tblptru	equ	0xFF8
  4938                           tblptrh	equ	0xFF7
  4939                           tblptrl	equ	0xFF6
  4940                           tablat	equ	0xFF5
  4941                           prodh	equ	0xFF4
  4942                           prodl	equ	0xFF3
  4943                           intcon	equ	0xFF2
  4944                           intcon2	equ	0xFF1
  4945                           indf0	equ	0xFEF
  4946                           postinc0	equ	0xFEE
  4947                           fsr0h	equ	0xFEA
  4948                           fsr0l	equ	0xFE9
  4949                           wreg	equ	0xFE8
  4950                           fsr1h	equ	0xFE2
  4951                           fsr1l	equ	0xFE1
  4952                           indf2	equ	0xFDF
  4953                           postinc2	equ	0xFDE
  4954                           postdec2	equ	0xFDD
  4955                           fsr2h	equ	0xFDA
  4956                           fsr2l	equ	0xFD9
  4957                           status	equ	0xFD8


Data Sizes:
    Strings     79
    Constant    18
    Data        0
    BSS         435
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      58
    BANK0           160     25     153
    BANK1           256     13     181
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_4(CODE[3]), STR_3(CODE[12]), line(BANK0[128]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_1(CODE[10]), line(BANK0[128]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[8]), STR_6(CODE[7]), STR_5(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK1[40]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 


Critical Paths under _main in COMRAM

    _main->_process_data_opt
    _process_data_opt->_printf
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Receive_ISR->_strstr
    _strstr->_strncmp
    _strncmp->_strlen

Critical Paths under _main in BANK0

    _main->_process_data_opt
    _process_data_opt->_printf
    _printf->___lwmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_process_data_opt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5707
                                             22 BANK0      3     3      0
                           _I2C_Init
                      _I2C_Read_Byte
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
                  _SYSTEM_Initialize
                             _printf
                   _process_data_opt
                           _wait_5ms
 ---------------------------------------------------------------------------------
 (1) _wait_5ms                                             6     4      2     238
                                             36 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _process_data_opt                                    18    17      1    2873
                                             45 COMRAM     1     0      1
                                             18 BANK0      4     4      0
                                              0 BANK1     13    13      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              24    18      6    2184
                                             44 COMRAM     1     1      0
                                              4 BANK0     14     8      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      93
                                             37 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      62
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             43 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     549
                                             36 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write_Byte                                       5     5      0      90
                                             36 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             1     1      0       0
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            1     1      0       0
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read_Byte                                        3     3      0     192
                                             36 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0    1524
                                             22 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  3     3      0    1524
                                             19 COMRAM     3     3      0
                       _EUSART1_Read
                             _strcmp
                             _strstr
 ---------------------------------------------------------------------------------
 (7) _strstr                                               4     0      4    1001
                                             15 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (8) _strncmp                                              9     3      6     326
                                              6 COMRAM     9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (8) _strlen                                               6     4      2     154
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strchr                                               5     1      4     216
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) _strcmp                                               6     2      4     475
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Read                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_Read_Byte
   _I2C_Start
   _I2C_Stop
   _I2C_Write_Byte
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART1_Write
   _process_data_opt
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART1_Write
   _wait_5ms

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _EUSART1_Read
     _strcmp
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      B5       7       70.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      3A       1       61.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     208      12        0.0%
DATA                 0      0     208       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Mar 20 22:58:34 2016

           _eusart1TxBufferRemaining 003A                   __size_of_I2C_Start 002C  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l110 1D02                                  l301 11F8  
                                l346 19FC                                  l347 1A52  
                                l348 1A2C                                  l374 13B2  
                                l278 1D78                                  l802 1C2A  
                                l812 1BD8                         __CFG_CPB$OFF 000000  
                                _PR2 000FBB                         __CFG_CPD$OFF 000000  
                                _inc 0036                                  _val 0039  
                 I2C_Write_Byte@Byte 0028                      _TMR2_Initialize 1EC4  
                                prod 000FF3                                  wreg 000FE8  
                       __CFG_LVP$OFF 000000                                 l2205 19F4  
                               l2215 1A2E                                 l2139 1D66  
                               l2501 1BA2                                 l2503 1BA8  
                               l2513 135C                                 l2601 111C  
                               l2507 1BCC                                 l2523 137E  
                               l2611 11DA                                 l2603 1142  
                               l2541 140C                                 l2517 1370  
                               l2621 129A                                 l2613 120A  
                               l2605 1168                                 l2455 1CF2  
                               l2535 13EA                                 l2519 1378  
                               l2615 122E                                 l2607 118E  
                               l2481 1C00                                 l2553 1448  
                               l2617 1252                                 l2609 11B4  
                               l2625 12CE                                 l2491 1C20  
                               l2483 1C04                                 l2467 1D24  
                               l2555 144E                                 l2571 149C  
                               l2539 1406                                 l2619 1276  
                               l2627 132C                                 l2469 1D26  
                               l2479 1BF8                                 l2575 14AE  
                               l2591 1584                                 l2671 18F6  
                               l2577 14B4                                 l2585 155E  
                               l2569 148A                                 l2499 1B98  
                               l2579 1506                                 l2587 1570  
                               l2589 1578                                 STR_1 1040  
                               STR_2 104A                                 STR_3 1034  
                               STR_4 103D                                 STR_5 1024  
                               STR_6 105B                                 STR_7 1053  
                               STR_8 1013                                 u2007 1A6E  
                               u2017 1C3C                                 u2107 15FA  
                               u2027 1C4C                                 u1500 15D4  
                               u2117 161E                                 u2037 1C5C  
                               _LATA 000F89                                 u1510 160A  
                               _LATB 000F8A                                 u2207 1708  
                               u2127 1630                                 u2047 1C6C  
                               _LATC 000F8B                                 u1520 1640  
                               u2217 172C                                 u2137 1654  
                               u2057 1E6C                                 u1530 1676  
                               u1506 15D6                                 u2227 173E  
                               u2147 1666                                 u2067 1E7E  
                               u1540 16AC                                 u1516 160C  
                               u2157 168A                                 u2077 15B2  
                               u1550 16E2                                 u1526 1642  
                               u2167 169C                                 u2087 15C4  
                               u1560 1718                                 u1536 1678  
                               u2177 16C0                                 u2097 15E8  
                               u1570 174E                                 u1546 16AE  
                               u1474 1A20                                 u2187 16D2  
                               u1475 1A1A                                 u1556 16E4  
                               u2197 16F6                                 u1566 171A  
                               u1576 1750                                 u1905 1240  
                               u1850 113C                                 u1915 1264  
                               u1860 1162                                 u1925 1288  
                               u1845 10FE                                 u1870 1188  
                               u1935 12AC                                 u1855 1130  
                               u1880 11AE                                 u1865 1156  
                               u1890 11D4                                 u1875 117C  
                               u1947 18EC                                 u1885 11A2  
                               u1957 1D6C                                 u1967 1A04  
                               u1895 11C8                                 u1977 1A34  
                               u1987 1A44                                 i2l20 004E  
                               u1997 1A5C                                 i2l24 0058  
                               _TMR2 000FBC                                 _WPUB 000F61  
                      _EUSART1_Write 1CF0                                 _main 1898  
                               _line 0060                        ?_EUSART1_Read 0001  
                   __end_of_I2C_Init 1F02                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 indf0 000FEF  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 003B  
                               _uuid 0180                        __CFG_BORV$190 000000  
                   __end_of_I2C_Stop 1C76                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0094                        __CFG_IESO$OFF 000000  
                       ___param_bank 000010       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 1EE4                                ?_main 0001  
                              _T2CON 000FBA                                _LATC3 007C5B  
                              _LATC4 007C5C                       __CFG_DEBUG$OFF 000000  
                    __end_of___lwdiv 1C34                      __end_of___lwmod 1BE2  
                              i2l122 1E5A                                i2l138 188A  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 1E30  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                      __end_of_dpowers 100B  
             __size_of_I2C_Read_Byte 01B2                                _index 002F  
                              _ready 0037                   __CFG_MCLRE$EXTMCLR 000000  
                              _putch 1EE4                    __end_of_I2C_Start 1E8A  
                     ?_EUSART1_Write 0001                                tablat 000FF5  
                     ??_EUSART1_Read 0001                                status 000FD8  
                     __CFG_HFOFST$ON 000000                      _TMR2_StartTimer 1F02  
                    __end_of_strncmp 1B86                       __CFG_PBADEN$ON 000000  
                    __initialization 1CB6           __end_of_EUSART1_Initialize 1DFC  
                       __end_of_main 195E              __end_of_TMR2_Initialize 1ED6  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 00F6  
                      __activetblptr 000003                ?_EUSART1_Transmit_ISR 0001  
          __size_of_process_data_opt 02EA                               _CCPR1H 000FBF  
                             _CCPR1L 000FBE                               _ANSELA 000F38  
                             ?_putch 0001                               _ANSELB 000F39  
                             _ANSELC 000F3A                               i2l2113 186A  
                             i2l2115 1886                               i2l2107 1844  
                             i2l2109 1848                               i2l2071 177E  
                             i2l2063 175E                               i2l2057 1E56  
                             i2l2085 17C4                               i2l2079 1790  
                             i2l2087 17C8                               i2l2089 17CE  
                             i2l2099 1810                       __CFG_WDTEN$OFF 000000  
                             i2l1851 1C80                               i2l1917 1E00  
                             i2l1853 1C84                               i2l1861 1B02  
                             i2l1927 1E28                               i2l1943 19E2  
                             i2l1871 1B6C                               i2l1937 1960  
                             i2l1865 1B30                               i2l1961 1AF6  
                             i2l1939 1968                               i2l1883 1D44  
                             i2l1955 1AB6                               i2l1877 1D2A  
                             i2l1869 1B64                               i2l1949 1A7C  
                             i2l1957 1AE0                               _RCREG1 000FAE  
                             _RCSTA1 000FAB                  process_data_opt@lsb 002E  
                             _OSCCON 000FD3                  process_data_opt@msb 01A8  
                process_data_opt@raw 01AB                               _SPBRG1 000FAF  
                             _TRISC3 007CA3                               _TRISC4 007CA4  
                             _TXREG1 000FAD                               _TXSTA1 000FAC  
                     __CFG_XINST$OFF 000000                         _CCPTMRS0bits 000F49  
                      _I2C_Read_Byte 15A4                       __CFG_STVREN$ON 000000  
                          ??___lwdiv 0029                            ??___lwmod 002C  
                             clear_0 1CBC                               clear_1 1CC8  
                             clear_2 1CD4                               clear_3 1CE0  
                             _printf 134E                               _strchr 1D2A  
                             _strcmp 195E                               _strlen 1C76  
                             _strstr 1A7A                     __end_of_wait_5ms 1D94  
                          ?_I2C_Init 0001                            ?_I2C_Stop 0001  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                    ??_EUSART1_Write 0025              __end_of_TMR2_StartTimer 1F06  
                    _eusart1RxBuffer 0200                            ??_strncmp 000D  
      __size_of_INTERRUPT_Initialize 000A                      _eusart1TxBuffer 0100  
                  _SYSTEM_Initialize 1EAA                           __accesstop 0060  
            __end_of__initialization 1CE6                      I2C_Write_Byte@i 0029  
                 ?_SYSTEM_Initialize 0001                        ___rparam_used 000001  
                     ?_I2C_Read_Byte 0001                    ?_EPWM1_Initialize 0001  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0025  
                 ??_EPWM1_Initialize 0025         process_data_opt@Illumination 01AD  
                      __end_of_putch 1EEE                     ?_TMR2_Initialize 0001  
               __end_of_EUSART1_Read 1E30               ??_EUSART1_Transmit_ISR 0001  
                         ??_I2C_Init 0025                           ??_I2C_Stop 0025  
        __end_of_EUSART1_Receive_ISR 1898            __end_of_SYSTEM_Initialize 1EC4  
                            ??_putch 0026                        _eusart1RxHead 0032  
                      _eusart1TxHead 0034                        _eusart1RxTail 0033  
                         __pbssBANK0 0060                           __pbssBANK1 0100  
                         __pbssBANK2 0200                        _eusart1TxTail 0035  
                    __CFG_PLLCFG$OFF 000000                           __pnvCOMRAM 003A  
                 __CFG_CCP2MX$PORTC1 000000                   __CFG_CCP3MX$PORTB5 000000  
                            _CCP1CON 000FBD                              _ECCP1AS 000FB6  
            __size_of_I2C_Write_Byte 008C                              ?_printf 00E4  
                            ?_strchr 0001                              ?_strcmp 0001  
                            ?_strlen 0001                              ?_strstr 0010  
                I2C_Read_Byte@RxData 0026                              _OSCCON2 000FD2  
                            _OSCTUNE 000F9B                              _PWM1CON 000FB7  
                   _process_data_opt 1064                              _SPBRGH1 000FB0  
                   ?_TMR2_StartTimer 0001                            _I2C_Start 1E5E  
                    ??_I2C_Read_Byte 0025                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                          ?_wait_5ms 0025                              ___lwdiv 1BE2  
                            ___lwmod 1B86                         __psmallconst 1000  
                            __pcinit 1CB6                              __ramtop 1000  
                            __ptext0 1898                              __ptext1 1D60  
                            __ptext2 1064                              __ptext3 134E  
                            __ptext4 1EE4                              __ptext5 1CF0  
                            __ptext6 1B86                              __ptext7 1BE2  
                            __ptext8 1EAA                              __ptext9 1EC4  
                    __size_of_printf 0256                      __size_of_strchr 0036  
                    __size_of_strcmp 0090                      __size_of_strlen 0040  
                  __end_of_hexpowers 1013                      __size_of_strstr 0086  
                            _dpowers 1001                _OSCILLATOR_Initialize 1ED6  
                          _T2CONbits 000FBA                   _EUSART1_Initialize 1DC8  
           ??_PIN_MANAGER_Initialize 0025           __size_of_SYSTEM_Initialize 001A  
                            main@lsb 00F8                              main@msb 00F7  
                            _strncmp 1B00                 end_of_initialization 1CE6  
                ?_EUSART1_Initialize 0001                           ?_I2C_Start 0001  
                         ??_wait_5ms 0027               process_data_opt@result 01B1  
                            printf@c 00F1                              printf@f 00E4  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE                __size_of_EUSART1_Read 0034  
               ??_EUSART1_Initialize 0025                              strcmp@r 0006  
                            strlen@s 0001                            _PORTCbits 000F82  
                  __size_of_I2C_Init 000A                    __size_of_I2C_Stop 0042  
                EUSART1_Write@txData 0025                         _EUSART1_Read 1DFC  
       __end_of_INTERRUPT_Initialize 1EF8                       _I2C_Write_Byte 19EE  
             ?_OSCILLATOR_Initialize 0001                       __end_of_printf 15A4  
                     __end_of_strchr 1D60                       __end_of_strcmp 19EE  
                     __end_of_strlen 1CB6                       __end_of_strstr 1B00  
                start_initialization 1CB6            __size_of_EPWM1_Initialize 0020  
    __size_of_PIN_MANAGER_Initialize 0034                          putch@txData 0026  
              __end_of_EUSART1_Write 1D2A                          ??_I2C_Start 0025  
             __end_of_I2C_Write_Byte 1A7A             __end_of_process_data_opt 134E  
                           ??_printf 002D                             ??_strchr 0005  
                           ??_strcmp 0005                             ??_strlen 0003  
                     _eusart1RxCount 0031                             ??_strstr 0014  
                        __pbssCOMRAM 002F        __size_of_EUSART1_Transmit_ISR 002E  
                      __pcstackBANK0 00E0                        __pcstackBANK1 01A8  
           __size_of_TMR2_Initialize 0012         __size_of_EUSART1_Receive_ISR 0142  
                   ___lwdiv@dividend 0025               _PIN_MANAGER_Initialize 1D94  
                    ?_I2C_Write_Byte 0001                            __pintcode 0008  
                  __size_of_wait_5ms 0034                             ?___lwdiv 0025  
                           ?___lwmod 00E0         ??_INTERRUPT_InterruptManager 0017  
                   __CFG_PRICLKEN$ON 000000                          __smallconst 1000  
                           _BAUDCON1 000FB8                             _I2C_Init 1EF8  
                           _I2C_Stop 1C34             EUSART1_Receive_ISR@state 0015  
                          _hexpowers 100B                     ___lwdiv@quotient 002A  
                           ?_strncmp 0007                       __size_of_putch 000A  
               _INTERRUPT_Initialize 1EEE                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D             __size_of_TMR2_StartTimer 0004  
                           i2u100_40 198A                             i2u100_47 1980  
                           i2u101_40 19AE                             i2u101_47 19A4  
                           i2u103_40 19DC                             i2u103_47 19D2  
__size_of_INTERRUPT_InterruptManager 008C                             _PIR1bits 000F9E  
              __end_of_I2C_Read_Byte 1756                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                            _uartState 0038  
                           _PSTR1CON 000FB9                           printf@flag 00EE  
                         printf@prec 00ED                     _EPWM1_Initialize 1E8A  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 0001  
                  ??_TMR2_Initialize 0025                EUSART1_Read@readValue 0001  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTB5 000000  
            ??_OSCILLATOR_Initialize 0025          __size_of_EUSART1_Initialize 0034  
                   __size_of___lwdiv 0052                     __size_of___lwmod 005C  
                         _ANSELCbits 000F3A                      ___lwdiv@divisor 0027  
                    ___lwdiv@counter 0029                             __ptext10 1F02  
                           __ptext11 1D94                             __ptext20 1EF8  
                           __ptext12 1ED6                             __ptext13 1EEE  
                           __ptext22 1E30                             __ptext14 1DC8  
                           __ptext23 1756                             __ptext15 1E8A  
                           __ptext24 1A7A                             __ptext16 19EE  
                           __ptext25 1B00                             __ptext17 1C34  
                           __ptext26 1C76                             __ptext18 1E5E  
                           __ptext27 1D2A                             __ptext19 15A4  
                           __ptext28 195E                             __ptext29 1DFC  
                   __size_of_strncmp 0086                        __size_of_main 00C6  
                          wait_5ms@i 002A                            wait_5ms@j 0025  
                         strncmp@len 000B             process_data_opt@exponent 01A9  
                           _wait_5ms 1D60                    ?_process_data_opt 002E  
                           int$flags 003B                    ??_TMR2_StartTimer 0025  
 __end_of_INTERRUPT_InterruptManager 0094           _INTERRUPT_InterruptManager 0008  
                          printf@idx 00EA                            printf@val 00EF  
                 ??_process_data_opt 00F2                  _EUSART1_Receive_ISR 1756  
                         _INTCONbits 000FF2               ??_INTERRUPT_Initialize 0025  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 0001  
                          strchr@chr 0003                     ___lwmod@dividend 00E0  
                          strchr@ptr 0001              ?_PIN_MANAGER_Initialize 0001  
                   ??_I2C_Write_Byte 0025                           _RCSTA1bits 000FAB  
       __end_of_EUSART1_Transmit_ISR 1E5E                            strncmp@s1 0007  
                          strncmp@s2 0009                             printf@ap 00EB  
             __size_of_EUSART1_Write 003A                             strcmp@s1 0001  
                           strcmp@s2 0003                      ___lwmod@divisor 00E2  
                           strlen@cp 0005                      ___lwmod@counter 002C  
                  __CFG_T3CMX$PORTC0 000000                             strstr@s1 0010  
                           strstr@s2 0012                ??_EUSART1_Receive_ISR 0014  
     __end_of_PIN_MANAGER_Initialize 1DC8                    __CFG_FOSC$INTIO67 000000  
           __end_of_EPWM1_Initialize 1EAA  
