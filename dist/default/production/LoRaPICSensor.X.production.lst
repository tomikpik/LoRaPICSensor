

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Mar 20 20:56:15 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataCOMRAM
    65  001978                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _randx
    69  001978  0001               	dw	1
    70  00197A  0000               	dw	0
    71                           
    72                           	psect	mediumconst
    73  00FEA2                     __pmediumconst:
    74                           	opt stack 0
    75  00FEA2  00                 	db	0
    76  00FEA3                     _dpowers:
    77                           	opt stack 0
    78  00FEA3  0001               	dw	1
    79  00FEA5  000A               	dw	10
    80  00FEA7  0064               	dw	100
    81  00FEA9  03E8               	dw	1000
    82  00FEAB  2710               	dw	10000
    83  00FEAD                     __end_of_dpowers:
    84                           	opt stack 0
    85  00FEAD                     _hexpowers:
    86                           	opt stack 0
    87  00FEAD  0001               	dw	1
    88  00FEAF  0010               	dw	16
    89  00FEB1  0100               	dw	256
    90  00FEB3  1000               	dw	4096
    91  00FEB5                     __end_of_hexpowers:
    92                           	opt stack 0
    93  00FEB5                     STR_22:
    94  00FEB5  73                 	db	115	;'s'
    95  00FEB6  79                 	db	121	;'y'
    96  00FEB7  73                 	db	115	;'s'
    97  00FEB8  20                 	db	32
    98  00FEB9  73                 	db	115	;'s'
    99  00FEBA  6C                 	db	108	;'l'
   100  00FEBB  65                 	db	101	;'e'
   101  00FEBC  65                 	db	101	;'e'
   102  00FEBD  70                 	db	112	;'p'
   103  00FEBE  20                 	db	32
   104  00FEBF  31                 	db	49	;'1'
   105  00FEC0  30                 	db	48	;'0'
   106  00FEC1  30                 	db	48	;'0'
   107  00FEC2  30                 	db	48	;'0'
   108  00FEC3  30                 	db	48	;'0'
   109  00FEC4  30                 	db	48	;'0'
   110  00FEC5  0D                 	db	13
   111  00FEC6  0A                 	db	10
   112  00FEC7  00                 	db	0
   113  00FEC8                     STR_17:
   114  00FEC8  72                 	db	114	;'r'
   115  00FEC9  61                 	db	97	;'a'
   116  00FECA  64                 	db	100	;'d'
   117  00FECB  69                 	db	105	;'i'
   118  00FECC  6F                 	db	111	;'o'
   119  00FECD  20                 	db	32
   120  00FECE  73                 	db	115	;'s'
   121  00FECF  65                 	db	101	;'e'
   122  00FED0  74                 	db	116	;'t'
   123  00FED1  20                 	db	32
   124  00FED2  62                 	db	98	;'b'
   125  00FED3  77                 	db	119	;'w'
   126  00FED4  20                 	db	32
   127  00FED5  35                 	db	53	;'5'
   128  00FED6  30                 	db	48	;'0'
   129  00FED7  30                 	db	48	;'0'
   130  00FED8  0D                 	db	13
   131  00FED9  0A                 	db	10
   132  00FEDA  00                 	db	0
   133  00FEDB                     STR_16:
   134  00FEDB  72                 	db	114	;'r'
   135  00FEDC  61                 	db	97	;'a'
   136  00FEDD  64                 	db	100	;'d'
   137  00FEDE  69                 	db	105	;'i'
   138  00FEDF  6F                 	db	111	;'o'
   139  00FEE0  20                 	db	32
   140  00FEE1  73                 	db	115	;'s'
   141  00FEE2  65                 	db	101	;'e'
   142  00FEE3  74                 	db	116	;'t'
   143  00FEE4  20                 	db	32
   144  00FEE5  70                 	db	112	;'p'
   145  00FEE6  77                 	db	119	;'w'
   146  00FEE7  72                 	db	114	;'r'
   147  00FEE8  20                 	db	32
   148  00FEE9  2D                 	db	45
   149  00FEEA  32                 	db	50	;'2'
   150  00FEEB  0D                 	db	13
   151  00FEEC  0A                 	db	10
   152  00FEED  00                 	db	0
   153  00FEEE                     STR_18:
   154  00FEEE  72                 	db	114	;'r'
   155  00FEEF  61                 	db	97	;'a'
   156  00FEF0  64                 	db	100	;'d'
   157  00FEF1  69                 	db	105	;'i'
   158  00FEF2  6F                 	db	111	;'o'
   159  00FEF3  20                 	db	32
   160  00FEF4  73                 	db	115	;'s'
   161  00FEF5  65                 	db	101	;'e'
   162  00FEF6  74                 	db	116	;'t'
   163  00FEF7  20                 	db	32
   164  00FEF8  73                 	db	115	;'s'
   165  00FEF9  66                 	db	102	;'f'
   166  00FEFA  20                 	db	32
   167  00FEFB  73                 	db	115	;'s'
   168  00FEFC  66                 	db	102	;'f'
   169  00FEFD  37                 	db	55	;'7'
   170  00FEFE  0D                 	db	13
   171  00FEFF  0A                 	db	10
   172  00FF00  00                 	db	0
   173  00FF01                     STR_19:
   174  00FF01  72                 	db	114	;'r'
   175  00FF02  61                 	db	97	;'a'
   176  00FF03  64                 	db	100	;'d'
   177  00FF04  69                 	db	105	;'i'
   178  00FF05  6F                 	db	111	;'o'
   179  00FF06  20                 	db	32
   180  00FF07  73                 	db	115	;'s'
   181  00FF08  65                 	db	101	;'e'
   182  00FF09  74                 	db	116	;'t'
   183  00FF0A  20                 	db	32
   184  00FF0B  63                 	db	99	;'c'
   185  00FF0C  72                 	db	114	;'r'
   186  00FF0D  20                 	db	32
   187  00FF0E  34                 	db	52	;'4'
   188  00FF0F  2F                 	db	47
   189  00FF10  38                 	db	56	;'8'
   190  00FF11  0D                 	db	13
   191  00FF12  0A                 	db	10
   192  00FF13  00                 	db	0
   193  00FF14                     STR_21:
   194  00FF14  72                 	db	114	;'r'
   195  00FF15  61                 	db	97	;'a'
   196  00FF16  64                 	db	100	;'d'
   197  00FF17  69                 	db	105	;'i'
   198  00FF18  6F                 	db	111	;'o'
   199  00FF19  20                 	db	32
   200  00FF1A  73                 	db	115	;'s'
   201  00FF1B  65                 	db	101	;'e'
   202  00FF1C  74                 	db	116	;'t'
   203  00FF1D  20                 	db	32
   204  00FF1E  77                 	db	119	;'w'
   205  00FF1F  64                 	db	100	;'d'
   206  00FF20  74                 	db	116	;'t'
   207  00FF21  20                 	db	32
   208  00FF22  25                 	db	37
   209  00FF23  64                 	db	100	;'d'
   210  00FF24  0D                 	db	13
   211  00FF25  0A                 	db	10
   212  00FF26  00                 	db	0
   213  00FF27                     STR_20:
   214  00FF27  72                 	db	114	;'r'
   215  00FF28  61                 	db	97	;'a'
   216  00FF29  64                 	db	100	;'d'
   217  00FF2A  69                 	db	105	;'i'
   218  00FF2B  6F                 	db	111	;'o'
   219  00FF2C  20                 	db	32
   220  00FF2D  73                 	db	115	;'s'
   221  00FF2E  65                 	db	101	;'e'
   222  00FF2F  74                 	db	116	;'t'
   223  00FF30  20                 	db	32
   224  00FF31  63                 	db	99	;'c'
   225  00FF32  72                 	db	114	;'r'
   226  00FF33  63                 	db	99	;'c'
   227  00FF34  20                 	db	32
   228  00FF35  6F                 	db	111	;'o'
   229  00FF36  6E                 	db	110	;'n'
   230  00FF37  0D                 	db	13
   231  00FF38  0A                 	db	10
   232  00FF39  00                 	db	0
   233  00FF3A                     STR_13:
   234  00FF3A  72                 	db	114	;'r'
   235  00FF3B  61                 	db	97	;'a'
   236  00FF3C  64                 	db	100	;'d'
   237  00FF3D  69                 	db	105	;'i'
   238  00FF3E  6F                 	db	111	;'o'
   239  00FF3F  20                 	db	32
   240  00FF40  67                 	db	103	;'g'
   241  00FF41  65                 	db	101	;'e'
   242  00FF42  74                 	db	116	;'t'
   243  00FF43  20                 	db	32
   244  00FF44  70                 	db	112	;'p'
   245  00FF45  72                 	db	114	;'r'
   246  00FF46  6C                 	db	108	;'l'
   247  00FF47  65                 	db	101	;'e'
   248  00FF48  6E                 	db	110	;'n'
   249  00FF49  0D                 	db	13
   250  00FF4A  0A                 	db	10
   251  00FF4B  00                 	db	0
   252  00FF4C                     STR_23:
   253  00FF4C  30                 	db	48	;'0'
   254  00FF4D  31                 	db	49	;'1'
   255  00FF4E  32                 	db	50	;'2'
   256  00FF4F  33                 	db	51	;'3'
   257  00FF50  34                 	db	52	;'4'
   258  00FF51  35                 	db	53	;'5'
   259  00FF52  36                 	db	54	;'6'
   260  00FF53  37                 	db	55	;'7'
   261  00FF54  38                 	db	56	;'8'
   262  00FF55  39                 	db	57	;'9'
   263  00FF56  61                 	db	97	;'a'
   264  00FF57  62                 	db	98	;'b'
   265  00FF58  63                 	db	99	;'c'
   266  00FF59  64                 	db	100	;'d'
   267  00FF5A  65                 	db	101	;'e'
   268  00FF5B  66                 	db	102	;'f'
   269  00FF5C  00                 	db	0
   270  00FF5D                     STR_5:
   271  00FF5D  73                 	db	115	;'s'
   272  00FF5E  79                 	db	121	;'y'
   273  00FF5F  73                 	db	115	;'s'
   274  00FF60  20                 	db	32
   275  00FF61  67                 	db	103	;'g'
   276  00FF62  65                 	db	101	;'e'
   277  00FF63  74                 	db	116	;'t'
   278  00FF64  20                 	db	32
   279  00FF65  68                 	db	104	;'h'
   280  00FF66  77                 	db	119	;'w'
   281  00FF67  65                 	db	101	;'e'
   282  00FF68  75                 	db	117	;'u'
   283  00FF69  69                 	db	105	;'i'
   284  00FF6A  0D                 	db	13
   285  00FF6B  0A                 	db	10
   286  00FF6C  00                 	db	0
   287  00FF6D                     STR_14:
   288  00FF6D  72                 	db	114	;'r'
   289  00FF6E  61                 	db	97	;'a'
   290  00FF6F  64                 	db	100	;'d'
   291  00FF70  69                 	db	105	;'i'
   292  00FF71  6F                 	db	111	;'o'
   293  00FF72  20                 	db	32
   294  00FF73  67                 	db	103	;'g'
   295  00FF74  65                 	db	101	;'e'
   296  00FF75  74                 	db	116	;'t'
   297  00FF76  20                 	db	32
   298  00FF77  70                 	db	112	;'p'
   299  00FF78  77                 	db	119	;'w'
   300  00FF79  72                 	db	114	;'r'
   301  00FF7A  0D                 	db	13
   302  00FF7B  0A                 	db	10
   303  00FF7C  00                 	db	0
   304  00FF7D                     STR_10:
   305  00FF7D  72                 	db	114	;'r'
   306  00FF7E  61                 	db	97	;'a'
   307  00FF7F  64                 	db	100	;'d'
   308  00FF80  69                 	db	105	;'i'
   309  00FF81  6F                 	db	111	;'o'
   310  00FF82  20                 	db	32
   311  00FF83  67                 	db	103	;'g'
   312  00FF84  65                 	db	101	;'e'
   313  00FF85  74                 	db	116	;'t'
   314  00FF86  20                 	db	32
   315  00FF87  73                 	db	115	;'s'
   316  00FF88  66                 	db	102	;'f'
   317  00FF89  0D                 	db	13
   318  00FF8A  0A                 	db	10
   319  00FF8B  00                 	db	0
   320  00FF8C                     STR_12:
   321  00FF8C  72                 	db	114	;'r'
   322  00FF8D  61                 	db	97	;'a'
   323  00FF8E  64                 	db	100	;'d'
   324  00FF8F  69                 	db	105	;'i'
   325  00FF90  6F                 	db	111	;'o'
   326  00FF91  20                 	db	32
   327  00FF92  67                 	db	103	;'g'
   328  00FF93  65                 	db	101	;'e'
   329  00FF94  74                 	db	116	;'t'
   330  00FF95  20                 	db	32
   331  00FF96  63                 	db	99	;'c'
   332  00FF97  72                 	db	114	;'r'
   333  00FF98  0D                 	db	13
   334  00FF99  0A                 	db	10
   335  00FF9A  00                 	db	0
   336  00FF9B                     STR_11:
   337  00FF9B  72                 	db	114	;'r'
   338  00FF9C  61                 	db	97	;'a'
   339  00FF9D  64                 	db	100	;'d'
   340  00FF9E  69                 	db	105	;'i'
   341  00FF9F  6F                 	db	111	;'o'
   342  00FFA0  20                 	db	32
   343  00FFA1  67                 	db	103	;'g'
   344  00FFA2  65                 	db	101	;'e'
   345  00FFA3  74                 	db	116	;'t'
   346  00FFA4  20                 	db	32
   347  00FFA5  62                 	db	98	;'b'
   348  00FFA6  77                 	db	119	;'w'
   349  00FFA7  0D                 	db	13
   350  00FFA8  0A                 	db	10
   351  00FFA9  00                 	db	0
   352  00FFAA                     STR_9:
   353  00FFAA  73                 	db	115	;'s'
   354  00FFAB  79                 	db	121	;'y'
   355  00FFAC  73                 	db	115	;'s'
   356  00FFAD  20                 	db	32
   357  00FFAE  67                 	db	103	;'g'
   358  00FFAF  65                 	db	101	;'e'
   359  00FFB0  74                 	db	116	;'t'
   360  00FFB1  20                 	db	32
   361  00FFB2  76                 	db	118	;'v'
   362  00FFB3  65                 	db	101	;'e'
   363  00FFB4  72                 	db	114	;'r'
   364  00FFB5  0D                 	db	13
   365  00FFB6  0A                 	db	10
   366  00FFB7  00                 	db	0
   367  00FFB8                     STR_15:
   368  00FFB8  6D                 	db	109	;'m'
   369  00FFB9  61                 	db	97	;'a'
   370  00FFBA  63                 	db	99	;'c'
   371  00FFBB  20                 	db	32
   372  00FFBC  70                 	db	112	;'p'
   373  00FFBD  61                 	db	97	;'a'
   374  00FFBE  75                 	db	117	;'u'
   375  00FFBF  73                 	db	115	;'s'
   376  00FFC0  65                 	db	101	;'e'
   377  00FFC1  0D                 	db	13
   378  00FFC2  0A                 	db	10
   379  00FFC3  00                 	db	0
   380  00FFC4                     STR_8:
   381  00FFC4  73                 	db	115	;'s'
   382  00FFC5  79                 	db	121	;'y'
   383  00FFC6  73                 	db	115	;'s'
   384  00FFC7  20                 	db	32
   385  00FFC8  72                 	db	114	;'r'
   386  00FFC9  65                 	db	101	;'e'
   387  00FFCA  73                 	db	115	;'s'
   388  00FFCB  65                 	db	101	;'e'
   389  00FFCC  74                 	db	116	;'t'
   390  00FFCD  0D                 	db	13
   391  00FFCE  0A                 	db	10
   392  00FFCF  00                 	db	0
   393  00FFD0                     STR_3:
   394  00FFD0  72                 	db	114	;'r'
   395  00FFD1  61                 	db	97	;'a'
   396  00FFD2  64                 	db	100	;'d'
   397  00FFD3  69                 	db	105	;'i'
   398  00FFD4  6F                 	db	111	;'o'
   399  00FFD5  5F                 	db	95	;'_'
   400  00FFD6  74                 	db	116	;'t'
   401  00FFD7  78                 	db	120	;'x'
   402  00FFD8  5F                 	db	95	;'_'
   403  00FFD9  6F                 	db	111	;'o'
   404  00FFDA  6B                 	db	107	;'k'
   405  00FFDB  00                 	db	0
   406  00FFDC                     STR_1:
   407  00FFDC  72                 	db	114	;'r'
   408  00FFDD  61                 	db	97	;'a'
   409  00FFDE  64                 	db	100	;'d'
   410  00FFDF  69                 	db	105	;'i'
   411  00FFE0  6F                 	db	111	;'o'
   412  00FFE1  5F                 	db	95	;'_'
   413  00FFE2  65                 	db	101	;'e'
   414  00FFE3  72                 	db	114	;'r'
   415  00FFE4  72                 	db	114	;'r'
   416  00FFE5  00                 	db	0
   417  00FFE6                     STR_2:
   418  00FFE6  72                 	db	114	;'r'
   419  00FFE7  61                 	db	97	;'a'
   420  00FFE8  64                 	db	100	;'d'
   421  00FFE9  69                 	db	105	;'i'
   422  00FFEA  6F                 	db	111	;'o'
   423  00FFEB  5F                 	db	95	;'_'
   424  00FFEC  72                 	db	114	;'r'
   425  00FFED  78                 	db	120	;'x'
   426  00FFEE  00                 	db	0
   427  00FFEF                     STR_7:
   428  00FFEF  25                 	db	37
   429  00FFF0  78                 	db	120	;'x'
   430  00FFF1  20                 	db	32
   431  00FFF2  25                 	db	37
   432  00FFF3  78                 	db	120	;'x'
   433  00FFF4  0D                 	db	13
   434  00FFF5  0A                 	db	10
   435  00FFF6  00                 	db	0
   436  00FFF7                     STR_6:
   437  00FFF7  3E                 	db	62	;'>'
   438  00FFF8  20                 	db	32
   439  00FFF9  25                 	db	37
   440  00FFFA  64                 	db	100	;'d'
   441  00FFFB  0D                 	db	13
   442  00FFFC  0A                 	db	10
   443  00FFFD  00                 	db	0
   444  0000                     
   445                           ; #config settings
   446  00FFFE  00                 	db	0	; dummy byte at the end
   447  0000                     
   448                           	psect	nvCOMRAM
   449  00003A                     __pnvCOMRAM:
   450                           	opt stack 0
   451  00003A                     _eusart1TxBufferRemaining:
   452                           	opt stack 0
   453  00003A                     	ds	1
   454  0000                     _ANSELA	set	3896
   455  0000                     _ANSELB	set	3897
   456  0000                     _ANSELC	set	3898
   457  0000                     _ANSELCbits	set	3898
   458  0000                     _CCPTMRS0bits	set	3913
   459  0000                     _BAUDCON1	set	4024
   460  0000                     _CCP1CON	set	4029
   461  0000                     _CCPR1H	set	4031
   462  0000                     _CCPR1L	set	4030
   463  0000                     _ECCP1AS	set	4022
   464  0000                     _INTCON2bits	set	4081
   465  0000                     _INTCONbits	set	4082
   466  0000                     _IPR1bits	set	3999
   467  0000                     _LATA	set	3977
   468  0000                     _LATB	set	3978
   469  0000                     _LATC	set	3979
   470  0000                     _OSCCON	set	4051
   471  0000                     _OSCCON2	set	4050
   472  0000                     _OSCTUNE	set	3995
   473  0000                     _PIE1bits	set	3997
   474  0000                     _PIR1bits	set	3998
   475  0000                     _PORTCbits	set	3970
   476  0000                     _PR2	set	4027
   477  0000                     _PSTR1CON	set	4025
   478  0000                     _PWM1CON	set	4023
   479  0000                     _RCONbits	set	4048
   480  0000                     _RCREG1	set	4014
   481  0000                     _RCSTA1	set	4011
   482  0000                     _RCSTA1bits	set	4011
   483  0000                     _SPBRG1	set	4015
   484  0000                     _SPBRGH1	set	4016
   485  0000                     _T2CON	set	4026
   486  0000                     _T2CONbits	set	4026
   487  0000                     _TMR2	set	4028
   488  0000                     _TRISA	set	3986
   489  0000                     _TRISB	set	3987
   490  0000                     _TRISC	set	3988
   491  0000                     _TXREG1	set	4013
   492  0000                     _TXSTA1	set	4012
   493  0000                     _WPUB	set	3937
   494  0000                     _LATC3	set	31835
   495  0000                     _LATC4	set	31836
   496  0000                     _TRISC3	set	31907
   497  0000                     _TRISC4	set	31908
   498                           
   499                           	psect	cinit
   500  00154E                     __pcinit:
   501                           	opt stack 0
   502  00154E                     start_initialization:
   503                           	opt stack 0
   504  00154E                     __initialization:
   505                           	opt stack 0
   506                           
   507                           ; Clear objects allocated to BANK2 (128 bytes)
   508  00154E  EE02  F000         	lfsr	0,__pbssBANK2
   509  001552  0E80               	movlw	128
   510  001554                     clear_0:
   511  001554  6AEE               	clrf	postinc0,c
   512  001556  06E8               	decf	wreg,f,c
   513  001558  E1FD               	bnz	clear_0
   514                           
   515                           ; Clear objects allocated to BANK1 (168 bytes)
   516  00155A  EE01  F000         	lfsr	0,__pbssBANK1
   517  00155E  0EA8               	movlw	168
   518  001560                     clear_1:
   519  001560  6AEE               	clrf	postinc0,c
   520  001562  06E8               	decf	wreg,f,c
   521  001564  E1FD               	bnz	clear_1
   522                           
   523                           ; Clear objects allocated to BANK0 (128 bytes)
   524  001566  EE00  F060         	lfsr	0,__pbssBANK0
   525  00156A  0E80               	movlw	128
   526  00156C                     clear_2:
   527  00156C  6AEE               	clrf	postinc0,c
   528  00156E  06E8               	decf	wreg,f,c
   529  001570  E1FD               	bnz	clear_2
   530                           
   531                           ; Clear objects allocated to COMRAM (11 bytes)
   532  001572  EE00  F02B         	lfsr	0,__pbssCOMRAM
   533  001576  0E0B               	movlw	11
   534  001578                     clear_3:
   535  001578  6AEE               	clrf	postinc0,c
   536  00157A  06E8               	decf	wreg,f,c
   537  00157C  E1FD               	bnz	clear_3
   538                           
   539                           ; Initialize objects allocated to COMRAM (4 bytes)
   540                           ; load TBLPTR registers with __pidataCOMRAM
   541  00157E  0E78               	movlw	low __pidataCOMRAM
   542  001580  6EF6               	movwf	tblptrl,c
   543  001582  0E19               	movlw	high __pidataCOMRAM
   544  001584  6EF7               	movwf	tblptrh,c
   545  001586  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   546  001588  6EF8               	movwf	tblptru,c
   547  00158A  EE00  F036         	lfsr	0,__pdataCOMRAM
   548  00158E  EE10 F004          	lfsr	1,4
   549  001592                     copy_data0:
   550  001592  0009               	tblrd		*+
   551  001594  CFF5 FFEE          	movff	tablat,postinc0
   552  001598  50E5               	movf	postdec1,w,c
   553  00159A  50E1               	movf	fsr1l,w,c
   554  00159C  E1FA               	bnz	copy_data0
   555  00159E                     end_of_initialization:
   556                           	opt stack 0
   557  00159E                     __end_of__initialization:
   558                           	opt stack 0
   559  00159E  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   560  0015A0  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   561  0015A2  0100               	movlb	0
   562  0015A4  EF4C  F000         	goto	_main	;jump to C main() function
   563                           tblptru	equ	0xFF8
   564                           tblptrh	equ	0xFF7
   565                           tblptrl	equ	0xFF6
   566                           tablat	equ	0xFF5
   567                           postinc0	equ	0xFEE
   568                           wreg	equ	0xFE8
   569                           postdec1	equ	0xFE5
   570                           fsr1l	equ	0xFE1
   571                           
   572                           	psect	bssCOMRAM
   573  00002B                     __pbssCOMRAM:
   574                           	opt stack 0
   575  00002B                     _index:
   576                           	opt stack 0
   577  00002B                     	ds	2
   578  00002D                     _eusart1RxCount:
   579                           	opt stack 0
   580  00002D                     	ds	1
   581  00002E                     _eusart1RxHead:
   582                           	opt stack 0
   583  00002E                     	ds	1
   584  00002F                     _eusart1RxTail:
   585                           	opt stack 0
   586  00002F                     	ds	1
   587  000030                     _eusart1TxHead:
   588                           	opt stack 0
   589  000030                     	ds	1
   590  000031                     _eusart1TxTail:
   591                           	opt stack 0
   592  000031                     	ds	1
   593  000032                     _inc:
   594                           	opt stack 0
   595  000032                     	ds	1
   596  000033                     _ready:
   597                           	opt stack 0
   598  000033                     	ds	1
   599  000034                     _uartState:
   600                           	opt stack 0
   601  000034                     	ds	1
   602  000035                     _val:
   603                           	opt stack 0
   604  000035                     	ds	1
   605                           tblptru	equ	0xFF8
   606                           tblptrh	equ	0xFF7
   607                           tblptrl	equ	0xFF6
   608                           tablat	equ	0xFF5
   609                           postinc0	equ	0xFEE
   610                           wreg	equ	0xFE8
   611                           postdec1	equ	0xFE5
   612                           fsr1l	equ	0xFE1
   613                           
   614                           	psect	dataCOMRAM
   615  000036                     __pdataCOMRAM:
   616                           	opt stack 0
   617  000036                     _randx:
   618                           	opt stack 0
   619  000036                     	ds	4
   620                           tblptru	equ	0xFF8
   621                           tblptrh	equ	0xFF7
   622                           tblptrl	equ	0xFF6
   623                           tablat	equ	0xFF5
   624                           postinc0	equ	0xFEE
   625                           wreg	equ	0xFE8
   626                           postdec1	equ	0xFE5
   627                           fsr1l	equ	0xFE1
   628                           
   629                           	psect	bssBANK0
   630  000060                     __pbssBANK0:
   631                           	opt stack 0
   632  000060                     _line:
   633                           	opt stack 0
   634  000060                     	ds	128
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           postdec1	equ	0xFE5
   642                           fsr1l	equ	0xFE1
   643                           
   644                           	psect	bssBANK1
   645  000100                     __pbssBANK1:
   646                           	opt stack 0
   647  000100                     _eusart1TxBuffer:
   648                           	opt stack 0
   649  000100                     	ds	128
   650  000180                     _uuid:
   651                           	opt stack 0
   652  000180                     	ds	40
   653                           tblptru	equ	0xFF8
   654                           tblptrh	equ	0xFF7
   655                           tblptrl	equ	0xFF6
   656                           tablat	equ	0xFF5
   657                           postinc0	equ	0xFEE
   658                           wreg	equ	0xFE8
   659                           postdec1	equ	0xFE5
   660                           fsr1l	equ	0xFE1
   661                           
   662                           	psect	bssBANK2
   663  000200                     __pbssBANK2:
   664                           	opt stack 0
   665  000200                     _eusart1RxBuffer:
   666                           	opt stack 0
   667  000200                     	ds	128
   668                           tblptru	equ	0xFF8
   669                           tblptrh	equ	0xFF7
   670                           tblptrl	equ	0xFF6
   671                           tablat	equ	0xFF5
   672                           postinc0	equ	0xFEE
   673                           wreg	equ	0xFE8
   674                           postdec1	equ	0xFE5
   675                           fsr1l	equ	0xFE1
   676                           
   677                           	psect	cstackBANK1
   678  0001A8                     __pcstackBANK1:
   679                           	opt stack 0
   680  0001A8                     process_data_opt@msb:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x0
   684  0001A8                     	ds	1
   685  0001A9                     process_data_opt@exponent:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x1
   689  0001A9                     	ds	2
   690  0001AB                     process_data_opt@raw:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x3
   694  0001AB                     	ds	2
   695  0001AD                     process_data_opt@Illumination:
   696                           	opt stack 0
   697                           
   698                           ; 4 bytes @ 0x5
   699  0001AD                     	ds	4
   700  0001B1                     process_data_opt@result:
   701                           	opt stack 0
   702                           
   703                           ; 4 bytes @ 0x9
   704  0001B1                     	ds	4
   705                           tblptru	equ	0xFF8
   706                           tblptrh	equ	0xFF7
   707                           tblptrl	equ	0xFF6
   708                           tablat	equ	0xFF5
   709                           postinc0	equ	0xFEE
   710                           wreg	equ	0xFE8
   711                           postdec1	equ	0xFE5
   712                           fsr1l	equ	0xFE1
   713                           
   714                           	psect	cstackBANK0
   715  0000E0                     __pcstackBANK0:
   716                           	opt stack 0
   717  0000E0                     ?___lmul:
   718                           	opt stack 0
   719  0000E0                     ___lwdiv@counter:
   720                           	opt stack 0
   721  0000E0                     ___lmul@multiplier:
   722                           	opt stack 0
   723                           
   724                           ; 4 bytes @ 0x0
   725  0000E0                     	ds	1
   726  0000E1                     ___lwdiv@quotient:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x1
   730  0000E1                     	ds	2
   731  0000E3                     ?___lwmod:
   732                           	opt stack 0
   733  0000E3                     ___lwmod@dividend:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x3
   737  0000E3                     	ds	1
   738  0000E4                     ___lmul@multiplicand:
   739                           	opt stack 0
   740                           
   741                           ; 4 bytes @ 0x4
   742  0000E4                     	ds	1
   743  0000E5                     ___lwmod@divisor:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x5
   747  0000E5                     	ds	2
   748  0000E7                     ?_printf:
   749                           	opt stack 0
   750  0000E7                     printf@f:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x7
   754  0000E7                     	ds	1
   755  0000E8                     ?___awmod:
   756                           	opt stack 0
   757  0000E8                     ?_strtol:
   758                           	opt stack 0
   759  0000E8                     ___awmod@dividend:
   760                           	opt stack 0
   761  0000E8                     strtol@s:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x8
   765  0000E8                     	ds	2
   766  0000EA                     ___awmod@divisor:
   767                           	opt stack 0
   768  0000EA                     strtol@endptr:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0xA
   772  0000EA                     	ds	2
   773  0000EC                     ___awmod@counter:
   774                           	opt stack 0
   775  0000EC                     strtol@base:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0xC
   779  0000EC                     	ds	1
   780  0000ED                     printf@idx:
   781                           	opt stack 0
   782  0000ED                     ___awmod@sign:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0xD
   786  0000ED                     	ds	1
   787  0000EE                     ??_strtol:
   788  0000EE                     printf@ap:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0xE
   792  0000EE                     	ds	2
   793  0000F0                     printf@prec:
   794                           	opt stack 0
   795                           
   796                           ; 1 bytes @ 0x10
   797  0000F0                     	ds	1
   798  0000F1                     printf@flag:
   799                           	opt stack 0
   800                           
   801                           ; 1 bytes @ 0x11
   802  0000F1                     	ds	1
   803  0000F2                     strtol@sign:
   804                           	opt stack 0
   805  0000F2                     printf@val:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x12
   809  0000F2                     	ds	1
   810  0000F3                     strtol@a:
   811                           	opt stack 0
   812                           
   813                           ; 4 bytes @ 0x13
   814  0000F3                     	ds	1
   815  0000F4                     printf@c:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x14
   819  0000F4                     	ds	1
   820  0000F5                     process_data_opt@lsb:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x15
   824  0000F5                     	ds	1
   825  0000F6                     ??_process_data_opt:
   826                           
   827                           ; 1 bytes @ 0x16
   828  0000F6                     	ds	1
   829  0000F7                     strtol@c:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x17
   833  0000F7                     	ds	1
   834  0000F8                     srand@x:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x18
   838  0000F8                     	ds	2
   839  0000FA                     ??_main:
   840                           
   841                           ; 1 bytes @ 0x1A
   842  0000FA                     	ds	1
   843  0000FB                     main@delay:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x1B
   847  0000FB                     	ds	2
   848  0000FD                     main@msb:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x1D
   852  0000FD                     	ds	1
   853  0000FE                     main@lsb:
   854                           	opt stack 0
   855                           
   856                           ; 1 bytes @ 0x1E
   857  0000FE                     	ds	1
   858                           tblptru	equ	0xFF8
   859                           tblptrh	equ	0xFF7
   860                           tblptrl	equ	0xFF6
   861                           tablat	equ	0xFF5
   862                           postinc0	equ	0xFEE
   863                           wreg	equ	0xFE8
   864                           postdec1	equ	0xFE5
   865                           fsr1l	equ	0xFE1
   866                           
   867                           	psect	cstackCOMRAM
   868  000001                     __pcstackCOMRAM:
   869                           	opt stack 0
   870  000001                     ?_strcmp:
   871                           	opt stack 0
   872  000001                     ?_strlen:
   873                           	opt stack 0
   874  000001                     ?_strchr:
   875                           	opt stack 0
   876  000001                     EUSART1_Read@readValue:
   877                           	opt stack 0
   878  000001                     strcmp@s1:
   879                           	opt stack 0
   880  000001                     strchr@ptr:
   881                           	opt stack 0
   882  000001                     strlen@s:
   883                           	opt stack 0
   884                           
   885                           ; 2 bytes @ 0x0
   886  000001                     	ds	2
   887  000003                     ??_strlen:
   888  000003                     strcmp@s2:
   889                           	opt stack 0
   890  000003                     strchr@chr:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x2
   894  000003                     	ds	2
   895  000005                     ??_strcmp:
   896  000005                     strlen@cp:
   897                           	opt stack 0
   898                           
   899                           ; 2 bytes @ 0x4
   900  000005                     	ds	1
   901  000006                     strcmp@r:
   902                           	opt stack 0
   903                           
   904                           ; 1 bytes @ 0x5
   905  000006                     	ds	1
   906  000007                     ?_strncmp:
   907                           	opt stack 0
   908  000007                     strncmp@s1:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x6
   912  000007                     	ds	2
   913  000009                     strncmp@s2:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x8
   917  000009                     	ds	2
   918  00000B                     strncmp@len:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0xA
   922  00000B                     	ds	2
   923  00000D                     ??_strncmp:
   924                           
   925                           ; 1 bytes @ 0xC
   926  00000D                     	ds	3
   927  000010                     ?_strstr:
   928                           	opt stack 0
   929  000010                     strstr@s1:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0xF
   933  000010                     	ds	2
   934  000012                     strstr@s2:
   935                           	opt stack 0
   936                           
   937                           ; 2 bytes @ 0x11
   938  000012                     	ds	2
   939  000014                     ??_EUSART1_Receive_ISR:
   940  000014                     
   941                           ; 1 bytes @ 0x13
   942  000014                     	ds	1
   943  000015                     EUSART1_Receive_ISR@state:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0x14
   947  000015                     	ds	2
   948  000017                     ??_INTERRUPT_InterruptManager:
   949                           
   950                           ; 1 bytes @ 0x16
   951  000017                     	ds	14
   952  000025                     ??_I2C_Write_Byte:
   953  000025                     ??_isspace:
   954  000025                     ??_isdigit:
   955  000025                     ??_isupper:
   956  000025                     ?___lwdiv:
   957                           	opt stack 0
   958  000025                     EUSART1_Write@txData:
   959                           	opt stack 0
   960  000025                     I2C_Read_Byte@RxData:
   961                           	opt stack 0
   962  000025                     toupper@c:
   963                           	opt stack 0
   964  000025                     wait_5ms@j:
   965                           	opt stack 0
   966  000025                     ___lwdiv@dividend:
   967                           	opt stack 0
   968  000025                     strcpy@to:
   969                           	opt stack 0
   970  000025                     ___lmul@product:
   971                           	opt stack 0
   972                           
   973                           ; 4 bytes @ 0x24
   974  000025                     	ds	1
   975  000026                     putch@txData:
   976                           	opt stack 0
   977  000026                     _isdigit$1465:
   978                           	opt stack 0
   979  000026                     _isspace$1468:
   980                           	opt stack 0
   981  000026                     _isupper$1471:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x25
   985  000026                     	ds	1
   986  000027                     ??_wait_5ms:
   987  000027                     isdigit@c:
   988                           	opt stack 0
   989  000027                     isspace@c:
   990                           	opt stack 0
   991  000027                     isupper@c:
   992                           	opt stack 0
   993  000027                     ___lwdiv@divisor:
   994                           	opt stack 0
   995  000027                     strcpy@from:
   996                           	opt stack 0
   997                           
   998                           ; 2 bytes @ 0x26
   999  000027                     	ds	1
  1000  000028                     ??_isalpha:
  1001  000028                     I2C_Write_Byte@Byte:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x27
  1005  000028                     	ds	1
  1006  000029                     ?_rand:
  1007                           	opt stack 0
  1008  000029                     I2C_Write_Byte@i:
  1009                           	opt stack 0
  1010  000029                     ___lwmod@counter:
  1011                           	opt stack 0
  1012  000029                     _isalpha$1462:
  1013                           	opt stack 0
  1014  000029                     strcpy@cp:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x28
  1018  000029                     	ds	1
  1019  00002A                     ??_printf:
  1020  00002A                     wait_5ms@i:
  1021                           	opt stack 0
  1022  00002A                     isalpha@c:
  1023                           	opt stack 0
  1024                           
  1025                           ; 1 bytes @ 0x29
  1026  00002A                     	ds	1
  1027  00002B                     tblptru	equ	0xFF8
  1028                           tblptrh	equ	0xFF7
  1029                           tblptrl	equ	0xFF6
  1030                           tablat	equ	0xFF5
  1031                           postinc0	equ	0xFEE
  1032                           wreg	equ	0xFE8
  1033                           postdec1	equ	0xFE5
  1034                           fsr1l	equ	0xFE1
  1035                           
  1036                           ; 1 bytes @ 0x2A
  1037 ;;
  1038 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1039 ;;
  1040 ;; *************** function _main *****************
  1041 ;; Defined at:
  1042 ;;		line 111 in file "main.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  lsb             1   30[BANK0 ] unsigned char 
  1047 ;;  msb             1   29[BANK0 ] unsigned char 
  1048 ;;  delay           2   27[BANK0 ] int 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;Total ram usage:        5 bytes
  1063 ;; Hardware stack levels required when called:    8
  1064 ;; This function calls:
  1065 ;;		_I2C_Read_Byte
  1066 ;;		_I2C_Start
  1067 ;;		_I2C_Stop
  1068 ;;		_I2C_Write_Byte
  1069 ;;		_InitI2C
  1070 ;;		_SYSTEM_Initialize
  1071 ;;		___awmod
  1072 ;;		_getUUID
  1073 ;;		_printf
  1074 ;;		_process_data_opt
  1075 ;;		_rand
  1076 ;;		_read_line
  1077 ;;		_srand
  1078 ;;		_strtol
  1079 ;;		_wait_5ms
  1080 ;; This function is called by:
  1081 ;;		Startup code after reset
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text0
  1086  000098                     __ptext0:
  1087                           	opt stack 0
  1088  000098                     _main:
  1089                           	opt stack 23
  1090                           
  1091                           ;main.c: 112: SYSTEM_Initialize();
  1092                           
  1093                           ;incstack = 0
  1094  000098  EC79  F00C         	call	_SYSTEM_Initialize	;wreg free
  1095                           
  1096                           ;main.c: 113: (INTCONbits.GIE = 1);
  1097  00009C  8EF2               	bsf	intcon,7,c	;volatile
  1098                           
  1099                           ;main.c: 114: (INTCONbits.PEIE = 1);
  1100  00009E  8CF2               	bsf	intcon,6,c	;volatile
  1101                           
  1102                           ;main.c: 115: ANSELCbits.ANSC4=0;
  1103  0000A0  010F               	movlb	15	; () banked
  1104  0000A2  993A               	bcf	58,4,b	;volatile
  1105                           
  1106                           ; BSR set to: 15
  1107                           ;main.c: 117: InitI2C();
  1108  0000A4  ECB7  F00C         	call	_InitI2C	;wreg free
  1109                           
  1110                           ;main.c: 119: I2C_Start();
  1111  0000A8  EC6B  F00C         	call	_I2C_Start	;wreg free
  1112                           
  1113                           ;main.c: 120: I2C_Write_Byte(0x88);
  1114  0000AC  0E88               	movlw	136
  1115  0000AE  EC16  F00A         	call	_I2C_Write_Byte
  1116                           
  1117                           ;main.c: 121: I2C_Write_Byte(0x01);
  1118  0000B2  0E01               	movlw	1
  1119  0000B4  EC16  F00A         	call	_I2C_Write_Byte
  1120                           
  1121                           ;main.c: 122: I2C_Write_Byte(0xC4);
  1122  0000B8  0EC4               	movlw	196
  1123  0000BA  EC16  F00A         	call	_I2C_Write_Byte
  1124                           
  1125                           ;main.c: 123: I2C_Write_Byte(0x10);
  1126  0000BE  0E10               	movlw	16
  1127  0000C0  EC16  F00A         	call	_I2C_Write_Byte
  1128                           
  1129                           ;main.c: 124: I2C_Stop();
  1130  0000C4  EC01  F00C         	call	_I2C_Stop	;wreg free
  1131                           
  1132                           ;main.c: 126: _delay((unsigned long)((1)*(64000000/4000.0)));
  1133  0000C8  0E15               	movlw	21
  1134  0000CA  0100               	movlb	0	; () banked
  1135  0000CC  6FFA               	movwf	??_main& (0+255),b
  1136  0000CE  0EC6               	movlw	198
  1137  0000D0                     u2887:
  1138  0000D0  2EE8               	decfsz	wreg,f,c
  1139  0000D2  D7FE               	goto	u2887
  1140  0000D4  2FFA               	decfsz	??_main& (0+255),f,b
  1141  0000D6  D7FC               	goto	u2887
  1142  0000D8  D000               	nop2	
  1143  0000DA                     l3801:
  1144                           
  1145                           ;main.c: 130: I2C_Start();
  1146  0000DA  EC6B  F00C         	call	_I2C_Start	;wreg free
  1147                           
  1148                           ;main.c: 131: I2C_Write_Byte(0x88);
  1149  0000DE  0E88               	movlw	136
  1150  0000E0  EC16  F00A         	call	_I2C_Write_Byte
  1151                           
  1152                           ;main.c: 132: I2C_Write_Byte(0x7E);
  1153  0000E4  0E7E               	movlw	126
  1154  0000E6  EC16  F00A         	call	_I2C_Write_Byte
  1155                           
  1156                           ;main.c: 133: I2C_Start();
  1157  0000EA  EC6B  F00C         	call	_I2C_Start	;wreg free
  1158                           
  1159                           ;main.c: 134: I2C_Write_Byte(0x89);
  1160  0000EE  0E89               	movlw	137
  1161  0000F0  EC16  F00A         	call	_I2C_Write_Byte
  1162                           
  1163                           ;main.c: 135: uint8_t msb = I2C_Read_Byte();
  1164  0000F4  EC7F  F007         	call	_I2C_Read_Byte	;wreg free
  1165  0000F8  0100               	movlb	0	; () banked
  1166  0000FA  6FFD               	movwf	main@msb& (0+255),b
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;main.c: 136: uint8_t lsb = I2C_Read_Byte();
  1170  0000FC  EC7F  F007         	call	_I2C_Read_Byte	;wreg free
  1171  000100  0100               	movlb	0	; () banked
  1172  000102  6FFE               	movwf	main@lsb& (0+255),b
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;main.c: 137: I2C_Stop();
  1176  000104  EC01  F00C         	call	_I2C_Stop	;wreg free
  1177                           
  1178                           ;main.c: 138: printf("%x %x\r\n",msb,lsb);
  1179  000108  0EEF               	movlw	low STR_7
  1180  00010A  0100               	movlb	0	; () banked
  1181  00010C  6FE7               	movwf	printf@f& (0+255),b
  1182  00010E  0EFF               	movlw	high STR_7
  1183  000110  0100               	movlb	0	; () banked
  1184  000112  6FE8               	movwf	(printf@f+1)& (0+255),b
  1185  000114  C0FD  F0E9         	movff	main@msb,?_printf+2
  1186  000118  0100               	movlb	0	; () banked
  1187  00011A  6BEA               	clrf	(?_printf+3)& (0+255),b
  1188  00011C  C0FE  F0EB         	movff	main@lsb,?_printf+4
  1189  000120  0100               	movlb	0	; () banked
  1190  000122  6BEC               	clrf	(?_printf+5)& (0+255),b
  1191  000124  EC31  F005         	call	_printf	;wreg free
  1192                           
  1193                           ;main.c: 139: process_data_opt(msb,lsb);
  1194  000128  C0FE  F0F5         	movff	main@lsb,process_data_opt@lsb
  1195  00012C  0100               	movlb	0	; () banked
  1196  00012E  51FD               	movf	main@msb& (0+255),w,b
  1197  000130  ECBB  F003         	call	_process_data_opt
  1198                           
  1199                           ;main.c: 141: _delay((unsigned long)((10)*(64000000/4000.0)));
  1200  000134  0ED0               	movlw	208
  1201  000136  0100               	movlb	0	; () banked
  1202  000138  6FFA               	movwf	??_main& (0+255),b
  1203  00013A  0ECA               	movlw	202
  1204  00013C                     u2897:
  1205  00013C  2EE8               	decfsz	wreg,f,c
  1206  00013E  D7FE               	goto	u2897
  1207  000140  2FFA               	decfsz	??_main& (0+255),f,b
  1208  000142  D7FC               	goto	u2897
  1209                           
  1210                           ;main.c: 142: _delay((unsigned long)((10)*(64000000/4000.0)));
  1211  000144  0ED0               	movlw	208
  1212  000146  0100               	movlb	0	; () banked
  1213  000148  6FFA               	movwf	??_main& (0+255),b
  1214  00014A  0ECA               	movlw	202
  1215  00014C                     u2907:
  1216  00014C  2EE8               	decfsz	wreg,f,c
  1217  00014E  D7FE               	goto	u2907
  1218  000150  2FFA               	decfsz	??_main& (0+255),f,b
  1219  000152  D7FC               	goto	u2907
  1220                           
  1221                           ;main.c: 143: _delay((unsigned long)((10)*(64000000/4000.0)));
  1222  000154  0ED0               	movlw	208
  1223  000156  0100               	movlb	0	; () banked
  1224  000158  6FFA               	movwf	??_main& (0+255),b
  1225  00015A  0ECA               	movlw	202
  1226  00015C                     u2917:
  1227  00015C  2EE8               	decfsz	wreg,f,c
  1228  00015E  D7FE               	goto	u2917
  1229  000160  2FFA               	decfsz	??_main& (0+255),f,b
  1230  000162  D7FC               	goto	u2917
  1231                           
  1232                           ;main.c: 144: _delay((unsigned long)((10)*(64000000/4000.0)));
  1233  000164  0ED0               	movlw	208
  1234  000166  0100               	movlb	0	; () banked
  1235  000168  6FFA               	movwf	??_main& (0+255),b
  1236  00016A  0ECA               	movlw	202
  1237  00016C                     u2927:
  1238  00016C  2EE8               	decfsz	wreg,f,c
  1239  00016E  D7FE               	goto	u2927
  1240  000170  2FFA               	decfsz	??_main& (0+255),f,b
  1241  000172  D7FC               	goto	u2927
  1242                           
  1243                           ;main.c: 145: _delay((unsigned long)((10)*(64000000/4000.0)));
  1244  000174  0ED0               	movlw	208
  1245  000176  0100               	movlb	0	; () banked
  1246  000178  6FFA               	movwf	??_main& (0+255),b
  1247  00017A  0ECA               	movlw	202
  1248  00017C                     u2937:
  1249  00017C  2EE8               	decfsz	wreg,f,c
  1250  00017E  D7FE               	goto	u2937
  1251  000180  2FFA               	decfsz	??_main& (0+255),f,b
  1252  000182  D7FC               	goto	u2937
  1253                           
  1254                           ;main.c: 146: _delay((unsigned long)((10)*(64000000/4000.0)));
  1255  000184  0ED0               	movlw	208
  1256  000186  0100               	movlb	0	; () banked
  1257  000188  6FFA               	movwf	??_main& (0+255),b
  1258  00018A  0ECA               	movlw	202
  1259  00018C                     u2947:
  1260  00018C  2EE8               	decfsz	wreg,f,c
  1261  00018E  D7FE               	goto	u2947
  1262  000190  2FFA               	decfsz	??_main& (0+255),f,b
  1263  000192  D7FC               	goto	u2947
  1264                           
  1265                           ;main.c: 147: _delay((unsigned long)((10)*(64000000/4000.0)));
  1266  000194  0ED0               	movlw	208
  1267  000196  0100               	movlb	0	; () banked
  1268  000198  6FFA               	movwf	??_main& (0+255),b
  1269  00019A  0ECA               	movlw	202
  1270  00019C                     u2957:
  1271  00019C  2EE8               	decfsz	wreg,f,c
  1272  00019E  D7FE               	goto	u2957
  1273  0001A0  2FFA               	decfsz	??_main& (0+255),f,b
  1274  0001A2  D7FC               	goto	u2957
  1275                           
  1276                           ;main.c: 148: _delay((unsigned long)((10)*(64000000/4000.0)));
  1277  0001A4  0ED0               	movlw	208
  1278  0001A6  0100               	movlb	0	; () banked
  1279  0001A8  6FFA               	movwf	??_main& (0+255),b
  1280  0001AA  0ECA               	movlw	202
  1281  0001AC                     u2967:
  1282  0001AC  2EE8               	decfsz	wreg,f,c
  1283  0001AE  D7FE               	goto	u2967
  1284  0001B0  2FFA               	decfsz	??_main& (0+255),f,b
  1285  0001B2  D7FC               	goto	u2967
  1286                           
  1287                           ;main.c: 149: _delay((unsigned long)((10)*(64000000/4000.0)));
  1288  0001B4  0ED0               	movlw	208
  1289  0001B6  0100               	movlb	0	; () banked
  1290  0001B8  6FFA               	movwf	??_main& (0+255),b
  1291  0001BA  0ECA               	movlw	202
  1292  0001BC                     u2977:
  1293  0001BC  2EE8               	decfsz	wreg,f,c
  1294  0001BE  D7FE               	goto	u2977
  1295  0001C0  2FFA               	decfsz	??_main& (0+255),f,b
  1296  0001C2  D7FC               	goto	u2977
  1297                           
  1298                           ;main.c: 150: _delay((unsigned long)((10)*(64000000/4000.0)));
  1299  0001C4  0ED0               	movlw	208
  1300  0001C6  0100               	movlb	0	; () banked
  1301  0001C8  6FFA               	movwf	??_main& (0+255),b
  1302  0001CA  0ECA               	movlw	202
  1303  0001CC                     u2987:
  1304  0001CC  2EE8               	decfsz	wreg,f,c
  1305  0001CE  D7FE               	goto	u2987
  1306  0001D0  2FFA               	decfsz	??_main& (0+255),f,b
  1307  0001D2  D7FC               	goto	u2987
  1308                           
  1309                           ;main.c: 151: _delay((unsigned long)((10)*(64000000/4000.0)));
  1310  0001D4  0ED0               	movlw	208
  1311  0001D6  0100               	movlb	0	; () banked
  1312  0001D8  6FFA               	movwf	??_main& (0+255),b
  1313  0001DA  0ECA               	movlw	202
  1314  0001DC                     u2997:
  1315  0001DC  2EE8               	decfsz	wreg,f,c
  1316  0001DE  D7FE               	goto	u2997
  1317  0001E0  2FFA               	decfsz	??_main& (0+255),f,b
  1318  0001E2  D7FC               	goto	u2997
  1319                           
  1320                           ;main.c: 152: _delay((unsigned long)((10)*(64000000/4000.0)));
  1321  0001E4  0ED0               	movlw	208
  1322  0001E6  0100               	movlb	0	; () banked
  1323  0001E8  6FFA               	movwf	??_main& (0+255),b
  1324  0001EA  0ECA               	movlw	202
  1325  0001EC                     u3007:
  1326  0001EC  2EE8               	decfsz	wreg,f,c
  1327  0001EE  D7FE               	goto	u3007
  1328  0001F0  2FFA               	decfsz	??_main& (0+255),f,b
  1329  0001F2  D7FC               	goto	u3007
  1330                           
  1331                           ;main.c: 153: _delay((unsigned long)((10)*(64000000/4000.0)));
  1332  0001F4  0ED0               	movlw	208
  1333  0001F6  0100               	movlb	0	; () banked
  1334  0001F8  6FFA               	movwf	??_main& (0+255),b
  1335  0001FA  0ECA               	movlw	202
  1336  0001FC                     u3017:
  1337  0001FC  2EE8               	decfsz	wreg,f,c
  1338  0001FE  D7FE               	goto	u3017
  1339  000200  2FFA               	decfsz	??_main& (0+255),f,b
  1340  000202  D7FC               	goto	u3017
  1341                           
  1342                           ;main.c: 154: _delay((unsigned long)((10)*(64000000/4000.0)));
  1343  000204  0ED0               	movlw	208
  1344  000206  0100               	movlb	0	; () banked
  1345  000208  6FFA               	movwf	??_main& (0+255),b
  1346  00020A  0ECA               	movlw	202
  1347  00020C                     u3027:
  1348  00020C  2EE8               	decfsz	wreg,f,c
  1349  00020E  D7FE               	goto	u3027
  1350  000210  2FFA               	decfsz	??_main& (0+255),f,b
  1351  000212  D7FC               	goto	u3027
  1352                           
  1353                           ;main.c: 155: _delay((unsigned long)((10)*(64000000/4000.0)));
  1354  000214  0ED0               	movlw	208
  1355  000216  0100               	movlb	0	; () banked
  1356  000218  6FFA               	movwf	??_main& (0+255),b
  1357  00021A  0ECA               	movlw	202
  1358  00021C                     u3037:
  1359  00021C  2EE8               	decfsz	wreg,f,c
  1360  00021E  D7FE               	goto	u3037
  1361  000220  2FFA               	decfsz	??_main& (0+255),f,b
  1362  000222  D7FC               	goto	u3037
  1363                           
  1364                           ;main.c: 156: _delay((unsigned long)((10)*(64000000/4000.0)));
  1365  000224  0ED0               	movlw	208
  1366  000226  0100               	movlb	0	; () banked
  1367  000228  6FFA               	movwf	??_main& (0+255),b
  1368  00022A  0ECA               	movlw	202
  1369  00022C                     u3047:
  1370  00022C  2EE8               	decfsz	wreg,f,c
  1371  00022E  D7FE               	goto	u3047
  1372  000230  2FFA               	decfsz	??_main& (0+255),f,b
  1373  000232  D7FC               	goto	u3047
  1374                           
  1375                           ;main.c: 157: _delay((unsigned long)((10)*(64000000/4000.0)));
  1376  000234  0ED0               	movlw	208
  1377  000236  0100               	movlb	0	; () banked
  1378  000238  6FFA               	movwf	??_main& (0+255),b
  1379  00023A  0ECA               	movlw	202
  1380  00023C                     u3057:
  1381  00023C  2EE8               	decfsz	wreg,f,c
  1382  00023E  D7FE               	goto	u3057
  1383  000240  2FFA               	decfsz	??_main& (0+255),f,b
  1384  000242  D7FC               	goto	u3057
  1385                           
  1386                           ;main.c: 158: _delay((unsigned long)((10)*(64000000/4000.0)));
  1387  000244  0ED0               	movlw	208
  1388  000246  0100               	movlb	0	; () banked
  1389  000248  6FFA               	movwf	??_main& (0+255),b
  1390  00024A  0ECA               	movlw	202
  1391  00024C                     u3067:
  1392  00024C  2EE8               	decfsz	wreg,f,c
  1393  00024E  D7FE               	goto	u3067
  1394  000250  2FFA               	decfsz	??_main& (0+255),f,b
  1395  000252  D7FC               	goto	u3067
  1396                           
  1397                           ;main.c: 159: _delay((unsigned long)((10)*(64000000/4000.0)));
  1398  000254  0ED0               	movlw	208
  1399  000256  0100               	movlb	0	; () banked
  1400  000258  6FFA               	movwf	??_main& (0+255),b
  1401  00025A  0ECA               	movlw	202
  1402  00025C                     u3077:
  1403  00025C  2EE8               	decfsz	wreg,f,c
  1404  00025E  D7FE               	goto	u3077
  1405  000260  2FFA               	decfsz	??_main& (0+255),f,b
  1406  000262  D7FC               	goto	u3077
  1407                           
  1408                           ;main.c: 160: _delay((unsigned long)((10)*(64000000/4000.0)));
  1409  000264  0ED0               	movlw	208
  1410  000266  0100               	movlb	0	; () banked
  1411  000268  6FFA               	movwf	??_main& (0+255),b
  1412  00026A  0ECA               	movlw	202
  1413  00026C                     u3087:
  1414  00026C  2EE8               	decfsz	wreg,f,c
  1415  00026E  D7FE               	goto	u3087
  1416  000270  2FFA               	decfsz	??_main& (0+255),f,b
  1417  000272  D7FC               	goto	u3087
  1418                           
  1419                           ;main.c: 161: _delay((unsigned long)((10)*(64000000/4000.0)));
  1420  000274  0ED0               	movlw	208
  1421  000276  0100               	movlb	0	; () banked
  1422  000278  6FFA               	movwf	??_main& (0+255),b
  1423  00027A  0ECA               	movlw	202
  1424  00027C                     u3097:
  1425  00027C  2EE8               	decfsz	wreg,f,c
  1426  00027E  D7FE               	goto	u3097
  1427  000280  2FFA               	decfsz	??_main& (0+255),f,b
  1428  000282  D7FC               	goto	u3097
  1429                           
  1430                           ;main.c: 162: _delay((unsigned long)((10)*(64000000/4000.0)));
  1431  000284  0ED0               	movlw	208
  1432  000286  0100               	movlb	0	; () banked
  1433  000288  6FFA               	movwf	??_main& (0+255),b
  1434  00028A  0ECA               	movlw	202
  1435  00028C                     u3107:
  1436  00028C  2EE8               	decfsz	wreg,f,c
  1437  00028E  D7FE               	goto	u3107
  1438  000290  2FFA               	decfsz	??_main& (0+255),f,b
  1439  000292  D7FC               	goto	u3107
  1440                           
  1441                           ;main.c: 163: _delay((unsigned long)((10)*(64000000/4000.0)));
  1442  000294  0ED0               	movlw	208
  1443  000296  0100               	movlb	0	; () banked
  1444  000298  6FFA               	movwf	??_main& (0+255),b
  1445  00029A  0ECA               	movlw	202
  1446  00029C                     u3117:
  1447  00029C  2EE8               	decfsz	wreg,f,c
  1448  00029E  D7FE               	goto	u3117
  1449  0002A0  2FFA               	decfsz	??_main& (0+255),f,b
  1450  0002A2  D7FC               	goto	u3117
  1451                           
  1452                           ;main.c: 164: _delay((unsigned long)((10)*(64000000/4000.0)));
  1453  0002A4  0ED0               	movlw	208
  1454  0002A6  0100               	movlb	0	; () banked
  1455  0002A8  6FFA               	movwf	??_main& (0+255),b
  1456  0002AA  0ECA               	movlw	202
  1457  0002AC                     u3127:
  1458  0002AC  2EE8               	decfsz	wreg,f,c
  1459  0002AE  D7FE               	goto	u3127
  1460  0002B0  2FFA               	decfsz	??_main& (0+255),f,b
  1461  0002B2  D7FC               	goto	u3127
  1462                           
  1463                           ;main.c: 165: _delay((unsigned long)((10)*(64000000/4000.0)));
  1464  0002B4  0ED0               	movlw	208
  1465  0002B6  0100               	movlb	0	; () banked
  1466  0002B8  6FFA               	movwf	??_main& (0+255),b
  1467  0002BA  0ECA               	movlw	202
  1468  0002BC                     u3137:
  1469  0002BC  2EE8               	decfsz	wreg,f,c
  1470  0002BE  D7FE               	goto	u3137
  1471  0002C0  2FFA               	decfsz	??_main& (0+255),f,b
  1472  0002C2  D7FC               	goto	u3137
  1473                           
  1474                           ;main.c: 166: _delay((unsigned long)((10)*(64000000/4000.0)));
  1475  0002C4  0ED0               	movlw	208
  1476  0002C6  0100               	movlb	0	; () banked
  1477  0002C8  6FFA               	movwf	??_main& (0+255),b
  1478  0002CA  0ECA               	movlw	202
  1479  0002CC                     u3147:
  1480  0002CC  2EE8               	decfsz	wreg,f,c
  1481  0002CE  D7FE               	goto	u3147
  1482  0002D0  2FFA               	decfsz	??_main& (0+255),f,b
  1483  0002D2  D7FC               	goto	u3147
  1484                           
  1485                           ;main.c: 167: _delay((unsigned long)((10)*(64000000/4000.0)));
  1486  0002D4  0ED0               	movlw	208
  1487  0002D6  0100               	movlb	0	; () banked
  1488  0002D8  6FFA               	movwf	??_main& (0+255),b
  1489  0002DA  0ECA               	movlw	202
  1490  0002DC                     u3157:
  1491  0002DC  2EE8               	decfsz	wreg,f,c
  1492  0002DE  D7FE               	goto	u3157
  1493  0002E0  2FFA               	decfsz	??_main& (0+255),f,b
  1494  0002E2  D7FC               	goto	u3157
  1495                           
  1496                           ;main.c: 168: _delay((unsigned long)((10)*(64000000/4000.0)));
  1497  0002E4  0ED0               	movlw	208
  1498  0002E6  0100               	movlb	0	; () banked
  1499  0002E8  6FFA               	movwf	??_main& (0+255),b
  1500  0002EA  0ECA               	movlw	202
  1501  0002EC                     u3167:
  1502  0002EC  2EE8               	decfsz	wreg,f,c
  1503  0002EE  D7FE               	goto	u3167
  1504  0002F0  2FFA               	decfsz	??_main& (0+255),f,b
  1505  0002F2  D7FC               	goto	u3167
  1506                           
  1507                           ;main.c: 169: _delay((unsigned long)((10)*(64000000/4000.0)));
  1508  0002F4  0ED0               	movlw	208
  1509  0002F6  0100               	movlb	0	; () banked
  1510  0002F8  6FFA               	movwf	??_main& (0+255),b
  1511  0002FA  0ECA               	movlw	202
  1512  0002FC                     u3177:
  1513  0002FC  2EE8               	decfsz	wreg,f,c
  1514  0002FE  D7FE               	goto	u3177
  1515  000300  2FFA               	decfsz	??_main& (0+255),f,b
  1516  000302  D7FC               	goto	u3177
  1517                           
  1518                           ;main.c: 170: _delay((unsigned long)((10)*(64000000/4000.0)));
  1519  000304  0ED0               	movlw	208
  1520  000306  0100               	movlb	0	; () banked
  1521  000308  6FFA               	movwf	??_main& (0+255),b
  1522  00030A  0ECA               	movlw	202
  1523  00030C                     u3187:
  1524  00030C  2EE8               	decfsz	wreg,f,c
  1525  00030E  D7FE               	goto	u3187
  1526  000310  2FFA               	decfsz	??_main& (0+255),f,b
  1527  000312  D7FC               	goto	u3187
  1528                           
  1529                           ;main.c: 171: _delay((unsigned long)((10)*(64000000/4000.0)));
  1530  000314  0ED0               	movlw	208
  1531  000316  0100               	movlb	0	; () banked
  1532  000318  6FFA               	movwf	??_main& (0+255),b
  1533  00031A  0ECA               	movlw	202
  1534  00031C                     u3197:
  1535  00031C  2EE8               	decfsz	wreg,f,c
  1536  00031E  D7FE               	goto	u3197
  1537  000320  2FFA               	decfsz	??_main& (0+255),f,b
  1538  000322  D7FC               	goto	u3197
  1539                           
  1540                           ;main.c: 172: _delay((unsigned long)((10)*(64000000/4000.0)));
  1541  000324  0ED0               	movlw	208
  1542  000326  0100               	movlb	0	; () banked
  1543  000328  6FFA               	movwf	??_main& (0+255),b
  1544  00032A  0ECA               	movlw	202
  1545  00032C                     u3207:
  1546  00032C  2EE8               	decfsz	wreg,f,c
  1547  00032E  D7FE               	goto	u3207
  1548  000330  2FFA               	decfsz	??_main& (0+255),f,b
  1549  000332  D7FC               	goto	u3207
  1550                           
  1551                           ;main.c: 173: _delay((unsigned long)((10)*(64000000/4000.0)));
  1552  000334  0ED0               	movlw	208
  1553  000336  0100               	movlb	0	; () banked
  1554  000338  6FFA               	movwf	??_main& (0+255),b
  1555  00033A  0ECA               	movlw	202
  1556  00033C                     u3217:
  1557  00033C  2EE8               	decfsz	wreg,f,c
  1558  00033E  D7FE               	goto	u3217
  1559  000340  2FFA               	decfsz	??_main& (0+255),f,b
  1560  000342  D7FC               	goto	u3217
  1561                           
  1562                           ;main.c: 174: _delay((unsigned long)((10)*(64000000/4000.0)));
  1563  000344  0ED0               	movlw	208
  1564  000346  0100               	movlb	0	; () banked
  1565  000348  6FFA               	movwf	??_main& (0+255),b
  1566  00034A  0ECA               	movlw	202
  1567  00034C                     u3227:
  1568  00034C  2EE8               	decfsz	wreg,f,c
  1569  00034E  D7FE               	goto	u3227
  1570  000350  2FFA               	decfsz	??_main& (0+255),f,b
  1571  000352  D7FC               	goto	u3227
  1572                           
  1573                           ;main.c: 175: _delay((unsigned long)((10)*(64000000/4000.0)));
  1574  000354  0ED0               	movlw	208
  1575  000356  0100               	movlb	0	; () banked
  1576  000358  6FFA               	movwf	??_main& (0+255),b
  1577  00035A  0ECA               	movlw	202
  1578  00035C                     u3237:
  1579  00035C  2EE8               	decfsz	wreg,f,c
  1580  00035E  D7FE               	goto	u3237
  1581  000360  2FFA               	decfsz	??_main& (0+255),f,b
  1582  000362  D7FC               	goto	u3237
  1583                           
  1584                           ;main.c: 176: _delay((unsigned long)((10)*(64000000/4000.0)));
  1585  000364  0ED0               	movlw	208
  1586  000366  0100               	movlb	0	; () banked
  1587  000368  6FFA               	movwf	??_main& (0+255),b
  1588  00036A  0ECA               	movlw	202
  1589  00036C                     u3247:
  1590  00036C  2EE8               	decfsz	wreg,f,c
  1591  00036E  D7FE               	goto	u3247
  1592  000370  2FFA               	decfsz	??_main& (0+255),f,b
  1593  000372  D7FC               	goto	u3247
  1594                           
  1595                           ;main.c: 177: _delay((unsigned long)((10)*(64000000/4000.0)));
  1596  000374  0ED0               	movlw	208
  1597  000376  0100               	movlb	0	; () banked
  1598  000378  6FFA               	movwf	??_main& (0+255),b
  1599  00037A  0ECA               	movlw	202
  1600  00037C                     u3257:
  1601  00037C  2EE8               	decfsz	wreg,f,c
  1602  00037E  D7FE               	goto	u3257
  1603  000380  2FFA               	decfsz	??_main& (0+255),f,b
  1604  000382  D7FC               	goto	u3257
  1605                           
  1606                           ;main.c: 178: _delay((unsigned long)((10)*(64000000/4000.0)));
  1607  000384  0ED0               	movlw	208
  1608  000386  0100               	movlb	0	; () banked
  1609  000388  6FFA               	movwf	??_main& (0+255),b
  1610  00038A  0ECA               	movlw	202
  1611  00038C                     u3267:
  1612  00038C  2EE8               	decfsz	wreg,f,c
  1613  00038E  D7FE               	goto	u3267
  1614  000390  2FFA               	decfsz	??_main& (0+255),f,b
  1615  000392  D7FC               	goto	u3267
  1616                           
  1617                           ;main.c: 179: _delay((unsigned long)((10)*(64000000/4000.0)));
  1618  000394  0ED0               	movlw	208
  1619  000396  0100               	movlb	0	; () banked
  1620  000398  6FFA               	movwf	??_main& (0+255),b
  1621  00039A  0ECA               	movlw	202
  1622  00039C                     u3277:
  1623  00039C  2EE8               	decfsz	wreg,f,c
  1624  00039E  D7FE               	goto	u3277
  1625  0003A0  2FFA               	decfsz	??_main& (0+255),f,b
  1626  0003A2  D7FC               	goto	u3277
  1627                           
  1628                           ;main.c: 180: _delay((unsigned long)((10)*(64000000/4000.0)));
  1629  0003A4  0ED0               	movlw	208
  1630  0003A6  0100               	movlb	0	; () banked
  1631  0003A8  6FFA               	movwf	??_main& (0+255),b
  1632  0003AA  0ECA               	movlw	202
  1633  0003AC                     u3287:
  1634  0003AC  2EE8               	decfsz	wreg,f,c
  1635  0003AE  D7FE               	goto	u3287
  1636  0003B0  2FFA               	decfsz	??_main& (0+255),f,b
  1637  0003B2  D7FC               	goto	u3287
  1638                           
  1639                           ;main.c: 181: _delay((unsigned long)((10)*(64000000/4000.0)));
  1640  0003B4  0ED0               	movlw	208
  1641  0003B6  0100               	movlb	0	; () banked
  1642  0003B8  6FFA               	movwf	??_main& (0+255),b
  1643  0003BA  0ECA               	movlw	202
  1644  0003BC                     u3297:
  1645  0003BC  2EE8               	decfsz	wreg,f,c
  1646  0003BE  D7FE               	goto	u3297
  1647  0003C0  2FFA               	decfsz	??_main& (0+255),f,b
  1648  0003C2  D7FC               	goto	u3297
  1649                           
  1650                           ;main.c: 182: _delay((unsigned long)((10)*(64000000/4000.0)));
  1651  0003C4  0ED0               	movlw	208
  1652  0003C6  0100               	movlb	0	; () banked
  1653  0003C8  6FFA               	movwf	??_main& (0+255),b
  1654  0003CA  0ECA               	movlw	202
  1655  0003CC                     u3307:
  1656  0003CC  2EE8               	decfsz	wreg,f,c
  1657  0003CE  D7FE               	goto	u3307
  1658  0003D0  2FFA               	decfsz	??_main& (0+255),f,b
  1659  0003D2  D7FC               	goto	u3307
  1660                           
  1661                           ;main.c: 183: _delay((unsigned long)((10)*(64000000/4000.0)));
  1662  0003D4  0ED0               	movlw	208
  1663  0003D6  0100               	movlb	0	; () banked
  1664  0003D8  6FFA               	movwf	??_main& (0+255),b
  1665  0003DA  0ECA               	movlw	202
  1666  0003DC                     u3317:
  1667  0003DC  2EE8               	decfsz	wreg,f,c
  1668  0003DE  D7FE               	goto	u3317
  1669  0003E0  2FFA               	decfsz	??_main& (0+255),f,b
  1670  0003E2  D7FC               	goto	u3317
  1671                           
  1672                           ;main.c: 184: _delay((unsigned long)((10)*(64000000/4000.0)));
  1673  0003E4  0ED0               	movlw	208
  1674  0003E6  0100               	movlb	0	; () banked
  1675  0003E8  6FFA               	movwf	??_main& (0+255),b
  1676  0003EA  0ECA               	movlw	202
  1677  0003EC                     u3327:
  1678  0003EC  2EE8               	decfsz	wreg,f,c
  1679  0003EE  D7FE               	goto	u3327
  1680  0003F0  2FFA               	decfsz	??_main& (0+255),f,b
  1681  0003F2  D7FC               	goto	u3327
  1682                           
  1683                           ;main.c: 185: _delay((unsigned long)((10)*(64000000/4000.0)));
  1684  0003F4  0ED0               	movlw	208
  1685  0003F6  0100               	movlb	0	; () banked
  1686  0003F8  6FFA               	movwf	??_main& (0+255),b
  1687  0003FA  0ECA               	movlw	202
  1688  0003FC                     u3337:
  1689  0003FC  2EE8               	decfsz	wreg,f,c
  1690  0003FE  D7FE               	goto	u3337
  1691  000400  2FFA               	decfsz	??_main& (0+255),f,b
  1692  000402  D7FC               	goto	u3337
  1693                           
  1694                           ;main.c: 186: _delay((unsigned long)((10)*(64000000/4000.0)));
  1695  000404  0ED0               	movlw	208
  1696  000406  0100               	movlb	0	; () banked
  1697  000408  6FFA               	movwf	??_main& (0+255),b
  1698  00040A  0ECA               	movlw	202
  1699  00040C                     u3347:
  1700  00040C  2EE8               	decfsz	wreg,f,c
  1701  00040E  D7FE               	goto	u3347
  1702  000410  2FFA               	decfsz	??_main& (0+255),f,b
  1703  000412  D7FC               	goto	u3347
  1704                           
  1705                           ;main.c: 187: _delay((unsigned long)((10)*(64000000/4000.0)));
  1706  000414  0ED0               	movlw	208
  1707  000416  0100               	movlb	0	; () banked
  1708  000418  6FFA               	movwf	??_main& (0+255),b
  1709  00041A  0ECA               	movlw	202
  1710  00041C                     u3357:
  1711  00041C  2EE8               	decfsz	wreg,f,c
  1712  00041E  D7FE               	goto	u3357
  1713  000420  2FFA               	decfsz	??_main& (0+255),f,b
  1714  000422  D7FC               	goto	u3357
  1715                           
  1716                           ;main.c: 188: _delay((unsigned long)((10)*(64000000/4000.0)));
  1717  000424  0ED0               	movlw	208
  1718  000426  0100               	movlb	0	; () banked
  1719  000428  6FFA               	movwf	??_main& (0+255),b
  1720  00042A  0ECA               	movlw	202
  1721  00042C                     u3367:
  1722  00042C  2EE8               	decfsz	wreg,f,c
  1723  00042E  D7FE               	goto	u3367
  1724  000430  2FFA               	decfsz	??_main& (0+255),f,b
  1725  000432  D7FC               	goto	u3367
  1726                           
  1727                           ;main.c: 189: _delay((unsigned long)((10)*(64000000/4000.0)));
  1728  000434  0ED0               	movlw	208
  1729  000436  0100               	movlb	0	; () banked
  1730  000438  6FFA               	movwf	??_main& (0+255),b
  1731  00043A  0ECA               	movlw	202
  1732  00043C                     u3377:
  1733  00043C  2EE8               	decfsz	wreg,f,c
  1734  00043E  D7FE               	goto	u3377
  1735  000440  2FFA               	decfsz	??_main& (0+255),f,b
  1736  000442  D7FC               	goto	u3377
  1737                           
  1738                           ;main.c: 190: _delay((unsigned long)((10)*(64000000/4000.0)));
  1739  000444  0ED0               	movlw	208
  1740  000446  0100               	movlb	0	; () banked
  1741  000448  6FFA               	movwf	??_main& (0+255),b
  1742  00044A  0ECA               	movlw	202
  1743  00044C                     u3387:
  1744  00044C  2EE8               	decfsz	wreg,f,c
  1745  00044E  D7FE               	goto	u3387
  1746  000450  2FFA               	decfsz	??_main& (0+255),f,b
  1747  000452  D7FC               	goto	u3387
  1748                           
  1749                           ;main.c: 191: _delay((unsigned long)((10)*(64000000/4000.0)));
  1750  000454  0ED0               	movlw	208
  1751  000456  0100               	movlb	0	; () banked
  1752  000458  6FFA               	movwf	??_main& (0+255),b
  1753  00045A  0ECA               	movlw	202
  1754  00045C                     u3397:
  1755  00045C  2EE8               	decfsz	wreg,f,c
  1756  00045E  D7FE               	goto	u3397
  1757  000460  2FFA               	decfsz	??_main& (0+255),f,b
  1758  000462  D7FC               	goto	u3397
  1759                           
  1760                           ;main.c: 192: _delay((unsigned long)((10)*(64000000/4000.0)));
  1761  000464  0ED0               	movlw	208
  1762  000466  0100               	movlb	0	; () banked
  1763  000468  6FFA               	movwf	??_main& (0+255),b
  1764  00046A  0ECA               	movlw	202
  1765  00046C                     u3407:
  1766  00046C  2EE8               	decfsz	wreg,f,c
  1767  00046E  D7FE               	goto	u3407
  1768  000470  2FFA               	decfsz	??_main& (0+255),f,b
  1769  000472  D7FC               	goto	u3407
  1770                           
  1771                           ;main.c: 193: _delay((unsigned long)((10)*(64000000/4000.0)));
  1772  000474  0ED0               	movlw	208
  1773  000476  0100               	movlb	0	; () banked
  1774  000478  6FFA               	movwf	??_main& (0+255),b
  1775  00047A  0ECA               	movlw	202
  1776  00047C                     u3417:
  1777  00047C  2EE8               	decfsz	wreg,f,c
  1778  00047E  D7FE               	goto	u3417
  1779  000480  2FFA               	decfsz	??_main& (0+255),f,b
  1780  000482  D7FC               	goto	u3417
  1781                           
  1782                           ;main.c: 194: _delay((unsigned long)((10)*(64000000/4000.0)));
  1783  000484  0ED0               	movlw	208
  1784  000486  0100               	movlb	0	; () banked
  1785  000488  6FFA               	movwf	??_main& (0+255),b
  1786  00048A  0ECA               	movlw	202
  1787  00048C                     u3427:
  1788  00048C  2EE8               	decfsz	wreg,f,c
  1789  00048E  D7FE               	goto	u3427
  1790  000490  2FFA               	decfsz	??_main& (0+255),f,b
  1791  000492  D7FC               	goto	u3427
  1792                           
  1793                           ;main.c: 195: _delay((unsigned long)((10)*(64000000/4000.0)));
  1794  000494  0ED0               	movlw	208
  1795  000496  0100               	movlb	0	; () banked
  1796  000498  6FFA               	movwf	??_main& (0+255),b
  1797  00049A  0ECA               	movlw	202
  1798  00049C                     u3437:
  1799  00049C  2EE8               	decfsz	wreg,f,c
  1800  00049E  D7FE               	goto	u3437
  1801  0004A0  2FFA               	decfsz	??_main& (0+255),f,b
  1802  0004A2  D7FC               	goto	u3437
  1803                           
  1804                           ;main.c: 196: _delay((unsigned long)((10)*(64000000/4000.0)));
  1805  0004A4  0ED0               	movlw	208
  1806  0004A6  0100               	movlb	0	; () banked
  1807  0004A8  6FFA               	movwf	??_main& (0+255),b
  1808  0004AA  0ECA               	movlw	202
  1809  0004AC                     u3447:
  1810  0004AC  2EE8               	decfsz	wreg,f,c
  1811  0004AE  D7FE               	goto	u3447
  1812  0004B0  2FFA               	decfsz	??_main& (0+255),f,b
  1813  0004B2  D7FC               	goto	u3447
  1814                           
  1815                           ;main.c: 197: _delay((unsigned long)((10)*(64000000/4000.0)));
  1816  0004B4  0ED0               	movlw	208
  1817  0004B6  0100               	movlb	0	; () banked
  1818  0004B8  6FFA               	movwf	??_main& (0+255),b
  1819  0004BA  0ECA               	movlw	202
  1820  0004BC                     u3457:
  1821  0004BC  2EE8               	decfsz	wreg,f,c
  1822  0004BE  D7FE               	goto	u3457
  1823  0004C0  2FFA               	decfsz	??_main& (0+255),f,b
  1824  0004C2  D7FC               	goto	u3457
  1825                           
  1826                           ;main.c: 198: _delay((unsigned long)((10)*(64000000/4000.0)));
  1827  0004C4  0ED0               	movlw	208
  1828  0004C6  0100               	movlb	0	; () banked
  1829  0004C8  6FFA               	movwf	??_main& (0+255),b
  1830  0004CA  0ECA               	movlw	202
  1831  0004CC                     u3467:
  1832  0004CC  2EE8               	decfsz	wreg,f,c
  1833  0004CE  D7FE               	goto	u3467
  1834  0004D0  2FFA               	decfsz	??_main& (0+255),f,b
  1835  0004D2  D7FC               	goto	u3467
  1836                           
  1837                           ;main.c: 199: _delay((unsigned long)((10)*(64000000/4000.0)));
  1838  0004D4  0ED0               	movlw	208
  1839  0004D6  0100               	movlb	0	; () banked
  1840  0004D8  6FFA               	movwf	??_main& (0+255),b
  1841  0004DA  0ECA               	movlw	202
  1842  0004DC                     u3477:
  1843  0004DC  2EE8               	decfsz	wreg,f,c
  1844  0004DE  D7FE               	goto	u3477
  1845  0004E0  2FFA               	decfsz	??_main& (0+255),f,b
  1846  0004E2  D7FC               	goto	u3477
  1847                           
  1848                           ;main.c: 200: _delay((unsigned long)((10)*(64000000/4000.0)));
  1849  0004E4  0ED0               	movlw	208
  1850  0004E6  0100               	movlb	0	; () banked
  1851  0004E8  6FFA               	movwf	??_main& (0+255),b
  1852  0004EA  0ECA               	movlw	202
  1853  0004EC                     u3487:
  1854  0004EC  2EE8               	decfsz	wreg,f,c
  1855  0004EE  D7FE               	goto	u3487
  1856  0004F0  2FFA               	decfsz	??_main& (0+255),f,b
  1857  0004F2  D7FC               	goto	u3487
  1858                           
  1859                           ;main.c: 201: _delay((unsigned long)((10)*(64000000/4000.0)));
  1860  0004F4  0ED0               	movlw	208
  1861  0004F6  0100               	movlb	0	; () banked
  1862  0004F8  6FFA               	movwf	??_main& (0+255),b
  1863  0004FA  0ECA               	movlw	202
  1864  0004FC                     u3497:
  1865  0004FC  2EE8               	decfsz	wreg,f,c
  1866  0004FE  D7FE               	goto	u3497
  1867  000500  2FFA               	decfsz	??_main& (0+255),f,b
  1868  000502  D7FC               	goto	u3497
  1869                           
  1870                           ;main.c: 202: _delay((unsigned long)((10)*(64000000/4000.0)));
  1871  000504  0ED0               	movlw	208
  1872  000506  0100               	movlb	0	; () banked
  1873  000508  6FFA               	movwf	??_main& (0+255),b
  1874  00050A  0ECA               	movlw	202
  1875  00050C                     u3507:
  1876  00050C  2EE8               	decfsz	wreg,f,c
  1877  00050E  D7FE               	goto	u3507
  1878  000510  2FFA               	decfsz	??_main& (0+255),f,b
  1879  000512  D7FC               	goto	u3507
  1880                           
  1881                           ;main.c: 203: _delay((unsigned long)((10)*(64000000/4000.0)));
  1882  000514  0ED0               	movlw	208
  1883  000516  0100               	movlb	0	; () banked
  1884  000518  6FFA               	movwf	??_main& (0+255),b
  1885  00051A  0ECA               	movlw	202
  1886  00051C                     u3517:
  1887  00051C  2EE8               	decfsz	wreg,f,c
  1888  00051E  D7FE               	goto	u3517
  1889  000520  2FFA               	decfsz	??_main& (0+255),f,b
  1890  000522  D7FC               	goto	u3517
  1891                           
  1892                           ;main.c: 204: _delay((unsigned long)((10)*(64000000/4000.0)));
  1893  000524  0ED0               	movlw	208
  1894  000526  0100               	movlb	0	; () banked
  1895  000528  6FFA               	movwf	??_main& (0+255),b
  1896  00052A  0ECA               	movlw	202
  1897  00052C                     u3527:
  1898  00052C  2EE8               	decfsz	wreg,f,c
  1899  00052E  D7FE               	goto	u3527
  1900  000530  2FFA               	decfsz	??_main& (0+255),f,b
  1901  000532  D7FC               	goto	u3527
  1902                           
  1903                           ;main.c: 205: _delay((unsigned long)((10)*(64000000/4000.0)));
  1904  000534  0ED0               	movlw	208
  1905  000536  0100               	movlb	0	; () banked
  1906  000538  6FFA               	movwf	??_main& (0+255),b
  1907  00053A  0ECA               	movlw	202
  1908  00053C                     u3537:
  1909  00053C  2EE8               	decfsz	wreg,f,c
  1910  00053E  D7FE               	goto	u3537
  1911  000540  2FFA               	decfsz	??_main& (0+255),f,b
  1912  000542  D7FC               	goto	u3537
  1913                           
  1914                           ;main.c: 206: _delay((unsigned long)((10)*(64000000/4000.0)));
  1915  000544  0ED0               	movlw	208
  1916  000546  0100               	movlb	0	; () banked
  1917  000548  6FFA               	movwf	??_main& (0+255),b
  1918  00054A  0ECA               	movlw	202
  1919  00054C                     u3547:
  1920  00054C  2EE8               	decfsz	wreg,f,c
  1921  00054E  D7FE               	goto	u3547
  1922  000550  2FFA               	decfsz	??_main& (0+255),f,b
  1923  000552  D7FC               	goto	u3547
  1924                           
  1925                           ;main.c: 207: _delay((unsigned long)((10)*(64000000/4000.0)));
  1926  000554  0ED0               	movlw	208
  1927  000556  0100               	movlb	0	; () banked
  1928  000558  6FFA               	movwf	??_main& (0+255),b
  1929  00055A  0ECA               	movlw	202
  1930  00055C                     u3557:
  1931  00055C  2EE8               	decfsz	wreg,f,c
  1932  00055E  D7FE               	goto	u3557
  1933  000560  2FFA               	decfsz	??_main& (0+255),f,b
  1934  000562  D7FC               	goto	u3557
  1935                           
  1936                           ;main.c: 208: _delay((unsigned long)((10)*(64000000/4000.0)));
  1937  000564  0ED0               	movlw	208
  1938  000566  0100               	movlb	0	; () banked
  1939  000568  6FFA               	movwf	??_main& (0+255),b
  1940  00056A  0ECA               	movlw	202
  1941  00056C                     u3567:
  1942  00056C  2EE8               	decfsz	wreg,f,c
  1943  00056E  D7FE               	goto	u3567
  1944  000570  2FFA               	decfsz	??_main& (0+255),f,b
  1945  000572  D7FC               	goto	u3567
  1946                           
  1947                           ;main.c: 209: _delay((unsigned long)((10)*(64000000/4000.0)));
  1948  000574  0ED0               	movlw	208
  1949  000576  0100               	movlb	0	; () banked
  1950  000578  6FFA               	movwf	??_main& (0+255),b
  1951  00057A  0ECA               	movlw	202
  1952  00057C                     u3577:
  1953  00057C  2EE8               	decfsz	wreg,f,c
  1954  00057E  D7FE               	goto	u3577
  1955  000580  2FFA               	decfsz	??_main& (0+255),f,b
  1956  000582  D7FC               	goto	u3577
  1957                           
  1958                           ;main.c: 210: _delay((unsigned long)((10)*(64000000/4000.0)));
  1959  000584  0ED0               	movlw	208
  1960  000586  0100               	movlb	0	; () banked
  1961  000588  6FFA               	movwf	??_main& (0+255),b
  1962  00058A  0ECA               	movlw	202
  1963  00058C                     u3587:
  1964  00058C  2EE8               	decfsz	wreg,f,c
  1965  00058E  D7FE               	goto	u3587
  1966  000590  2FFA               	decfsz	??_main& (0+255),f,b
  1967  000592  D7FC               	goto	u3587
  1968                           
  1969                           ;main.c: 211: _delay((unsigned long)((10)*(64000000/4000.0)));
  1970  000594  0ED0               	movlw	208
  1971  000596  0100               	movlb	0	; () banked
  1972  000598  6FFA               	movwf	??_main& (0+255),b
  1973  00059A  0ECA               	movlw	202
  1974  00059C                     u3597:
  1975  00059C  2EE8               	decfsz	wreg,f,c
  1976  00059E  D7FE               	goto	u3597
  1977  0005A0  2FFA               	decfsz	??_main& (0+255),f,b
  1978  0005A2  D7FC               	goto	u3597
  1979                           
  1980                           ;main.c: 212: _delay((unsigned long)((10)*(64000000/4000.0)));
  1981  0005A4  0ED0               	movlw	208
  1982  0005A6  0100               	movlb	0	; () banked
  1983  0005A8  6FFA               	movwf	??_main& (0+255),b
  1984  0005AA  0ECA               	movlw	202
  1985  0005AC                     u3607:
  1986  0005AC  2EE8               	decfsz	wreg,f,c
  1987  0005AE  D7FE               	goto	u3607
  1988  0005B0  2FFA               	decfsz	??_main& (0+255),f,b
  1989  0005B2  D7FC               	goto	u3607
  1990                           
  1991                           ;main.c: 213: _delay((unsigned long)((10)*(64000000/4000.0)));
  1992  0005B4  0ED0               	movlw	208
  1993  0005B6  0100               	movlb	0	; () banked
  1994  0005B8  6FFA               	movwf	??_main& (0+255),b
  1995  0005BA  0ECA               	movlw	202
  1996  0005BC                     u3617:
  1997  0005BC  2EE8               	decfsz	wreg,f,c
  1998  0005BE  D7FE               	goto	u3617
  1999  0005C0  2FFA               	decfsz	??_main& (0+255),f,b
  2000  0005C2  D7FC               	goto	u3617
  2001                           
  2002                           ;main.c: 214: _delay((unsigned long)((10)*(64000000/4000.0)));
  2003  0005C4  0ED0               	movlw	208
  2004  0005C6  0100               	movlb	0	; () banked
  2005  0005C8  6FFA               	movwf	??_main& (0+255),b
  2006  0005CA  0ECA               	movlw	202
  2007  0005CC                     u3627:
  2008  0005CC  2EE8               	decfsz	wreg,f,c
  2009  0005CE  D7FE               	goto	u3627
  2010  0005D0  2FFA               	decfsz	??_main& (0+255),f,b
  2011  0005D2  D7FC               	goto	u3627
  2012                           
  2013                           ;main.c: 215: _delay((unsigned long)((10)*(64000000/4000.0)));
  2014  0005D4  0ED0               	movlw	208
  2015  0005D6  0100               	movlb	0	; () banked
  2016  0005D8  6FFA               	movwf	??_main& (0+255),b
  2017  0005DA  0ECA               	movlw	202
  2018  0005DC                     u3637:
  2019  0005DC  2EE8               	decfsz	wreg,f,c
  2020  0005DE  D7FE               	goto	u3637
  2021  0005E0  2FFA               	decfsz	??_main& (0+255),f,b
  2022  0005E2  D7FC               	goto	u3637
  2023                           
  2024                           ;main.c: 216: _delay((unsigned long)((10)*(64000000/4000.0)));
  2025  0005E4  0ED0               	movlw	208
  2026  0005E6  0100               	movlb	0	; () banked
  2027  0005E8  6FFA               	movwf	??_main& (0+255),b
  2028  0005EA  0ECA               	movlw	202
  2029  0005EC                     u3647:
  2030  0005EC  2EE8               	decfsz	wreg,f,c
  2031  0005EE  D7FE               	goto	u3647
  2032  0005F0  2FFA               	decfsz	??_main& (0+255),f,b
  2033  0005F2  D7FC               	goto	u3647
  2034                           
  2035                           ;main.c: 217: _delay((unsigned long)((10)*(64000000/4000.0)));
  2036  0005F4  0ED0               	movlw	208
  2037  0005F6  0100               	movlb	0	; () banked
  2038  0005F8  6FFA               	movwf	??_main& (0+255),b
  2039  0005FA  0ECA               	movlw	202
  2040  0005FC                     u3657:
  2041  0005FC  2EE8               	decfsz	wreg,f,c
  2042  0005FE  D7FE               	goto	u3657
  2043  000600  2FFA               	decfsz	??_main& (0+255),f,b
  2044  000602  D7FC               	goto	u3657
  2045                           
  2046                           ;main.c: 218: _delay((unsigned long)((10)*(64000000/4000.0)));
  2047  000604  0ED0               	movlw	208
  2048  000606  0100               	movlb	0	; () banked
  2049  000608  6FFA               	movwf	??_main& (0+255),b
  2050  00060A  0ECA               	movlw	202
  2051  00060C                     u3667:
  2052  00060C  2EE8               	decfsz	wreg,f,c
  2053  00060E  D7FE               	goto	u3667
  2054  000610  2FFA               	decfsz	??_main& (0+255),f,b
  2055  000612  D7FC               	goto	u3667
  2056                           
  2057                           ;main.c: 219: _delay((unsigned long)((10)*(64000000/4000.0)));
  2058  000614  0ED0               	movlw	208
  2059  000616  0100               	movlb	0	; () banked
  2060  000618  6FFA               	movwf	??_main& (0+255),b
  2061  00061A  0ECA               	movlw	202
  2062  00061C                     u3677:
  2063  00061C  2EE8               	decfsz	wreg,f,c
  2064  00061E  D7FE               	goto	u3677
  2065  000620  2FFA               	decfsz	??_main& (0+255),f,b
  2066  000622  D7FC               	goto	u3677
  2067                           
  2068                           ;main.c: 220: _delay((unsigned long)((10)*(64000000/4000.0)));
  2069  000624  0ED0               	movlw	208
  2070  000626  0100               	movlb	0	; () banked
  2071  000628  6FFA               	movwf	??_main& (0+255),b
  2072  00062A  0ECA               	movlw	202
  2073  00062C                     u3687:
  2074  00062C  2EE8               	decfsz	wreg,f,c
  2075  00062E  D7FE               	goto	u3687
  2076  000630  2FFA               	decfsz	??_main& (0+255),f,b
  2077  000632  D7FC               	goto	u3687
  2078                           
  2079                           ;main.c: 221: _delay((unsigned long)((10)*(64000000/4000.0)));
  2080  000634  0ED0               	movlw	208
  2081  000636  0100               	movlb	0	; () banked
  2082  000638  6FFA               	movwf	??_main& (0+255),b
  2083  00063A  0ECA               	movlw	202
  2084  00063C                     u3697:
  2085  00063C  2EE8               	decfsz	wreg,f,c
  2086  00063E  D7FE               	goto	u3697
  2087  000640  2FFA               	decfsz	??_main& (0+255),f,b
  2088  000642  D7FC               	goto	u3697
  2089                           
  2090                           ;main.c: 222: _delay((unsigned long)((10)*(64000000/4000.0)));
  2091  000644  0ED0               	movlw	208
  2092  000646  0100               	movlb	0	; () banked
  2093  000648  6FFA               	movwf	??_main& (0+255),b
  2094  00064A  0ECA               	movlw	202
  2095  00064C                     u3707:
  2096  00064C  2EE8               	decfsz	wreg,f,c
  2097  00064E  D7FE               	goto	u3707
  2098  000650  2FFA               	decfsz	??_main& (0+255),f,b
  2099  000652  D7FC               	goto	u3707
  2100                           
  2101                           ;main.c: 223: _delay((unsigned long)((10)*(64000000/4000.0)));
  2102  000654  0ED0               	movlw	208
  2103  000656  0100               	movlb	0	; () banked
  2104  000658  6FFA               	movwf	??_main& (0+255),b
  2105  00065A  0ECA               	movlw	202
  2106  00065C                     u3717:
  2107  00065C  2EE8               	decfsz	wreg,f,c
  2108  00065E  D7FE               	goto	u3717
  2109  000660  2FFA               	decfsz	??_main& (0+255),f,b
  2110  000662  D7FC               	goto	u3717
  2111                           
  2112                           ;main.c: 224: _delay((unsigned long)((10)*(64000000/4000.0)));
  2113  000664  0ED0               	movlw	208
  2114  000666  0100               	movlb	0	; () banked
  2115  000668  6FFA               	movwf	??_main& (0+255),b
  2116  00066A  0ECA               	movlw	202
  2117  00066C                     u3727:
  2118  00066C  2EE8               	decfsz	wreg,f,c
  2119  00066E  D7FE               	goto	u3727
  2120  000670  2FFA               	decfsz	??_main& (0+255),f,b
  2121  000672  D7FC               	goto	u3727
  2122                           
  2123                           ;main.c: 225: _delay((unsigned long)((10)*(64000000/4000.0)));
  2124  000674  0ED0               	movlw	208
  2125  000676  0100               	movlb	0	; () banked
  2126  000678  6FFA               	movwf	??_main& (0+255),b
  2127  00067A  0ECA               	movlw	202
  2128  00067C                     u3737:
  2129  00067C  2EE8               	decfsz	wreg,f,c
  2130  00067E  D7FE               	goto	u3737
  2131  000680  2FFA               	decfsz	??_main& (0+255),f,b
  2132  000682  D7FC               	goto	u3737
  2133                           
  2134                           ;main.c: 226: _delay((unsigned long)((10)*(64000000/4000.0)));
  2135  000684  0ED0               	movlw	208
  2136  000686  0100               	movlb	0	; () banked
  2137  000688  6FFA               	movwf	??_main& (0+255),b
  2138  00068A  0ECA               	movlw	202
  2139  00068C                     u3747:
  2140  00068C  2EE8               	decfsz	wreg,f,c
  2141  00068E  D7FE               	goto	u3747
  2142  000690  2FFA               	decfsz	??_main& (0+255),f,b
  2143  000692  D7FC               	goto	u3747
  2144                           
  2145                           ;main.c: 227: _delay((unsigned long)((10)*(64000000/4000.0)));
  2146  000694  0ED0               	movlw	208
  2147  000696  0100               	movlb	0	; () banked
  2148  000698  6FFA               	movwf	??_main& (0+255),b
  2149  00069A  0ECA               	movlw	202
  2150  00069C                     u3757:
  2151  00069C  2EE8               	decfsz	wreg,f,c
  2152  00069E  D7FE               	goto	u3757
  2153  0006A0  2FFA               	decfsz	??_main& (0+255),f,b
  2154  0006A2  D7FC               	goto	u3757
  2155                           
  2156                           ;main.c: 228: _delay((unsigned long)((10)*(64000000/4000.0)));
  2157  0006A4  0ED0               	movlw	208
  2158  0006A6  0100               	movlb	0	; () banked
  2159  0006A8  6FFA               	movwf	??_main& (0+255),b
  2160  0006AA  0ECA               	movlw	202
  2161  0006AC                     u3767:
  2162  0006AC  2EE8               	decfsz	wreg,f,c
  2163  0006AE  D7FE               	goto	u3767
  2164  0006B0  2FFA               	decfsz	??_main& (0+255),f,b
  2165  0006B2  D7FC               	goto	u3767
  2166                           
  2167                           ;main.c: 229: _delay((unsigned long)((10)*(64000000/4000.0)));
  2168  0006B4  0ED0               	movlw	208
  2169  0006B6  0100               	movlb	0	; () banked
  2170  0006B8  6FFA               	movwf	??_main& (0+255),b
  2171  0006BA  0ECA               	movlw	202
  2172  0006BC                     u3777:
  2173  0006BC  2EE8               	decfsz	wreg,f,c
  2174  0006BE  D7FE               	goto	u3777
  2175  0006C0  2FFA               	decfsz	??_main& (0+255),f,b
  2176  0006C2  D7FC               	goto	u3777
  2177                           
  2178                           ;main.c: 230: _delay((unsigned long)((10)*(64000000/4000.0)));
  2179  0006C4  0ED0               	movlw	208
  2180  0006C6  0100               	movlb	0	; () banked
  2181  0006C8  6FFA               	movwf	??_main& (0+255),b
  2182  0006CA  0ECA               	movlw	202
  2183  0006CC                     u3787:
  2184  0006CC  2EE8               	decfsz	wreg,f,c
  2185  0006CE  D7FE               	goto	u3787
  2186  0006D0  2FFA               	decfsz	??_main& (0+255),f,b
  2187  0006D2  D7FC               	goto	u3787
  2188                           
  2189                           ;main.c: 231: _delay((unsigned long)((10)*(64000000/4000.0)));
  2190  0006D4  0ED0               	movlw	208
  2191  0006D6  0100               	movlb	0	; () banked
  2192  0006D8  6FFA               	movwf	??_main& (0+255),b
  2193  0006DA  0ECA               	movlw	202
  2194  0006DC                     u3797:
  2195  0006DC  2EE8               	decfsz	wreg,f,c
  2196  0006DE  D7FE               	goto	u3797
  2197  0006E0  2FFA               	decfsz	??_main& (0+255),f,b
  2198  0006E2  D7FC               	goto	u3797
  2199                           
  2200                           ;main.c: 232: _delay((unsigned long)((10)*(64000000/4000.0)));
  2201  0006E4  0ED0               	movlw	208
  2202  0006E6  0100               	movlb	0	; () banked
  2203  0006E8  6FFA               	movwf	??_main& (0+255),b
  2204  0006EA  0ECA               	movlw	202
  2205  0006EC                     u3807:
  2206  0006EC  2EE8               	decfsz	wreg,f,c
  2207  0006EE  D7FE               	goto	u3807
  2208  0006F0  2FFA               	decfsz	??_main& (0+255),f,b
  2209  0006F2  D7FC               	goto	u3807
  2210                           
  2211                           ;main.c: 233: _delay((unsigned long)((10)*(64000000/4000.0)));
  2212  0006F4  0ED0               	movlw	208
  2213  0006F6  0100               	movlb	0	; () banked
  2214  0006F8  6FFA               	movwf	??_main& (0+255),b
  2215  0006FA  0ECA               	movlw	202
  2216  0006FC                     u3817:
  2217  0006FC  2EE8               	decfsz	wreg,f,c
  2218  0006FE  D7FE               	goto	u3817
  2219  000700  2FFA               	decfsz	??_main& (0+255),f,b
  2220  000702  D7FC               	goto	u3817
  2221                           
  2222                           ;main.c: 234: _delay((unsigned long)((10)*(64000000/4000.0)));
  2223  000704  0ED0               	movlw	208
  2224  000706  0100               	movlb	0	; () banked
  2225  000708  6FFA               	movwf	??_main& (0+255),b
  2226  00070A  0ECA               	movlw	202
  2227  00070C                     u3827:
  2228  00070C  2EE8               	decfsz	wreg,f,c
  2229  00070E  D7FE               	goto	u3827
  2230  000710  2FFA               	decfsz	??_main& (0+255),f,b
  2231  000712  D7FC               	goto	u3827
  2232                           
  2233                           ;main.c: 235: _delay((unsigned long)((10)*(64000000/4000.0)));
  2234  000714  0ED0               	movlw	208
  2235  000716  0100               	movlb	0	; () banked
  2236  000718  6FFA               	movwf	??_main& (0+255),b
  2237  00071A  0ECA               	movlw	202
  2238  00071C                     u3837:
  2239  00071C  2EE8               	decfsz	wreg,f,c
  2240  00071E  D7FE               	goto	u3837
  2241  000720  2FFA               	decfsz	??_main& (0+255),f,b
  2242  000722  D7FC               	goto	u3837
  2243                           
  2244                           ;main.c: 236: _delay((unsigned long)((10)*(64000000/4000.0)));
  2245  000724  0ED0               	movlw	208
  2246  000726  0100               	movlb	0	; () banked
  2247  000728  6FFA               	movwf	??_main& (0+255),b
  2248  00072A  0ECA               	movlw	202
  2249  00072C                     u3847:
  2250  00072C  2EE8               	decfsz	wreg,f,c
  2251  00072E  D7FE               	goto	u3847
  2252  000730  2FFA               	decfsz	??_main& (0+255),f,b
  2253  000732  D7FC               	goto	u3847
  2254                           
  2255                           ;main.c: 237: _delay((unsigned long)((10)*(64000000/4000.0)));
  2256  000734  0ED0               	movlw	208
  2257  000736  0100               	movlb	0	; () banked
  2258  000738  6FFA               	movwf	??_main& (0+255),b
  2259  00073A  0ECA               	movlw	202
  2260  00073C                     u3857:
  2261  00073C  2EE8               	decfsz	wreg,f,c
  2262  00073E  D7FE               	goto	u3857
  2263  000740  2FFA               	decfsz	??_main& (0+255),f,b
  2264  000742  D7FC               	goto	u3857
  2265                           
  2266                           ;main.c: 238: _delay((unsigned long)((10)*(64000000/4000.0)));
  2267  000744  0ED0               	movlw	208
  2268  000746  0100               	movlb	0	; () banked
  2269  000748  6FFA               	movwf	??_main& (0+255),b
  2270  00074A  0ECA               	movlw	202
  2271  00074C                     u3867:
  2272  00074C  2EE8               	decfsz	wreg,f,c
  2273  00074E  D7FE               	goto	u3867
  2274  000750  2FFA               	decfsz	??_main& (0+255),f,b
  2275  000752  D7FC               	goto	u3867
  2276                           
  2277                           ;main.c: 239: _delay((unsigned long)((10)*(64000000/4000.0)));
  2278  000754  0ED0               	movlw	208
  2279  000756  0100               	movlb	0	; () banked
  2280  000758  6FFA               	movwf	??_main& (0+255),b
  2281  00075A  0ECA               	movlw	202
  2282  00075C                     u3877:
  2283  00075C  2EE8               	decfsz	wreg,f,c
  2284  00075E  D7FE               	goto	u3877
  2285  000760  2FFA               	decfsz	??_main& (0+255),f,b
  2286  000762  D7FC               	goto	u3877
  2287                           
  2288                           ;main.c: 240: _delay((unsigned long)((10)*(64000000/4000.0)));
  2289  000764  0ED0               	movlw	208
  2290  000766  0100               	movlb	0	; () banked
  2291  000768  6FFA               	movwf	??_main& (0+255),b
  2292  00076A  0ECA               	movlw	202
  2293  00076C                     u3887:
  2294  00076C  2EE8               	decfsz	wreg,f,c
  2295  00076E  D7FE               	goto	u3887
  2296  000770  2FFA               	decfsz	??_main& (0+255),f,b
  2297  000772  D7FC               	goto	u3887
  2298  000774  D4B2               	goto	l3801
  2299  000776                     __end_of_main:
  2300                           	opt stack 0
  2301                           tblptru	equ	0xFF8
  2302                           tblptrh	equ	0xFF7
  2303                           tblptrl	equ	0xFF6
  2304                           tablat	equ	0xFF5
  2305                           intcon	equ	0xFF2
  2306                           postinc0	equ	0xFEE
  2307                           wreg	equ	0xFE8
  2308                           postdec1	equ	0xFE5
  2309                           fsr1l	equ	0xFE1
  2310                           
  2311 ;; *************** function _wait_5ms *****************
  2312 ;; Defined at:
  2313 ;;		line 42 in file "main.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  j               2   36[COMRAM] int 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  i               1   41[COMRAM] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2329 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;Total ram usage:        6 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    4
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_main
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text1
  2342  0016AC                     __ptext1:
  2343                           	opt stack 0
  2344  0016AC                     _wait_5ms:
  2345                           	opt stack 26
  2346                           
  2347                           ;main.c: 43: for(uint8_t i=0;i<j;i++) { _delay((unsigned long)((5)*(64000000/4000.0))); 
      +                          }
  2348                           
  2349                           ;incstack = 0
  2350  0016AC  0E00               	movlw	0
  2351  0016AE  6E2A               	movwf	wait_5ms@i,c
  2352  0016B0  D009               	goto	l284
  2353  0016B2                     l2779:
  2354  0016B2  0E68               	movlw	104
  2355  0016B4  6E27               	movwf	??_wait_5ms& (0+255),c
  2356  0016B6  0EE4               	movlw	228
  2357  0016B8                     u3897:
  2358  0016B8  2EE8               	decfsz	wreg,f,c
  2359  0016BA  D7FE               	goto	u3897
  2360  0016BC  2E27               	decfsz	??_wait_5ms& (0+255),f,c
  2361  0016BE  D7FC               	goto	u3897
  2362  0016C0  D000               	nop2	
  2363  0016C2  2A2A               	incf	wait_5ms@i,f,c
  2364  0016C4                     l284:
  2365  0016C4  502A               	movf	wait_5ms@i,w,c
  2366  0016C6  6E27               	movwf	??_wait_5ms& (0+255),c
  2367  0016C8  6A28               	clrf	(??_wait_5ms+1)& (0+255),c
  2368  0016CA  5025               	movf	wait_5ms@j,w,c
  2369  0016CC  5C27               	subwf	??_wait_5ms,w,c
  2370  0016CE  5028               	movf	??_wait_5ms+1,w,c
  2371  0016D0  0A80               	xorlw	128
  2372  0016D2  6E29               	movwf	(??_wait_5ms+2)& (0+255),c
  2373  0016D4  5026               	movf	wait_5ms@j+1,w,c
  2374  0016D6  0A80               	xorlw	128
  2375  0016D8  5829               	subwfb	(??_wait_5ms+2)& (0+255),w,c
  2376  0016DA  B0D8               	btfsc	status,0,c
  2377  0016DC  0012               	return	
  2378  0016DE  D7E9               	goto	l2779
  2379  0016E0                     __end_of_wait_5ms:
  2380                           	opt stack 0
  2381                           tblptru	equ	0xFF8
  2382                           tblptrh	equ	0xFF7
  2383                           tblptrl	equ	0xFF6
  2384                           tablat	equ	0xFF5
  2385                           intcon	equ	0xFF2
  2386                           postinc0	equ	0xFEE
  2387                           wreg	equ	0xFE8
  2388                           postdec1	equ	0xFE5
  2389                           fsr1l	equ	0xFE1
  2390                           status	equ	0xFD8
  2391                           
  2392 ;; *************** function _strtol *****************
  2393 ;; Defined at:
  2394 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strtol.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  2397 ;;		 -> uuid(40), 
  2398 ;;  endptr          2   10[BANK0 ] PTR PTR unsigned char 
  2399 ;;		 -> NULL(0), 
  2400 ;;  base            2   12[BANK0 ] int 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  a               4   19[BANK0 ] long 
  2403 ;;  c               1   23[BANK0 ] unsigned char 
  2404 ;;  sign            1   18[BANK0 ] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  4    8[BANK0 ] long 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2414 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;Total ram usage:       16 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    6
  2421 ;; This function calls:
  2422 ;;		___lmul
  2423 ;;		_isalpha
  2424 ;;		_isdigit
  2425 ;;		_isspace
  2426 ;;		_toupper
  2427 ;; This function is called by:
  2428 ;;		_main
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text2
  2433  000CB8                     __ptext2:
  2434                           	opt stack 0
  2435  000CB8                     _strtol:
  2436                           	opt stack 24
  2437  000CB8  C0E8  FFD9         	movff	strtol@s,fsr2l
  2438  000CBC  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  2439  000CC0  50DF               	movf	indf2,w,c
  2440  000CC2  0100               	movlb	0	; () banked
  2441  000CC4  6FF7               	movwf	strtol@c& (0+255),b
  2442                           
  2443                           ; BSR set to: 0
  2444  000CC6  0100               	movlb	0	; () banked
  2445  000CC8  4BE8               	infsnz	strtol@s& (0+255),f,b
  2446  000CCA  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  2447                           
  2448                           ; BSR set to: 0
  2449  000CCC  0100               	movlb	0	; () banked
  2450  000CCE  51F7               	movf	strtol@c& (0+255),w,b
  2451  000CD0  EC2A  F00C         	call	_isspace
  2452  000CD4  B0D8               	btfsc	status,0,c
  2453  000CD6  D7F0               	goto	l3655
  2454  000CD8  0E00               	movlw	0
  2455  000CDA  0100               	movlb	0	; () banked
  2456  000CDC  6FF3               	movwf	strtol@a& (0+255),b
  2457  000CDE  0E00               	movlw	0
  2458  000CE0  6FF4               	movwf	(strtol@a+1)& (0+255),b
  2459  000CE2  0E00               	movlw	0
  2460  000CE4  6FF5               	movwf	(strtol@a+2)& (0+255),b
  2461  000CE6  0E00               	movlw	0
  2462  000CE8  6FF6               	movwf	(strtol@a+3)& (0+255),b
  2463  000CEA  0E00               	movlw	0
  2464  000CEC  0100               	movlb	0	; () banked
  2465  000CEE  6FF2               	movwf	strtol@sign& (0+255),b
  2466                           
  2467                           ; BSR set to: 0
  2468  000CF0  0E2D               	movlw	45
  2469  000CF2  0100               	movlb	0	; () banked
  2470  000CF4  19F7               	xorwf	strtol@c& (0+255),w,b
  2471  000CF6  A4D8               	btfss	status,2,c
  2472  000CF8  D008               	goto	l3671
  2473                           
  2474                           ; BSR set to: 0
  2475  000CFA  0E01               	movlw	1
  2476  000CFC  0100               	movlb	0	; () banked
  2477  000CFE  6FF2               	movwf	strtol@sign& (0+255),b
  2478  000D00  D009               	goto	l3673
  2479  000D02                     l3669:
  2480                           
  2481                           ; BSR set to: 0
  2482  000D02  0100               	movlb	0	; () banked
  2483  000D04  4BE8               	infsnz	strtol@s& (0+255),f,b
  2484  000D06  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  2485  000D08  D00D               	goto	l3677
  2486  000D0A                     l3671:
  2487                           
  2488                           ; BSR set to: 0
  2489  000D0A  0E2B               	movlw	43
  2490  000D0C  0100               	movlb	0	; () banked
  2491  000D0E  19F7               	xorwf	strtol@c& (0+255),w,b
  2492  000D10  A4D8               	btfss	status,2,c
  2493  000D12  D008               	goto	l3677
  2494  000D14                     l3673:
  2495                           
  2496                           ; BSR set to: 0
  2497  000D14  C0E8  FFD9         	movff	strtol@s,fsr2l
  2498  000D18  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  2499  000D1C  50DF               	movf	indf2,w,c
  2500  000D1E  0100               	movlb	0	; () banked
  2501  000D20  6FF7               	movwf	strtol@c& (0+255),b
  2502  000D22  D7EF               	goto	l3669
  2503  000D24                     l3677:
  2504                           
  2505                           ; BSR set to: 0
  2506  000D24  0E30               	movlw	48
  2507  000D26  0100               	movlb	0	; () banked
  2508  000D28  19F7               	xorwf	strtol@c& (0+255),w,b
  2509  000D2A  A4D8               	btfss	status,2,c
  2510  000D2C  D03C               	goto	l3701
  2511                           
  2512                           ; BSR set to: 0
  2513  000D2E  C0E8  FFD9         	movff	strtol@s,fsr2l
  2514  000D32  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  2515  000D36  50DF               	movf	indf2,w,c
  2516  000D38  0100               	movlb	0	; () banked
  2517  000D3A  6FF7               	movwf	strtol@c& (0+255),b
  2518                           
  2519                           ; BSR set to: 0
  2520  000D3C  0100               	movlb	0	; () banked
  2521  000D3E  4BE8               	infsnz	strtol@s& (0+255),f,b
  2522  000D40  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  2523                           
  2524                           ; BSR set to: 0
  2525  000D42  0100               	movlb	0	; () banked
  2526  000D44  51EC               	movf	strtol@base& (0+255),w,b
  2527  000D46  0100               	movlb	0	; () banked
  2528  000D48  11ED               	iorwf	(strtol@base+1)& (0+255),w,b
  2529  000D4A  B4D8               	btfsc	status,2,c
  2530  000D4C  D007               	goto	l3687
  2531                           
  2532                           ; BSR set to: 0
  2533  000D4E  0E10               	movlw	16
  2534  000D50  0100               	movlb	0	; () banked
  2535  000D52  19EC               	xorwf	strtol@base& (0+255),w,b
  2536  000D54  0100               	movlb	0	; () banked
  2537  000D56  11ED               	iorwf	(strtol@base+1)& (0+255),w,b
  2538  000D58  A4D8               	btfss	status,2,c
  2539  000D5A  D01A               	goto	l3697
  2540  000D5C                     l3687:
  2541                           
  2542                           ; BSR set to: 0
  2543  000D5C  0E78               	movlw	120
  2544  000D5E  0100               	movlb	0	; () banked
  2545  000D60  19F7               	xorwf	strtol@c& (0+255),w,b
  2546  000D62  B4D8               	btfsc	status,2,c
  2547  000D64  D005               	goto	l3691
  2548                           
  2549                           ; BSR set to: 0
  2550  000D66  0E58               	movlw	88
  2551  000D68  0100               	movlb	0	; () banked
  2552  000D6A  19F7               	xorwf	strtol@c& (0+255),w,b
  2553  000D6C  A4D8               	btfss	status,2,c
  2554  000D6E  D010               	goto	l3697
  2555  000D70                     l3691:
  2556                           
  2557                           ; BSR set to: 0
  2558  000D70  0E00               	movlw	0
  2559  000D72  0100               	movlb	0	; () banked
  2560  000D74  6FED               	movwf	(strtol@base+1)& (0+255),b
  2561  000D76  0E10               	movlw	16
  2562  000D78  6FEC               	movwf	strtol@base& (0+255),b
  2563                           
  2564                           ; BSR set to: 0
  2565  000D7A  C0E8  FFD9         	movff	strtol@s,fsr2l
  2566  000D7E  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  2567  000D82  50DF               	movf	indf2,w,c
  2568  000D84  0100               	movlb	0	; () banked
  2569  000D86  6FF7               	movwf	strtol@c& (0+255),b
  2570                           
  2571                           ; BSR set to: 0
  2572  000D88  0100               	movlb	0	; () banked
  2573  000D8A  4BE8               	infsnz	strtol@s& (0+255),f,b
  2574  000D8C  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  2575  000D8E  D00B               	goto	l3701
  2576  000D90                     l3697:
  2577                           
  2578                           ; BSR set to: 0
  2579  000D90  0100               	movlb	0	; () banked
  2580  000D92  51EC               	movf	strtol@base& (0+255),w,b
  2581  000D94  0100               	movlb	0	; () banked
  2582  000D96  11ED               	iorwf	(strtol@base+1)& (0+255),w,b
  2583  000D98  A4D8               	btfss	status,2,c
  2584  000D9A  D005               	goto	l3701
  2585                           
  2586                           ; BSR set to: 0
  2587  000D9C  0E00               	movlw	0
  2588  000D9E  0100               	movlb	0	; () banked
  2589  000DA0  6FED               	movwf	(strtol@base+1)& (0+255),b
  2590  000DA2  0E08               	movlw	8
  2591  000DA4  6FEC               	movwf	strtol@base& (0+255),b
  2592  000DA6                     l3701:
  2593                           
  2594                           ; BSR set to: 0
  2595  000DA6  0100               	movlb	0	; () banked
  2596  000DA8  51EC               	movf	strtol@base& (0+255),w,b
  2597  000DAA  0100               	movlb	0	; () banked
  2598  000DAC  11ED               	iorwf	(strtol@base+1)& (0+255),w,b
  2599  000DAE  A4D8               	btfss	status,2,c
  2600  000DB0  D005               	goto	l3705
  2601                           
  2602                           ; BSR set to: 0
  2603  000DB2  0E00               	movlw	0
  2604  000DB4  0100               	movlb	0	; () banked
  2605  000DB6  6FED               	movwf	(strtol@base+1)& (0+255),b
  2606  000DB8  0E0A               	movlw	10
  2607  000DBA  6FEC               	movwf	strtol@base& (0+255),b
  2608  000DBC                     l3705:
  2609                           
  2610                           ; BSR set to: 0
  2611  000DBC  0100               	movlb	0	; () banked
  2612  000DBE  51F7               	movf	strtol@c& (0+255),w,b
  2613  000DC0  EC16  F00C         	call	_isalpha
  2614  000DC4  A0D8               	btfss	status,0,c
  2615  000DC6  D008               	goto	l3709
  2616  000DC8  0100               	movlb	0	; () banked
  2617  000DCA  51F7               	movf	strtol@c& (0+255),w,b
  2618  000DCC  EC86  F00C         	call	_toupper
  2619  000DD0  0FC9               	addlw	201
  2620  000DD2  0100               	movlb	0	; () banked
  2621  000DD4  6FF7               	movwf	strtol@c& (0+255),b
  2622  000DD6  D009               	goto	l3713
  2623  000DD8                     l3709:
  2624  000DD8  0100               	movlb	0	; () banked
  2625  000DDA  51F7               	movf	strtol@c& (0+255),w,b
  2626  000DDC  EC4D  F00C         	call	_isdigit
  2627  000DE0  A0D8               	btfss	status,0,c
  2628  000DE2  D04C               	goto	l3723
  2629  000DE4  0E30               	movlw	48
  2630  000DE6  0100               	movlb	0	; () banked
  2631  000DE8  5FF7               	subwf	strtol@c& (0+255),f,b
  2632  000DEA                     l3713:
  2633                           
  2634                           ; BSR set to: 0
  2635  000DEA  0100               	movlb	0	; () banked
  2636  000DEC  51F7               	movf	strtol@c& (0+255),w,b
  2637  000DEE  0100               	movlb	0	; () banked
  2638  000DF0  6FEE               	movwf	??_strtol& (0+255),b
  2639  000DF2  6BEF               	clrf	(??_strtol+1)& (0+255),b
  2640  000DF4  0100               	movlb	0	; () banked
  2641  000DF6  51EC               	movf	strtol@base& (0+255),w,b
  2642  000DF8  0100               	movlb	0	; () banked
  2643  000DFA  5DEE               	subwf	??_strtol& (0+255),w,b
  2644  000DFC  0100               	movlb	0	; () banked
  2645  000DFE  51EF               	movf	(??_strtol+1)& (0+255),w,b
  2646  000E00  0A80               	xorlw	128
  2647  000E02  0100               	movlb	0	; () banked
  2648  000E04  6FF0               	movwf	(??_strtol+2)& (0+255),b
  2649  000E06  0100               	movlb	0	; () banked
  2650  000E08  51ED               	movf	(strtol@base+1)& (0+255),w,b
  2651  000E0A  0A80               	xorlw	128
  2652  000E0C  0100               	movlb	0	; () banked
  2653  000E0E  59F0               	subwfb	(??_strtol+2)& (0+255),w,b
  2654  000E10  B0D8               	btfsc	status,0,c
  2655  000E12  D034               	goto	l3723
  2656                           
  2657                           ; BSR set to: 0
  2658                           
  2659                           ; BSR set to: 0
  2660                           
  2661                           ; BSR set to: 0
  2662  000E14  C0EC  F0E0         	movff	strtol@base,___lmul@multiplier
  2663  000E18  C0ED  F0E1         	movff	strtol@base+1,___lmul@multiplier+1
  2664  000E1C  0100               	movlb	0	; () banked
  2665  000E1E  0E00               	movlw	0
  2666  000E20  BFE1               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  2667  000E22  0EFF               	movlw	-1
  2668  000E24  6FE2               	movwf	(___lmul@multiplier+2)& (0+255),b
  2669  000E26  6FE3               	movwf	(___lmul@multiplier+3)& (0+255),b
  2670  000E28  C0F3  F0E4         	movff	strtol@a,___lmul@multiplicand
  2671  000E2C  C0F4  F0E5         	movff	strtol@a+1,___lmul@multiplicand+1
  2672  000E30  C0F5  F0E6         	movff	strtol@a+2,___lmul@multiplicand+2
  2673  000E34  C0F6  F0E7         	movff	strtol@a+3,___lmul@multiplicand+3
  2674  000E38  ECE0  F009         	call	___lmul	;wreg free
  2675  000E3C  0100               	movlb	0	; () banked
  2676  000E3E  51F7               	movf	strtol@c& (0+255),w,b
  2677  000E40  0100               	movlb	0	; () banked
  2678  000E42  25E0               	addwf	?___lmul& (0+255),w,b
  2679  000E44  0100               	movlb	0	; () banked
  2680  000E46  6FF3               	movwf	strtol@a& (0+255),b
  2681  000E48  0E00               	movlw	0
  2682  000E4A  0100               	movlb	0	; () banked
  2683  000E4C  21E1               	addwfc	(?___lmul+1)& (0+255),w,b
  2684  000E4E  0100               	movlb	0	; () banked
  2685  000E50  6FF4               	movwf	(strtol@a+1)& (0+255),b
  2686  000E52  0E00               	movlw	0
  2687  000E54  0100               	movlb	0	; () banked
  2688  000E56  21E2               	addwfc	(?___lmul+2)& (0+255),w,b
  2689  000E58  0100               	movlb	0	; () banked
  2690  000E5A  6FF5               	movwf	(strtol@a+2)& (0+255),b
  2691  000E5C  0E00               	movlw	0
  2692  000E5E  0100               	movlb	0	; () banked
  2693  000E60  21E3               	addwfc	(?___lmul+3)& (0+255),w,b
  2694  000E62  0100               	movlb	0	; () banked
  2695  000E64  6FF6               	movwf	(strtol@a+3)& (0+255),b
  2696                           
  2697                           ; BSR set to: 0
  2698  000E66  C0E8  FFD9         	movff	strtol@s,fsr2l
  2699  000E6A  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  2700  000E6E  50DF               	movf	indf2,w,c
  2701  000E70  0100               	movlb	0	; () banked
  2702  000E72  6FF7               	movwf	strtol@c& (0+255),b
  2703                           
  2704                           ; BSR set to: 0
  2705  000E74  0100               	movlb	0	; () banked
  2706  000E76  4BE8               	infsnz	strtol@s& (0+255),f,b
  2707  000E78  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  2708  000E7A  D7A0               	goto	l3705
  2709  000E7C                     l3723:
  2710  000E7C  0100               	movlb	0	; () banked
  2711  000E7E  51EA               	movf	strtol@endptr& (0+255),w,b
  2712  000E80  0100               	movlb	0	; () banked
  2713  000E82  11EB               	iorwf	(strtol@endptr+1)& (0+255),w,b
  2714  000E84  B4D8               	btfsc	status,2,c
  2715  000E86  D012               	goto	l3727
  2716                           
  2717                           ; BSR set to: 0
  2718  000E88  0EFF               	movlw	255
  2719  000E8A  0100               	movlb	0	; () banked
  2720  000E8C  25E8               	addwf	strtol@s& (0+255),w,b
  2721  000E8E  0100               	movlb	0	; () banked
  2722  000E90  6FEE               	movwf	??_strtol& (0+255),b
  2723  000E92  0EFF               	movlw	255
  2724  000E94  0100               	movlb	0	; () banked
  2725  000E96  21E9               	addwfc	(strtol@s+1)& (0+255),w,b
  2726  000E98  0100               	movlb	0	; () banked
  2727  000E9A  6FEF               	movwf	(??_strtol+1)& (0+255),b
  2728  000E9C  C0EA  FFD9         	movff	strtol@endptr,fsr2l
  2729  000EA0  C0EB  FFDA         	movff	strtol@endptr+1,fsr2h
  2730  000EA4  C0EE  FFDE         	movff	??_strtol,postinc2
  2731  000EA8  C0EF  FFDD         	movff	??_strtol+1,postdec2
  2732  000EAC                     l3727:
  2733                           
  2734                           ; BSR set to: 0
  2735  000EAC  0100               	movlb	0	; () banked
  2736  000EAE  51F2               	movf	strtol@sign& (0+255),w,b
  2737  000EB0  0100               	movlb	0	; () banked
  2738  000EB2  B4D8               	btfsc	status,2,c
  2739  000EB4  D01B               	goto	l1020
  2740                           
  2741                           ; BSR set to: 0
  2742  000EB6  C0F3  F0EE         	movff	strtol@a,??_strtol
  2743  000EBA  C0F4  F0EF         	movff	strtol@a+1,??_strtol+1
  2744  000EBE  C0F5  F0F0         	movff	strtol@a+2,??_strtol+2
  2745  000EC2  C0F6  F0F1         	movff	strtol@a+3,??_strtol+3
  2746  000EC6  0100               	movlb	0	; () banked
  2747  000EC8  1FEE               	comf	??_strtol& (0+255),f,b
  2748  000ECA  1FEF               	comf	(??_strtol+1)& (0+255),f,b
  2749  000ECC  1FF0               	comf	(??_strtol+2)& (0+255),f,b
  2750  000ECE  1FF1               	comf	(??_strtol+3)& (0+255),f,b
  2751  000ED0  2BEE               	incf	??_strtol& (0+255),f,b
  2752  000ED2  0E00               	movlw	0
  2753  000ED4  23EF               	addwfc	(??_strtol+1)& (0+255),f,b
  2754  000ED6  23F0               	addwfc	(??_strtol+2)& (0+255),f,b
  2755  000ED8  23F1               	addwfc	(??_strtol+3)& (0+255),f,b
  2756  000EDA  C0EE  F0E8         	movff	??_strtol,?_strtol
  2757  000EDE  C0EF  F0E9         	movff	??_strtol+1,?_strtol+1
  2758  000EE2  C0F0  F0EA         	movff	??_strtol+2,?_strtol+2
  2759  000EE6  C0F1  F0EB         	movff	??_strtol+3,?_strtol+3
  2760                           
  2761                           ; BSR set to: 0
  2762  000EEA  0012               	return	
  2763  000EEC                     l1020:
  2764                           
  2765                           ; BSR set to: 0
  2766  000EEC  C0F3  F0E8         	movff	strtol@a,?_strtol
  2767  000EF0  C0F4  F0E9         	movff	strtol@a+1,?_strtol+1
  2768  000EF4  C0F5  F0EA         	movff	strtol@a+2,?_strtol+2
  2769  000EF8  C0F6  F0EB         	movff	strtol@a+3,?_strtol+3
  2770                           
  2771                           ; BSR set to: 0
  2772  000EFC  0012               	return		;funcret
  2773  000EFE                     __end_of_strtol:
  2774                           	opt stack 0
  2775                           tblptru	equ	0xFF8
  2776                           tblptrh	equ	0xFF7
  2777                           tblptrl	equ	0xFF6
  2778                           tablat	equ	0xFF5
  2779                           intcon	equ	0xFF2
  2780                           postinc0	equ	0xFEE
  2781                           wreg	equ	0xFE8
  2782                           postdec1	equ	0xFE5
  2783                           fsr1l	equ	0xFE1
  2784                           indf2	equ	0xFDF
  2785                           postinc2	equ	0xFDE
  2786                           postdec2	equ	0xFDD
  2787                           fsr2h	equ	0xFDA
  2788                           fsr2l	equ	0xFD9
  2789                           status	equ	0xFD8
  2790                           
  2791 ;; *************** function _toupper *****************
  2792 ;; Defined at:
  2793 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\toupper.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  c               1    wreg     unsigned char 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  c               1   36[COMRAM] unsigned char 
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      unsigned char 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;Total ram usage:        1 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    4
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_strtol
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text3
  2822  00190C                     __ptext3:
  2823                           	opt stack 0
  2824  00190C                     _toupper:
  2825                           	opt stack 25
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;incstack = 0
  2829                           ;toupper@c stored from wreg
  2830  00190C  6E25               	movwf	toupper@c,c
  2831  00190E  0E7B               	movlw	123
  2832  001910  6025               	cpfslt	toupper@c,c
  2833  001912  D004               	goto	l2679
  2834  001914  0E60               	movlw	96
  2835  001916  6425               	cpfsgt	toupper@c,c
  2836  001918  D001               	goto	l2679
  2837  00191A  9A25               	bcf	toupper@c,5,c
  2838  00191C                     l2679:
  2839  00191C  5025               	movf	toupper@c,w,c
  2840  00191E  0012               	return	
  2841  001920                     __end_of_toupper:
  2842                           	opt stack 0
  2843                           tblptru	equ	0xFF8
  2844                           tblptrh	equ	0xFF7
  2845                           tblptrl	equ	0xFF6
  2846                           tablat	equ	0xFF5
  2847                           intcon	equ	0xFF2
  2848                           postinc0	equ	0xFEE
  2849                           wreg	equ	0xFE8
  2850                           postdec1	equ	0xFE5
  2851                           fsr1l	equ	0xFE1
  2852                           indf2	equ	0xFDF
  2853                           postinc2	equ	0xFDE
  2854                           postdec2	equ	0xFDD
  2855                           fsr2h	equ	0xFDA
  2856                           fsr2l	equ	0xFD9
  2857                           status	equ	0xFD8
  2858                           
  2859 ;; *************** function _isspace *****************
  2860 ;; Defined at:
  2861 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isspace.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  c               1    wreg     unsigned char 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  c               1   38[COMRAM] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;		None               void
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;Total ram usage:        3 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    4
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_strtol
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text4
  2890  001854                     __ptext4:
  2891                           	opt stack 0
  2892  001854                     _isspace:
  2893                           	opt stack 25
  2894                           
  2895                           ;incstack = 0
  2896                           ;isspace@c stored from wreg
  2897  001854  6E27               	movwf	isspace@c,c
  2898  001856  0E01               	movlw	1
  2899  001858  6E26               	movwf	_isspace$1468,c
  2900  00185A  0E20               	movlw	32
  2901  00185C  1827               	xorwf	isspace@c,w,c
  2902  00185E  B4D8               	btfsc	status,2,c
  2903  001860  D008               	goto	l2655
  2904  001862  0E0E               	movlw	14
  2905  001864  6027               	cpfslt	isspace@c,c
  2906  001866  D003               	goto	l2653
  2907  001868  0E09               	movlw	9
  2908  00186A  6027               	cpfslt	isspace@c,c
  2909  00186C  D002               	goto	l2655
  2910  00186E                     l2653:
  2911  00186E  0E00               	movlw	0
  2912  001870  6E26               	movwf	_isspace$1468,c
  2913  001872                     l2655:
  2914  001872  C026  F025         	movff	_isspace$1468,??_isspace
  2915  001876  3025               	rrcf	??_isspace,w,c
  2916  001878  0012               	return	
  2917  00187A                     __end_of_isspace:
  2918                           	opt stack 0
  2919                           tblptru	equ	0xFF8
  2920                           tblptrh	equ	0xFF7
  2921                           tblptrl	equ	0xFF6
  2922                           tablat	equ	0xFF5
  2923                           intcon	equ	0xFF2
  2924                           postinc0	equ	0xFEE
  2925                           wreg	equ	0xFE8
  2926                           postdec1	equ	0xFE5
  2927                           fsr1l	equ	0xFE1
  2928                           indf2	equ	0xFDF
  2929                           postinc2	equ	0xFDE
  2930                           postdec2	equ	0xFDD
  2931                           fsr2h	equ	0xFDA
  2932                           fsr2l	equ	0xFD9
  2933                           status	equ	0xFD8
  2934                           
  2935 ;; *************** function _isdigit *****************
  2936 ;; Defined at:
  2937 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  c               1    wreg     unsigned char 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  c               1   38[COMRAM] unsigned char 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;		None               void
  2944 ;; Registers used:
  2945 ;;		wreg, status,2, status,0
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;Total ram usage:        3 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    4
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_strtol
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text5
  2966  00189A                     __ptext5:
  2967                           	opt stack 0
  2968  00189A                     _isdigit:
  2969                           	opt stack 25
  2970                           
  2971                           ;incstack = 0
  2972                           ;isdigit@c stored from wreg
  2973  00189A  6E27               	movwf	isdigit@c,c
  2974  00189C  0E00               	movlw	0
  2975  00189E  6E26               	movwf	_isdigit$1465,c
  2976  0018A0  0E3A               	movlw	58
  2977  0018A2  6027               	cpfslt	isdigit@c,c
  2978  0018A4  D005               	goto	l2691
  2979  0018A6  0E2F               	movlw	47
  2980  0018A8  6427               	cpfsgt	isdigit@c,c
  2981  0018AA  D002               	goto	l2691
  2982  0018AC  0E01               	movlw	1
  2983  0018AE  6E26               	movwf	_isdigit$1465,c
  2984  0018B0                     l2691:
  2985  0018B0  C026  F025         	movff	_isdigit$1465,??_isdigit
  2986  0018B4  3025               	rrcf	??_isdigit,w,c
  2987  0018B6  0012               	return	
  2988  0018B8                     __end_of_isdigit:
  2989                           	opt stack 0
  2990                           tblptru	equ	0xFF8
  2991                           tblptrh	equ	0xFF7
  2992                           tblptrl	equ	0xFF6
  2993                           tablat	equ	0xFF5
  2994                           intcon	equ	0xFF2
  2995                           postinc0	equ	0xFEE
  2996                           wreg	equ	0xFE8
  2997                           postdec1	equ	0xFE5
  2998                           fsr1l	equ	0xFE1
  2999                           indf2	equ	0xFDF
  3000                           postinc2	equ	0xFDE
  3001                           postdec2	equ	0xFDD
  3002                           fsr2h	equ	0xFDA
  3003                           fsr2l	equ	0xFD9
  3004                           status	equ	0xFD8
  3005                           
  3006 ;; *************** function _isalpha *****************
  3007 ;; Defined at:
  3008 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isalpha.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  c               1    wreg     unsigned char 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  c               1   41[COMRAM] unsigned char 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;		None               void
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, status,0, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;Total ram usage:        3 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    5
  3029 ;; This function calls:
  3030 ;;		_isupper
  3031 ;; This function is called by:
  3032 ;;		_strtol
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text6
  3037  00182C                     __ptext6:
  3038                           	opt stack 0
  3039  00182C                     _isalpha:
  3040                           	opt stack 24
  3041                           
  3042                           ;incstack = 0
  3043                           ;isalpha@c stored from wreg
  3044  00182C  6E2A               	movwf	isalpha@c,c
  3045  00182E  0E01               	movlw	1
  3046  001830  6E29               	movwf	_isalpha$1462,c
  3047  001832  0E7B               	movlw	123
  3048  001834  602A               	cpfslt	isalpha@c,c
  3049  001836  D003               	goto	l2665
  3050  001838  0E61               	movlw	97
  3051  00183A  602A               	cpfslt	isalpha@c,c
  3052  00183C  D007               	goto	l2669
  3053  00183E                     l2665:
  3054  00183E  502A               	movf	isalpha@c,w,c
  3055  001840  EC5C  F00C         	call	_isupper
  3056  001844  B0D8               	btfsc	status,0,c
  3057  001846  D002               	goto	l2669
  3058  001848  0E00               	movlw	0
  3059  00184A  6E29               	movwf	_isalpha$1462,c
  3060  00184C                     l2669:
  3061  00184C  C029  F028         	movff	_isalpha$1462,??_isalpha
  3062  001850  3028               	rrcf	??_isalpha,w,c
  3063  001852  0012               	return	
  3064  001854                     __end_of_isalpha:
  3065                           	opt stack 0
  3066                           tblptru	equ	0xFF8
  3067                           tblptrh	equ	0xFF7
  3068                           tblptrl	equ	0xFF6
  3069                           tablat	equ	0xFF5
  3070                           intcon	equ	0xFF2
  3071                           postinc0	equ	0xFEE
  3072                           wreg	equ	0xFE8
  3073                           postdec1	equ	0xFE5
  3074                           fsr1l	equ	0xFE1
  3075                           indf2	equ	0xFDF
  3076                           postinc2	equ	0xFDE
  3077                           postdec2	equ	0xFDD
  3078                           fsr2h	equ	0xFDA
  3079                           fsr2l	equ	0xFD9
  3080                           status	equ	0xFD8
  3081                           
  3082 ;; *************** function _isupper *****************
  3083 ;; Defined at:
  3084 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isupper.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  c               1    wreg     unsigned char 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  c               1   38[COMRAM] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;		None               void
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;Total ram usage:        3 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    4
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_isalpha
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text7
  3113  0018B8                     __ptext7:
  3114                           	opt stack 0
  3115  0018B8                     _isupper:
  3116                           	opt stack 24
  3117                           
  3118                           ;incstack = 0
  3119                           ;isupper@c stored from wreg
  3120  0018B8  6E27               	movwf	isupper@c,c
  3121  0018BA  0E00               	movlw	0
  3122  0018BC  6E26               	movwf	_isupper$1471,c
  3123  0018BE  0E5B               	movlw	91
  3124  0018C0  6027               	cpfslt	isupper@c,c
  3125  0018C2  D005               	goto	l2459
  3126  0018C4  0E40               	movlw	64
  3127  0018C6  6427               	cpfsgt	isupper@c,c
  3128  0018C8  D002               	goto	l2459
  3129  0018CA  0E01               	movlw	1
  3130  0018CC  6E26               	movwf	_isupper$1471,c
  3131  0018CE                     l2459:
  3132  0018CE  C026  F025         	movff	_isupper$1471,??_isupper
  3133  0018D2  3025               	rrcf	??_isupper,w,c
  3134  0018D4  0012               	return	
  3135  0018D6                     __end_of_isupper:
  3136                           	opt stack 0
  3137                           tblptru	equ	0xFF8
  3138                           tblptrh	equ	0xFF7
  3139                           tblptrl	equ	0xFF6
  3140                           tablat	equ	0xFF5
  3141                           intcon	equ	0xFF2
  3142                           postinc0	equ	0xFEE
  3143                           wreg	equ	0xFE8
  3144                           postdec1	equ	0xFE5
  3145                           fsr1l	equ	0xFE1
  3146                           indf2	equ	0xFDF
  3147                           postinc2	equ	0xFDE
  3148                           postdec2	equ	0xFDD
  3149                           fsr2h	equ	0xFDA
  3150                           fsr2l	equ	0xFD9
  3151                           status	equ	0xFD8
  3152                           
  3153 ;; *************** function _srand *****************
  3154 ;; Defined at:
  3155 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  x               2   24[BANK0 ] unsigned int 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		status,2
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3169 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;Total ram usage:        2 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    4
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_main
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text8
  3184  001932                     __ptext8:
  3185                           	opt stack 0
  3186  001932                     _srand:
  3187                           	opt stack 26
  3188                           
  3189                           ;incstack = 0
  3190  001932  C0F8  F036         	movff	srand@x,_randx
  3191  001936  C0F9  F037         	movff	srand@x+1,_randx+1
  3192  00193A  6A38               	clrf	_randx+2,c
  3193  00193C  6A39               	clrf	_randx+3,c
  3194  00193E  0012               	return		;funcret
  3195  001940                     __end_of_srand:
  3196                           	opt stack 0
  3197                           tblptru	equ	0xFF8
  3198                           tblptrh	equ	0xFF7
  3199                           tblptrl	equ	0xFF6
  3200                           tablat	equ	0xFF5
  3201                           intcon	equ	0xFF2
  3202                           postinc0	equ	0xFEE
  3203                           wreg	equ	0xFE8
  3204                           postdec1	equ	0xFE5
  3205                           fsr1l	equ	0xFE1
  3206                           indf2	equ	0xFDF
  3207                           postinc2	equ	0xFDE
  3208                           postdec2	equ	0xFDD
  3209                           fsr2h	equ	0xFDA
  3210                           fsr2l	equ	0xFD9
  3211                           status	equ	0xFD8
  3212                           
  3213 ;; *************** function _rand *****************
  3214 ;; Defined at:
  3215 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;		None
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;		None
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  2   40[COMRAM] int 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;Total ram usage:        2 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    5
  3236 ;; This function calls:
  3237 ;;		___lmul
  3238 ;; This function is called by:
  3239 ;;		_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text9
  3244  0015A8                     __ptext9:
  3245                           	opt stack 0
  3246  0015A8                     _rand:
  3247                           	opt stack 25
  3248                           
  3249                           ;incstack = 0
  3250  0015A8  C036  F0E0         	movff	_randx,___lmul@multiplier
  3251  0015AC  C037  F0E1         	movff	_randx+1,___lmul@multiplier+1
  3252  0015B0  C038  F0E2         	movff	_randx+2,___lmul@multiplier+2
  3253  0015B4  C039  F0E3         	movff	_randx+3,___lmul@multiplier+3
  3254  0015B8  0E6D               	movlw	109
  3255  0015BA  0100               	movlb	0	; () banked
  3256  0015BC  6FE4               	movwf	___lmul@multiplicand& (0+255),b
  3257  0015BE  0E4E               	movlw	78
  3258  0015C0  6FE5               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3259  0015C2  0EC6               	movlw	198
  3260  0015C4  6FE6               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3261  0015C6  0E41               	movlw	65
  3262  0015C8  6FE7               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3263  0015CA  ECE0  F009         	call	___lmul	;wreg free
  3264  0015CE  C0E0  F036         	movff	?___lmul,_randx
  3265  0015D2  C0E1  F037         	movff	?___lmul+1,_randx+1
  3266  0015D6  C0E2  F038         	movff	?___lmul+2,_randx+2
  3267  0015DA  C0E3  F039         	movff	?___lmul+3,_randx+3
  3268  0015DE  0E39               	movlw	57
  3269  0015E0  2636               	addwf	_randx,f,c
  3270  0015E2  0E30               	movlw	48
  3271  0015E4  2237               	addwfc	_randx+1,f,c
  3272  0015E6  0E00               	movlw	0
  3273  0015E8  2238               	addwfc	_randx+2,f,c
  3274  0015EA  0E00               	movlw	0
  3275  0015EC  2239               	addwfc	_randx+3,f,c
  3276  0015EE  0EFF               	movlw	255
  3277  0015F0  1438               	andwf	_randx+2,w,c
  3278  0015F2  6E29               	movwf	?_rand,c
  3279  0015F4  0E7F               	movlw	127
  3280  0015F6  1439               	andwf	_randx+3,w,c
  3281  0015F8  6E2A               	movwf	?_rand+1,c
  3282  0015FA  0012               	return	
  3283  0015FC                     __end_of_rand:
  3284                           	opt stack 0
  3285                           tblptru	equ	0xFF8
  3286                           tblptrh	equ	0xFF7
  3287                           tblptrl	equ	0xFF6
  3288                           tablat	equ	0xFF5
  3289                           intcon	equ	0xFF2
  3290                           postinc0	equ	0xFEE
  3291                           wreg	equ	0xFE8
  3292                           postdec1	equ	0xFE5
  3293                           fsr1l	equ	0xFE1
  3294                           indf2	equ	0xFDF
  3295                           postinc2	equ	0xFDE
  3296                           postdec2	equ	0xFDD
  3297                           fsr2h	equ	0xFDA
  3298                           fsr2l	equ	0xFD9
  3299                           status	equ	0xFD8
  3300                           
  3301 ;; *************** function ___lmul *****************
  3302 ;; Defined at:
  3303 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul32.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3306 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;  product         4   36[COMRAM] unsigned long 
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  4    0[BANK0 ] unsigned long 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3318 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;Total ram usage:       12 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:    4
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_rand
  3329 ;;		_strtol
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text10
  3334  0013C0                     __ptext10:
  3335                           	opt stack 0
  3336  0013C0                     ___lmul:
  3337                           	opt stack 25
  3338                           
  3339                           ;incstack = 0
  3340  0013C0  0E00               	movlw	0
  3341  0013C2  6E25               	movwf	___lmul@product,c
  3342  0013C4  0E00               	movlw	0
  3343  0013C6  6E26               	movwf	___lmul@product+1,c
  3344  0013C8  0E00               	movlw	0
  3345  0013CA  6E27               	movwf	___lmul@product+2,c
  3346  0013CC  0E00               	movlw	0
  3347  0013CE  6E28               	movwf	___lmul@product+3,c
  3348  0013D0                     l3599:
  3349  0013D0  0100               	movlb	0	; () banked
  3350  0013D2  A1E0               	btfss	___lmul@multiplier& (0+255),0,b
  3351  0013D4  D00C               	goto	l3603
  3352                           
  3353                           ; BSR set to: 0
  3354  0013D6  0100               	movlb	0	; () banked
  3355  0013D8  51E4               	movf	___lmul@multiplicand& (0+255),w,b
  3356  0013DA  2625               	addwf	___lmul@product,f,c
  3357  0013DC  0100               	movlb	0	; () banked
  3358  0013DE  51E5               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  3359  0013E0  2226               	addwfc	___lmul@product+1,f,c
  3360  0013E2  0100               	movlb	0	; () banked
  3361  0013E4  51E6               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  3362  0013E6  2227               	addwfc	___lmul@product+2,f,c
  3363  0013E8  0100               	movlb	0	; () banked
  3364  0013EA  51E7               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  3365  0013EC  2228               	addwfc	___lmul@product+3,f,c
  3366  0013EE                     l3603:
  3367                           
  3368                           ; BSR set to: 0
  3369  0013EE  0100               	movlb	0	; () banked
  3370  0013F0  90D8               	bcf	status,0,c
  3371  0013F2  37E4               	rlcf	___lmul@multiplicand& (0+255),f,b
  3372  0013F4  37E5               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  3373  0013F6  37E6               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  3374  0013F8  37E7               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  3375                           
  3376                           ; BSR set to: 0
  3377  0013FA  0100               	movlb	0	; () banked
  3378  0013FC  90D8               	bcf	status,0,c
  3379  0013FE  33E3               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  3380  001400  33E2               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  3381  001402  33E1               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  3382  001404  33E0               	rrcf	___lmul@multiplier& (0+255),f,b
  3383  001406  0100               	movlb	0	; () banked
  3384  001408  51E0               	movf	___lmul@multiplier& (0+255),w,b
  3385  00140A  0100               	movlb	0	; () banked
  3386  00140C  11E1               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  3387  00140E  0100               	movlb	0	; () banked
  3388  001410  11E2               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  3389  001412  0100               	movlb	0	; () banked
  3390  001414  11E3               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  3391  001416  A4D8               	btfss	status,2,c
  3392  001418  D7DB               	goto	l3599
  3393                           
  3394                           ; BSR set to: 0
  3395  00141A  C025  F0E0         	movff	___lmul@product,?___lmul
  3396  00141E  C026  F0E1         	movff	___lmul@product+1,?___lmul+1
  3397  001422  C027  F0E2         	movff	___lmul@product+2,?___lmul+2
  3398  001426  C028  F0E3         	movff	___lmul@product+3,?___lmul+3
  3399                           
  3400                           ; BSR set to: 0
  3401  00142A  0012               	return		;funcret
  3402  00142C                     __end_of___lmul:
  3403                           	opt stack 0
  3404                           tblptru	equ	0xFF8
  3405                           tblptrh	equ	0xFF7
  3406                           tblptrl	equ	0xFF6
  3407                           tablat	equ	0xFF5
  3408                           intcon	equ	0xFF2
  3409                           postinc0	equ	0xFEE
  3410                           wreg	equ	0xFE8
  3411                           postdec1	equ	0xFE5
  3412                           fsr1l	equ	0xFE1
  3413                           indf2	equ	0xFDF
  3414                           postinc2	equ	0xFDE
  3415                           postdec2	equ	0xFDD
  3416                           fsr2h	equ	0xFDA
  3417                           fsr2l	equ	0xFD9
  3418                           status	equ	0xFD8
  3419                           
  3420 ;; *************** function _process_data_opt *****************
  3421 ;; Defined at:
  3422 ;;		line 56 in file "main.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  msb             1    wreg     unsigned char 
  3425 ;;  lsb             1   21[BANK0 ] unsigned char 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  msb             1    0[BANK1 ] unsigned char 
  3428 ;;  result          4    9[BANK1 ] unsigned long 
  3429 ;;  Illumination    4    5[BANK1 ] unsigned long 
  3430 ;;  raw             2    3[BANK1 ] int 
  3431 ;;  exponent        2    1[BANK1 ] unsigned int 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3441 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Totals:         0       5      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;Total ram usage:       18 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    7
  3448 ;; This function calls:
  3449 ;;		_printf
  3450 ;; This function is called by:
  3451 ;;		_main
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text11
  3456  000776                     __ptext11:
  3457                           	opt stack 0
  3458  000776                     _process_data_opt:
  3459                           	opt stack 23
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;incstack = 0
  3463                           ;process_data_opt@msb stored from wreg
  3464  000776  0101               	movlb	1	; () banked
  3465  000778  6FA8               	movwf	process_data_opt@msb& (0+255),b
  3466                           
  3467                           ;main.c: 57: int16_t raw;
  3468                           ;main.c: 58: uint16_t exponent = 0;
  3469  00077A  0E00               	movlw	0
  3470  00077C  0101               	movlb	1	; () banked
  3471  00077E  6FAA               	movwf	(process_data_opt@exponent+1)& (0+255),b
  3472  000780  0E00               	movlw	0
  3473  000782  6FA9               	movwf	process_data_opt@exponent& (0+255),b
  3474                           
  3475                           ;main.c: 59: uint32_t result = 0;
  3476  000784  0E00               	movlw	0
  3477  000786  0101               	movlb	1	; () banked
  3478  000788  6FB1               	movwf	process_data_opt@result& (0+255),b
  3479  00078A  0E00               	movlw	0
  3480  00078C  6FB2               	movwf	(process_data_opt@result+1)& (0+255),b
  3481  00078E  0E00               	movlw	0
  3482  000790  6FB3               	movwf	(process_data_opt@result+2)& (0+255),b
  3483  000792  0E00               	movlw	0
  3484  000794  6FB4               	movwf	(process_data_opt@result+3)& (0+255),b
  3485                           
  3486                           ;main.c: 60: uint32_t Illumination = 0;
  3487  000796  0E00               	movlw	0
  3488  000798  0101               	movlb	1	; () banked
  3489  00079A  6FAD               	movwf	process_data_opt@Illumination& (0+255),b
  3490  00079C  0E00               	movlw	0
  3491  00079E  6FAE               	movwf	(process_data_opt@Illumination+1)& (0+255),b
  3492  0007A0  0E00               	movlw	0
  3493  0007A2  6FAF               	movwf	(process_data_opt@Illumination+2)& (0+255),b
  3494  0007A4  0E00               	movlw	0
  3495  0007A6  6FB0               	movwf	(process_data_opt@Illumination+3)& (0+255),b
  3496                           
  3497                           ; BSR set to: 1
  3498                           ;main.c: 63: raw = ((msb << 8) | lsb);
  3499  0007A8  0100               	movlb	0	; () banked
  3500  0007AA  51F5               	movf	process_data_opt@lsb& (0+255),w,b
  3501  0007AC  C1A8  F0F6         	movff	process_data_opt@msb,??_process_data_opt
  3502  0007B0  0100               	movlb	0	; () banked
  3503  0007B2  6BF7               	clrf	(??_process_data_opt+1)& (0+255),b
  3504  0007B4  C0F6  F0F7         	movff	??_process_data_opt,??_process_data_opt+1
  3505  0007B8  0100               	movlb	0	; () banked
  3506  0007BA  6BF6               	clrf	??_process_data_opt& (0+255),b
  3507  0007BC  0100               	movlb	0	; () banked
  3508  0007BE  11F6               	iorwf	??_process_data_opt& (0+255),w,b
  3509  0007C0  0101               	movlb	1	; () banked
  3510  0007C2  6FAB               	movwf	process_data_opt@raw& (0+255),b
  3511  0007C4  0100               	movlb	0	; () banked
  3512  0007C6  51F7               	movf	(??_process_data_opt+1)& (0+255),w,b
  3513  0007C8  0101               	movlb	1	; () banked
  3514  0007CA  6FAC               	movwf	(process_data_opt@raw+1)& (0+255),b
  3515                           
  3516                           ; BSR set to: 1
  3517                           ;main.c: 65: result = raw&0x0FFF;
  3518  0007CC  0EFF               	movlw	255
  3519  0007CE  0100               	movlb	0	; () banked
  3520  0007D0  6FF6               	movwf	??_process_data_opt& (0+255),b
  3521  0007D2  0E0F               	movlw	15
  3522  0007D4  0100               	movlb	0	; () banked
  3523  0007D6  6FF7               	movwf	(??_process_data_opt+1)& (0+255),b
  3524  0007D8  C1AB  F0F8         	movff	process_data_opt@raw,??_process_data_opt+2
  3525  0007DC  C1AC  F0F9         	movff	process_data_opt@raw+1,??_process_data_opt+3
  3526  0007E0  0100               	movlb	0	; () banked
  3527  0007E2  51F6               	movf	??_process_data_opt& (0+255),w,b
  3528  0007E4  0100               	movlb	0	; () banked
  3529  0007E6  17F8               	andwf	(??_process_data_opt+2)& (0+255),f,b
  3530  0007E8  0100               	movlb	0	; () banked
  3531  0007EA  51F7               	movf	(??_process_data_opt+1)& (0+255),w,b
  3532  0007EC  0100               	movlb	0	; () banked
  3533  0007EE  17F9               	andwf	(??_process_data_opt+3)& (0+255),f,b
  3534  0007F0  C0F8  F1B1         	movff	??_process_data_opt+2,process_data_opt@result
  3535  0007F4  C0F9  F1B2         	movff	??_process_data_opt+3,process_data_opt@result+1
  3536  0007F8  0101               	movlb	1	; () banked
  3537  0007FA  0E00               	movlw	0
  3538  0007FC  BFB2               	btfsc	(process_data_opt@result+1)& (0+255),7,b
  3539  0007FE  0EFF               	movlw	-1
  3540  000800  6FB3               	movwf	(process_data_opt@result+2)& (0+255),b
  3541  000802  6FB4               	movwf	(process_data_opt@result+3)& (0+255),b
  3542                           
  3543                           ; BSR set to: 1
  3544                           ;main.c: 66: exponent = (raw>>12)&0x000F;
  3545  000804  C1AB  F0F6         	movff	process_data_opt@raw,??_process_data_opt
  3546  000808  C1AC  F0F7         	movff	process_data_opt@raw+1,??_process_data_opt+1
  3547  00080C  0E0C               	movlw	12
  3548  00080E  0100               	movlb	0	; () banked
  3549  000810  6FF8               	movwf	(??_process_data_opt+2)& (0+255),b
  3550  000812                     u2575:
  3551  000812  0100               	movlb	0	; () banked
  3552  000814  35F7               	rlcf	(??_process_data_opt+1)& (0+255),w,b
  3553  000816  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3554  000818  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3555  00081A  0100               	movlb	0	; () banked
  3556  00081C  2FF8               	decfsz	(??_process_data_opt+2)& (0+255),f,b
  3557  00081E  D7F9               	goto	u2575
  3558  000820  0E0F               	movlw	15
  3559  000822  0100               	movlb	0	; () banked
  3560  000824  15F6               	andwf	??_process_data_opt& (0+255),w,b
  3561  000826  0101               	movlb	1	; () banked
  3562  000828  6FA9               	movwf	process_data_opt@exponent& (0+255),b
  3563  00082A  0101               	movlb	1	; () banked
  3564  00082C  6BAA               	clrf	(process_data_opt@exponent+1)& (0+255),b
  3565                           
  3566                           ;main.c: 68: switch(exponent){
  3567  00082E  D0D9               	goto	l3645
  3568  000830                     l3621:
  3569                           
  3570                           ;main.c: 70: Illumination = result>>6;
  3571  000830  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3572  000834  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3573  000838  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3574  00083C  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3575  000840  0E07               	movlw	7
  3576  000842  D006               	goto	u2580
  3577  000844                     u2585:
  3578  000844  0100               	movlb	0	; () banked
  3579  000846  90D8               	bcf	status,0,c
  3580  000848  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  3581  00084A  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  3582  00084C  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3583  00084E  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3584  000850                     u2580:
  3585  000850  2EE8               	decfsz	wreg,f,c
  3586  000852  D7F8               	goto	u2585
  3587  000854  D0BD               	goto	L9
  3588  000856                     l3623:
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;main.c: 73: Illumination = result>>5;
  3592  000856  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3593  00085A  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3594  00085E  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3595  000862  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3596  000866  0E06               	movlw	6
  3597  000868  D006               	goto	u2590
  3598  00086A                     u2595:
  3599  00086A  0100               	movlb	0	; () banked
  3600  00086C  90D8               	bcf	status,0,c
  3601  00086E  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  3602  000870  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  3603  000872  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3604  000874  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3605  000876                     u2590:
  3606  000876  2EE8               	decfsz	wreg,f,c
  3607  000878  D7F8               	goto	u2595
  3608  00087A  D0AA               	goto	L9
  3609  00087C                     l3625:
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;main.c: 76: Illumination = result>>4;
  3613  00087C  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3614  000880  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3615  000884  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3616  000888  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3617  00088C  0E05               	movlw	5
  3618  00088E  D006               	goto	u2600
  3619  000890                     u2605:
  3620  000890  0100               	movlb	0	; () banked
  3621  000892  90D8               	bcf	status,0,c
  3622  000894  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  3623  000896  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  3624  000898  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3625  00089A  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3626  00089C                     u2600:
  3627  00089C  2EE8               	decfsz	wreg,f,c
  3628  00089E  D7F8               	goto	u2605
  3629  0008A0  D097               	goto	L9
  3630  0008A2                     l3627:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;main.c: 79: Illumination = result>>3;
  3634  0008A2  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3635  0008A6  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3636  0008AA  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3637  0008AE  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3638  0008B2  0E04               	movlw	4
  3639  0008B4  D006               	goto	u2610
  3640  0008B6                     u2615:
  3641  0008B6  0100               	movlb	0	; () banked
  3642  0008B8  90D8               	bcf	status,0,c
  3643  0008BA  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  3644  0008BC  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  3645  0008BE  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3646  0008C0  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3647  0008C2                     u2610:
  3648  0008C2  2EE8               	decfsz	wreg,f,c
  3649  0008C4  D7F8               	goto	u2615
  3650  0008C6  D084               	goto	L9
  3651  0008C8                     l3629:
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;main.c: 82: Illumination = result>>2;
  3655  0008C8  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3656  0008CC  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3657  0008D0  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3658  0008D4  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3659  0008D8  0E03               	movlw	3
  3660  0008DA  D006               	goto	u2620
  3661  0008DC                     u2625:
  3662  0008DC  0100               	movlb	0	; () banked
  3663  0008DE  90D8               	bcf	status,0,c
  3664  0008E0  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  3665  0008E2  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  3666  0008E4  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3667  0008E6  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3668  0008E8                     u2620:
  3669  0008E8  2EE8               	decfsz	wreg,f,c
  3670  0008EA  D7F8               	goto	u2625
  3671  0008EC  D071               	goto	L9
  3672  0008EE                     l3631:
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;main.c: 85: Illumination = result>>1;
  3676  0008EE  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3677  0008F2  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3678  0008F6  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3679  0008FA  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3680  0008FE  0100               	movlb	0	; () banked
  3681  000900  90D8               	bcf	status,0,c
  3682  000902  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  3683  000904  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  3684  000906  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3685  000908  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3686  00090A  D062               	goto	L9
  3687  00090C                     l307:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;main.c: 88: Illumination = result;
  3691  00090C  C1B1  F1AD         	movff	process_data_opt@result,process_data_opt@Illumination
  3692  000910  C1B2  F1AE         	movff	process_data_opt@result+1,process_data_opt@Illumination+1
  3693  000914  C1B3  F1AF         	movff	process_data_opt@result+2,process_data_opt@Illumination+2
  3694  000918  C1B4  F1B0         	movff	process_data_opt@result+3,process_data_opt@Illumination+3
  3695                           
  3696                           ;main.c: 89: break;
  3697  00091C  D091               	goto	l3647
  3698  00091E                     l3633:
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;main.c: 91: Illumination = result<<1;
  3702  00091E  90D8               	bcf	status,0,c
  3703  000920  0101               	movlb	1	; () banked
  3704  000922  35B1               	rlcf	process_data_opt@result& (0+255),w,b
  3705  000924  0101               	movlb	1	; () banked
  3706  000926  6FAD               	movwf	process_data_opt@Illumination& (0+255),b
  3707  000928  0101               	movlb	1	; () banked
  3708  00092A  35B2               	rlcf	(process_data_opt@result+1)& (0+255),w,b
  3709  00092C  0101               	movlb	1	; () banked
  3710  00092E  6FAE               	movwf	(process_data_opt@Illumination+1)& (0+255),b
  3711  000930  0101               	movlb	1	; () banked
  3712  000932  35B3               	rlcf	(process_data_opt@result+2)& (0+255),w,b
  3713  000934  0101               	movlb	1	; () banked
  3714  000936  6FAF               	movwf	(process_data_opt@Illumination+2)& (0+255),b
  3715  000938  0101               	movlb	1	; () banked
  3716  00093A  35B4               	rlcf	(process_data_opt@result+3)& (0+255),w,b
  3717  00093C  0101               	movlb	1	; () banked
  3718  00093E  6FB0               	movwf	(process_data_opt@Illumination+3)& (0+255),b
  3719                           
  3720                           ;main.c: 92: break;
  3721  000940  D07F               	goto	l3647
  3722  000942                     l3635:
  3723                           
  3724                           ;main.c: 94: Illumination = result<<2;
  3725  000942  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3726  000946  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3727  00094A  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3728  00094E  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3729  000952  0E02               	movlw	2
  3730  000954                     u2635:
  3731  000954  90D8               	bcf	status,0,c
  3732  000956  0100               	movlb	0	; () banked
  3733  000958  37F6               	rlcf	??_process_data_opt& (0+255),f,b
  3734  00095A  37F7               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  3735  00095C  37F8               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  3736  00095E  37F9               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  3737  000960  2EE8               	decfsz	wreg,f,c
  3738  000962  D7F8               	goto	u2635
  3739  000964  D035               	goto	L9
  3740  000966                     l3637:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;main.c: 97: Illumination = result<<3;
  3744  000966  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3745  00096A  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3746  00096E  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3747  000972  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3748  000976  0E03               	movlw	3
  3749  000978                     u2645:
  3750  000978  90D8               	bcf	status,0,c
  3751  00097A  0100               	movlb	0	; () banked
  3752  00097C  37F6               	rlcf	??_process_data_opt& (0+255),f,b
  3753  00097E  37F7               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  3754  000980  37F8               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  3755  000982  37F9               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  3756  000984  2EE8               	decfsz	wreg,f,c
  3757  000986  D7F8               	goto	u2645
  3758  000988  D023               	goto	L9
  3759  00098A                     l3639:
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;main.c: 100: Illumination = result<<4;
  3763  00098A  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3764  00098E  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3765  000992  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3766  000996  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3767  00099A  0E04               	movlw	4
  3768  00099C                     u2655:
  3769  00099C  90D8               	bcf	status,0,c
  3770  00099E  0100               	movlb	0	; () banked
  3771  0009A0  37F6               	rlcf	??_process_data_opt& (0+255),f,b
  3772  0009A2  37F7               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  3773  0009A4  37F8               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  3774  0009A6  37F9               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  3775  0009A8  2EE8               	decfsz	wreg,f,c
  3776  0009AA  D7F8               	goto	u2655
  3777  0009AC  D011               	goto	L9
  3778  0009AE                     l3641:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;main.c: 103: Illumination = result<<5;
  3782  0009AE  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3783  0009B2  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3784  0009B6  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3785  0009BA  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3786  0009BE  0E05               	movlw	5
  3787  0009C0                     u2665:
  3788  0009C0  90D8               	bcf	status,0,c
  3789  0009C2  0100               	movlb	0	; () banked
  3790  0009C4  37F6               	rlcf	??_process_data_opt& (0+255),f,b
  3791  0009C6  37F7               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  3792  0009C8  37F8               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  3793  0009CA  37F9               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  3794  0009CC  2EE8               	decfsz	wreg,f,c
  3795  0009CE  D7F8               	goto	u2665
  3796  0009D0                     L9:
  3797  0009D0  C0F6  F1AD         	movff	??_process_data_opt,process_data_opt@Illumination
  3798  0009D4  C0F7  F1AE         	movff	??_process_data_opt+1,process_data_opt@Illumination+1
  3799  0009D8  C0F8  F1AF         	movff	??_process_data_opt+2,process_data_opt@Illumination+2
  3800  0009DC  C0F9  F1B0         	movff	??_process_data_opt+3,process_data_opt@Illumination+3
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;main.c: 105: }
  3804                           
  3805                           ;main.c: 104: break;
  3806  0009E0  D02F               	goto	l3647
  3807  0009E2                     l3645:
  3808  0009E2  C1A9  F0F6         	movff	process_data_opt@exponent,??_process_data_opt
  3809  0009E6  C1AA  F0F7         	movff	process_data_opt@exponent+1,??_process_data_opt+1
  3810                           
  3811                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3812                           ; Switch size 1, requested type "space"
  3813                           ; Number of cases is 1, Range of values is 0 to 0
  3814                           ; switch strategies available:
  3815                           ; Name         Instructions Cycles
  3816                           ; simple_byte            4     3 (average)
  3817                           ;	Chosen strategy is simple_byte
  3818  0009EA  0100               	movlb	0	; () banked
  3819  0009EC  51F7               	movf	(??_process_data_opt+1)& (0+255),w,b
  3820  0009EE  0A00               	xorlw	0	; case 0
  3821  0009F0  A4D8               	btfss	status,2,c
  3822  0009F2  D026               	goto	l3647
  3823                           
  3824                           ; BSR set to: 0
  3825                           ; Switch size 1, requested type "space"
  3826                           ; Number of cases is 12, Range of values is 0 to 11
  3827                           ; switch strategies available:
  3828                           ; Name         Instructions Cycles
  3829                           ; simple_byte           37    19 (average)
  3830                           ;	Chosen strategy is simple_byte
  3831  0009F4  0100               	movlb	0	; () banked
  3832  0009F6  51F6               	movf	??_process_data_opt& (0+255),w,b
  3833  0009F8  0A00               	xorlw	0	; case 0
  3834  0009FA  B4D8               	btfsc	status,2,c
  3835  0009FC  D719               	goto	l3621
  3836  0009FE  0A01               	xorlw	1	; case 1
  3837  000A00  B4D8               	btfsc	status,2,c
  3838  000A02  D729               	goto	l3623
  3839  000A04  0A03               	xorlw	3	; case 2
  3840  000A06  B4D8               	btfsc	status,2,c
  3841  000A08  D739               	goto	l3625
  3842  000A0A  0A01               	xorlw	1	; case 3
  3843  000A0C  B4D8               	btfsc	status,2,c
  3844  000A0E  D749               	goto	l3627
  3845  000A10  0A07               	xorlw	7	; case 4
  3846  000A12  B4D8               	btfsc	status,2,c
  3847  000A14  D759               	goto	l3629
  3848  000A16  0A01               	xorlw	1	; case 5
  3849  000A18  B4D8               	btfsc	status,2,c
  3850  000A1A  D769               	goto	l3631
  3851  000A1C  0A03               	xorlw	3	; case 6
  3852  000A1E  B4D8               	btfsc	status,2,c
  3853  000A20  D775               	goto	l307
  3854  000A22  0A01               	xorlw	1	; case 7
  3855  000A24  B4D8               	btfsc	status,2,c
  3856  000A26  D77B               	goto	l3633
  3857  000A28  0A0F               	xorlw	15	; case 8
  3858  000A2A  B4D8               	btfsc	status,2,c
  3859  000A2C  D78A               	goto	l3635
  3860  000A2E  0A01               	xorlw	1	; case 9
  3861  000A30  B4D8               	btfsc	status,2,c
  3862  000A32  D799               	goto	l3637
  3863  000A34  0A03               	xorlw	3	; case 10
  3864  000A36  B4D8               	btfsc	status,2,c
  3865  000A38  D7A8               	goto	l3639
  3866  000A3A  0A01               	xorlw	1	; case 11
  3867  000A3C  B4D8               	btfsc	status,2,c
  3868  000A3E  D7B7               	goto	l3641
  3869  000A40                     l3647:
  3870                           
  3871                           ;main.c: 106: printf("> %d\r\n",Illumination);
  3872  000A40  0EF7               	movlw	low STR_6
  3873  000A42  0100               	movlb	0	; () banked
  3874  000A44  6FE7               	movwf	printf@f& (0+255),b
  3875  000A46  0EFF               	movlw	high STR_6
  3876  000A48  0100               	movlb	0	; () banked
  3877  000A4A  6FE8               	movwf	(printf@f+1)& (0+255),b
  3878  000A4C  C1AD  F0E9         	movff	process_data_opt@Illumination,?_printf+2
  3879  000A50  C1AE  F0EA         	movff	process_data_opt@Illumination+1,?_printf+3
  3880  000A54  C1AF  F0EB         	movff	process_data_opt@Illumination+2,?_printf+4
  3881  000A58  C1B0  F0EC         	movff	process_data_opt@Illumination+3,?_printf+5
  3882  000A5C  EC31  F005         	call	_printf	;wreg free
  3883  000A60  0012               	return		;funcret
  3884  000A62                     __end_of_process_data_opt:
  3885                           	opt stack 0
  3886                           tblptru	equ	0xFF8
  3887                           tblptrh	equ	0xFF7
  3888                           tblptrl	equ	0xFF6
  3889                           tablat	equ	0xFF5
  3890                           intcon	equ	0xFF2
  3891                           postinc0	equ	0xFEE
  3892                           wreg	equ	0xFE8
  3893                           postdec1	equ	0xFE5
  3894                           fsr1l	equ	0xFE1
  3895                           indf2	equ	0xFDF
  3896                           postinc2	equ	0xFDE
  3897                           postdec2	equ	0xFDD
  3898                           fsr2h	equ	0xFDA
  3899                           fsr2l	equ	0xFD9
  3900                           status	equ	0xFD8
  3901                           
  3902 ;; *************** function _getUUID *****************
  3903 ;; Defined at:
  3904 ;;		line 50 in file "main.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;		None
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;		None
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      void 
  3911 ;; Registers used:
  3912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;Total ram usage:        0 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; Hardware stack levels required when called:    7
  3925 ;; This function calls:
  3926 ;;		_printf
  3927 ;;		_read_line
  3928 ;;		_strcpy
  3929 ;; This function is called by:
  3930 ;;		_main
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text12
  3935  0017D8                     __ptext12:
  3936                           	opt stack 0
  3937  0017D8                     _getUUID:
  3938                           	opt stack 23
  3939                           
  3940                           ;main.c: 51: printf("sys get hweui\r\n");
  3941                           
  3942                           ;incstack = 0
  3943  0017D8  0E5D               	movlw	low STR_5
  3944  0017DA  0100               	movlb	0	; () banked
  3945  0017DC  6FE7               	movwf	printf@f& (0+255),b
  3946  0017DE  0EFF               	movlw	high STR_5
  3947  0017E0  0100               	movlb	0	; () banked
  3948  0017E2  6FE8               	movwf	(printf@f+1)& (0+255),b
  3949  0017E4  EC31  F005         	call	_printf	;wreg free
  3950                           
  3951                           ;main.c: 52: read_line();
  3952  0017E8  ECA7  F00C         	call	_read_line	;wreg free
  3953                           
  3954                           ;main.c: 53: strcpy(uuid,line);
  3955  0017EC  0E80               	movlw	low _uuid
  3956  0017EE  6E25               	movwf	strcpy@to,c
  3957  0017F0  0E01               	movlw	high _uuid
  3958  0017F2  6E26               	movwf	strcpy@to+1,c
  3959  0017F4  0E60               	movlw	low _line
  3960  0017F6  6E27               	movwf	strcpy@from,c
  3961  0017F8  0E00               	movlw	high _line
  3962  0017FA  6E28               	movwf	strcpy@from+1,c
  3963  0017FC  ECBE  F00B         	call	_strcpy	;wreg free
  3964  001800  0012               	return		;funcret
  3965  001802                     __end_of_getUUID:
  3966                           	opt stack 0
  3967                           tblptru	equ	0xFF8
  3968                           tblptrh	equ	0xFF7
  3969                           tblptrl	equ	0xFF6
  3970                           tablat	equ	0xFF5
  3971                           intcon	equ	0xFF2
  3972                           postinc0	equ	0xFEE
  3973                           wreg	equ	0xFE8
  3974                           postdec1	equ	0xFE5
  3975                           fsr1l	equ	0xFE1
  3976                           indf2	equ	0xFDF
  3977                           postinc2	equ	0xFDE
  3978                           postdec2	equ	0xFDD
  3979                           fsr2h	equ	0xFDA
  3980                           fsr2l	equ	0xFD9
  3981                           status	equ	0xFD8
  3982                           
  3983 ;; *************** function _strcpy *****************
  3984 ;; Defined at:
  3985 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcpy.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  to              2   36[COMRAM] PTR unsigned char 
  3988 ;;		 -> uuid(40), 
  3989 ;;  from            2   38[COMRAM] PTR const unsigned char 
  3990 ;;		 -> line(128), 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  cp              2   40[COMRAM] PTR unsigned char 
  3993 ;;		 -> uuid(40), 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  2   36[COMRAM] PTR unsigned char 
  3996 ;; Registers used:
  3997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4003 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;Total ram usage:        6 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    4
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_getUUID
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text13
  4018  00177C                     __ptext13:
  4019                           	opt stack 0
  4020  00177C                     _strcpy:
  4021                           	opt stack 25
  4022                           
  4023                           ;incstack = 0
  4024  00177C  C025  F029         	movff	strcpy@to,strcpy@cp
  4025  001780  C026  F02A         	movff	strcpy@to+1,strcpy@cp+1
  4026  001784  D004               	goto	l2633
  4027  001786                     l2631:
  4028  001786  4A29               	infsnz	strcpy@cp,f,c
  4029  001788  2A2A               	incf	strcpy@cp+1,f,c
  4030  00178A  4A27               	infsnz	strcpy@from,f,c
  4031  00178C  2A28               	incf	strcpy@from+1,f,c
  4032  00178E                     l2633:
  4033  00178E  C027  FFD9         	movff	strcpy@from,fsr2l
  4034  001792  C028  FFDA         	movff	strcpy@from+1,fsr2h
  4035  001796  C029  FFE1         	movff	strcpy@cp,fsr1l
  4036  00179A  C02A  FFE2         	movff	strcpy@cp+1,fsr1h
  4037  00179E  CFDF FFE7          	movff	indf2,indf1
  4038  0017A2  50E7               	movf	indf1,w,c
  4039  0017A4  B4D8               	btfsc	status,2,c
  4040  0017A6  0012               	return	
  4041  0017A8  D7EE               	goto	l2631
  4042  0017AA                     __end_of_strcpy:
  4043                           	opt stack 0
  4044                           tblptru	equ	0xFF8
  4045                           tblptrh	equ	0xFF7
  4046                           tblptrl	equ	0xFF6
  4047                           tablat	equ	0xFF5
  4048                           intcon	equ	0xFF2
  4049                           postinc0	equ	0xFEE
  4050                           wreg	equ	0xFE8
  4051                           indf1	equ	0xFE7
  4052                           postdec1	equ	0xFE5
  4053                           fsr1h	equ	0xFE2
  4054                           fsr1l	equ	0xFE1
  4055                           indf2	equ	0xFDF
  4056                           postinc2	equ	0xFDE
  4057                           postdec2	equ	0xFDD
  4058                           fsr2h	equ	0xFDA
  4059                           fsr2l	equ	0xFD9
  4060                           status	equ	0xFD8
  4061                           
  4062 ;; *************** function _read_line *****************
  4063 ;; Defined at:
  4064 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;		None
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  2  147[None  ] int 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;Total ram usage:        0 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    4
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_getUUID
  4089 ;;		_main
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text14
  4094  00194E                     __ptext14:
  4095                           	opt stack 0
  4096  00194E                     _read_line:
  4097                           	opt stack 26
  4098  00194E                     l2541:
  4099  00194E  0433               	decf	_ready,w,c	;volatile
  4100  001950  A4D8               	btfss	status,2,c
  4101  001952  D7FD               	goto	l2541
  4102                           
  4103                           ;eusart1.c: 252: }
  4104                           ;eusart1.c: 253: ready=0;
  4105  001954  0E00               	movlw	0
  4106  001956  6E33               	movwf	_ready,c	;volatile
  4107  001958  0012               	return	
  4108  00195A                     __end_of_read_line:
  4109                           	opt stack 0
  4110                           tblptru	equ	0xFF8
  4111                           tblptrh	equ	0xFF7
  4112                           tblptrl	equ	0xFF6
  4113                           tablat	equ	0xFF5
  4114                           intcon	equ	0xFF2
  4115                           postinc0	equ	0xFEE
  4116                           wreg	equ	0xFE8
  4117                           indf1	equ	0xFE7
  4118                           postdec1	equ	0xFE5
  4119                           fsr1h	equ	0xFE2
  4120                           fsr1l	equ	0xFE1
  4121                           indf2	equ	0xFDF
  4122                           postinc2	equ	0xFDE
  4123                           postdec2	equ	0xFDD
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8
  4127                           
  4128 ;; *************** function _printf *****************
  4129 ;; Defined at:
  4130 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  f               2    7[BANK0 ] PTR const unsigned char 
  4133 ;;		 -> STR_22(19), STR_21(19), STR_20(19), STR_19(19), 
  4134 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(12), 
  4135 ;;		 -> STR_14(16), STR_13(18), STR_12(15), STR_11(15), 
  4136 ;;		 -> STR_10(15), STR_9(14), STR_8(12), STR_7(8), 
  4137 ;;		 -> STR_6(7), STR_5(16), 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  idx             1   13[BANK0 ] unsigned char 
  4140 ;;  tmpval          4    0        struct .
  4141 ;;  cp              3    0        PTR const unsigned char 
  4142 ;;  val             2   18[BANK0 ] unsigned int 
  4143 ;;  ap              2   14[BANK0 ] PTR void [1]
  4144 ;;		 -> ?_printf(2), 
  4145 ;;  len             2    0        unsigned int 
  4146 ;;  c               1   20[BANK0 ] char 
  4147 ;;  flag            1   17[BANK0 ] unsigned char 
  4148 ;;  prec            1   16[BANK0 ] char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  2    7[BANK0 ] int 
  4151 ;; Registers used:
  4152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4158 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;Total ram usage:       15 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    6
  4165 ;; This function calls:
  4166 ;;		___lwdiv
  4167 ;;		___lwmod
  4168 ;;		_putch
  4169 ;; This function is called by:
  4170 ;;		_getUUID
  4171 ;;		_process_data_opt
  4172 ;;		_main
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text15
  4177  000A62                     __ptext15:
  4178                           	opt stack 0
  4179  000A62                     _printf:
  4180                           	opt stack 23
  4181                           
  4182                           ;doprnt.c: 466: va_list ap;
  4183                           ;doprnt.c: 499: signed char c;
  4184                           ;doprnt.c: 506: signed char prec;
  4185                           ;doprnt.c: 508: unsigned char flag;
  4186                           ;doprnt.c: 523: union {
  4187                           ;doprnt.c: 524: unsigned long vd;
  4188                           ;doprnt.c: 525: double integ;
  4189                           ;doprnt.c: 526: } tmpval;
  4190                           ;doprnt.c: 528: unsigned int val;
  4191                           ;doprnt.c: 529: unsigned len;
  4192                           ;doprnt.c: 530: const char * cp;
  4193                           ;doprnt.c: 533: *ap = __va_start();
  4194                           
  4195                           ;incstack = 0
  4196  000A62  0EE9               	movlw	low (?_printf+2)
  4197  000A64  0100               	movlb	0	; () banked
  4198  000A66  6FEE               	movwf	printf@ap& (0+255),b
  4199  000A68  0E00               	movlw	high (?_printf+2)
  4200  000A6A  0100               	movlb	0	; () banked
  4201  000A6C  6FEF               	movwf	(printf@ap+1)& (0+255),b
  4202                           
  4203                           ;doprnt.c: 536: while(c = *f++) {
  4204  000A6E  D114               	goto	l3595
  4205  000A70                     l3517:
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;doprnt.c: 538: if(c != '%')
  4209  000A70  0E25               	movlw	37
  4210  000A72  0100               	movlb	0	; () banked
  4211  000A74  19F4               	xorwf	printf@c& (0+255),w,b
  4212  000A76  B4D8               	btfsc	status,2,c
  4213  000A78  D005               	goto	l3521
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;doprnt.c: 540: {
  4217                           ;doprnt.c: 541: (putch(c) );
  4218  000A7A  0100               	movlb	0	; () banked
  4219  000A7C  51F4               	movf	printf@c& (0+255),w,b
  4220  000A7E  ECAD  F00C         	call	_putch
  4221                           
  4222                           ;doprnt.c: 542: continue;
  4223  000A82  D10A               	goto	l3595
  4224  000A84                     l3521:
  4225                           
  4226                           ;doprnt.c: 543: }
  4227                           ;doprnt.c: 548: flag = 0;
  4228  000A84  0E00               	movlw	0
  4229  000A86  0100               	movlb	0	; () banked
  4230  000A88  6FF1               	movwf	printf@flag& (0+255),b
  4231                           
  4232                           ;doprnt.c: 635: switch(c = *f++) {
  4233  000A8A  D003               	goto	l3527
  4234  000A8C                     l3523:
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;doprnt.c: 721: flag |= 0x80;
  4238  000A8C  0100               	movlb	0	; () banked
  4239  000A8E  8FF1               	bsf	printf@flag& (0+255),7,b
  4240                           
  4241                           ;doprnt.c: 723: break;
  4242  000A90  D01A               	goto	l380
  4243  000A92                     l3527:
  4244                           
  4245                           ; BSR set to: 0
  4246  000A92  C0E7  FFF6         	movff	printf@f,tblptrl
  4247  000A96  C0E8  FFF7         	movff	printf@f+1,tblptrh
  4248  000A9A  0100               	movlb	0	; () banked
  4249  000A9C  4BE7               	infsnz	printf@f& (0+255),f,b
  4250  000A9E  2BE8               	incf	(printf@f+1)& (0+255),f,b
  4251  000AA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4252  000AA0  6AF8               	clrf	tblptru,c
  4253  000AA2                     	endif
  4254  000AA2                     	if	0	;tblptru may be non-zero
  4255  000AA2                     	endif
  4256  000AA2  0008               	tblrd		*
  4257  000AA4  CFF5 F0F4          	movff	tablat,printf@c
  4258  000AA8  0100               	movlb	0	; () banked
  4259  000AAA  51F4               	movf	printf@c& (0+255),w,b
  4260                           
  4261                           ; Switch size 1, requested type "space"
  4262                           ; Number of cases is 4, Range of values is 0 to 120
  4263                           ; switch strategies available:
  4264                           ; Name         Instructions Cycles
  4265                           ; simple_byte           13     7 (average)
  4266                           ;	Chosen strategy is simple_byte
  4267  000AAC  0A00               	xorlw	0	; case 0
  4268  000AAE  B4D8               	btfsc	status,2,c
  4269  000AB0  0012               	return	
  4270  000AB2  0A64               	xorlw	100	; case 100
  4271  000AB4  B4D8               	btfsc	status,2,c
  4272  000AB6  D007               	goto	l380
  4273  000AB8  0A0D               	xorlw	13	; case 105
  4274  000ABA  B4D8               	btfsc	status,2,c
  4275  000ABC  D004               	goto	l380
  4276  000ABE  0A11               	xorlw	17	; case 120
  4277  000AC0  B4D8               	btfsc	status,2,c
  4278  000AC2  D7E4               	goto	l3523
  4279  000AC4  D0E9               	goto	l3595
  4280  000AC6                     l380:
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  4284  000AC6  0100               	movlb	0	; () banked
  4285  000AC8  BFF1               	btfsc	printf@flag& (0+255),7,b
  4286  000ACA  D019               	goto	l3539
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;doprnt.c: 1253: {
  4290                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4291  000ACC  C0EE  FFD9         	movff	printf@ap,fsr2l
  4292  000AD0  C0EF  FFDA         	movff	printf@ap+1,fsr2h
  4293  000AD4  CFDE F0F2          	movff	postinc2,printf@val
  4294  000AD8  CFDD F0F3          	movff	postdec2,printf@val+1
  4295                           
  4296                           ; BSR set to: 0
  4297  000ADC  0E02               	movlw	2
  4298  000ADE  0100               	movlb	0	; () banked
  4299  000AE0  27EE               	addwf	printf@ap& (0+255),f,b
  4300  000AE2  0E00               	movlw	0
  4301  000AE4  23EF               	addwfc	(printf@ap+1)& (0+255),f,b
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;doprnt.c: 1261: if((int)val < 0) {
  4305  000AE6  0100               	movlb	0	; () banked
  4306  000AE8  AFF3               	btfss	(printf@val+1)& (0+255),7,b
  4307  000AEA  D059               	goto	l3573
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;doprnt.c: 1262: flag |= 0x03;
  4311  000AEC  0E03               	movlw	3
  4312  000AEE  0100               	movlb	0	; () banked
  4313  000AF0  13F1               	iorwf	printf@flag& (0+255),f,b
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;doprnt.c: 1263: val = -val;
  4317  000AF2  0100               	movlb	0	; () banked
  4318  000AF4  6DF2               	negf	printf@val& (0+255),b
  4319  000AF6  1FF3               	comf	(printf@val+1)& (0+255),f,b
  4320  000AF8  B0D8               	btfsc	status,0,c
  4321  000AFA  2BF3               	incf	(printf@val+1)& (0+255),f,b
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;doprnt.c: 1264: }
  4325                           ;doprnt.c: 1266: }
  4326  000AFC  D050               	goto	l3573
  4327  000AFE                     l3539:
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;doprnt.c: 1268: else
  4331                           ;doprnt.c: 1273: {
  4332                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4333  000AFE  C0EE  FFD9         	movff	printf@ap,fsr2l
  4334  000B02  C0EF  FFDA         	movff	printf@ap+1,fsr2h
  4335  000B06  CFDE F0F2          	movff	postinc2,printf@val
  4336  000B0A  CFDD F0F3          	movff	postdec2,printf@val+1
  4337                           
  4338                           ; BSR set to: 0
  4339  000B0E  0E02               	movlw	2
  4340  000B10  0100               	movlb	0	; () banked
  4341  000B12  27EE               	addwf	printf@ap& (0+255),f,b
  4342  000B14  0E00               	movlw	0
  4343  000B16  23EF               	addwfc	(printf@ap+1)& (0+255),f,b
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;doprnt.c: 1287: }
  4347                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  4348  000B18  D042               	goto	l3573
  4349  000B1A                     l3543:
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4353  000B1A  0E01               	movlw	1
  4354  000B1C  0100               	movlb	0	; () banked
  4355  000B1E  6FF4               	movwf	printf@c& (0+255),b
  4356  000B20                     l3545:
  4357                           
  4358                           ; BSR set to: 0
  4359  000B20  0E05               	movlw	5
  4360  000B22  0100               	movlb	0	; () banked
  4361  000B24  19F4               	xorwf	printf@c& (0+255),w,b
  4362  000B26  B4D8               	btfsc	status,2,c
  4363  000B28  D043               	goto	l3575
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;doprnt.c: 1306: if(val < dpowers[c])
  4367                           
  4368                           ; BSR set to: 0
  4369                           
  4370                           ; BSR set to: 0
  4371  000B2A  0100               	movlb	0	; () banked
  4372  000B2C  51F4               	movf	printf@c& (0+255),w,b
  4373  000B2E  0D02               	mullw	2
  4374  000B30  0EA3               	movlw	low _dpowers
  4375  000B32  24F3               	addwf	prodl,w,c
  4376  000B34  6EF6               	movwf	tblptrl,c
  4377  000B36  0EFE               	movlw	high _dpowers
  4378  000B38  20F4               	addwfc	prodh,w,c
  4379  000B3A  6EF7               	movwf	tblptrh,c
  4380  000B3C                     	if	1	;There are 3 active tblptr bytes
  4381  000B3C  6AF8               	clrf	tblptru,c
  4382  000B3E  0E00               	movlw	low (__mediumconst shr (0+16))
  4383  000B40  22F8               	addwfc	tblptru,f,c
  4384  000B42                     	endif
  4385  000B42  0009               	tblrd		*+
  4386  000B44  50F5               	movf	tablat,w,c
  4387  000B46  0100               	movlb	0	; () banked
  4388  000B48  5DF2               	subwf	printf@val& (0+255),w,b
  4389  000B4A  0009               	tblrd		*+
  4390  000B4C  50F5               	movf	tablat,w,c
  4391  000B4E  0100               	movlb	0	; () banked
  4392  000B50  59F3               	subwfb	(printf@val+1)& (0+255),w,b
  4393  000B52  A0D8               	btfss	status,0,c
  4394  000B54  D02D               	goto	l3575
  4395                           
  4396                           ; BSR set to: 0
  4397                           
  4398                           ; BSR set to: 0
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;doprnt.c: 1307: break;
  4402  000B56  0100               	movlb	0	; () banked
  4403  000B58  2BF4               	incf	printf@c& (0+255),f,b
  4404  000B5A  D7E2               	goto	l3545
  4405  000B5C                     l3557:
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4409  000B5C  0E01               	movlw	1
  4410  000B5E  0100               	movlb	0	; () banked
  4411  000B60  6FF4               	movwf	printf@c& (0+255),b
  4412  000B62                     l3559:
  4413                           
  4414                           ; BSR set to: 0
  4415  000B62  0E04               	movlw	4
  4416  000B64  0100               	movlb	0	; () banked
  4417  000B66  19F4               	xorwf	printf@c& (0+255),w,b
  4418  000B68  B4D8               	btfsc	status,2,c
  4419  000B6A  D022               	goto	l3575
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4423                           
  4424                           ; BSR set to: 0
  4425                           
  4426                           ; BSR set to: 0
  4427  000B6C  0100               	movlb	0	; () banked
  4428  000B6E  51F4               	movf	printf@c& (0+255),w,b
  4429  000B70  0D02               	mullw	2
  4430  000B72  0EAD               	movlw	low _hexpowers
  4431  000B74  24F3               	addwf	prodl,w,c
  4432  000B76  6EF6               	movwf	tblptrl,c
  4433  000B78  0EFE               	movlw	high _hexpowers
  4434  000B7A  20F4               	addwfc	prodh,w,c
  4435  000B7C  6EF7               	movwf	tblptrh,c
  4436  000B7E                     	if	1	;There are 3 active tblptr bytes
  4437  000B7E  6AF8               	clrf	tblptru,c
  4438  000B80  0E00               	movlw	low (__mediumconst shr (0+16))
  4439  000B82  22F8               	addwfc	tblptru,f,c
  4440  000B84                     	endif
  4441  000B84  0009               	tblrd		*+
  4442  000B86  50F5               	movf	tablat,w,c
  4443  000B88  0100               	movlb	0	; () banked
  4444  000B8A  5DF2               	subwf	printf@val& (0+255),w,b
  4445  000B8C  0009               	tblrd		*+
  4446  000B8E  50F5               	movf	tablat,w,c
  4447  000B90  0100               	movlb	0	; () banked
  4448  000B92  59F3               	subwfb	(printf@val+1)& (0+255),w,b
  4449  000B94  A0D8               	btfss	status,0,c
  4450  000B96  D00C               	goto	l3575
  4451                           
  4452                           ; BSR set to: 0
  4453                           
  4454                           ; BSR set to: 0
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;doprnt.c: 1318: break;
  4458  000B98  0100               	movlb	0	; () banked
  4459  000B9A  2BF4               	incf	printf@c& (0+255),f,b
  4460  000B9C  D7E2               	goto	l3559
  4461  000B9E                     l3573:
  4462                           
  4463                           ; BSR set to: 0
  4464  000B9E  0100               	movlb	0	; () banked
  4465  000BA0  51F1               	movf	printf@flag& (0+255),w,b
  4466  000BA2  0B80               	andlw	128
  4467                           
  4468                           ; Switch size 1, requested type "space"
  4469                           ; Number of cases is 2, Range of values is 0 to 128
  4470                           ; switch strategies available:
  4471                           ; Name         Instructions Cycles
  4472                           ; simple_byte            7     4 (average)
  4473                           ;	Chosen strategy is simple_byte
  4474  000BA4  0A00               	xorlw	0	; case 0
  4475  000BA6  B4D8               	btfsc	status,2,c
  4476  000BA8  D7B8               	goto	l3543
  4477  000BAA  0A80               	xorlw	128	; case 128
  4478  000BAC  B4D8               	btfsc	status,2,c
  4479  000BAE  D7D6               	goto	l3557
  4480  000BB0                     l3575:
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;doprnt.c: 1422: {
  4484                           ;doprnt.c: 1438: if(flag & 0x03)
  4485  000BB0  C0F1  F02A         	movff	printf@flag,??_printf
  4486  000BB4  0E03               	movlw	3
  4487  000BB6  162A               	andwf	??_printf,f,c
  4488  000BB8  B4D8               	btfsc	status,2,c
  4489  000BBA  D003               	goto	l3579
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;doprnt.c: 1439: (putch('-') );
  4493  000BBC  0E2D               	movlw	45
  4494  000BBE  ECAD  F00C         	call	_putch
  4495  000BC2                     l3579:
  4496                           
  4497                           ;doprnt.c: 1469: }
  4498                           ;doprnt.c: 1472: prec = c;
  4499  000BC2  C0F4  F0F0         	movff	printf@c,printf@prec
  4500                           
  4501                           ;doprnt.c: 1474: while(prec--) {
  4502  000BC6  D062               	goto	l3593
  4503  000BC8                     l3581:
  4504                           
  4505                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4506  000BC8  0100               	movlb	0	; () banked
  4507  000BCA  51F0               	movf	printf@prec& (0+255),w,b
  4508  000BCC  0D02               	mullw	2
  4509  000BCE  0EA3               	movlw	low _dpowers
  4510  000BD0  24F3               	addwf	prodl,w,c
  4511  000BD2  6EF6               	movwf	tblptrl,c
  4512  000BD4  0EFE               	movlw	high _dpowers
  4513  000BD6  20F4               	addwfc	prodh,w,c
  4514  000BD8  6EF7               	movwf	tblptrh,c
  4515  000BDA                     	if	1	;There are 3 active tblptr bytes
  4516  000BDA  6AF8               	clrf	tblptru,c
  4517  000BDC  0E00               	movlw	low (__mediumconst shr (0+16))
  4518  000BDE  22F8               	addwfc	tblptru,f,c
  4519  000BE0                     	endif
  4520  000BE0  0009               	tblrd		*+
  4521  000BE2  CFF5 F027          	movff	tablat,___lwdiv@divisor
  4522  000BE6  000A               	tblrd		*-
  4523  000BE8  CFF5 F028          	movff	tablat,___lwdiv@divisor+1
  4524  000BEC  C0F2  F025         	movff	printf@val,___lwdiv@dividend
  4525  000BF0  C0F3  F026         	movff	printf@val+1,___lwdiv@dividend+1
  4526  000BF4  EC4A  F00A         	call	___lwdiv	;wreg free
  4527  000BF8  C025  F0E3         	movff	?___lwdiv,___lwmod@dividend
  4528  000BFC  C026  F0E4         	movff	?___lwdiv+1,___lwmod@dividend+1
  4529  000C00  0E00               	movlw	0
  4530  000C02  0100               	movlb	0	; () banked
  4531  000C04  6FE6               	movwf	(___lwmod@divisor+1)& (0+255),b
  4532  000C06  0E0A               	movlw	10
  4533  000C08  6FE5               	movwf	___lwmod@divisor& (0+255),b
  4534  000C0A  EC79  F00A         	call	___lwmod	;wreg free
  4535  000C0E  0100               	movlb	0	; () banked
  4536  000C10  51E3               	movf	?___lwmod& (0+255),w,b
  4537  000C12  0F30               	addlw	48
  4538  000C14  0100               	movlb	0	; () banked
  4539  000C16  6FF4               	movwf	printf@c& (0+255),b
  4540                           
  4541                           ;doprnt.c: 1491: break;
  4542  000C18  D035               	goto	l3591
  4543  000C1A                     l3583:
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;doprnt.c: 1499: {
  4547                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4548  000C1A  C0F2  F025         	movff	printf@val,___lwdiv@dividend
  4549  000C1E  C0F3  F026         	movff	printf@val+1,___lwdiv@dividend+1
  4550  000C22  0100               	movlb	0	; () banked
  4551  000C24  51F0               	movf	printf@prec& (0+255),w,b
  4552  000C26  0D02               	mullw	2
  4553  000C28  0EAD               	movlw	low _hexpowers
  4554  000C2A  24F3               	addwf	prodl,w,c
  4555  000C2C  6EF6               	movwf	tblptrl,c
  4556  000C2E  0EFE               	movlw	high _hexpowers
  4557  000C30  20F4               	addwfc	prodh,w,c
  4558  000C32  6EF7               	movwf	tblptrh,c
  4559  000C34                     	if	1	;There are 3 active tblptr bytes
  4560  000C34  6AF8               	clrf	tblptru,c
  4561  000C36  0E00               	movlw	low (__mediumconst shr (0+16))
  4562  000C38  22F8               	addwfc	tblptru,f,c
  4563  000C3A                     	endif
  4564  000C3A  0009               	tblrd		*+
  4565  000C3C  CFF5 F027          	movff	tablat,___lwdiv@divisor
  4566  000C40  000A               	tblrd		*-
  4567  000C42  CFF5 F028          	movff	tablat,___lwdiv@divisor+1
  4568  000C46  EC4A  F00A         	call	___lwdiv	;wreg free
  4569  000C4A  5025               	movf	?___lwdiv,w,c
  4570  000C4C  0B0F               	andlw	15
  4571  000C4E  0100               	movlb	0	; () banked
  4572  000C50  6FED               	movwf	printf@idx& (0+255),b
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  4576  000C52  0100               	movlb	0	; () banked
  4577  000C54  51ED               	movf	printf@idx& (0+255),w,b
  4578  000C56  0D01               	mullw	1
  4579  000C58  0E4C               	movlw	low STR_23
  4580  000C5A  24F3               	addwf	prodl,w,c
  4581  000C5C  6EF6               	movwf	tblptrl,c
  4582  000C5E  0EFF               	movlw	high STR_23
  4583  000C60  20F4               	addwfc	prodh,w,c
  4584  000C62  6EF7               	movwf	tblptrh,c
  4585  000C64                     	if	1	;There are 3 active tblptr bytes
  4586  000C64  6AF8               	clrf	tblptru,c
  4587  000C66  0E00               	movlw	low (__mediumconst shr (0+16))
  4588  000C68  22F8               	addwfc	tblptru,f,c
  4589  000C6A                     	endif
  4590  000C6A  0008               	tblrd		*
  4591  000C6C  CFF5 F0F4          	movff	tablat,printf@c
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;doprnt.c: 1523: }
  4595                           
  4596                           ;doprnt.c: 1508: }
  4597                           ;doprnt.c: 1510: break;
  4598  000C70  D009               	goto	l3591
  4599  000C72                     l3589:
  4600  000C72  0100               	movlb	0	; () banked
  4601  000C74  51F1               	movf	printf@flag& (0+255),w,b
  4602  000C76  0B80               	andlw	128
  4603                           
  4604                           ; Switch size 1, requested type "space"
  4605                           ; Number of cases is 2, Range of values is 0 to 128
  4606                           ; switch strategies available:
  4607                           ; Name         Instructions Cycles
  4608                           ; simple_byte            7     4 (average)
  4609                           ;	Chosen strategy is simple_byte
  4610  000C78  0A00               	xorlw	0	; case 0
  4611  000C7A  B4D8               	btfsc	status,2,c
  4612  000C7C  D7A5               	goto	l3581
  4613  000C7E  0A80               	xorlw	128	; case 128
  4614  000C80  B4D8               	btfsc	status,2,c
  4615  000C82  D7CB               	goto	l3583
  4616  000C84                     l3591:
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;doprnt.c: 1524: (putch(c) );
  4620  000C84  0100               	movlb	0	; () banked
  4621  000C86  51F4               	movf	printf@c& (0+255),w,b
  4622  000C88  ECAD  F00C         	call	_putch
  4623  000C8C                     l3593:
  4624  000C8C  0100               	movlb	0	; () banked
  4625  000C8E  07F0               	decf	printf@prec& (0+255),f,b
  4626  000C90  0100               	movlb	0	; () banked
  4627  000C92  29F0               	incf	printf@prec& (0+255),w,b
  4628  000C94  A4D8               	btfss	status,2,c
  4629  000C96  D7ED               	goto	l3589
  4630  000C98                     l3595:
  4631  000C98  C0E7  FFF6         	movff	printf@f,tblptrl
  4632  000C9C  C0E8  FFF7         	movff	printf@f+1,tblptrh
  4633  000CA0  0100               	movlb	0	; () banked
  4634  000CA2  4BE7               	infsnz	printf@f& (0+255),f,b
  4635  000CA4  2BE8               	incf	(printf@f+1)& (0+255),f,b
  4636  000CA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4637  000CA6  6AF8               	clrf	tblptru,c
  4638  000CA8                     	endif
  4639  000CA8                     	if	0	;tblptru may be non-zero
  4640  000CA8                     	endif
  4641  000CA8  0008               	tblrd		*
  4642  000CAA  CFF5 F0F4          	movff	tablat,printf@c
  4643  000CAE  0100               	movlb	0	; () banked
  4644  000CB0  51F4               	movf	printf@c& (0+255),w,b
  4645  000CB2  B4D8               	btfsc	status,2,c
  4646  000CB4  0012               	return	
  4647  000CB6  D6DC               	goto	l3517
  4648  000CB8                     __end_of_printf:
  4649                           	opt stack 0
  4650                           tblptru	equ	0xFF8
  4651                           tblptrh	equ	0xFF7
  4652                           tblptrl	equ	0xFF6
  4653                           tablat	equ	0xFF5
  4654                           prodh	equ	0xFF4
  4655                           prodl	equ	0xFF3
  4656                           intcon	equ	0xFF2
  4657                           postinc0	equ	0xFEE
  4658                           wreg	equ	0xFE8
  4659                           indf1	equ	0xFE7
  4660                           postdec1	equ	0xFE5
  4661                           fsr1h	equ	0xFE2
  4662                           fsr1l	equ	0xFE1
  4663                           indf2	equ	0xFDF
  4664                           postinc2	equ	0xFDE
  4665                           postdec2	equ	0xFDD
  4666                           fsr2h	equ	0xFDA
  4667                           fsr2l	equ	0xFD9
  4668                           status	equ	0xFD8
  4669                           
  4670 ;; *************** function _putch *****************
  4671 ;; Defined at:
  4672 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  txData          1    wreg     unsigned char 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  txData          1   37[COMRAM] unsigned char 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;Total ram usage:        1 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:    5
  4693 ;; This function calls:
  4694 ;;		_EUSART1_Write
  4695 ;; This function is called by:
  4696 ;;		_printf
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text16
  4701  00195A                     __ptext16:
  4702                           	opt stack 0
  4703  00195A                     _putch:
  4704                           	opt stack 23
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;incstack = 0
  4708                           ;putch@txData stored from wreg
  4709  00195A  6E26               	movwf	putch@txData,c
  4710                           
  4711                           ;eusart1.c: 172: EUSART1_Write(txData);
  4712  00195C  5026               	movf	putch@txData,w,c
  4713  00195E  EC1E  F00B         	call	_EUSART1_Write
  4714  001962  0012               	return		;funcret
  4715  001964                     __end_of_putch:
  4716                           	opt stack 0
  4717                           tblptru	equ	0xFF8
  4718                           tblptrh	equ	0xFF7
  4719                           tblptrl	equ	0xFF6
  4720                           tablat	equ	0xFF5
  4721                           prodh	equ	0xFF4
  4722                           prodl	equ	0xFF3
  4723                           intcon	equ	0xFF2
  4724                           postinc0	equ	0xFEE
  4725                           wreg	equ	0xFE8
  4726                           indf1	equ	0xFE7
  4727                           postdec1	equ	0xFE5
  4728                           fsr1h	equ	0xFE2
  4729                           fsr1l	equ	0xFE1
  4730                           indf2	equ	0xFDF
  4731                           postinc2	equ	0xFDE
  4732                           postdec2	equ	0xFDD
  4733                           fsr2h	equ	0xFDA
  4734                           fsr2l	equ	0xFD9
  4735                           status	equ	0xFD8
  4736                           
  4737 ;; *************** function _EUSART1_Write *****************
  4738 ;; Defined at:
  4739 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  txData          1    wreg     unsigned char 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  txData          1   36[COMRAM] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;Total ram usage:        1 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    4
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_putch
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text17
  4768  00163C                     __ptext17:
  4769                           	opt stack 0
  4770  00163C                     _EUSART1_Write:
  4771                           	opt stack 23
  4772                           
  4773                           ;incstack = 0
  4774                           ;EUSART1_Write@txData stored from wreg
  4775  00163C  6E25               	movwf	EUSART1_Write@txData,c
  4776  00163E                     l3459:
  4777  00163E  503A               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  4778  001640  B4D8               	btfsc	status,2,c
  4779  001642  D7FD               	goto	l3459
  4780                           
  4781                           ;eusart1.c: 146: }
  4782                           ;eusart1.c: 148: if(0 == PIE1bits.TX1IE)
  4783  001644  B89D               	btfsc	3997,4,c	;volatile
  4784  001646  D003               	goto	l110
  4785                           
  4786                           ;eusart1.c: 149: {
  4787                           ;eusart1.c: 150: TXREG1 = txData;
  4788  001648  C025  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4789                           
  4790                           ;eusart1.c: 151: }
  4791  00164C  D012               	goto	l3473
  4792  00164E                     l110:
  4793                           
  4794                           ;eusart1.c: 152: else
  4795                           ;eusart1.c: 153: {
  4796                           ;eusart1.c: 154: PIE1bits.TX1IE = 0;
  4797  00164E  989D               	bcf	3997,4,c	;volatile
  4798                           
  4799                           ;eusart1.c: 155: eusart1TxBuffer[eusart1TxHead++] = txData;
  4800  001650  5030               	movf	_eusart1TxHead,w,c
  4801  001652  0D01               	mullw	1
  4802  001654  0E00               	movlw	low _eusart1TxBuffer
  4803  001656  24F3               	addwf	prodl,w,c
  4804  001658  6ED9               	movwf	fsr2l,c
  4805  00165A  0E01               	movlw	high _eusart1TxBuffer
  4806  00165C  20F4               	addwfc	prodh,w,c
  4807  00165E  6EDA               	movwf	fsr2h,c
  4808  001660  C025  FFDF         	movff	EUSART1_Write@txData,indf2
  4809  001664  2A30               	incf	_eusart1TxHead,f,c
  4810                           
  4811                           ;eusart1.c: 156: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  4812  001666  0E7F               	movlw	127
  4813  001668  6430               	cpfsgt	_eusart1TxHead,c
  4814  00166A  D002               	goto	l3471
  4815                           
  4816                           ;eusart1.c: 157: {
  4817                           ;eusart1.c: 158: eusart1TxHead = 0;
  4818  00166C  0E00               	movlw	0
  4819  00166E  6E30               	movwf	_eusart1TxHead,c
  4820  001670                     l3471:
  4821                           
  4822                           ;eusart1.c: 159: }
  4823                           ;eusart1.c: 160: eusart1TxBufferRemaining--;
  4824  001670  063A               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  4825  001672                     l3473:
  4826                           
  4827                           ;eusart1.c: 161: }
  4828                           ;eusart1.c: 162: PIE1bits.TX1IE = 1;
  4829  001672  889D               	bsf	3997,4,c	;volatile
  4830  001674  0012               	return		;funcret
  4831  001676                     __end_of_EUSART1_Write:
  4832                           	opt stack 0
  4833                           tblptru	equ	0xFF8
  4834                           tblptrh	equ	0xFF7
  4835                           tblptrl	equ	0xFF6
  4836                           tablat	equ	0xFF5
  4837                           prodh	equ	0xFF4
  4838                           prodl	equ	0xFF3
  4839                           intcon	equ	0xFF2
  4840                           postinc0	equ	0xFEE
  4841                           wreg	equ	0xFE8
  4842                           indf1	equ	0xFE7
  4843                           postdec1	equ	0xFE5
  4844                           fsr1h	equ	0xFE2
  4845                           fsr1l	equ	0xFE1
  4846                           indf2	equ	0xFDF
  4847                           postinc2	equ	0xFDE
  4848                           postdec2	equ	0xFDD
  4849                           fsr2h	equ	0xFDA
  4850                           fsr2l	equ	0xFD9
  4851                           status	equ	0xFD8
  4852                           
  4853 ;; *************** function ___lwmod *****************
  4854 ;; Defined at:
  4855 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  dividend        2    3[BANK0 ] unsigned int 
  4858 ;;  divisor         2    5[BANK0 ] unsigned int 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  counter         1   40[COMRAM] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  2    3[BANK0 ] unsigned int 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4870 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;Total ram usage:        5 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    4
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_printf
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text18
  4885  0014F2                     __ptext18:
  4886                           	opt stack 0
  4887  0014F2                     ___lwmod:
  4888                           	opt stack 24
  4889                           
  4890                           ;incstack = 0
  4891  0014F2  0100               	movlb	0	; () banked
  4892  0014F4  51E5               	movf	___lwmod@divisor& (0+255),w,b
  4893  0014F6  0100               	movlb	0	; () banked
  4894  0014F8  11E6               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  4895  0014FA  B4D8               	btfsc	status,2,c
  4896  0014FC  D023               	goto	l818
  4897                           
  4898                           ; BSR set to: 0
  4899  0014FE  0E01               	movlw	1
  4900  001500  6E29               	movwf	___lwmod@counter,c
  4901  001502  D005               	goto	l3505
  4902  001504                     l3503:
  4903                           
  4904                           ; BSR set to: 0
  4905  001504  0100               	movlb	0	; () banked
  4906  001506  90D8               	bcf	status,0,c
  4907  001508  37E5               	rlcf	___lwmod@divisor& (0+255),f,b
  4908  00150A  37E6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  4909  00150C  2A29               	incf	___lwmod@counter,f,c
  4910  00150E                     l3505:
  4911                           
  4912                           ; BSR set to: 0
  4913  00150E  0100               	movlb	0	; () banked
  4914  001510  AFE6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  4915  001512  D7F8               	goto	l3503
  4916  001514                     l3507:
  4917                           
  4918                           ; BSR set to: 0
  4919  001514  0100               	movlb	0	; () banked
  4920  001516  51E5               	movf	___lwmod@divisor& (0+255),w,b
  4921  001518  0100               	movlb	0	; () banked
  4922  00151A  5DE3               	subwf	___lwmod@dividend& (0+255),w,b
  4923  00151C  0100               	movlb	0	; () banked
  4924  00151E  51E6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4925  001520  0100               	movlb	0	; () banked
  4926  001522  59E4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  4927  001524  A0D8               	btfss	status,0,c
  4928  001526  D008               	goto	l3511
  4929                           
  4930                           ; BSR set to: 0
  4931  001528  0100               	movlb	0	; () banked
  4932  00152A  51E5               	movf	___lwmod@divisor& (0+255),w,b
  4933  00152C  0100               	movlb	0	; () banked
  4934  00152E  5FE3               	subwf	___lwmod@dividend& (0+255),f,b
  4935  001530  0100               	movlb	0	; () banked
  4936  001532  51E6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4937  001534  0100               	movlb	0	; () banked
  4938  001536  5BE4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  4939  001538                     l3511:
  4940                           
  4941                           ; BSR set to: 0
  4942  001538  0100               	movlb	0	; () banked
  4943  00153A  90D8               	bcf	status,0,c
  4944  00153C  33E6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  4945  00153E  33E5               	rrcf	___lwmod@divisor& (0+255),f,b
  4946                           
  4947                           ; BSR set to: 0
  4948  001540  2E29               	decfsz	___lwmod@counter,f,c
  4949  001542  D7E8               	goto	l3507
  4950  001544                     l818:
  4951                           
  4952                           ; BSR set to: 0
  4953  001544  C0E3  F0E3         	movff	___lwmod@dividend,?___lwmod
  4954  001548  C0E4  F0E4         	movff	___lwmod@dividend+1,?___lwmod+1
  4955                           
  4956                           ; BSR set to: 0
  4957  00154C  0012               	return		;funcret
  4958  00154E                     __end_of___lwmod:
  4959                           	opt stack 0
  4960                           tblptru	equ	0xFF8
  4961                           tblptrh	equ	0xFF7
  4962                           tblptrl	equ	0xFF6
  4963                           tablat	equ	0xFF5
  4964                           prodh	equ	0xFF4
  4965                           prodl	equ	0xFF3
  4966                           intcon	equ	0xFF2
  4967                           postinc0	equ	0xFEE
  4968                           wreg	equ	0xFE8
  4969                           indf1	equ	0xFE7
  4970                           postdec1	equ	0xFE5
  4971                           fsr1h	equ	0xFE2
  4972                           fsr1l	equ	0xFE1
  4973                           indf2	equ	0xFDF
  4974                           postinc2	equ	0xFDE
  4975                           postdec2	equ	0xFDD
  4976                           fsr2h	equ	0xFDA
  4977                           fsr2l	equ	0xFD9
  4978                           status	equ	0xFD8
  4979                           
  4980 ;; *************** function ___lwdiv *****************
  4981 ;; Defined at:
  4982 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;  dividend        2   36[COMRAM] unsigned int 
  4985 ;;  divisor         2   38[COMRAM] unsigned int 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  quotient        2    1[BANK0 ] unsigned int 
  4988 ;;  counter         1    0[BANK0 ] unsigned char 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  2   36[COMRAM] unsigned int 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4998 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4999 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5001 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;Total ram usage:        7 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    4
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_printf
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012                           	psect	text19
  5013  001494                     __ptext19:
  5014                           	opt stack 0
  5015  001494                     ___lwdiv:
  5016                           	opt stack 24
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;incstack = 0
  5020  001494  0E00               	movlw	0
  5021  001496  0100               	movlb	0	; () banked
  5022  001498  6FE2               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5023  00149A  0E00               	movlw	0
  5024  00149C  6FE1               	movwf	___lwdiv@quotient& (0+255),b
  5025                           
  5026                           ; BSR set to: 0
  5027  00149E  5027               	movf	___lwdiv@divisor,w,c
  5028  0014A0  1028               	iorwf	___lwdiv@divisor+1,w,c
  5029  0014A2  B4D8               	btfsc	status,2,c
  5030  0014A4  D021               	goto	l808
  5031                           
  5032                           ; BSR set to: 0
  5033  0014A6  0E01               	movlw	1
  5034  0014A8  0100               	movlb	0	; () banked
  5035  0014AA  6FE0               	movwf	___lwdiv@counter& (0+255),b
  5036  0014AC  D005               	goto	l3485
  5037  0014AE                     l3483:
  5038                           
  5039                           ; BSR set to: 0
  5040  0014AE  90D8               	bcf	status,0,c
  5041  0014B0  3627               	rlcf	___lwdiv@divisor,f,c
  5042  0014B2  3628               	rlcf	___lwdiv@divisor+1,f,c
  5043  0014B4  0100               	movlb	0	; () banked
  5044  0014B6  2BE0               	incf	___lwdiv@counter& (0+255),f,b
  5045  0014B8                     l3485:
  5046                           
  5047                           ; BSR set to: 0
  5048  0014B8  AE28               	btfss	___lwdiv@divisor+1,7,c
  5049  0014BA  D7F9               	goto	l3483
  5050  0014BC                     l3487:
  5051                           
  5052                           ; BSR set to: 0
  5053  0014BC  0100               	movlb	0	; () banked
  5054  0014BE  90D8               	bcf	status,0,c
  5055  0014C0  37E1               	rlcf	___lwdiv@quotient& (0+255),f,b
  5056  0014C2  37E2               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5057                           
  5058                           ; BSR set to: 0
  5059  0014C4  5027               	movf	___lwdiv@divisor,w,c
  5060  0014C6  5C25               	subwf	___lwdiv@dividend,w,c
  5061  0014C8  5028               	movf	___lwdiv@divisor+1,w,c
  5062  0014CA  5826               	subwfb	___lwdiv@dividend+1,w,c
  5063  0014CC  A0D8               	btfss	status,0,c
  5064  0014CE  D006               	goto	l3495
  5065                           
  5066                           ; BSR set to: 0
  5067  0014D0  5027               	movf	___lwdiv@divisor,w,c
  5068  0014D2  5E25               	subwf	___lwdiv@dividend,f,c
  5069  0014D4  5028               	movf	___lwdiv@divisor+1,w,c
  5070  0014D6  5A26               	subwfb	___lwdiv@dividend+1,f,c
  5071                           
  5072                           ; BSR set to: 0
  5073  0014D8  0100               	movlb	0	; () banked
  5074  0014DA  81E1               	bsf	___lwdiv@quotient& (0+255),0,b
  5075  0014DC                     l3495:
  5076                           
  5077                           ; BSR set to: 0
  5078  0014DC  90D8               	bcf	status,0,c
  5079  0014DE  3228               	rrcf	___lwdiv@divisor+1,f,c
  5080  0014E0  3227               	rrcf	___lwdiv@divisor,f,c
  5081                           
  5082                           ; BSR set to: 0
  5083  0014E2  0100               	movlb	0	; () banked
  5084  0014E4  2FE0               	decfsz	___lwdiv@counter& (0+255),f,b
  5085  0014E6  D7EA               	goto	l3487
  5086  0014E8                     l808:
  5087                           
  5088                           ; BSR set to: 0
  5089  0014E8  C0E1  F025         	movff	___lwdiv@quotient,?___lwdiv
  5090  0014EC  C0E2  F026         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5091                           
  5092                           ; BSR set to: 0
  5093  0014F0  0012               	return		;funcret
  5094  0014F2                     __end_of___lwdiv:
  5095                           	opt stack 0
  5096                           tblptru	equ	0xFF8
  5097                           tblptrh	equ	0xFF7
  5098                           tblptrl	equ	0xFF6
  5099                           tablat	equ	0xFF5
  5100                           prodh	equ	0xFF4
  5101                           prodl	equ	0xFF3
  5102                           intcon	equ	0xFF2
  5103                           postinc0	equ	0xFEE
  5104                           wreg	equ	0xFE8
  5105                           indf1	equ	0xFE7
  5106                           postdec1	equ	0xFE5
  5107                           fsr1h	equ	0xFE2
  5108                           fsr1l	equ	0xFE1
  5109                           indf2	equ	0xFDF
  5110                           postinc2	equ	0xFDE
  5111                           postdec2	equ	0xFDD
  5112                           fsr2h	equ	0xFDA
  5113                           fsr2l	equ	0xFD9
  5114                           status	equ	0xFD8
  5115                           
  5116 ;; *************** function ___awmod *****************
  5117 ;; Defined at:
  5118 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  dividend        2    8[BANK0 ] int 
  5121 ;;  divisor         2   10[BANK0 ] int 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  sign            1   13[BANK0 ] unsigned char 
  5124 ;;  counter         1   12[BANK0 ] unsigned char 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  2    8[BANK0 ] int 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5134 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;Total ram usage:        6 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:    4
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_main
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text20
  5149  001182                     __ptext20:
  5150                           	opt stack 0
  5151  001182                     ___awmod:
  5152                           	opt stack 26
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;incstack = 0
  5156  001182  0E00               	movlw	0
  5157  001184  0100               	movlb	0	; () banked
  5158  001186  6FED               	movwf	___awmod@sign& (0+255),b
  5159                           
  5160                           ; BSR set to: 0
  5161  001188  0100               	movlb	0	; () banked
  5162  00118A  AFE9               	btfss	(___awmod@dividend+1)& (0+255),7,b
  5163  00118C  D008               	goto	l3749
  5164                           
  5165                           ; BSR set to: 0
  5166  00118E  0100               	movlb	0	; () banked
  5167  001190  6DE8               	negf	___awmod@dividend& (0+255),b
  5168  001192  1FE9               	comf	(___awmod@dividend+1)& (0+255),f,b
  5169  001194  B0D8               	btfsc	status,0,c
  5170  001196  2BE9               	incf	(___awmod@dividend+1)& (0+255),f,b
  5171                           
  5172                           ; BSR set to: 0
  5173  001198  0E01               	movlw	1
  5174  00119A  0100               	movlb	0	; () banked
  5175  00119C  6FED               	movwf	___awmod@sign& (0+255),b
  5176  00119E                     l3749:
  5177                           
  5178                           ; BSR set to: 0
  5179  00119E  0100               	movlb	0	; () banked
  5180  0011A0  AFEB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5181  0011A2  D005               	goto	l3753
  5182                           
  5183                           ; BSR set to: 0
  5184  0011A4  0100               	movlb	0	; () banked
  5185  0011A6  6DEA               	negf	___awmod@divisor& (0+255),b
  5186  0011A8  1FEB               	comf	(___awmod@divisor+1)& (0+255),f,b
  5187  0011AA  B0D8               	btfsc	status,0,c
  5188  0011AC  2BEB               	incf	(___awmod@divisor+1)& (0+255),f,b
  5189  0011AE                     l3753:
  5190                           
  5191                           ; BSR set to: 0
  5192  0011AE  0100               	movlb	0	; () banked
  5193  0011B0  51EA               	movf	___awmod@divisor& (0+255),w,b
  5194  0011B2  0100               	movlb	0	; () banked
  5195  0011B4  11EB               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  5196  0011B6  B4D8               	btfsc	status,2,c
  5197  0011B8  D026               	goto	l3769
  5198                           
  5199                           ; BSR set to: 0
  5200  0011BA  0E01               	movlw	1
  5201  0011BC  0100               	movlb	0	; () banked
  5202  0011BE  6FEC               	movwf	___awmod@counter& (0+255),b
  5203  0011C0  D006               	goto	l3759
  5204  0011C2                     l3757:
  5205                           
  5206                           ; BSR set to: 0
  5207  0011C2  0100               	movlb	0	; () banked
  5208  0011C4  90D8               	bcf	status,0,c
  5209  0011C6  37EA               	rlcf	___awmod@divisor& (0+255),f,b
  5210  0011C8  37EB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5211  0011CA  0100               	movlb	0	; () banked
  5212  0011CC  2BEC               	incf	___awmod@counter& (0+255),f,b
  5213  0011CE                     l3759:
  5214                           
  5215                           ; BSR set to: 0
  5216  0011CE  0100               	movlb	0	; () banked
  5217  0011D0  AFEB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5218  0011D2  D7F7               	goto	l3757
  5219  0011D4                     l3761:
  5220                           
  5221                           ; BSR set to: 0
  5222  0011D4  0100               	movlb	0	; () banked
  5223  0011D6  51EA               	movf	___awmod@divisor& (0+255),w,b
  5224  0011D8  0100               	movlb	0	; () banked
  5225  0011DA  5DE8               	subwf	___awmod@dividend& (0+255),w,b
  5226  0011DC  0100               	movlb	0	; () banked
  5227  0011DE  51EB               	movf	(___awmod@divisor+1)& (0+255),w,b
  5228  0011E0  0100               	movlb	0	; () banked
  5229  0011E2  59E9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5230  0011E4  A0D8               	btfss	status,0,c
  5231  0011E6  D008               	goto	l3765
  5232                           
  5233                           ; BSR set to: 0
  5234  0011E8  0100               	movlb	0	; () banked
  5235  0011EA  51EA               	movf	___awmod@divisor& (0+255),w,b
  5236  0011EC  0100               	movlb	0	; () banked
  5237  0011EE  5FE8               	subwf	___awmod@dividend& (0+255),f,b
  5238  0011F0  0100               	movlb	0	; () banked
  5239  0011F2  51EB               	movf	(___awmod@divisor+1)& (0+255),w,b
  5240  0011F4  0100               	movlb	0	; () banked
  5241  0011F6  5BE9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5242  0011F8                     l3765:
  5243                           
  5244                           ; BSR set to: 0
  5245  0011F8  0100               	movlb	0	; () banked
  5246  0011FA  90D8               	bcf	status,0,c
  5247  0011FC  33EB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5248  0011FE  33EA               	rrcf	___awmod@divisor& (0+255),f,b
  5249                           
  5250                           ; BSR set to: 0
  5251  001200  0100               	movlb	0	; () banked
  5252  001202  2FEC               	decfsz	___awmod@counter& (0+255),f,b
  5253  001204  D7E7               	goto	l3761
  5254  001206                     l3769:
  5255                           
  5256                           ; BSR set to: 0
  5257  001206  0100               	movlb	0	; () banked
  5258  001208  51ED               	movf	___awmod@sign& (0+255),w,b
  5259  00120A  0100               	movlb	0	; () banked
  5260  00120C  B4D8               	btfsc	status,2,c
  5261  00120E  D005               	goto	l3773
  5262                           
  5263                           ; BSR set to: 0
  5264  001210  0100               	movlb	0	; () banked
  5265  001212  6DE8               	negf	___awmod@dividend& (0+255),b
  5266  001214  1FE9               	comf	(___awmod@dividend+1)& (0+255),f,b
  5267  001216  B0D8               	btfsc	status,0,c
  5268  001218  2BE9               	incf	(___awmod@dividend+1)& (0+255),f,b
  5269  00121A                     l3773:
  5270                           
  5271                           ; BSR set to: 0
  5272  00121A  C0E8  F0E8         	movff	___awmod@dividend,?___awmod
  5273  00121E  C0E9  F0E9         	movff	___awmod@dividend+1,?___awmod+1
  5274  001222  0012               	return	
  5275  001224                     __end_of___awmod:
  5276                           	opt stack 0
  5277                           tblptru	equ	0xFF8
  5278                           tblptrh	equ	0xFF7
  5279                           tblptrl	equ	0xFF6
  5280                           tablat	equ	0xFF5
  5281                           prodh	equ	0xFF4
  5282                           prodl	equ	0xFF3
  5283                           intcon	equ	0xFF2
  5284                           postinc0	equ	0xFEE
  5285                           wreg	equ	0xFE8
  5286                           indf1	equ	0xFE7
  5287                           postdec1	equ	0xFE5
  5288                           fsr1h	equ	0xFE2
  5289                           fsr1l	equ	0xFE1
  5290                           indf2	equ	0xFDF
  5291                           postinc2	equ	0xFDE
  5292                           postdec2	equ	0xFDD
  5293                           fsr2h	equ	0xFDA
  5294                           fsr2l	equ	0xFD9
  5295                           status	equ	0xFD8
  5296                           
  5297 ;; *************** function _SYSTEM_Initialize *****************
  5298 ;; Defined at:
  5299 ;;		line 112 in file "mcc_generated_files/mcc.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;		None
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;		None
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      void 
  5306 ;; Registers used:
  5307 ;;		wreg, status,2, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5317 ;;Total ram usage:        0 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:    6
  5320 ;; This function calls:
  5321 ;;		_EPWM1_Initialize
  5322 ;;		_EUSART1_Initialize
  5323 ;;		_INTERRUPT_Initialize
  5324 ;;		_OSCILLATOR_Initialize
  5325 ;;		_PIN_MANAGER_Initialize
  5326 ;;		_TMR2_Initialize
  5327 ;; This function is called by:
  5328 ;;		_main
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text21
  5333  0018F2                     __ptext21:
  5334                           	opt stack 0
  5335  0018F2                     _SYSTEM_Initialize:
  5336                           	opt stack 24
  5337                           
  5338                           ;mcc.c: 115: INTERRUPT_Initialize();
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;incstack = 0
  5342  0018F2  ECB2  F00C         	call	_INTERRUPT_Initialize	;wreg free
  5343                           
  5344                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  5345  0018F6  EC70  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  5346                           
  5347                           ;mcc.c: 117: OSCILLATOR_Initialize();
  5348  0018FA  ECA0  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  5349                           
  5350                           ;mcc.c: 118: EPWM1_Initialize();
  5351  0018FE  EC3D  F00C         	call	_EPWM1_Initialize	;wreg free
  5352                           
  5353                           ;mcc.c: 119: TMR2_Initialize();
  5354  001902  EC90  F00C         	call	_TMR2_Initialize	;wreg free
  5355                           
  5356                           ;mcc.c: 120: EUSART1_Initialize();
  5357  001906  EC8A  F00B         	call	_EUSART1_Initialize	;wreg free
  5358  00190A  0012               	return		;funcret
  5359  00190C                     __end_of_SYSTEM_Initialize:
  5360                           	opt stack 0
  5361                           tblptru	equ	0xFF8
  5362                           tblptrh	equ	0xFF7
  5363                           tblptrl	equ	0xFF6
  5364                           tablat	equ	0xFF5
  5365                           prodh	equ	0xFF4
  5366                           prodl	equ	0xFF3
  5367                           intcon	equ	0xFF2
  5368                           postinc0	equ	0xFEE
  5369                           wreg	equ	0xFE8
  5370                           indf1	equ	0xFE7
  5371                           postdec1	equ	0xFE5
  5372                           fsr1h	equ	0xFE2
  5373                           fsr1l	equ	0xFE1
  5374                           indf2	equ	0xFDF
  5375                           postinc2	equ	0xFDE
  5376                           postdec2	equ	0xFDD
  5377                           fsr2h	equ	0xFDA
  5378                           fsr2l	equ	0xFD9
  5379                           status	equ	0xFD8
  5380                           
  5381 ;; *************** function _TMR2_Initialize *****************
  5382 ;; Defined at:
  5383 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;		None
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;		None
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  1    wreg      void 
  5390 ;; Registers used:
  5391 ;;		wreg, status,2, cstack
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5401 ;;Total ram usage:        0 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:    5
  5404 ;; This function calls:
  5405 ;;		_TMR2_StartTimer
  5406 ;; This function is called by:
  5407 ;;		_SYSTEM_Initialize
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text22
  5412  001920                     __ptext22:
  5413                           	opt stack 0
  5414  001920                     _TMR2_Initialize:
  5415                           	opt stack 24
  5416                           
  5417                           ;tmr2.c: 63: T2CON = 0x00;
  5418                           
  5419                           ;incstack = 0
  5420  001920  0E00               	movlw	0
  5421  001922  6EBA               	movwf	4026,c	;volatile
  5422                           
  5423                           ;tmr2.c: 66: PR2 = 0xFF;
  5424  001924  68BB               	setf	4027,c	;volatile
  5425                           
  5426                           ;tmr2.c: 69: TMR2 = 0x00;
  5427  001926  0E00               	movlw	0
  5428  001928  6EBC               	movwf	4028,c	;volatile
  5429                           
  5430                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  5431  00192A  929E               	bcf	3998,1,c	;volatile
  5432                           
  5433                           ;tmr2.c: 75: TMR2_StartTimer();
  5434  00192C  ECBE  F00C         	call	_TMR2_StartTimer	;wreg free
  5435  001930  0012               	return		;funcret
  5436  001932                     __end_of_TMR2_Initialize:
  5437                           	opt stack 0
  5438                           tblptru	equ	0xFF8
  5439                           tblptrh	equ	0xFF7
  5440                           tblptrl	equ	0xFF6
  5441                           tablat	equ	0xFF5
  5442                           prodh	equ	0xFF4
  5443                           prodl	equ	0xFF3
  5444                           intcon	equ	0xFF2
  5445                           postinc0	equ	0xFEE
  5446                           wreg	equ	0xFE8
  5447                           indf1	equ	0xFE7
  5448                           postdec1	equ	0xFE5
  5449                           fsr1h	equ	0xFE2
  5450                           fsr1l	equ	0xFE1
  5451                           indf2	equ	0xFDF
  5452                           postinc2	equ	0xFDE
  5453                           postdec2	equ	0xFDD
  5454                           fsr2h	equ	0xFDA
  5455                           fsr2l	equ	0xFD9
  5456                           status	equ	0xFD8
  5457                           
  5458 ;; *************** function _TMR2_StartTimer *****************
  5459 ;; Defined at:
  5460 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;		None
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;		None
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  1    wreg      void 
  5467 ;; Registers used:
  5468 ;;		None
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;Total ram usage:        0 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    4
  5481 ;; This function calls:
  5482 ;;		Nothing
  5483 ;; This function is called by:
  5484 ;;		_TMR2_Initialize
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text23
  5489  00197C                     __ptext23:
  5490                           	opt stack 0
  5491  00197C                     _TMR2_StartTimer:
  5492                           	opt stack 24
  5493                           
  5494                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  5495                           
  5496                           ;incstack = 0
  5497  00197C  84BA               	bsf	4026,2,c	;volatile
  5498  00197E  0012               	return		;funcret
  5499  001980                     __end_of_TMR2_StartTimer:
  5500                           	opt stack 0
  5501                           tblptru	equ	0xFF8
  5502                           tblptrh	equ	0xFF7
  5503                           tblptrl	equ	0xFF6
  5504                           tablat	equ	0xFF5
  5505                           prodh	equ	0xFF4
  5506                           prodl	equ	0xFF3
  5507                           intcon	equ	0xFF2
  5508                           postinc0	equ	0xFEE
  5509                           wreg	equ	0xFE8
  5510                           indf1	equ	0xFE7
  5511                           postdec1	equ	0xFE5
  5512                           fsr1h	equ	0xFE2
  5513                           fsr1l	equ	0xFE1
  5514                           indf2	equ	0xFDF
  5515                           postinc2	equ	0xFDE
  5516                           postdec2	equ	0xFDD
  5517                           fsr2h	equ	0xFDA
  5518                           fsr2l	equ	0xFD9
  5519                           status	equ	0xFD8
  5520                           
  5521 ;; *************** function _PIN_MANAGER_Initialize *****************
  5522 ;; Defined at:
  5523 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		wreg, status,2
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;Total ram usage:        0 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:    4
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_SYSTEM_Initialize
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           	psect	text24
  5552  0016E0                     __ptext24:
  5553                           	opt stack 0
  5554  0016E0                     _PIN_MANAGER_Initialize:
  5555                           	opt stack 25
  5556                           
  5557                           ;pin_manager.c: 51: LATB = 0x0;
  5558                           
  5559                           ;incstack = 0
  5560  0016E0  0E00               	movlw	0
  5561  0016E2  6E8A               	movwf	3978,c	;volatile
  5562                           
  5563                           ;pin_manager.c: 52: LATA = 0x0;
  5564  0016E4  0E00               	movlw	0
  5565  0016E6  6E89               	movwf	3977,c	;volatile
  5566                           
  5567                           ;pin_manager.c: 53: LATC = 0x0;
  5568  0016E8  0E00               	movlw	0
  5569  0016EA  6E8B               	movwf	3979,c	;volatile
  5570                           
  5571                           ;pin_manager.c: 54: ANSELA = 0x2F;
  5572  0016EC  0E2F               	movlw	47
  5573  0016EE  010F               	movlb	15	; () banked
  5574  0016F0  6F38               	movwf	56,b	;volatile
  5575                           
  5576                           ;pin_manager.c: 55: ANSELB = 0x3E;
  5577  0016F2  0E3E               	movlw	62
  5578  0016F4  010F               	movlb	15	; () banked
  5579  0016F6  6F39               	movwf	57,b	;volatile
  5580                           
  5581                           ;pin_manager.c: 56: ANSELC = 0x38;
  5582  0016F8  0E38               	movlw	56
  5583  0016FA  010F               	movlb	15	; () banked
  5584  0016FC  6F3A               	movwf	58,b	;volatile
  5585                           
  5586                           ;pin_manager.c: 57: TRISB = 0xC8;
  5587  0016FE  0EC8               	movlw	200
  5588  001700  6E93               	movwf	3987,c	;volatile
  5589                           
  5590                           ;pin_manager.c: 58: TRISC = 0xF9;
  5591  001702  0EF9               	movlw	249
  5592  001704  6E94               	movwf	3988,c	;volatile
  5593                           
  5594                           ;pin_manager.c: 59: WPUB = 0xFE;
  5595  001706  0EFE               	movlw	254
  5596  001708  6E61               	movwf	3937,c	;volatile
  5597                           
  5598                           ;pin_manager.c: 60: TRISA = 0xEF;
  5599  00170A  0EEF               	movlw	239
  5600  00170C  6E92               	movwf	3986,c	;volatile
  5601                           
  5602                           ; BSR set to: 15
  5603                           ;pin_manager.c: 62: INTCON2bits.nRBPU = 0x1;
  5604  00170E  8EF1               	bsf	intcon2,7,c	;volatile
  5605                           
  5606                           ; BSR set to: 15
  5607                           ;pin_manager.c: 66: INTCONbits.RBIE = 0;
  5608  001710  96F2               	bcf	intcon,3,c	;volatile
  5609                           
  5610                           ; BSR set to: 15
  5611  001712  0012               	return		;funcret
  5612  001714                     __end_of_PIN_MANAGER_Initialize:
  5613                           	opt stack 0
  5614                           tblptru	equ	0xFF8
  5615                           tblptrh	equ	0xFF7
  5616                           tblptrl	equ	0xFF6
  5617                           tablat	equ	0xFF5
  5618                           prodh	equ	0xFF4
  5619                           prodl	equ	0xFF3
  5620                           intcon	equ	0xFF2
  5621                           intcon2	equ	0xFF1
  5622                           postinc0	equ	0xFEE
  5623                           wreg	equ	0xFE8
  5624                           indf1	equ	0xFE7
  5625                           postdec1	equ	0xFE5
  5626                           fsr1h	equ	0xFE2
  5627                           fsr1l	equ	0xFE1
  5628                           indf2	equ	0xFDF
  5629                           postinc2	equ	0xFDE
  5630                           postdec2	equ	0xFDD
  5631                           fsr2h	equ	0xFDA
  5632                           fsr2l	equ	0xFD9
  5633                           status	equ	0xFD8
  5634                           
  5635 ;; *************** function _OSCILLATOR_Initialize *****************
  5636 ;; Defined at:
  5637 ;;		line 123 in file "mcc_generated_files/mcc.c"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;		None
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;		None
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  1    wreg      void 
  5644 ;; Registers used:
  5645 ;;		wreg, status,2
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;Total ram usage:        0 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:    4
  5658 ;; This function calls:
  5659 ;;		Nothing
  5660 ;; This function is called by:
  5661 ;;		_SYSTEM_Initialize
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text25
  5666  001940                     __ptext25:
  5667                           	opt stack 0
  5668  001940                     _OSCILLATOR_Initialize:
  5669                           	opt stack 25
  5670                           
  5671                           ;mcc.c: 126: OSCCON = 0x70;
  5672                           
  5673                           ; BSR set to: 15
  5674                           ;incstack = 0
  5675  001940  0E70               	movlw	112
  5676  001942  6ED3               	movwf	4051,c	;volatile
  5677                           
  5678                           ;mcc.c: 128: OSCCON2 = 0x04;
  5679  001944  0E04               	movlw	4
  5680  001946  6ED2               	movwf	4050,c	;volatile
  5681                           
  5682                           ;mcc.c: 130: OSCTUNE = 0x40;
  5683  001948  0E40               	movlw	64
  5684  00194A  6E9B               	movwf	3995,c	;volatile
  5685  00194C  0012               	return		;funcret
  5686  00194E                     __end_of_OSCILLATOR_Initialize:
  5687                           	opt stack 0
  5688                           tblptru	equ	0xFF8
  5689                           tblptrh	equ	0xFF7
  5690                           tblptrl	equ	0xFF6
  5691                           tablat	equ	0xFF5
  5692                           prodh	equ	0xFF4
  5693                           prodl	equ	0xFF3
  5694                           intcon	equ	0xFF2
  5695                           intcon2	equ	0xFF1
  5696                           postinc0	equ	0xFEE
  5697                           wreg	equ	0xFE8
  5698                           indf1	equ	0xFE7
  5699                           postdec1	equ	0xFE5
  5700                           fsr1h	equ	0xFE2
  5701                           fsr1l	equ	0xFE1
  5702                           indf2	equ	0xFDF
  5703                           postinc2	equ	0xFDE
  5704                           postdec2	equ	0xFDD
  5705                           fsr2h	equ	0xFDA
  5706                           fsr2l	equ	0xFD9
  5707                           status	equ	0xFD8
  5708                           
  5709 ;; *************** function _INTERRUPT_Initialize *****************
  5710 ;; Defined at:
  5711 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;		None
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;		None
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		None
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;Total ram usage:        0 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    4
  5732 ;; This function calls:
  5733 ;;		Nothing
  5734 ;; This function is called by:
  5735 ;;		_SYSTEM_Initialize
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text26
  5740  001964                     __ptext26:
  5741                           	opt stack 0
  5742  001964                     _INTERRUPT_Initialize:
  5743                           	opt stack 25
  5744                           
  5745                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  5746                           
  5747                           ;incstack = 0
  5748  001964  9ED0               	bcf	4048,7,c	;volatile
  5749                           
  5750                           ;interrupt_manager.c: 60: INTCON2bits.TMR0IP = 0;
  5751  001966  94F1               	bcf	intcon2,2,c	;volatile
  5752                           
  5753                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  5754  001968  989F               	bcf	3999,4,c	;volatile
  5755                           
  5756                           ;interrupt_manager.c: 64: IPR1bits.RC1IP = 0;
  5757  00196A  9A9F               	bcf	3999,5,c	;volatile
  5758  00196C  0012               	return		;funcret
  5759  00196E                     __end_of_INTERRUPT_Initialize:
  5760                           	opt stack 0
  5761                           tblptru	equ	0xFF8
  5762                           tblptrh	equ	0xFF7
  5763                           tblptrl	equ	0xFF6
  5764                           tablat	equ	0xFF5
  5765                           prodh	equ	0xFF4
  5766                           prodl	equ	0xFF3
  5767                           intcon	equ	0xFF2
  5768                           intcon2	equ	0xFF1
  5769                           postinc0	equ	0xFEE
  5770                           wreg	equ	0xFE8
  5771                           indf1	equ	0xFE7
  5772                           postdec1	equ	0xFE5
  5773                           fsr1h	equ	0xFE2
  5774                           fsr1l	equ	0xFE1
  5775                           indf2	equ	0xFDF
  5776                           postinc2	equ	0xFDE
  5777                           postdec2	equ	0xFDD
  5778                           fsr2h	equ	0xFDA
  5779                           fsr2l	equ	0xFD9
  5780                           status	equ	0xFD8
  5781                           
  5782 ;; *************** function _EUSART1_Initialize *****************
  5783 ;; Defined at:
  5784 ;;		line 84 in file "mcc_generated_files/eusart1.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;		None
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;		None
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  1    wreg      void 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;Total ram usage:        0 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    4
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_SYSTEM_Initialize
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text27
  5813  001714                     __ptext27:
  5814                           	opt stack 0
  5815  001714                     _EUSART1_Initialize:
  5816                           	opt stack 25
  5817                           
  5818                           ;eusart1.c: 87: PIE1bits.RC1IE = 0;
  5819                           
  5820                           ;incstack = 0
  5821  001714  9A9D               	bcf	3997,5,c	;volatile
  5822                           
  5823                           ;eusart1.c: 88: PIE1bits.TX1IE = 0;
  5824  001716  989D               	bcf	3997,4,c	;volatile
  5825                           
  5826                           ;eusart1.c: 93: BAUDCON1 = 0x00;
  5827  001718  0E00               	movlw	0
  5828  00171A  6EB8               	movwf	4024,c	;volatile
  5829                           
  5830                           ;eusart1.c: 96: RCSTA1 = 0x90;
  5831  00171C  0E90               	movlw	144
  5832  00171E  6EAB               	movwf	4011,c	;volatile
  5833                           
  5834                           ;eusart1.c: 99: TXSTA1 = 0x20;
  5835  001720  0E20               	movlw	32
  5836  001722  6EAC               	movwf	4012,c	;volatile
  5837                           
  5838                           ;eusart1.c: 102: SPBRG1 = 0x10;
  5839  001724  0E10               	movlw	16
  5840  001726  6EAF               	movwf	4015,c	;volatile
  5841                           
  5842                           ;eusart1.c: 105: SPBRGH1 = 0x00;
  5843  001728  0E00               	movlw	0
  5844  00172A  6EB0               	movwf	4016,c	;volatile
  5845                           
  5846                           ;eusart1.c: 109: eusart1TxHead = 0;
  5847  00172C  0E00               	movlw	0
  5848  00172E  6E30               	movwf	_eusart1TxHead,c
  5849                           
  5850                           ;eusart1.c: 110: eusart1TxTail = 0;
  5851  001730  0E00               	movlw	0
  5852  001732  6E31               	movwf	_eusart1TxTail,c
  5853                           
  5854                           ;eusart1.c: 111: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  5855  001734  0E80               	movlw	128
  5856  001736  6E3A               	movwf	_eusart1TxBufferRemaining,c	;volatile
  5857                           
  5858                           ;eusart1.c: 113: eusart1RxHead = 0;
  5859  001738  0E00               	movlw	0
  5860  00173A  6E2E               	movwf	_eusart1RxHead,c
  5861                           
  5862                           ;eusart1.c: 114: eusart1RxTail = 0;
  5863  00173C  0E00               	movlw	0
  5864  00173E  6E2F               	movwf	_eusart1RxTail,c
  5865                           
  5866                           ;eusart1.c: 115: eusart1RxCount = 0;
  5867  001740  0E00               	movlw	0
  5868  001742  6E2D               	movwf	_eusart1RxCount,c	;volatile
  5869                           
  5870                           ;eusart1.c: 118: PIE1bits.RC1IE = 1;
  5871  001744  8A9D               	bsf	3997,5,c	;volatile
  5872  001746  0012               	return		;funcret
  5873  001748                     __end_of_EUSART1_Initialize:
  5874                           	opt stack 0
  5875                           tblptru	equ	0xFF8
  5876                           tblptrh	equ	0xFF7
  5877                           tblptrl	equ	0xFF6
  5878                           tablat	equ	0xFF5
  5879                           prodh	equ	0xFF4
  5880                           prodl	equ	0xFF3
  5881                           intcon	equ	0xFF2
  5882                           intcon2	equ	0xFF1
  5883                           postinc0	equ	0xFEE
  5884                           wreg	equ	0xFE8
  5885                           indf1	equ	0xFE7
  5886                           postdec1	equ	0xFE5
  5887                           fsr1h	equ	0xFE2
  5888                           fsr1l	equ	0xFE1
  5889                           indf2	equ	0xFDF
  5890                           postinc2	equ	0xFDE
  5891                           postdec2	equ	0xFDD
  5892                           fsr2h	equ	0xFDA
  5893                           fsr2l	equ	0xFD9
  5894                           status	equ	0xFD8
  5895                           
  5896 ;; *************** function _EPWM1_Initialize *****************
  5897 ;; Defined at:
  5898 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;Total ram usage:        0 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    4
  5919 ;; This function calls:
  5920 ;;		Nothing
  5921 ;; This function is called by:
  5922 ;;		_SYSTEM_Initialize
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text28
  5927  00187A                     __ptext28:
  5928                           	opt stack 0
  5929  00187A                     _EPWM1_Initialize:
  5930                           	opt stack 25
  5931                           
  5932                           ;epwm1.c: 69: CCP1CON = 0x0E;
  5933                           
  5934                           ;incstack = 0
  5935  00187A  0E0E               	movlw	14
  5936  00187C  6EBD               	movwf	4029,c	;volatile
  5937                           
  5938                           ;epwm1.c: 72: ECCP1AS = 0x00;
  5939  00187E  0E00               	movlw	0
  5940  001880  6EB6               	movwf	4022,c	;volatile
  5941                           
  5942                           ;epwm1.c: 75: PWM1CON = 0x82;
  5943  001882  0E82               	movlw	130
  5944  001884  6EB7               	movwf	4023,c	;volatile
  5945                           
  5946                           ;epwm1.c: 78: PSTR1CON = 0x01;
  5947  001886  0E01               	movlw	1
  5948  001888  6EB9               	movwf	4025,c	;volatile
  5949                           
  5950                           ;epwm1.c: 81: CCPR1L = 0x00;
  5951  00188A  0E00               	movlw	0
  5952  00188C  6EBE               	movwf	4030,c	;volatile
  5953                           
  5954                           ;epwm1.c: 84: CCPR1H = 0x00;
  5955  00188E  0E00               	movlw	0
  5956  001890  6EBF               	movwf	4031,c	;volatile
  5957                           
  5958                           ;epwm1.c: 88: CCPTMRS0bits.C1TSEL = 0x0;
  5959  001892  0EFC               	movlw	-4
  5960  001894  010F               	movlb	15	; () banked
  5961  001896  1749               	andwf	73,f,b	;volatile
  5962                           
  5963                           ; BSR set to: 15
  5964  001898  0012               	return		;funcret
  5965  00189A                     __end_of_EPWM1_Initialize:
  5966                           	opt stack 0
  5967                           tblptru	equ	0xFF8
  5968                           tblptrh	equ	0xFF7
  5969                           tblptrl	equ	0xFF6
  5970                           tablat	equ	0xFF5
  5971                           prodh	equ	0xFF4
  5972                           prodl	equ	0xFF3
  5973                           intcon	equ	0xFF2
  5974                           intcon2	equ	0xFF1
  5975                           postinc0	equ	0xFEE
  5976                           wreg	equ	0xFE8
  5977                           indf1	equ	0xFE7
  5978                           postdec1	equ	0xFE5
  5979                           fsr1h	equ	0xFE2
  5980                           fsr1l	equ	0xFE1
  5981                           indf2	equ	0xFDF
  5982                           postinc2	equ	0xFDE
  5983                           postdec2	equ	0xFDD
  5984                           fsr2h	equ	0xFDA
  5985                           fsr2l	equ	0xFD9
  5986                           status	equ	0xFD8
  5987                           
  5988 ;; *************** function _InitI2C *****************
  5989 ;; Defined at:
  5990 ;;		line 12 in file "soft_i2c.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;		None
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		None
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;Total ram usage:        0 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    4
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_main
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text29
  6019  00196E                     __ptext29:
  6020                           	opt stack 0
  6021  00196E                     _InitI2C:
  6022                           	opt stack 26
  6023                           
  6024                           ;soft_i2c.c: 15: TRISC4 = 1;
  6025                           
  6026                           ; BSR set to: 15
  6027                           ;incstack = 0
  6028  00196E  8894               	bsf	3988,4,c	;volatile
  6029                           
  6030                           ;soft_i2c.c: 16: TRISC3 = 1;
  6031  001970  8694               	bsf	3988,3,c	;volatile
  6032                           
  6033                           ;soft_i2c.c: 19: LATC4 = 0;
  6034  001972  988B               	bcf	3979,4,c	;volatile
  6035                           
  6036                           ;soft_i2c.c: 20: LATC3 = 0;
  6037  001974  968B               	bcf	3979,3,c	;volatile
  6038  001976  0012               	return		;funcret
  6039  001978                     __end_of_InitI2C:
  6040                           	opt stack 0
  6041                           tblptru	equ	0xFF8
  6042                           tblptrh	equ	0xFF7
  6043                           tblptrl	equ	0xFF6
  6044                           tablat	equ	0xFF5
  6045                           prodh	equ	0xFF4
  6046                           prodl	equ	0xFF3
  6047                           intcon	equ	0xFF2
  6048                           intcon2	equ	0xFF1
  6049                           postinc0	equ	0xFEE
  6050                           wreg	equ	0xFE8
  6051                           indf1	equ	0xFE7
  6052                           postdec1	equ	0xFE5
  6053                           fsr1h	equ	0xFE2
  6054                           fsr1l	equ	0xFE1
  6055                           indf2	equ	0xFDF
  6056                           postinc2	equ	0xFDE
  6057                           postdec2	equ	0xFDD
  6058                           fsr2h	equ	0xFDA
  6059                           fsr2l	equ	0xFD9
  6060                           status	equ	0xFD8
  6061                           
  6062 ;; *************** function _I2C_Write_Byte *****************
  6063 ;; Defined at:
  6064 ;;		line 100 in file "soft_i2c.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  Byte            1    wreg     unsigned char 
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;  Byte            1   39[COMRAM] unsigned char 
  6069 ;;  i               1   40[COMRAM] unsigned char 
  6070 ;; Return value:  Size  Location     Type
  6071 ;;		None               void
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6080 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6081 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;Total ram usage:        5 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    4
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_main
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           	psect	text30
  6094  00142C                     __ptext30:
  6095                           	opt stack 0
  6096  00142C                     _I2C_Write_Byte:
  6097                           	opt stack 26
  6098                           
  6099                           ;incstack = 0
  6100                           ;I2C_Write_Byte@Byte stored from wreg
  6101  00142C  6E28               	movwf	I2C_Write_Byte@Byte,c
  6102                           
  6103                           ;soft_i2c.c: 102: unsigned char i;
  6104                           ;soft_i2c.c: 104: for(i=0;i<8;i++)
  6105  00142E  0E00               	movlw	0
  6106  001430  6E29               	movwf	I2C_Write_Byte@i,c
  6107  001432                     l2841:
  6108  001432  0E07               	movlw	7
  6109  001434  6429               	cpfsgt	I2C_Write_Byte@i,c
  6110  001436  D001               	goto	l352
  6111  001438  D021               	goto	l353
  6112  00143A                     l352:
  6113                           
  6114                           ;soft_i2c.c: 105: {
  6115                           ;soft_i2c.c: 106: TRISC3 = 0;
  6116  00143A  9694               	bcf	3988,3,c	;volatile
  6117                           
  6118                           ;soft_i2c.c: 108: _delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6119  00143C  0E0A               	movlw	10
  6120  00143E                     u3907:
  6121  00143E  2EE8               	decfsz	wreg,f,c
  6122  001440  D7FE               	goto	u3907
  6123  001442  D000               	nop2		;nop
  6124                           
  6125                           ;soft_i2c.c: 111: if((Byte<<i)&0x80)
  6126  001444  C029  F025         	movff	I2C_Write_Byte@i,??_I2C_Write_Byte
  6127  001448  5028               	movf	I2C_Write_Byte@Byte,w,c
  6128  00144A  6E26               	movwf	(??_I2C_Write_Byte+1)& (0+255),c
  6129  00144C  6A27               	clrf	(??_I2C_Write_Byte+2)& (0+255),c
  6130  00144E  2A25               	incf	??_I2C_Write_Byte,f,c
  6131  001450  D003               	goto	u1984
  6132  001452                     u1985:
  6133  001452  90D8               	bcf	status,0,c
  6134  001454  3626               	rlcf	??_I2C_Write_Byte+1,f,c
  6135  001456  3627               	rlcf	??_I2C_Write_Byte+2,f,c
  6136  001458                     u1984:
  6137  001458  2E25               	decfsz	??_I2C_Write_Byte,f,c
  6138  00145A  D7FB               	goto	u1985
  6139  00145C  AE26               	btfss	??_I2C_Write_Byte+1,7,c
  6140  00145E  D002               	goto	l354
  6141                           
  6142                           ;soft_i2c.c: 112: TRISC4 = 1;
  6143  001460  8894               	bsf	3988,4,c	;volatile
  6144  001462  D001               	goto	l2851
  6145  001464                     l354:
  6146                           
  6147                           ;soft_i2c.c: 113: else
  6148                           ;soft_i2c.c: 114: TRISC4 = 0;
  6149  001464  9894               	bcf	3988,4,c	;volatile
  6150  001466                     l2851:
  6151                           
  6152                           ;soft_i2c.c: 116: _delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6153  001466  0E0A               	movlw	10
  6154  001468                     u3917:
  6155  001468  2EE8               	decfsz	wreg,f,c
  6156  00146A  D7FE               	goto	u3917
  6157  00146C  D000               	nop2		;nop
  6158                           
  6159                           ;soft_i2c.c: 117: TRISC3 = 1;
  6160  00146E  8694               	bsf	3988,3,c	;volatile
  6161                           
  6162                           ;soft_i2c.c: 118: _delay((unsigned long)((4)*(64000000/4000000.0)));
  6163  001470  0E15               	movlw	21
  6164  001472                     u3927:
  6165  001472  2EE8               	decfsz	wreg,f,c
  6166  001474  D7FE               	goto	u3927
  6167  001476  F000               	nop	
  6168  001478  2A29               	incf	I2C_Write_Byte@i,f,c
  6169  00147A  D7DB               	goto	l2841
  6170  00147C                     l353:
  6171                           
  6172                           ;soft_i2c.c: 119: }
  6173                           ;soft_i2c.c: 122: TRISC3 = 0;
  6174  00147C  9694               	bcf	3988,3,c	;volatile
  6175                           
  6176                           ;soft_i2c.c: 123: TRISC4 = 1;
  6177  00147E  8894               	bsf	3988,4,c	;volatile
  6178                           
  6179                           ;soft_i2c.c: 124: _delay((unsigned long)((4)*(64000000/4000000.0)));
  6180  001480  0E15               	movlw	21
  6181  001482                     u3937:
  6182  001482  2EE8               	decfsz	wreg,f,c
  6183  001484  D7FE               	goto	u3937
  6184  001486  F000               	nop	
  6185                           
  6186                           ;soft_i2c.c: 125: TRISC3 = 1;
  6187  001488  8694               	bsf	3988,3,c	;volatile
  6188                           
  6189                           ;soft_i2c.c: 126: _delay((unsigned long)((4)*(64000000/4000000.0)));
  6190  00148A  0E15               	movlw	21
  6191  00148C                     u3947:
  6192  00148C  2EE8               	decfsz	wreg,f,c
  6193  00148E  D7FE               	goto	u3947
  6194  001490  F000               	nop	
  6195                           
  6196                           ;soft_i2c.c: 128: return LATC4;
  6197                           ;	Return value of _I2C_Write_Byte is never used
  6198  001492  0012               	return	
  6199  001494                     __end_of_I2C_Write_Byte:
  6200                           	opt stack 0
  6201                           tblptru	equ	0xFF8
  6202                           tblptrh	equ	0xFF7
  6203                           tblptrl	equ	0xFF6
  6204                           tablat	equ	0xFF5
  6205                           prodh	equ	0xFF4
  6206                           prodl	equ	0xFF3
  6207                           intcon	equ	0xFF2
  6208                           intcon2	equ	0xFF1
  6209                           postinc0	equ	0xFEE
  6210                           wreg	equ	0xFE8
  6211                           indf1	equ	0xFE7
  6212                           postdec1	equ	0xFE5
  6213                           fsr1h	equ	0xFE2
  6214                           fsr1l	equ	0xFE1
  6215                           indf2	equ	0xFDF
  6216                           postinc2	equ	0xFDE
  6217                           postdec2	equ	0xFDD
  6218                           fsr2h	equ	0xFDA
  6219                           fsr2l	equ	0xFD9
  6220                           status	equ	0xFD8
  6221                           
  6222 ;; *************** function _I2C_Stop *****************
  6223 ;; Defined at:
  6224 ;;		line 56 in file "soft_i2c.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1    wreg      void 
  6231 ;; Registers used:
  6232 ;;		wreg
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;Total ram usage:        0 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    4
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_main
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text31
  6253  001802                     __ptext31:
  6254                           	opt stack 0
  6255  001802                     _I2C_Stop:
  6256                           	opt stack 26
  6257                           
  6258                           ;soft_i2c.c: 58: TRISC3 = 0;
  6259                           
  6260                           ;incstack = 0
  6261  001802  9694               	bcf	3988,3,c	;volatile
  6262                           
  6263                           ;soft_i2c.c: 60: _delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6264  001804  0E0A               	movlw	10
  6265  001806                     u3957:
  6266  001806  2EE8               	decfsz	wreg,f,c
  6267  001808  D7FE               	goto	u3957
  6268  00180A  D000               	nop2		;nop
  6269                           
  6270                           ;soft_i2c.c: 62: TRISC4 = 0;
  6271  00180C  9894               	bcf	3988,4,c	;volatile
  6272                           
  6273                           ;soft_i2c.c: 64: _delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6274  00180E  0E0A               	movlw	10
  6275  001810                     u3967:
  6276  001810  2EE8               	decfsz	wreg,f,c
  6277  001812  D7FE               	goto	u3967
  6278  001814  D000               	nop2		;nop
  6279                           
  6280                           ;soft_i2c.c: 65: TRISC3 = 1;
  6281  001816  8694               	bsf	3988,3,c	;volatile
  6282                           
  6283                           ;soft_i2c.c: 66: _delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6284  001818  0E0A               	movlw	10
  6285  00181A                     u3977:
  6286  00181A  2EE8               	decfsz	wreg,f,c
  6287  00181C  D7FE               	goto	u3977
  6288  00181E  D000               	nop2		;nop
  6289                           
  6290                           ;soft_i2c.c: 67: TRISC4 = 1;
  6291  001820  8894               	bsf	3988,4,c	;volatile
  6292                           
  6293                           ;soft_i2c.c: 68: _delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6294  001822  0E0A               	movlw	10
  6295  001824                     u3987:
  6296  001824  2EE8               	decfsz	wreg,f,c
  6297  001826  D7FE               	goto	u3987
  6298  001828  D000               	nop2		;nop
  6299  00182A  0012               	return		;funcret
  6300  00182C                     __end_of_I2C_Stop:
  6301                           	opt stack 0
  6302                           tblptru	equ	0xFF8
  6303                           tblptrh	equ	0xFF7
  6304                           tblptrl	equ	0xFF6
  6305                           tablat	equ	0xFF5
  6306                           prodh	equ	0xFF4
  6307                           prodl	equ	0xFF3
  6308                           intcon	equ	0xFF2
  6309                           intcon2	equ	0xFF1
  6310                           postinc0	equ	0xFEE
  6311                           wreg	equ	0xFE8
  6312                           indf1	equ	0xFE7
  6313                           postdec1	equ	0xFE5
  6314                           fsr1h	equ	0xFE2
  6315                           fsr1l	equ	0xFE1
  6316                           indf2	equ	0xFDF
  6317                           postinc2	equ	0xFDE
  6318                           postdec2	equ	0xFDD
  6319                           fsr2h	equ	0xFDA
  6320                           fsr2l	equ	0xFD9
  6321                           status	equ	0xFD8
  6322                           
  6323 ;; *************** function _I2C_Start *****************
  6324 ;; Defined at:
  6325 ;;		line 25 in file "soft_i2c.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;		None
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;		None
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      void 
  6332 ;; Registers used:
  6333 ;;		wreg
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;Total ram usage:        0 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    4
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_main
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text32
  6354  0018D6                     __ptext32:
  6355                           	opt stack 0
  6356  0018D6                     _I2C_Start:
  6357                           	opt stack 26
  6358                           
  6359                           ;soft_i2c.c: 27: LATC4 = 0;
  6360                           
  6361                           ;incstack = 0
  6362  0018D6  988B               	bcf	3979,4,c	;volatile
  6363                           
  6364                           ;soft_i2c.c: 28: LATC3 = 0;
  6365  0018D8  968B               	bcf	3979,3,c	;volatile
  6366                           
  6367                           ;soft_i2c.c: 30: TRISC3 = 1;
  6368  0018DA  8694               	bsf	3988,3,c	;volatile
  6369                           
  6370                           ;soft_i2c.c: 31: TRISC4 = 1;
  6371  0018DC  8894               	bsf	3988,4,c	;volatile
  6372                           
  6373                           ;soft_i2c.c: 32: _delay((unsigned long)((4)*(64000000/4000000.0)));
  6374  0018DE  0E15               	movlw	21
  6375  0018E0                     u3997:
  6376  0018E0  2EE8               	decfsz	wreg,f,c
  6377  0018E2  D7FE               	goto	u3997
  6378  0018E4  F000               	nop	
  6379                           
  6380                           ;soft_i2c.c: 33: TRISC4 = 0;
  6381  0018E6  9894               	bcf	3988,4,c	;volatile
  6382                           
  6383                           ;soft_i2c.c: 34: _delay((unsigned long)((4)*(64000000/4000000.0)));
  6384  0018E8  0E15               	movlw	21
  6385  0018EA                     u4007:
  6386  0018EA  2EE8               	decfsz	wreg,f,c
  6387  0018EC  D7FE               	goto	u4007
  6388  0018EE  F000               	nop	
  6389  0018F0  0012               	return		;funcret
  6390  0018F2                     __end_of_I2C_Start:
  6391                           	opt stack 0
  6392                           tblptru	equ	0xFF8
  6393                           tblptrh	equ	0xFF7
  6394                           tblptrl	equ	0xFF6
  6395                           tablat	equ	0xFF5
  6396                           prodh	equ	0xFF4
  6397                           prodl	equ	0xFF3
  6398                           intcon	equ	0xFF2
  6399                           intcon2	equ	0xFF1
  6400                           postinc0	equ	0xFEE
  6401                           wreg	equ	0xFE8
  6402                           indf1	equ	0xFE7
  6403                           postdec1	equ	0xFE5
  6404                           fsr1h	equ	0xFE2
  6405                           fsr1l	equ	0xFE1
  6406                           indf2	equ	0xFDF
  6407                           postinc2	equ	0xFDE
  6408                           postdec2	equ	0xFDD
  6409                           fsr2h	equ	0xFDA
  6410                           fsr2l	equ	0xFD9
  6411                           status	equ	0xFD8
  6412                           
  6413 ;; *************** function _I2C_Read_Byte *****************
  6414 ;; Defined at:
  6415 ;;		line 133 in file "soft_i2c.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;		None
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  RxData          1   36[COMRAM] unsigned char 
  6420 ;;  i               1    0        unsigned char 
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  1    wreg      unsigned char 
  6423 ;; Registers used:
  6424 ;;		wreg, status,2, status,0
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;Total ram usage:        1 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    4
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		_main
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text33
  6445  000EFE                     __ptext33:
  6446                           	opt stack 0
  6447  000EFE                     _I2C_Read_Byte:
  6448                           	opt stack 26
  6449                           
  6450                           ;soft_i2c.c: 135: unsigned char i, RxData = 0;
  6451                           
  6452                           ;incstack = 0
  6453  000EFE  0E00               	movlw	0
  6454  000F00  6E25               	movwf	I2C_Read_Byte@RxData,c
  6455                           
  6456                           ;soft_i2c.c: 137: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((4)*(64000000/4000000.0
      +                          ))); TRISC3 = 1;_delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6457  000F02  9694               	bcf	3988,3,c	;volatile
  6458  000F04  8894               	bsf	3988,4,c	;volatile
  6459  000F06  0E15               	movlw	21
  6460  000F08                     u4017:
  6461  000F08  2EE8               	decfsz	wreg,f,c
  6462  000F0A  D7FE               	goto	u4017
  6463  000F0C  F000               	nop	
  6464  000F0E  8694               	bsf	3988,3,c	;volatile
  6465  000F10  0E0A               	movlw	10
  6466  000F12                     u4027:
  6467  000F12  2EE8               	decfsz	wreg,f,c
  6468  000F14  D7FE               	goto	u4027
  6469  000F16  D000               	nop2		;nop
  6470                           
  6471                           ;soft_i2c.c: 138: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  6472  000F18  A882               	btfss	3970,4,c	;volatile
  6473  000F1A  D002               	goto	u2010
  6474  000F1C  0E01               	movlw	1
  6475  000F1E  D001               	goto	u2016
  6476  000F20                     u2010:
  6477  000F20  0E00               	movlw	0
  6478  000F22                     u2016:
  6479  000F22  1225               	iorwf	I2C_Read_Byte@RxData,f,c
  6480  000F24  5025               	movf	I2C_Read_Byte@RxData,w,c
  6481  000F26  2425               	addwf	I2C_Read_Byte@RxData,w,c
  6482  000F28  6E25               	movwf	I2C_Read_Byte@RxData,c
  6483                           
  6484                           ;soft_i2c.c: 139: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((4)*(64000000/4000000.0
      +                          ))); TRISC3 = 1;_delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6485  000F2A  9694               	bcf	3988,3,c	;volatile
  6486  000F2C  8894               	bsf	3988,4,c	;volatile
  6487  000F2E  0E15               	movlw	21
  6488  000F30                     u4037:
  6489  000F30  2EE8               	decfsz	wreg,f,c
  6490  000F32  D7FE               	goto	u4037
  6491  000F34  F000               	nop	
  6492  000F36  8694               	bsf	3988,3,c	;volatile
  6493  000F38  0E0A               	movlw	10
  6494  000F3A                     u4047:
  6495  000F3A  2EE8               	decfsz	wreg,f,c
  6496  000F3C  D7FE               	goto	u4047
  6497  000F3E  D000               	nop2		;nop
  6498                           
  6499                           ;soft_i2c.c: 140: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  6500  000F40  A882               	btfss	3970,4,c	;volatile
  6501  000F42  D002               	goto	u2020
  6502  000F44  0E01               	movlw	1
  6503  000F46  D001               	goto	u2026
  6504  000F48                     u2020:
  6505  000F48  0E00               	movlw	0
  6506  000F4A                     u2026:
  6507  000F4A  1225               	iorwf	I2C_Read_Byte@RxData,f,c
  6508  000F4C  5025               	movf	I2C_Read_Byte@RxData,w,c
  6509  000F4E  2425               	addwf	I2C_Read_Byte@RxData,w,c
  6510  000F50  6E25               	movwf	I2C_Read_Byte@RxData,c
  6511                           
  6512                           ;soft_i2c.c: 141: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((4)*(64000000/4000000.0
      +                          ))); TRISC3 = 1;_delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6513  000F52  9694               	bcf	3988,3,c	;volatile
  6514  000F54  8894               	bsf	3988,4,c	;volatile
  6515  000F56  0E15               	movlw	21
  6516  000F58                     u4057:
  6517  000F58  2EE8               	decfsz	wreg,f,c
  6518  000F5A  D7FE               	goto	u4057
  6519  000F5C  F000               	nop	
  6520  000F5E  8694               	bsf	3988,3,c	;volatile
  6521  000F60  0E0A               	movlw	10
  6522  000F62                     u4067:
  6523  000F62  2EE8               	decfsz	wreg,f,c
  6524  000F64  D7FE               	goto	u4067
  6525  000F66  D000               	nop2		;nop
  6526                           
  6527                           ;soft_i2c.c: 142: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  6528  000F68  A882               	btfss	3970,4,c	;volatile
  6529  000F6A  D002               	goto	u2030
  6530  000F6C  0E01               	movlw	1
  6531  000F6E  D001               	goto	u2036
  6532  000F70                     u2030:
  6533  000F70  0E00               	movlw	0
  6534  000F72                     u2036:
  6535  000F72  1225               	iorwf	I2C_Read_Byte@RxData,f,c
  6536  000F74  5025               	movf	I2C_Read_Byte@RxData,w,c
  6537  000F76  2425               	addwf	I2C_Read_Byte@RxData,w,c
  6538  000F78  6E25               	movwf	I2C_Read_Byte@RxData,c
  6539                           
  6540                           ;soft_i2c.c: 143: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((4)*(64000000/4000000.0
      +                          ))); TRISC3 = 1;_delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6541  000F7A  9694               	bcf	3988,3,c	;volatile
  6542  000F7C  8894               	bsf	3988,4,c	;volatile
  6543  000F7E  0E15               	movlw	21
  6544  000F80                     u4077:
  6545  000F80  2EE8               	decfsz	wreg,f,c
  6546  000F82  D7FE               	goto	u4077
  6547  000F84  F000               	nop	
  6548  000F86  8694               	bsf	3988,3,c	;volatile
  6549  000F88  0E0A               	movlw	10
  6550  000F8A                     u4087:
  6551  000F8A  2EE8               	decfsz	wreg,f,c
  6552  000F8C  D7FE               	goto	u4087
  6553  000F8E  D000               	nop2		;nop
  6554                           
  6555                           ;soft_i2c.c: 144: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  6556  000F90  A882               	btfss	3970,4,c	;volatile
  6557  000F92  D002               	goto	u2040
  6558  000F94  0E01               	movlw	1
  6559  000F96  D001               	goto	u2046
  6560  000F98                     u2040:
  6561  000F98  0E00               	movlw	0
  6562  000F9A                     u2046:
  6563  000F9A  1225               	iorwf	I2C_Read_Byte@RxData,f,c
  6564  000F9C  5025               	movf	I2C_Read_Byte@RxData,w,c
  6565  000F9E  2425               	addwf	I2C_Read_Byte@RxData,w,c
  6566  000FA0  6E25               	movwf	I2C_Read_Byte@RxData,c
  6567                           
  6568                           ;soft_i2c.c: 145: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((4)*(64000000/4000000.0
      +                          ))); TRISC3 = 1;_delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6569  000FA2  9694               	bcf	3988,3,c	;volatile
  6570  000FA4  8894               	bsf	3988,4,c	;volatile
  6571  000FA6  0E15               	movlw	21
  6572  000FA8                     u4097:
  6573  000FA8  2EE8               	decfsz	wreg,f,c
  6574  000FAA  D7FE               	goto	u4097
  6575  000FAC  F000               	nop	
  6576  000FAE  8694               	bsf	3988,3,c	;volatile
  6577  000FB0  0E0A               	movlw	10
  6578  000FB2                     u4107:
  6579  000FB2  2EE8               	decfsz	wreg,f,c
  6580  000FB4  D7FE               	goto	u4107
  6581  000FB6  D000               	nop2		;nop
  6582                           
  6583                           ;soft_i2c.c: 146: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  6584  000FB8  A882               	btfss	3970,4,c	;volatile
  6585  000FBA  D002               	goto	u2050
  6586  000FBC  0E01               	movlw	1
  6587  000FBE  D001               	goto	u2056
  6588  000FC0                     u2050:
  6589  000FC0  0E00               	movlw	0
  6590  000FC2                     u2056:
  6591  000FC2  1225               	iorwf	I2C_Read_Byte@RxData,f,c
  6592  000FC4  5025               	movf	I2C_Read_Byte@RxData,w,c
  6593  000FC6  2425               	addwf	I2C_Read_Byte@RxData,w,c
  6594  000FC8  6E25               	movwf	I2C_Read_Byte@RxData,c
  6595                           
  6596                           ;soft_i2c.c: 147: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((4)*(64000000/4000000.0
      +                          ))); TRISC3 = 1;_delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6597  000FCA  9694               	bcf	3988,3,c	;volatile
  6598  000FCC  8894               	bsf	3988,4,c	;volatile
  6599  000FCE  0E15               	movlw	21
  6600  000FD0                     u4117:
  6601  000FD0  2EE8               	decfsz	wreg,f,c
  6602  000FD2  D7FE               	goto	u4117
  6603  000FD4  F000               	nop	
  6604  000FD6  8694               	bsf	3988,3,c	;volatile
  6605  000FD8  0E0A               	movlw	10
  6606  000FDA                     u4127:
  6607  000FDA  2EE8               	decfsz	wreg,f,c
  6608  000FDC  D7FE               	goto	u4127
  6609  000FDE  D000               	nop2		;nop
  6610                           
  6611                           ;soft_i2c.c: 148: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  6612  000FE0  A882               	btfss	3970,4,c	;volatile
  6613  000FE2  D002               	goto	u2060
  6614  000FE4  0E01               	movlw	1
  6615  000FE6  D001               	goto	u2066
  6616  000FE8                     u2060:
  6617  000FE8  0E00               	movlw	0
  6618  000FEA                     u2066:
  6619  000FEA  1225               	iorwf	I2C_Read_Byte@RxData,f,c
  6620  000FEC  5025               	movf	I2C_Read_Byte@RxData,w,c
  6621  000FEE  2425               	addwf	I2C_Read_Byte@RxData,w,c
  6622  000FF0  6E25               	movwf	I2C_Read_Byte@RxData,c
  6623                           
  6624                           ;soft_i2c.c: 149: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((4)*(64000000/4000000.0
      +                          ))); TRISC3 = 1;_delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6625  000FF2  9694               	bcf	3988,3,c	;volatile
  6626  000FF4  8894               	bsf	3988,4,c	;volatile
  6627  000FF6  0E15               	movlw	21
  6628  000FF8                     u4137:
  6629  000FF8  2EE8               	decfsz	wreg,f,c
  6630  000FFA  D7FE               	goto	u4137
  6631  000FFC  F000               	nop	
  6632  000FFE  8694               	bsf	3988,3,c	;volatile
  6633  001000  0E0A               	movlw	10
  6634  001002                     u4147:
  6635  001002  2EE8               	decfsz	wreg,f,c
  6636  001004  D7FE               	goto	u4147
  6637  001006  D000               	nop2		;nop
  6638                           
  6639                           ;soft_i2c.c: 150: RxData |= PORTCbits.RC4; RxData = RxData<<1;
  6640  001008  A882               	btfss	3970,4,c	;volatile
  6641  00100A  D002               	goto	u2070
  6642  00100C  0E01               	movlw	1
  6643  00100E  D001               	goto	u2076
  6644  001010                     u2070:
  6645  001010  0E00               	movlw	0
  6646  001012                     u2076:
  6647  001012  1225               	iorwf	I2C_Read_Byte@RxData,f,c
  6648  001014  5025               	movf	I2C_Read_Byte@RxData,w,c
  6649  001016  2425               	addwf	I2C_Read_Byte@RxData,w,c
  6650  001018  6E25               	movwf	I2C_Read_Byte@RxData,c
  6651                           
  6652                           ;soft_i2c.c: 151: TRISC3 = 0; TRISC4 = 1; _delay((unsigned long)((4)*(64000000/4000000.0
      +                          ))); TRISC3 = 1;_delay((unsigned long)((4/2)*(64000000/4000000.0)));
  6653  00101A  9694               	bcf	3988,3,c	;volatile
  6654  00101C  8894               	bsf	3988,4,c	;volatile
  6655  00101E  0E15               	movlw	21
  6656  001020                     u4157:
  6657  001020  2EE8               	decfsz	wreg,f,c
  6658  001022  D7FE               	goto	u4157
  6659  001024  F000               	nop	
  6660  001026  8694               	bsf	3988,3,c	;volatile
  6661  001028  0E0A               	movlw	10
  6662  00102A                     u4167:
  6663  00102A  2EE8               	decfsz	wreg,f,c
  6664  00102C  D7FE               	goto	u4167
  6665  00102E  D000               	nop2		;nop
  6666                           
  6667                           ;soft_i2c.c: 152: RxData |= PORTCbits.RC4;
  6668  001030  A882               	btfss	3970,4,c	;volatile
  6669  001032  D002               	goto	u2080
  6670  001034  0E01               	movlw	1
  6671  001036  D001               	goto	u2086
  6672  001038                     u2080:
  6673  001038  0E00               	movlw	0
  6674  00103A                     u2086:
  6675  00103A  1225               	iorwf	I2C_Read_Byte@RxData,f,c
  6676                           
  6677                           ;soft_i2c.c: 154: return RxData;
  6678  00103C  5025               	movf	I2C_Read_Byte@RxData,w,c
  6679  00103E  0012               	return	
  6680  001040                     __end_of_I2C_Read_Byte:
  6681                           	opt stack 0
  6682                           tblptru	equ	0xFF8
  6683                           tblptrh	equ	0xFF7
  6684                           tblptrl	equ	0xFF6
  6685                           tablat	equ	0xFF5
  6686                           prodh	equ	0xFF4
  6687                           prodl	equ	0xFF3
  6688                           intcon	equ	0xFF2
  6689                           intcon2	equ	0xFF1
  6690                           postinc0	equ	0xFEE
  6691                           wreg	equ	0xFE8
  6692                           indf1	equ	0xFE7
  6693                           postdec1	equ	0xFE5
  6694                           fsr1h	equ	0xFE2
  6695                           fsr1l	equ	0xFE1
  6696                           indf2	equ	0xFDF
  6697                           postinc2	equ	0xFDE
  6698                           postdec2	equ	0xFDD
  6699                           fsr2h	equ	0xFDA
  6700                           fsr2l	equ	0xFD9
  6701                           status	equ	0xFD8
  6702                           
  6703 ;; *************** function _INTERRUPT_InterruptManager *****************
  6704 ;; Defined at:
  6705 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;		None
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;		None
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;Total ram usage:       14 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    3
  6726 ;; This function calls:
  6727 ;;		_EUSART1_Receive_ISR
  6728 ;;		_EUSART1_Transmit_ISR
  6729 ;; This function is called by:
  6730 ;;		Interrupt level 2
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	intcode
  6735  000008                     __pintcode:
  6736                           	opt stack 0
  6737  000008                     _INTERRUPT_InterruptManager:
  6738                           	opt stack 23
  6739                           
  6740                           ;incstack = 0
  6741  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6742  00000A  CFFA F017          	movff	pclath,??_INTERRUPT_InterruptManager
  6743  00000E  CFFB F018          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6744  000012  CFE9 F019          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  6745  000016  CFEA F01A          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  6746  00001A  CFE1 F01B          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  6747  00001E  CFE2 F01C          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  6748  000022  CFD9 F01D          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  6749  000026  CFDA F01E          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  6750  00002A  CFF3 F01F          	movff	prodl,??_INTERRUPT_InterruptManager+8
  6751  00002E  CFF4 F020          	movff	prodh,??_INTERRUPT_InterruptManager+9
  6752  000032  CFF6 F021          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  6753  000036  CFF7 F022          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  6754  00003A  CFF8 F023          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  6755  00003E  CFF5 F024          	movff	tablat,??_INTERRUPT_InterruptManager+13
  6756                           
  6757                           ;interrupt_manager.c: 77: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  6758  000042  B89D               	btfsc	3997,4,c	;volatile
  6759  000044  A89E               	btfss	3998,4,c	;volatile
  6760  000046  D003               	goto	i2l20
  6761                           
  6762                           ;interrupt_manager.c: 78: {
  6763                           ;interrupt_manager.c: 79: EUSART1_Transmit_ISR();
  6764  000048  ECD5  F00B         	call	_EUSART1_Transmit_ISR	;wreg free
  6765                           
  6766                           ;interrupt_manager.c: 80: }
  6767  00004C  D005               	goto	i2l24
  6768  00004E                     i2l20:
  6769                           
  6770                           ;interrupt_manager.c: 81: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  6771  00004E  BA9D               	btfsc	3997,5,c	;volatile
  6772  000050  AA9E               	btfss	3998,5,c	;volatile
  6773  000052  D002               	goto	i2l24
  6774                           
  6775                           ;interrupt_manager.c: 82: {
  6776                           ;interrupt_manager.c: 83: EUSART1_Receive_ISR();
  6777  000054  EC20  F008         	call	_EUSART1_Receive_ISR	;wreg free
  6778  000058                     i2l24:
  6779  000058  C024  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  6780  00005C  C023  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  6781  000060  C022  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  6782  000064  C021  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  6783  000068  C020  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  6784  00006C  C01F  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  6785  000070  C01E  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  6786  000074  C01D  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  6787  000078  C01C  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  6788  00007C  C01B  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  6789  000080  C01A  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  6790  000084  C019  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  6791  000088  C018  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6792  00008C  C017  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6793  000090  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6794  000092  0011               	retfie		f
  6795  000094                     __end_of_INTERRUPT_InterruptManager:
  6796                           	opt stack 0
  6797                           pclatu	equ	0xFFB
  6798                           pclath	equ	0xFFA
  6799                           tblptru	equ	0xFF8
  6800                           tblptrh	equ	0xFF7
  6801                           tblptrl	equ	0xFF6
  6802                           tablat	equ	0xFF5
  6803                           prodh	equ	0xFF4
  6804                           prodl	equ	0xFF3
  6805                           intcon	equ	0xFF2
  6806                           intcon2	equ	0xFF1
  6807                           postinc0	equ	0xFEE
  6808                           fsr0h	equ	0xFEA
  6809                           fsr0l	equ	0xFE9
  6810                           wreg	equ	0xFE8
  6811                           indf1	equ	0xFE7
  6812                           postdec1	equ	0xFE5
  6813                           fsr1h	equ	0xFE2
  6814                           fsr1l	equ	0xFE1
  6815                           indf2	equ	0xFDF
  6816                           postinc2	equ	0xFDE
  6817                           postdec2	equ	0xFDD
  6818                           fsr2h	equ	0xFDA
  6819                           fsr2l	equ	0xFD9
  6820                           status	equ	0xFD8
  6821                           
  6822 ;; *************** function _EUSART1_Transmit_ISR *****************
  6823 ;; Defined at:
  6824 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;		None
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;		None
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  1    wreg      void 
  6831 ;; Registers used:
  6832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 0/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6842 ;;Total ram usage:        0 bytes
  6843 ;; Hardware stack levels used:    1
  6844 ;; This function calls:
  6845 ;;		Nothing
  6846 ;; This function is called by:
  6847 ;;		_INTERRUPT_InterruptManager
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text35
  6852  0017AA                     __ptext35:
  6853                           	opt stack 0
  6854  0017AA                     _EUSART1_Transmit_ISR:
  6855                           	opt stack 25
  6856                           
  6857                           ;eusart1.c: 179: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  6858                           
  6859                           ;incstack = 0
  6860  0017AA  0E80               	movlw	128
  6861  0017AC  603A               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  6862  0017AE  D012               	goto	i2l122
  6863                           
  6864                           ;eusart1.c: 180: {
  6865                           ;eusart1.c: 181: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  6866  0017B0  5031               	movf	_eusart1TxTail,w,c
  6867  0017B2  0D01               	mullw	1
  6868  0017B4  0E00               	movlw	low _eusart1TxBuffer
  6869  0017B6  24F3               	addwf	prodl,w,c
  6870  0017B8  6ED9               	movwf	fsr2l,c
  6871  0017BA  0E01               	movlw	high _eusart1TxBuffer
  6872  0017BC  20F4               	addwfc	prodh,w,c
  6873  0017BE  6EDA               	movwf	fsr2h,c
  6874  0017C0  50DF               	movf	indf2,w,c
  6875  0017C2  6EAD               	movwf	4013,c	;volatile
  6876  0017C4  2A31               	incf	_eusart1TxTail,f,c
  6877                           
  6878                           ;eusart1.c: 182: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  6879  0017C6  0E7F               	movlw	127
  6880  0017C8  6431               	cpfsgt	_eusart1TxTail,c
  6881  0017CA  D002               	goto	i2l2705
  6882                           
  6883                           ;eusart1.c: 183: {
  6884                           ;eusart1.c: 184: eusart1TxTail = 0;
  6885  0017CC  0E00               	movlw	0
  6886  0017CE  6E31               	movwf	_eusart1TxTail,c
  6887  0017D0                     i2l2705:
  6888                           
  6889                           ;eusart1.c: 185: }
  6890                           ;eusart1.c: 186: eusart1TxBufferRemaining++;
  6891  0017D0  2A3A               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  6892                           
  6893                           ;eusart1.c: 187: }
  6894  0017D2  0012               	return	
  6895  0017D4                     i2l122:
  6896                           
  6897                           ;eusart1.c: 188: else
  6898                           ;eusart1.c: 189: {
  6899                           ;eusart1.c: 190: PIE1bits.TX1IE = 0;
  6900  0017D4  989D               	bcf	3997,4,c	;volatile
  6901  0017D6  0012               	return	
  6902  0017D8                     __end_of_EUSART1_Transmit_ISR:
  6903                           	opt stack 0
  6904                           pclatu	equ	0xFFB
  6905                           pclath	equ	0xFFA
  6906                           tblptru	equ	0xFF8
  6907                           tblptrh	equ	0xFF7
  6908                           tblptrl	equ	0xFF6
  6909                           tablat	equ	0xFF5
  6910                           prodh	equ	0xFF4
  6911                           prodl	equ	0xFF3
  6912                           intcon	equ	0xFF2
  6913                           intcon2	equ	0xFF1
  6914                           postinc0	equ	0xFEE
  6915                           fsr0h	equ	0xFEA
  6916                           fsr0l	equ	0xFE9
  6917                           wreg	equ	0xFE8
  6918                           indf1	equ	0xFE7
  6919                           postdec1	equ	0xFE5
  6920                           fsr1h	equ	0xFE2
  6921                           fsr1l	equ	0xFE1
  6922                           indf2	equ	0xFDF
  6923                           postinc2	equ	0xFDE
  6924                           postdec2	equ	0xFDD
  6925                           fsr2h	equ	0xFDA
  6926                           fsr2l	equ	0xFD9
  6927                           status	equ	0xFD8
  6928                           
  6929 ;; *************** function _EUSART1_Receive_ISR *****************
  6930 ;; Defined at:
  6931 ;;		line 194 in file "mcc_generated_files/eusart1.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;		None
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;  state           2   20[COMRAM] int 
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  1    wreg      void 
  6938 ;; Registers used:
  6939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6948 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6949 ;;Total ram usage:        3 bytes
  6950 ;; Hardware stack levels used:    1
  6951 ;; Hardware stack levels required when called:    2
  6952 ;; This function calls:
  6953 ;;		_EUSART1_Read
  6954 ;;		_strcmp
  6955 ;;		_strstr
  6956 ;; This function is called by:
  6957 ;;		_INTERRUPT_InterruptManager
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           	psect	text36
  6962  001040                     __ptext36:
  6963                           	opt stack 0
  6964  001040                     _EUSART1_Receive_ISR:
  6965                           	opt stack 23
  6966                           
  6967                           ;eusart1.c: 196: if(1 == RCSTA1bits.OERR)
  6968                           
  6969                           ;incstack = 0
  6970  001040  A2AB               	btfss	4011,1,c	;volatile
  6971  001042  D002               	goto	i2l2711
  6972                           
  6973                           ;eusart1.c: 197: {
  6974                           ;eusart1.c: 200: RCSTA1bits.CREN = 0;
  6975  001044  98AB               	bcf	4011,4,c	;volatile
  6976                           
  6977                           ;eusart1.c: 201: RCSTA1bits.CREN = 1;
  6978  001046  88AB               	bsf	4011,4,c	;volatile
  6979  001048                     i2l2711:
  6980                           
  6981                           ;eusart1.c: 202: }
  6982                           ;eusart1.c: 207: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6983  001048  502E               	movf	_eusart1RxHead,w,c
  6984  00104A  0D01               	mullw	1
  6985  00104C  0E00               	movlw	low _eusart1RxBuffer
  6986  00104E  24F3               	addwf	prodl,w,c
  6987  001050  6ED9               	movwf	fsr2l,c
  6988  001052  0E02               	movlw	high _eusart1RxBuffer
  6989  001054  20F4               	addwfc	prodh,w,c
  6990  001056  6EDA               	movwf	fsr2h,c
  6991  001058  CFAE FFDF          	movff	4014,indf2	;volatile
  6992  00105C  2A2E               	incf	_eusart1RxHead,f,c
  6993                           
  6994                           ;eusart1.c: 208: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6995  00105E  0E7F               	movlw	127
  6996  001060  642E               	cpfsgt	_eusart1RxHead,c
  6997  001062  D002               	goto	i2l2719
  6998                           
  6999                           ;eusart1.c: 209: {
  7000                           ;eusart1.c: 210: eusart1RxHead = 0;
  7001  001064  0E00               	movlw	0
  7002  001066  6E2E               	movwf	_eusart1RxHead,c
  7003  001068                     i2l2719:
  7004                           
  7005                           ;eusart1.c: 211: }
  7006                           ;eusart1.c: 212: eusart1RxCount++;
  7007  001068  2A2D               	incf	_eusart1RxCount,f,c	;volatile
  7008                           
  7009                           ;eusart1.c: 214: int state = 0;
  7010  00106A  0E00               	movlw	0
  7011  00106C  6E16               	movwf	EUSART1_Receive_ISR@state+1,c
  7012  00106E  0E00               	movlw	0
  7013  001070  6E15               	movwf	EUSART1_Receive_ISR@state,c
  7014                           
  7015                           ;eusart1.c: 216: if(ready)return;
  7016  001072  5033               	movf	_ready,w,c	;volatile
  7017  001074  A4D8               	btfss	status,2,c
  7018  001076  0012               	return	
  7019  001078  D01C               	goto	i2l2735
  7020  00107A                     i2l2727:
  7021                           
  7022                           ;eusart1.c: 219: line[index]=EUSART1_Read();
  7023  00107A  ECA4  F00B         	call	_EUSART1_Read	;wreg free
  7024  00107E  6E14               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  7025  001080  0E60               	movlw	low _line
  7026  001082  242B               	addwf	_index,w,c
  7027  001084  6ED9               	movwf	fsr2l,c
  7028  001086  0E00               	movlw	high _line
  7029  001088  202C               	addwfc	_index+1,w,c
  7030  00108A  6EDA               	movwf	fsr2h,c
  7031  00108C  C014  FFDF         	movff	??_EUSART1_Receive_ISR,indf2
  7032                           
  7033                           ;eusart1.c: 220: if (line[index] == '\n'){
  7034  001090  0E60               	movlw	low _line
  7035  001092  242B               	addwf	_index,w,c
  7036  001094  6ED9               	movwf	fsr2l,c
  7037  001096  0E00               	movlw	high _line
  7038  001098  202C               	addwfc	_index+1,w,c
  7039  00109A  6EDA               	movwf	fsr2h,c
  7040  00109C  0E0A               	movlw	10
  7041  00109E  18DE               	xorwf	postinc2,w,c
  7042  0010A0  A4D8               	btfss	status,2,c
  7043  0010A2  D005               	goto	i2l2733
  7044                           
  7045                           ;eusart1.c: 221: state=1;
  7046  0010A4  0E00               	movlw	0
  7047  0010A6  6E16               	movwf	EUSART1_Receive_ISR@state+1,c
  7048  0010A8  0E01               	movlw	1
  7049  0010AA  6E15               	movwf	EUSART1_Receive_ISR@state,c
  7050                           
  7051                           ;eusart1.c: 222: break;
  7052  0010AC  D005               	goto	i2l2737
  7053  0010AE                     i2l2733:
  7054                           
  7055                           ;eusart1.c: 223: }
  7056                           ;eusart1.c: 224: index++;
  7057  0010AE  4A2B               	infsnz	_index,f,c
  7058  0010B0  2A2C               	incf	_index+1,f,c
  7059  0010B2                     i2l2735:
  7060  0010B2  502D               	movf	_eusart1RxCount,w,c	;volatile
  7061  0010B4  A4D8               	btfss	status,2,c
  7062  0010B6  D7E1               	goto	i2l2727
  7063  0010B8                     i2l2737:
  7064                           
  7065                           ;eusart1.c: 225: }
  7066                           ;eusart1.c: 227: if(state==1){
  7067  0010B8  0415               	decf	EUSART1_Receive_ISR@state,w,c
  7068  0010BA  1016               	iorwf	EUSART1_Receive_ISR@state+1,w,c
  7069  0010BC  A4D8               	btfss	status,2,c
  7070  0010BE  0012               	return	
  7071                           
  7072                           ;eusart1.c: 228: line[--index] = '\0';
  7073  0010C0  062B               	decf	_index,f,c
  7074  0010C2  A0D8               	btfss	status,0,c
  7075  0010C4  062C               	decf	_index+1,f,c
  7076  0010C6  0E60               	movlw	low _line
  7077  0010C8  242B               	addwf	_index,w,c
  7078  0010CA  6ED9               	movwf	fsr2l,c
  7079  0010CC  0E00               	movlw	high _line
  7080  0010CE  202C               	addwfc	_index+1,w,c
  7081  0010D0  6EDA               	movwf	fsr2h,c
  7082  0010D2  0E00               	movlw	0
  7083  0010D4  6EDF               	movwf	indf2,c
  7084                           
  7085                           ;eusart1.c: 229: uartState=0;
  7086  0010D6  0E00               	movlw	0
  7087  0010D8  6E34               	movwf	_uartState,c	;volatile
  7088                           
  7089                           ;eusart1.c: 230: if(!strcmp("radio_err",line)){
  7090  0010DA  0EDC               	movlw	low STR_1
  7091  0010DC  6E01               	movwf	strcmp@s1,c
  7092  0010DE  0EFF               	movlw	high STR_1
  7093  0010E0  6E02               	movwf	strcmp@s1+1,c
  7094  0010E2  0E60               	movlw	low _line
  7095  0010E4  6E03               	movwf	strcmp@s2,c
  7096  0010E6  0E00               	movlw	high _line
  7097  0010E8  6E04               	movwf	strcmp@s2+1,c
  7098  0010EA  EC12  F009         	call	_strcmp	;wreg free
  7099  0010EE  5001               	movf	?_strcmp,w,c
  7100  0010F0  1002               	iorwf	?_strcmp+1,w,c
  7101  0010F2  A4D8               	btfss	status,2,c
  7102  0010F4  D002               	goto	i2l2747
  7103                           
  7104                           ;eusart1.c: 231: uartState=5;
  7105  0010F6  0E05               	movlw	5
  7106  0010F8  D02B               	goto	L12
  7107  0010FA                     i2l2747:
  7108  0010FA  0E60               	movlw	low _line
  7109  0010FC  6E10               	movwf	strstr@s1,c
  7110  0010FE  0E00               	movlw	high _line
  7111  001100  6E11               	movwf	strstr@s1+1,c
  7112  001102  0EE6               	movlw	low STR_2
  7113  001104  6E12               	movwf	strstr@s2,c
  7114  001106  0EFF               	movlw	high STR_2
  7115  001108  6E13               	movwf	strstr@s2+1,c
  7116  00110A  EC5A  F009         	call	_strstr	;wreg free
  7117  00110E  5010               	movf	?_strstr,w,c
  7118  001110  1011               	iorwf	?_strstr+1,w,c
  7119  001112  B4D8               	btfsc	status,2,c
  7120  001114  D00E               	goto	i2l2757
  7121                           
  7122                           ;eusart1.c: 233: if(line[10]=='4'&&line[11]=='3'){
  7123  001116  0E34               	movlw	52
  7124  001118  0100               	movlb	0	; () banked
  7125  00111A  196A               	xorwf	(_line+10)& (0+255),w,b	;volatile
  7126  00111C  A4D8               	btfss	status,2,c
  7127  00111E  D007               	goto	i2l2755
  7128                           
  7129                           ; BSR set to: 0
  7130  001120  0E33               	movlw	51
  7131  001122  0100               	movlb	0	; () banked
  7132  001124  196B               	xorwf	(_line+11)& (0+255),w,b	;volatile
  7133  001126  A4D8               	btfss	status,2,c
  7134  001128  D002               	goto	i2l2755
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;eusart1.c: 234: uartState=4;
  7138  00112A  0E04               	movlw	4
  7139  00112C  D011               	goto	L12
  7140  00112E                     i2l2755:
  7141                           
  7142                           ; BSR set to: 0
  7143                           ;eusart1.c: 236: uartState=3;
  7144  00112E  0E03               	movlw	3
  7145  001130  D00F               	goto	L12
  7146  001132                     i2l2757:
  7147  001132  0E60               	movlw	low _line
  7148  001134  6E01               	movwf	strcmp@s1,c
  7149  001136  0E00               	movlw	high _line
  7150  001138  6E02               	movwf	strcmp@s1+1,c
  7151  00113A  0ED0               	movlw	low STR_3
  7152  00113C  6E03               	movwf	strcmp@s2,c
  7153  00113E  0EFF               	movlw	high STR_3
  7154  001140  6E04               	movwf	strcmp@s2+1,c
  7155  001142  EC12  F009         	call	_strcmp	;wreg free
  7156  001146  5001               	movf	?_strcmp,w,c
  7157  001148  1002               	iorwf	?_strcmp+1,w,c
  7158  00114A  A4D8               	btfss	status,2,c
  7159  00114C  D003               	goto	i2l2761
  7160  00114E  D010               	goto	i2l2763
  7161  001150                     L12:
  7162  001150  6E34               	movwf	_uartState,c	;volatile
  7163                           
  7164                           ;eusart1.c: 240: } else if (!strcmp(line, "ok") != (0)) {
  7165  001152  D010               	goto	i2l138
  7166  001154                     i2l2761:
  7167  001154  0E60               	movlw	low _line
  7168  001156  6E01               	movwf	strcmp@s1,c
  7169  001158  0E00               	movlw	high _line
  7170  00115A  6E02               	movwf	strcmp@s1+1,c
  7171  00115C  0ED9               	movlw	low (STR_3+9)
  7172  00115E  6E03               	movwf	strcmp@s2,c
  7173  001160  0EFF               	movlw	high (STR_3+9)
  7174  001162  6E04               	movwf	strcmp@s2+1,c
  7175  001164  EC12  F009         	call	_strcmp	;wreg free
  7176  001168  5001               	movf	?_strcmp,w,c
  7177  00116A  1002               	iorwf	?_strcmp+1,w,c
  7178  00116C  A4D8               	btfss	status,2,c
  7179  00116E  D002               	goto	i2l138
  7180  001170                     i2l2763:
  7181                           
  7182                           ;eusart1.c: 241: uartState=1;
  7183  001170  0E01               	movlw	1
  7184  001172  D7EE               	goto	L12
  7185  001174                     i2l138:
  7186                           
  7187                           ;eusart1.c: 242: }
  7188                           ;eusart1.c: 243: index=0;
  7189  001174  0E00               	movlw	0
  7190  001176  6E2C               	movwf	_index+1,c
  7191  001178  0E00               	movlw	0
  7192  00117A  6E2B               	movwf	_index,c
  7193                           
  7194                           ;eusart1.c: 244: ready=1;
  7195  00117C  0E01               	movlw	1
  7196  00117E  6E33               	movwf	_ready,c	;volatile
  7197  001180  0012               	return	
  7198  001182                     __end_of_EUSART1_Receive_ISR:
  7199                           	opt stack 0
  7200                           pclatu	equ	0xFFB
  7201                           pclath	equ	0xFFA
  7202                           tblptru	equ	0xFF8
  7203                           tblptrh	equ	0xFF7
  7204                           tblptrl	equ	0xFF6
  7205                           tablat	equ	0xFF5
  7206                           prodh	equ	0xFF4
  7207                           prodl	equ	0xFF3
  7208                           intcon	equ	0xFF2
  7209                           intcon2	equ	0xFF1
  7210                           postinc0	equ	0xFEE
  7211                           fsr0h	equ	0xFEA
  7212                           fsr0l	equ	0xFE9
  7213                           wreg	equ	0xFE8
  7214                           indf1	equ	0xFE7
  7215                           postdec1	equ	0xFE5
  7216                           fsr1h	equ	0xFE2
  7217                           fsr1l	equ	0xFE1
  7218                           indf2	equ	0xFDF
  7219                           postinc2	equ	0xFDE
  7220                           postdec2	equ	0xFDD
  7221                           fsr2h	equ	0xFDA
  7222                           fsr2l	equ	0xFD9
  7223                           status	equ	0xFD8
  7224                           
  7225 ;; *************** function _strstr *****************
  7226 ;; Defined at:
  7227 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strstr.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  7230 ;;		 -> NULL(0), line(128), 
  7231 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  7232 ;;		 -> STR_2(9), 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;		None
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  2   15[COMRAM] PTR unsigned char 
  7237 ;; Registers used:
  7238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;Total ram usage:        4 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:    1
  7251 ;; This function calls:
  7252 ;;		_strchr
  7253 ;;		_strlen
  7254 ;;		_strncmp
  7255 ;; This function is called by:
  7256 ;;		_EUSART1_Receive_ISR
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260                           	psect	text37
  7261  0012B4                     __ptext37:
  7262                           	opt stack 0
  7263  0012B4                     _strstr:
  7264                           	opt stack 23
  7265                           
  7266                           ;incstack = 0
  7267  0012B4  D032               	goto	i2l2531
  7268  0012B6                     i2l2523:
  7269  0012B6  C010  F007         	movff	strstr@s1,strncmp@s1
  7270  0012BA  C011  F008         	movff	strstr@s1+1,strncmp@s1+1
  7271  0012BE  C012  F009         	movff	strstr@s2,strncmp@s2
  7272  0012C2  C013  F00A         	movff	strstr@s2+1,strncmp@s2+1
  7273  0012C6  C012  F001         	movff	strstr@s2,strlen@s
  7274  0012CA  C013  F002         	movff	strstr@s2+1,strlen@s+1
  7275  0012CE  ECFE  F00A         	call	_strlen	;wreg free
  7276  0012D2  C001  F00B         	movff	?_strlen,strncmp@len
  7277  0012D6  C002  F00C         	movff	?_strlen+1,strncmp@len+1
  7278  0012DA  EC9D  F009         	call	_strncmp	;wreg free
  7279  0012DE  5007               	movf	?_strncmp,w,c
  7280  0012E0  1008               	iorwf	?_strncmp+1,w,c
  7281  0012E2  A4D8               	btfss	status,2,c
  7282  0012E4  D005               	goto	i2l2529
  7283  0012E6  C010  F010         	movff	strstr@s1,?_strstr
  7284  0012EA  C011  F011         	movff	strstr@s1+1,?_strstr+1
  7285  0012EE  0012               	return	
  7286  0012F0                     i2l2529:
  7287  0012F0  0E01               	movlw	1
  7288  0012F2  2410               	addwf	strstr@s1,w,c
  7289  0012F4  6E01               	movwf	strchr@ptr,c
  7290  0012F6  0E00               	movlw	0
  7291  0012F8  2011               	addwfc	strstr@s1+1,w,c
  7292  0012FA  6E02               	movwf	strchr@ptr+1,c
  7293  0012FC  C012  FFF6         	movff	strstr@s2,tblptrl
  7294  001300  C013  FFF7         	movff	strstr@s2+1,tblptrh
  7295  001304                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7296  001304  6AF8               	clrf	tblptru,c
  7297  001306                     	endif
  7298  001306                     	if	0	;tblptru may be non-zero
  7299  001306                     	endif
  7300  001306  0008               	tblrd		*
  7301  001308  50F5               	movf	tablat,w,c
  7302  00130A  6E03               	movwf	strchr@chr,c
  7303  00130C  6A04               	clrf	strchr@chr+1,c
  7304  00130E  EC3B  F00B         	call	_strchr	;wreg free
  7305  001312  C001  F010         	movff	?_strchr,strstr@s1
  7306  001316  C002  F011         	movff	?_strchr+1,strstr@s1+1
  7307  00131A                     i2l2531:
  7308  00131A  5010               	movf	strstr@s1,w,c
  7309  00131C  1011               	iorwf	strstr@s1+1,w,c
  7310  00131E  B4D8               	btfsc	status,2,c
  7311  001320  D007               	goto	i2l2535
  7312  001322  C010  FFD9         	movff	strstr@s1,fsr2l
  7313  001326  C011  FFDA         	movff	strstr@s1+1,fsr2h
  7314  00132A  50DF               	movf	indf2,w,c
  7315  00132C  A4D8               	btfss	status,2,c
  7316  00132E  D7C3               	goto	i2l2523
  7317  001330                     i2l2535:
  7318  001330  0E00               	movlw	0
  7319  001332  6E10               	movwf	?_strstr,c
  7320  001334  0E00               	movlw	0
  7321  001336  6E11               	movwf	?_strstr+1,c
  7322  001338  0012               	return	
  7323  00133A                     __end_of_strstr:
  7324                           	opt stack 0
  7325                           pclatu	equ	0xFFB
  7326                           pclath	equ	0xFFA
  7327                           tblptru	equ	0xFF8
  7328                           tblptrh	equ	0xFF7
  7329                           tblptrl	equ	0xFF6
  7330                           tablat	equ	0xFF5
  7331                           prodh	equ	0xFF4
  7332                           prodl	equ	0xFF3
  7333                           intcon	equ	0xFF2
  7334                           intcon2	equ	0xFF1
  7335                           postinc0	equ	0xFEE
  7336                           fsr0h	equ	0xFEA
  7337                           fsr0l	equ	0xFE9
  7338                           wreg	equ	0xFE8
  7339                           indf1	equ	0xFE7
  7340                           postdec1	equ	0xFE5
  7341                           fsr1h	equ	0xFE2
  7342                           fsr1l	equ	0xFE1
  7343                           indf2	equ	0xFDF
  7344                           postinc2	equ	0xFDE
  7345                           postdec2	equ	0xFDD
  7346                           fsr2h	equ	0xFDA
  7347                           fsr2l	equ	0xFD9
  7348                           status	equ	0xFD8
  7349                           
  7350 ;; *************** function _strncmp *****************
  7351 ;; Defined at:
  7352 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strncmp.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  s1              2    6[COMRAM] PTR const unsigned char 
  7355 ;;		 -> NULL(0), line(128), 
  7356 ;;  s2              2    8[COMRAM] PTR const unsigned char 
  7357 ;;		 -> STR_2(9), 
  7358 ;;  len             2   10[COMRAM] unsigned int 
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;		None
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  2    6[COMRAM] int 
  7363 ;; Registers used:
  7364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7370 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7374 ;;Total ram usage:        9 bytes
  7375 ;; Hardware stack levels used:    1
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_strstr
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text38
  7384  00133A                     __ptext38:
  7385                           	opt stack 0
  7386  00133A                     _strncmp:
  7387                           	opt stack 23
  7388                           
  7389                           ;incstack = 0
  7390  00133A  D035               	goto	i2l2433
  7391  00133C                     i2l2423:
  7392  00133C  C007  FFD9         	movff	strncmp@s1,fsr2l
  7393  001340  C008  FFDA         	movff	strncmp@s1+1,fsr2h
  7394  001344  50DF               	movf	indf2,w,c
  7395  001346  B4D8               	btfsc	status,2,c
  7396  001348  D010               	goto	i2l2427
  7397  00134A  C007  FFD9         	movff	strncmp@s1,fsr2l
  7398  00134E  C008  FFDA         	movff	strncmp@s1+1,fsr2h
  7399  001352  50DF               	movf	indf2,w,c
  7400  001354  6E0D               	movwf	??_strncmp& (0+255),c
  7401  001356  C009  FFF6         	movff	strncmp@s2,tblptrl
  7402  00135A  C00A  FFF7         	movff	strncmp@s2+1,tblptrh
  7403  00135E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7404  00135E  6AF8               	clrf	tblptru,c
  7405  001360                     	endif
  7406  001360                     	if	0	;tblptru may be non-zero
  7407  001360                     	endif
  7408  001360  0008               	tblrd		*
  7409  001362  50F5               	movf	tablat,w,c
  7410  001364  180D               	xorwf	??_strncmp,w,c
  7411  001366  B4D8               	btfsc	status,2,c
  7412  001368  D01A               	goto	i2l2431
  7413  00136A                     i2l2427:
  7414  00136A  C009  FFF6         	movff	strncmp@s2,tblptrl
  7415  00136E  C00A  FFF7         	movff	strncmp@s2+1,tblptrh
  7416  001372                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7417  001372  6AF8               	clrf	tblptru,c
  7418  001374                     	endif
  7419  001374                     	if	0	;tblptru may be non-zero
  7420  001374                     	endif
  7421  001374  0008               	tblrd		*
  7422  001376  50F5               	movf	tablat,w,c
  7423  001378  6E0D               	movwf	??_strncmp& (0+255),c
  7424  00137A  6A0E               	clrf	(??_strncmp+1)& (0+255),c
  7425  00137C  1E0D               	comf	??_strncmp,f,c
  7426  00137E  1E0E               	comf	??_strncmp+1,f,c
  7427  001380  4A0D               	infsnz	??_strncmp,f,c
  7428  001382  2A0E               	incf	??_strncmp+1,f,c
  7429  001384  C007  FFD9         	movff	strncmp@s1,fsr2l
  7430  001388  C008  FFDA         	movff	strncmp@s1+1,fsr2h
  7431  00138C  50DF               	movf	indf2,w,c
  7432  00138E  6E0F               	movwf	(??_strncmp+2)& (0+255),c
  7433  001390  500F               	movf	??_strncmp+2,w,c
  7434  001392  240D               	addwf	??_strncmp,w,c
  7435  001394  6E07               	movwf	?_strncmp,c
  7436  001396  0E00               	movlw	0
  7437  001398  200E               	addwfc	??_strncmp+1,w,c
  7438  00139A  6E08               	movwf	?_strncmp+1,c
  7439  00139C  0012               	return	
  7440  00139E                     i2l2431:
  7441  00139E  4A07               	infsnz	strncmp@s1,f,c
  7442  0013A0  2A08               	incf	strncmp@s1+1,f,c
  7443  0013A2  4A09               	infsnz	strncmp@s2,f,c
  7444  0013A4  2A0A               	incf	strncmp@s2+1,f,c
  7445  0013A6                     i2l2433:
  7446  0013A6  060B               	decf	strncmp@len,f,c
  7447  0013A8  A0D8               	btfss	status,0,c
  7448  0013AA  060C               	decf	strncmp@len+1,f,c
  7449  0013AC  280B               	incf	strncmp@len,w,c
  7450  0013AE  E1C6               	bnz	i2l2423
  7451  0013B0  280C               	incf	strncmp@len+1,w,c
  7452  0013B2  A4D8               	btfss	status,2,c
  7453  0013B4  D7C3               	goto	i2l2423
  7454  0013B6  0E00               	movlw	0
  7455  0013B8  6E08               	movwf	?_strncmp+1,c
  7456  0013BA  0E00               	movlw	0
  7457  0013BC  6E07               	movwf	?_strncmp,c
  7458  0013BE  0012               	return	
  7459  0013C0                     __end_of_strncmp:
  7460                           	opt stack 0
  7461                           pclatu	equ	0xFFB
  7462                           pclath	equ	0xFFA
  7463                           tblptru	equ	0xFF8
  7464                           tblptrh	equ	0xFF7
  7465                           tblptrl	equ	0xFF6
  7466                           tablat	equ	0xFF5
  7467                           prodh	equ	0xFF4
  7468                           prodl	equ	0xFF3
  7469                           intcon	equ	0xFF2
  7470                           intcon2	equ	0xFF1
  7471                           postinc0	equ	0xFEE
  7472                           fsr0h	equ	0xFEA
  7473                           fsr0l	equ	0xFE9
  7474                           wreg	equ	0xFE8
  7475                           indf1	equ	0xFE7
  7476                           postdec1	equ	0xFE5
  7477                           fsr1h	equ	0xFE2
  7478                           fsr1l	equ	0xFE1
  7479                           indf2	equ	0xFDF
  7480                           postinc2	equ	0xFDE
  7481                           postdec2	equ	0xFDD
  7482                           fsr2h	equ	0xFDA
  7483                           fsr2l	equ	0xFD9
  7484                           status	equ	0xFD8
  7485                           
  7486 ;; *************** function _strlen *****************
  7487 ;; Defined at:
  7488 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strlen.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7491 ;;		 -> STR_2(9), 
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;  cp              2    4[COMRAM] PTR const unsigned char 
  7494 ;;		 -> STR_2(9), 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  2    0[COMRAM] unsigned int 
  7497 ;; Registers used:
  7498 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7506 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7507 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7508 ;;Total ram usage:        6 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; This function calls:
  7511 ;;		Nothing
  7512 ;; This function is called by:
  7513 ;;		_strstr
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           	psect	text39
  7518  0015FC                     __ptext39:
  7519                           	opt stack 0
  7520  0015FC                     _strlen:
  7521                           	opt stack 23
  7522                           
  7523                           ;incstack = 0
  7524  0015FC  C001  F005         	movff	strlen@s,strlen@cp
  7525  001600  C002  F006         	movff	strlen@s+1,strlen@cp+1
  7526  001604  D002               	goto	i2l2415
  7527  001606                     i2l2413:
  7528  001606  4A05               	infsnz	strlen@cp,f,c
  7529  001608  2A06               	incf	strlen@cp+1,f,c
  7530  00160A                     i2l2415:
  7531  00160A  C005  FFF6         	movff	strlen@cp,tblptrl
  7532  00160E  C006  FFF7         	movff	strlen@cp+1,tblptrh
  7533  001612                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7534  001612  6AF8               	clrf	tblptru,c
  7535  001614                     	endif
  7536  001614                     	if	0	;tblptru may be non-zero
  7537  001614                     	endif
  7538  001614  0008               	tblrd		*
  7539  001616  50F5               	movf	tablat,w,c
  7540  001618  0900               	iorlw	0
  7541  00161A  A4D8               	btfss	status,2,c
  7542  00161C  D7F4               	goto	i2l2413
  7543  00161E  C001  F003         	movff	strlen@s,??_strlen
  7544  001622  C002  F004         	movff	strlen@s+1,??_strlen+1
  7545  001626  1E03               	comf	??_strlen,f,c
  7546  001628  1E04               	comf	??_strlen+1,f,c
  7547  00162A  4A03               	infsnz	??_strlen,f,c
  7548  00162C  2A04               	incf	??_strlen+1,f,c
  7549  00162E  5005               	movf	strlen@cp,w,c
  7550  001630  2403               	addwf	??_strlen,w,c
  7551  001632  6E01               	movwf	?_strlen,c
  7552  001634  5006               	movf	strlen@cp+1,w,c
  7553  001636  2004               	addwfc	??_strlen+1,w,c
  7554  001638  6E02               	movwf	?_strlen+1,c
  7555  00163A  0012               	return	
  7556  00163C                     __end_of_strlen:
  7557                           	opt stack 0
  7558                           pclatu	equ	0xFFB
  7559                           pclath	equ	0xFFA
  7560                           tblptru	equ	0xFF8
  7561                           tblptrh	equ	0xFF7
  7562                           tblptrl	equ	0xFF6
  7563                           tablat	equ	0xFF5
  7564                           prodh	equ	0xFF4
  7565                           prodl	equ	0xFF3
  7566                           intcon	equ	0xFF2
  7567                           intcon2	equ	0xFF1
  7568                           postinc0	equ	0xFEE
  7569                           fsr0h	equ	0xFEA
  7570                           fsr0l	equ	0xFE9
  7571                           wreg	equ	0xFE8
  7572                           indf1	equ	0xFE7
  7573                           postdec1	equ	0xFE5
  7574                           fsr1h	equ	0xFE2
  7575                           fsr1l	equ	0xFE1
  7576                           indf2	equ	0xFDF
  7577                           postinc2	equ	0xFDE
  7578                           postdec2	equ	0xFDD
  7579                           fsr2h	equ	0xFDA
  7580                           fsr2l	equ	0xFD9
  7581                           status	equ	0xFD8
  7582                           
  7583 ;; *************** function _strchr *****************
  7584 ;; Defined at:
  7585 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strchr.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
  7588 ;;		 -> NULL(0), line(128), 
  7589 ;;  chr             2    2[COMRAM] int 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  2    0[COMRAM] PTR unsigned char 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7605 ;;Total ram usage:        5 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; This function calls:
  7608 ;;		Nothing
  7609 ;; This function is called by:
  7610 ;;		_strstr
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           	psect	text40
  7615  001676                     __ptext40:
  7616                           	opt stack 0
  7617  001676                     _strchr:
  7618                           	opt stack 23
  7619  001676  C001  FFD9         	movff	strchr@ptr,fsr2l
  7620  00167A  C002  FFDA         	movff	strchr@ptr+1,fsr2h
  7621  00167E  5003               	movf	strchr@chr,w,c
  7622  001680  18DE               	xorwf	postinc2,w,c
  7623  001682  A4D8               	btfss	status,2,c
  7624  001684  D005               	goto	i2l2445
  7625  001686  C001  F001         	movff	strchr@ptr,?_strchr
  7626  00168A  C002  F002         	movff	strchr@ptr+1,?_strchr+1
  7627  00168E  0012               	return	
  7628  001690                     i2l2445:
  7629  001690  C001  FFD9         	movff	strchr@ptr,fsr2l
  7630  001694  C002  FFDA         	movff	strchr@ptr+1,fsr2h
  7631  001698  4A01               	infsnz	strchr@ptr,f,c
  7632  00169A  2A02               	incf	strchr@ptr+1,f,c
  7633  00169C  50DF               	movf	indf2,w,c
  7634  00169E  A4D8               	btfss	status,2,c
  7635  0016A0  D7EA               	goto	i2l2439
  7636  0016A2  0E00               	movlw	0
  7637  0016A4  6E01               	movwf	?_strchr,c
  7638  0016A6  0E00               	movlw	0
  7639  0016A8  6E02               	movwf	?_strchr+1,c
  7640  0016AA  0012               	return	
  7641  0016AC                     __end_of_strchr:
  7642                           	opt stack 0
  7643                           pclatu	equ	0xFFB
  7644                           pclath	equ	0xFFA
  7645                           tblptru	equ	0xFF8
  7646                           tblptrh	equ	0xFF7
  7647                           tblptrl	equ	0xFF6
  7648                           tablat	equ	0xFF5
  7649                           prodh	equ	0xFF4
  7650                           prodl	equ	0xFF3
  7651                           intcon	equ	0xFF2
  7652                           intcon2	equ	0xFF1
  7653                           postinc0	equ	0xFEE
  7654                           fsr0h	equ	0xFEA
  7655                           fsr0l	equ	0xFE9
  7656                           wreg	equ	0xFE8
  7657                           indf1	equ	0xFE7
  7658                           postdec1	equ	0xFE5
  7659                           fsr1h	equ	0xFE2
  7660                           fsr1l	equ	0xFE1
  7661                           indf2	equ	0xFDF
  7662                           postinc2	equ	0xFDE
  7663                           postdec2	equ	0xFDD
  7664                           fsr2h	equ	0xFDA
  7665                           fsr2l	equ	0xFD9
  7666                           status	equ	0xFD8
  7667                           
  7668 ;; *************** function _strcmp *****************
  7669 ;; Defined at:
  7670 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcmp.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  7673 ;;		 -> STR_1(10), line(128), 
  7674 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  7675 ;;		 -> STR_4(3), STR_3(12), line(128), 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;  r               1    5[COMRAM] char 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  2    0[COMRAM] int 
  7680 ;; Registers used:
  7681 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7687 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7690 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7691 ;;Total ram usage:        6 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; This function calls:
  7694 ;;		Nothing
  7695 ;; This function is called by:
  7696 ;;		_EUSART1_Receive_ISR
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           	psect	text41
  7701  001224                     __ptext41:
  7702                           	opt stack 0
  7703  001224                     _strcmp:
  7704                           	opt stack 24
  7705                           
  7706                           ;incstack = 0
  7707  001224  D004               	goto	i2l2513
  7708  001226                     i2l2511:
  7709  001226  4A01               	infsnz	strcmp@s1,f,c
  7710  001228  2A02               	incf	strcmp@s1+1,f,c
  7711  00122A  4A03               	infsnz	strcmp@s2,f,c
  7712  00122C  2A04               	incf	strcmp@s2+1,f,c
  7713  00122E                     i2l2513:
  7714  00122E  C001  FFF6         	movff	strcmp@s1,tblptrl
  7715  001232  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  7716  001236  0E00               	movlw	low (__mediumconst shr (0+16))
  7717  001238  6EF8               	movwf	tblptru,c
  7718  00123A  0E0F               	movlw	(high __ramtop+-1)
  7719  00123C  64F7               	cpfsgt	tblptrh,c
  7720  00123E  D003               	bra	i2u138_47
  7721  001240  0008               	tblrd		*
  7722  001242  50F5               	movf	tablat,w,c
  7723  001244  D005               	bra	i2u138_40
  7724  001246                     i2u138_47:
  7725  001246  CFF6 FFE1          	movff	tblptrl,fsr1l
  7726  00124A  CFF7 FFE2          	movff	tblptrh,fsr1h
  7727  00124E  50E7               	movf	indf1,w,c
  7728  001250                     i2u138_40:
  7729  001250  6E05               	movwf	??_strcmp& (0+255),c
  7730  001252  C003  FFF6         	movff	strcmp@s2,tblptrl
  7731  001256  C004  FFF7         	movff	strcmp@s2+1,tblptrh
  7732  00125A  0E00               	movlw	low (__mediumconst shr (0+16))
  7733  00125C  6EF8               	movwf	tblptru,c
  7734  00125E  0E0F               	movlw	(high __ramtop+-1)
  7735  001260  64F7               	cpfsgt	tblptrh,c
  7736  001262  D003               	bra	i2u139_47
  7737  001264  0008               	tblrd		*
  7738  001266  50F5               	movf	tablat,w,c
  7739  001268  D005               	bra	i2u139_40
  7740  00126A                     i2u139_47:
  7741  00126A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7742  00126E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7743  001272  50E7               	movf	indf1,w,c
  7744  001274                     i2u139_40:
  7745  001274  0800               	sublw	0
  7746  001276  2405               	addwf	??_strcmp,w,c
  7747  001278  6E06               	movwf	strcmp@r,c
  7748  00127A  5006               	movf	strcmp@r,w,c
  7749  00127C  A4D8               	btfss	status,2,c
  7750  00127E  D014               	goto	i2l2517
  7751  001280  C001  FFF6         	movff	strcmp@s1,tblptrl
  7752  001284  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  7753  001288  0E00               	movlw	low (__mediumconst shr (0+16))
  7754  00128A  6EF8               	movwf	tblptru,c
  7755  00128C  0E0F               	movlw	(high __ramtop+-1)
  7756  00128E  64F7               	cpfsgt	tblptrh,c
  7757  001290  D003               	bra	i2u141_47
  7758  001292  0008               	tblrd		*
  7759  001294  50F5               	movf	tablat,w,c
  7760  001296  D005               	bra	i2u141_40
  7761  001298                     i2u141_47:
  7762  001298  CFF6 FFE1          	movff	tblptrl,fsr1l
  7763  00129C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7764  0012A0  50E7               	movf	indf1,w,c
  7765  0012A2                     i2u141_40:
  7766  0012A2  0900               	iorlw	0
  7767  0012A4  A4D8               	btfss	status,2,c
  7768  0012A6  D7BF               	goto	i2l2511
  7769  0012A8                     i2l2517:
  7770  0012A8  5006               	movf	strcmp@r,w,c
  7771  0012AA  6E01               	movwf	?_strcmp,c
  7772  0012AC  6A02               	clrf	?_strcmp+1,c
  7773  0012AE  BE01               	btfsc	?_strcmp,7,c
  7774  0012B0  0602               	decf	?_strcmp+1,f,c
  7775  0012B2  0012               	return	
  7776  0012B4                     __end_of_strcmp:
  7777                           	opt stack 0
  7778                           pclatu	equ	0xFFB
  7779                           pclath	equ	0xFFA
  7780                           tblptru	equ	0xFF8
  7781                           tblptrh	equ	0xFF7
  7782                           tblptrl	equ	0xFF6
  7783                           tablat	equ	0xFF5
  7784                           prodh	equ	0xFF4
  7785                           prodl	equ	0xFF3
  7786                           intcon	equ	0xFF2
  7787                           intcon2	equ	0xFF1
  7788                           postinc0	equ	0xFEE
  7789                           fsr0h	equ	0xFEA
  7790                           fsr0l	equ	0xFE9
  7791                           wreg	equ	0xFE8
  7792                           indf1	equ	0xFE7
  7793                           postdec1	equ	0xFE5
  7794                           fsr1h	equ	0xFE2
  7795                           fsr1l	equ	0xFE1
  7796                           indf2	equ	0xFDF
  7797                           postinc2	equ	0xFDE
  7798                           postdec2	equ	0xFDD
  7799                           fsr2h	equ	0xFDA
  7800                           fsr2l	equ	0xFD9
  7801                           status	equ	0xFD8
  7802                           
  7803 ;; *************** function _EUSART1_Read *****************
  7804 ;; Defined at:
  7805 ;;		line 121 in file "mcc_generated_files/eusart1.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;		None
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  readValue       1    0[COMRAM] unsigned char 
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  1    wreg      unsigned char 
  7812 ;; Registers used:
  7813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7823 ;;Total ram usage:        1 bytes
  7824 ;; Hardware stack levels used:    1
  7825 ;; This function calls:
  7826 ;;		Nothing
  7827 ;; This function is called by:
  7828 ;;		_EUSART1_Receive_ISR
  7829 ;;		_getch
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           	psect	text42
  7834  001748                     __ptext42:
  7835                           	opt stack 0
  7836  001748                     _EUSART1_Read:
  7837                           	opt stack 24
  7838                           
  7839                           ;eusart1.c: 123: uint8_t readValue = 0;
  7840                           
  7841                           ;incstack = 0
  7842  001748  0E00               	movlw	0
  7843  00174A  6E01               	movwf	EUSART1_Read@readValue,c
  7844  00174C                     i2l2491:
  7845  00174C  502D               	movf	_eusart1RxCount,w,c	;volatile
  7846  00174E  B4D8               	btfsc	status,2,c
  7847  001750  D7FD               	goto	i2l2491
  7848                           
  7849                           ;eusart1.c: 127: }
  7850                           ;eusart1.c: 129: PIE1bits.RC1IE = 0;
  7851  001752  9A9D               	bcf	3997,5,c	;volatile
  7852                           
  7853                           ;eusart1.c: 131: readValue = eusart1RxBuffer[eusart1RxTail++];
  7854  001754  502F               	movf	_eusart1RxTail,w,c
  7855  001756  0D01               	mullw	1
  7856  001758  0E00               	movlw	low _eusart1RxBuffer
  7857  00175A  24F3               	addwf	prodl,w,c
  7858  00175C  6ED9               	movwf	fsr2l,c
  7859  00175E  0E02               	movlw	high _eusart1RxBuffer
  7860  001760  20F4               	addwfc	prodh,w,c
  7861  001762  6EDA               	movwf	fsr2h,c
  7862  001764  50DF               	movf	indf2,w,c
  7863  001766  6E01               	movwf	EUSART1_Read@readValue,c
  7864  001768  2A2F               	incf	_eusart1RxTail,f,c
  7865                           
  7866                           ;eusart1.c: 132: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  7867  00176A  0E7F               	movlw	127
  7868  00176C  642F               	cpfsgt	_eusart1RxTail,c
  7869  00176E  D002               	goto	i2l2501
  7870                           
  7871                           ;eusart1.c: 133: {
  7872                           ;eusart1.c: 134: eusart1RxTail = 0;
  7873  001770  0E00               	movlw	0
  7874  001772  6E2F               	movwf	_eusart1RxTail,c
  7875  001774                     i2l2501:
  7876                           
  7877                           ;eusart1.c: 135: }
  7878                           ;eusart1.c: 136: eusart1RxCount--;
  7879  001774  062D               	decf	_eusart1RxCount,f,c	;volatile
  7880                           
  7881                           ;eusart1.c: 137: PIE1bits.RC1IE = 1;
  7882  001776  8A9D               	bsf	3997,5,c	;volatile
  7883                           
  7884                           ;eusart1.c: 139: return readValue;
  7885  001778  5001               	movf	EUSART1_Read@readValue,w,c
  7886  00177A  0012               	return	
  7887  00177C                     __end_of_EUSART1_Read:
  7888                           	opt stack 0
  7889                           pclatu	equ	0xFFB
  7890                           pclath	equ	0xFFA
  7891                           tblptru	equ	0xFF8
  7892                           tblptrh	equ	0xFF7
  7893                           tblptrl	equ	0xFF6
  7894                           tablat	equ	0xFF5
  7895                           prodh	equ	0xFF4
  7896                           prodl	equ	0xFF3
  7897                           intcon	equ	0xFF2
  7898                           intcon2	equ	0xFF1
  7899                           postinc0	equ	0xFEE
  7900                           fsr0h	equ	0xFEA
  7901                           fsr0l	equ	0xFE9
  7902                           wreg	equ	0xFE8
  7903                           indf1	equ	0xFE7
  7904                           postdec1	equ	0xFE5
  7905                           fsr1h	equ	0xFE2
  7906                           fsr1l	equ	0xFE1
  7907                           indf2	equ	0xFDF
  7908                           postinc2	equ	0xFDE
  7909                           postdec2	equ	0xFDD
  7910                           fsr2h	equ	0xFDA
  7911                           fsr2l	equ	0xFD9
  7912                           status	equ	0xFD8
  7913                           pclatu	equ	0xFFB
  7914                           pclath	equ	0xFFA
  7915                           tblptru	equ	0xFF8
  7916                           tblptrh	equ	0xFF7
  7917                           tblptrl	equ	0xFF6
  7918                           tablat	equ	0xFF5
  7919                           prodh	equ	0xFF4
  7920                           prodl	equ	0xFF3
  7921                           intcon	equ	0xFF2
  7922                           intcon2	equ	0xFF1
  7923                           postinc0	equ	0xFEE
  7924                           fsr0h	equ	0xFEA
  7925                           fsr0l	equ	0xFE9
  7926                           wreg	equ	0xFE8
  7927                           indf1	equ	0xFE7
  7928                           postdec1	equ	0xFE5
  7929                           fsr1h	equ	0xFE2
  7930                           fsr1l	equ	0xFE1
  7931                           indf2	equ	0xFDF
  7932                           postinc2	equ	0xFDE
  7933                           postdec2	equ	0xFDD
  7934                           fsr2h	equ	0xFDA
  7935                           fsr2l	equ	0xFD9
  7936                           status	equ	0xFD8
  7937                           
  7938                           	psect	rparam
  7939  0000                     pclatu	equ	0xFFB
  7940                           pclath	equ	0xFFA
  7941                           tblptru	equ	0xFF8
  7942                           tblptrh	equ	0xFF7
  7943                           tblptrl	equ	0xFF6
  7944                           tablat	equ	0xFF5
  7945                           prodh	equ	0xFF4
  7946                           prodl	equ	0xFF3
  7947                           intcon	equ	0xFF2
  7948                           intcon2	equ	0xFF1
  7949                           postinc0	equ	0xFEE
  7950                           fsr0h	equ	0xFEA
  7951                           fsr0l	equ	0xFE9
  7952                           wreg	equ	0xFE8
  7953                           indf1	equ	0xFE7
  7954                           postdec1	equ	0xFE5
  7955                           fsr1h	equ	0xFE2
  7956                           fsr1l	equ	0xFE1
  7957                           indf2	equ	0xFDF
  7958                           postinc2	equ	0xFDE
  7959                           postdec2	equ	0xFDD
  7960                           fsr2h	equ	0xFDA
  7961                           fsr2l	equ	0xFD9
  7962                           status	equ	0xFD8
  7963                           
  7964                           	psect	temp
  7965  00003B                     btemp:
  7966                           	opt stack 0
  7967  00003B                     	ds	1
  7968  0000                     int$flags	set	btemp
  7969                           pclatu	equ	0xFFB
  7970                           pclath	equ	0xFFA
  7971                           tblptru	equ	0xFF8
  7972                           tblptrh	equ	0xFF7
  7973                           tblptrl	equ	0xFF6
  7974                           tablat	equ	0xFF5
  7975                           prodh	equ	0xFF4
  7976                           prodl	equ	0xFF3
  7977                           intcon	equ	0xFF2
  7978                           intcon2	equ	0xFF1
  7979                           postinc0	equ	0xFEE
  7980                           fsr0h	equ	0xFEA
  7981                           fsr0l	equ	0xFE9
  7982                           wreg	equ	0xFE8
  7983                           indf1	equ	0xFE7
  7984                           postdec1	equ	0xFE5
  7985                           fsr1h	equ	0xFE2
  7986                           fsr1l	equ	0xFE1
  7987                           indf2	equ	0xFDF
  7988                           postinc2	equ	0xFDE
  7989                           postdec2	equ	0xFDD
  7990                           fsr2h	equ	0xFDA
  7991                           fsr2l	equ	0xFD9
  7992                           status	equ	0xFD8


Data Sizes:
    Strings     329
    Constant    18
    Data        4
    BSS         435
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      58
    BANK0           160     31     159
    BANK1           256     13     181
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 40
		 -> uuid(BANK1[40]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 128
		 -> line(BANK0[128]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_4(CODE[3]), STR_3(CODE[12]), line(BANK0[128]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_1(CODE[10]), line(BANK0[128]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_22(CODE[19]), STR_21(CODE[19]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[12]), 
		 -> STR_14(CODE[16]), STR_13(CODE[18]), STR_12(CODE[15]), STR_11(CODE[15]), 
		 -> STR_10(CODE[15]), STR_9(CODE[14]), STR_8(CODE[12]), STR_7(CODE[8]), 
		 -> STR_6(CODE[7]), STR_5(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK1[40]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _main->_rand
    _main->_wait_5ms
    _strtol->_isalpha
    _isalpha->_isupper
    _rand->___lmul
    _process_data_opt->_printf
    _getUUID->_printf
    _getUUID->_strcpy
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    ___awmod->_rand

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Receive_ISR->_strstr
    _strstr->_strncmp
    _strncmp->_strlen

Critical Paths under _main in BANK0

    _main->_process_data_opt
    _main->_srand
    _strtol->___lmul
    _srand->_strtol
    _rand->___lmul
    _process_data_opt->_printf
    _getUUID->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_process_data_opt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   14925
                                             26 BANK0      5     5      0
                      _I2C_Read_Byte
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Byte
                            _InitI2C
                  _SYSTEM_Initialize
                            ___awmod
                            _getUUID
                             _printf
                   _process_data_opt
                               _rand
                          _read_line
                              _srand
                             _strtol
                           _wait_5ms
 ---------------------------------------------------------------------------------
 (1) _wait_5ms                                             6     4      2     174
                                             36 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _strtol                                              16    10      6    2165
                                              8 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _toupper                                              1     1      0      67
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isspace                                              3     3      0      90
                                             36 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             36 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _isalpha                                              3     3      0     158
                                             39 COMRAM     3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (3) _isupper                                              3     3      0      68
                                             36 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      86
                                             24 BANK0      2     0      2
                             _strtol (ARG)
 ---------------------------------------------------------------------------------
 (1) _rand                                                 2     0      2     558
                                             40 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     558
                                             36 COMRAM     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _process_data_opt                                    18    17      1    4028
                                             21 BANK0      5     4      1
                                              0 BANK1     13    13      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _getUUID                                              0     0      0    3542
                             _printf
                          _read_line
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     203
                                             36 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_line                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _printf                                              24    18      6    3339
                                             41 COMRAM     1     1      0
                                              7 BANK0     14     8      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      93
                                             37 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      62
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             40 COMRAM     1     1      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     549
                                             36 COMRAM     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     587
                                              8 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Write_Byte                                       5     5      0      90
                                             36 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read_Byte                                        2     2      0     192
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0    1524
                                             22 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  3     3      0    1524
                                             19 COMRAM     3     3      0
                       _EUSART1_Read
                             _strcmp
                             _strstr
 ---------------------------------------------------------------------------------
 (7) _strstr                                               4     0      4    1001
                                             15 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (8) _strncmp                                              9     3      6     326
                                              6 COMRAM     9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (8) _strlen                                               6     4      2     154
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strchr                                               5     1      4     216
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) _strcmp                                               6     2      4     475
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Read                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Read_Byte
   _I2C_Start
   _I2C_Stop
   _I2C_Write_Byte
   _InitI2C
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   ___awmod
     _rand (ARG)
       ___lmul
   _getUUID
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART1_Write
     _read_line
     _strcpy
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART1_Write
   _process_data_opt
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART1_Write
   _rand
     ___lmul
   _read_line
   _srand
     _strtol (ARG)
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _strtol
     ___lmul
     _isalpha
       _isupper
     _isdigit
     _isspace
     _toupper
   _wait_5ms

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _EUSART1_Read
     _strcmp
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      B5       7       70.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1F      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      3A       1       61.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     20E      12        0.0%
DATA                 0      0     20E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Mar 20 20:56:15 2016

           _eusart1TxBufferRemaining 003A                   __size_of_I2C_Start 001C  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l110 164E                                  l307 090C  
                                l352 143A                                  l353 147C  
                                l354 1464                                  l380 0AC6  
                                l284 16C4                                  l808 14E8  
                                l818 1544                         __CFG_CPB$OFF 000000  
                                _PR2 000FBB                         __CFG_CPD$OFF 000000  
                                _inc 0032                                  _val 0035  
                 I2C_Write_Byte@Byte 0028                         ___awmod@sign 00ED  
                    _TMR2_Initialize 1920                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                               l1020 0EEC                                 l2541 194E  
                               l3511 1538                                 l3503 1504  
                               l2631 1786                                 l3505 150E  
                               l3521 0A84                                 l2633 178E  
                               l3507 1514                                 l3523 0A8C  
                               l3603 13EE                                 l2459 18CE  
                               l3517 0A70                                 l3621 0830  
                               l2653 186E                                 l3701 0DA6  
                               l3471 1670                                 l3543 0B1A  
                               l3527 0A92                                 l3631 08EE  
                               l3623 0856                                 l2655 1872  
                               l2841 1432                                 l3473 1672  
                               l3545 0B20                                 l3641 09AE  
                               l3633 091E                                 l3625 087C  
                               l2665 183E                                 l3713 0DEA  
                               l3705 0DBC                                 l3801 00DA  
                               l2851 1466                                 l3483 14AE  
                               l3459 163E                                 l3539 0AFE  
                               l3635 0942                                 l3627 08A2  
                               l2691 18B0                                 l3723 0E7C  
                               l3485 14B8                                 l3581 0BC8  
                               l3557 0B5C                                 l3573 0B9E  
                               l3637 0966                                 l3629 08C8  
                               l3645 09E2                                 l2669 184C  
                               l3709 0DD8                                 l3495 14DC  
                               l3487 14BC                                 l3583 0C1A  
                               l3591 0C84                                 l3559 0B62  
                               l3575 0BB0                                 l3639 098A  
                               l3647 0A40                                 l2679 191C  
                               l3727 0EAC                                 l3671 0D0A  
                               l3655 0CB8                                 l3761 11D4  
                               l3753 11AE                                 l3593 0C8C  
                               l3673 0D14                                 l3579 0BC2  
                               l3595 0C98                                 l3691 0D70  
                               l2779 16B2                                 l3773 121A  
                               l3765 11F8                                 l3757 11C2  
                               l3749 119E                                 l3589 0C72  
                               l3677 0D24                                 l3669 0D02  
                               l3759 11CE                                 l3599 13D0  
                               l3687 0D5C                                 l3769 1206  
                               l3697 0D90                                 STR_1 FFDC  
                               STR_2 FFE6                                 STR_3 FFD0  
                               STR_4 FFD9                                 STR_5 FF5D  
                               STR_6 FFF7                                 STR_7 FFEF  
                               STR_8 FFC4                                 STR_9 FFAA  
                               u2010 0F20                                 u2020 0F48  
                               u2030 0F70                                 u2040 0F98  
                               u2016 0F22                                 u2050 0FC0  
                               u2026 0F4A                                 u2060 0FE8  
                               u2036 0F72                                 _LATA 000F89  
                               u2070 1010                                 u2046 0F9A  
                               _LATB 000F8A                                 u3007 01EC  
                               _LATC 000F8B                                 u2080 1038  
                               u2056 0FC2                                 u3017 01FC  
                               u2066 0FEA                                 u3107 028C  
                               u3027 020C                                 u2076 1012  
                               u3117 029C                                 u3037 021C  
                               u2086 103A                                 u4007 18EA  
                               u3207 032C                                 u3127 02AC  
                               u3047 022C                                 u2600 089C  
                               u4017 0F08                                 u3217 033C  
                               u3137 02BC                                 u3057 023C  
                               u2610 08C2                                 u4107 0FB2  
                               u4027 0F12                                 u3307 03CC  
                               u3227 034C                                 u3147 02CC  
                               u3067 024C                                 u2620 08E8  
                               u4117 0FD0                                 u4037 0F30  
                               u2605 0890                                 u3317 03DC  
                               u3237 035C                                 u3157 02DC  
                               u3077 025C                                 u4127 0FDA  
                               u4047 0F3A                                 u2615 08B6  
                               u3407 046C                                 u3327 03EC  
                               u3247 036C                                 u3167 02EC  
                               u3087 026C                                 u4137 0FF8  
                               u4057 0F58                                 u2625 08DC  
                               u3417 047C                                 u3337 03FC  
                               u3257 037C                                 u3177 02FC  
                               u3097 027C                                 u4147 1002  
                               u4067 0F62                                 u2635 0954  
                               u3507 050C                                 u3427 048C  
                               u3347 040C                                 u3267 038C  
                               u3187 030C                                 u2580 0850  
                               u4157 1020                                 u4077 0F80  
                               u2645 0978                                 u3517 051C  
                               u3437 049C                                 u3357 041C  
                               u3277 039C                                 u3197 031C  
                               u2590 0876                                 u4167 102A  
                               u4087 0F8A                                 u2655 099C  
                               u2575 0812                                 u3607 05AC  
                               u3527 052C                                 u3447 04AC  
                               u3367 042C                                 u3287 03AC  
                               u4097 0FA8                                 u2665 09C0  
                               u2585 0844                                 u3617 05BC  
                               u3537 053C                                 u3457 04BC  
                               u3377 043C                                 u3297 03BC  
                               u2595 086A                                 u3707 064C  
                               u3627 05CC                                 u3547 054C  
                               u3467 04CC                                 u3387 044C  
                               u2907 014C                                 u3717 065C  
                               u3637 05DC                                 u3557 055C  
                               u3477 04DC                                 u3397 045C  
                               u2917 015C                                 u3807 06EC  
                               u3727 066C                                 u3647 05EC  
                               u3567 056C                                 u3487 04EC  
                               u2927 016C                                 u1984 1458  
                               u1985 1452                                 u3817 06FC  
                               u3737 067C                                 u3657 05FC  
                               u3577 057C                                 u3497 04FC  
                               u2937 017C                                 u3907 143E  
                               u3827 070C                                 u3747 068C  
                               u3667 060C                                 u3587 058C  
                               u2947 018C                                 i2l20 004E  
                               u3917 1468                                 u3837 071C  
                               u3757 069C                                 u3677 061C  
                               u3597 059C                                 u2957 019C  
                               u3927 1472                                 u3847 072C  
                               u3767 06AC                                 u3687 062C  
                               u2967 01AC                                 u2887 00D0  
                               i2l24 0058                                 u3937 1482  
                               u3857 073C                                 u3777 06BC  
                               u3697 063C                                 u2977 01BC  
                               u2897 013C                                 u3947 148C  
                               u3867 074C                                 u3787 06CC  
                               u2987 01CC                                 u3957 1806  
                               u3877 075C                                 u3797 06DC  
                               u2997 01DC                                 u3967 1810  
                               u3887 076C                                 u3977 181A  
                               u3897 16B8                                 u3987 1824  
                               u3997 18E0                                 _TMR2 000FBC  
                               _WPUB 000F61                        _EUSART1_Write 163C  
                               _main 0098                                 _line 0060  
                               _rand 15A8                        ?_EUSART1_Read 0001  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               btemp 003B                                 _uuid 0180  
                      __CFG_BORV$190 000000                     __end_of_I2C_Stop 182C  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 0094  
                      __CFG_IESO$OFF 000000                         ___param_bank 000010  
                    __end_of_InitI2C 1978       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 194E                                ?_main 0001  
                              ?_rand 0029                                STR_10 FF7D  
                              STR_11 FF9B                                STR_12 FF8C  
                              STR_20 FF27                                STR_13 FF3A  
                              STR_21 FF14                                STR_14 FF6D  
                              STR_22 FEB5                                STR_15 FFB8  
                              STR_23 FF4C                                STR_16 FEDB  
                              STR_17 FEC8                                STR_18 FEEE  
                              STR_19 FF01                      __end_of___awmod 1224  
                              _T2CON 000FBA                                _LATC3 007C5B  
                              _LATC4 007C5C                       __CFG_DEBUG$OFF 000000  
                    __end_of___lwdiv 14F2                      __end_of___lwmod 154E  
                              i2l122 17D4                                i2l138 1174  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                      __end_of_getUUID 1802  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                  ___lmul@multiplicand 00E4  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 17AA  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                      __end_of_dpowers FEAD  
             __size_of_I2C_Read_Byte 0142                                _index 002B  
                    __end_of_isalpha 1854                                _ready 0033  
                    __end_of_isdigit 18B8                                _randx 0036  
                 __CFG_MCLRE$EXTMCLR 000000                                _srand 1932  
                              _putch 195A                      __end_of_isspace 187A  
                  __end_of_I2C_Start 18F2                       ?_EUSART1_Write 0001  
                    __end_of_isupper 18D6                                tablat 000FF5  
                     ??_EUSART1_Read 0001                                status 000FD8  
                     __CFG_HFOFST$ON 000000                      _TMR2_StartTimer 197C  
                    __end_of_strncmp 13C0                      __end_of_toupper 1920  
                     __CFG_PBADEN$ON 000000                      __initialization 154E  
         __end_of_EUSART1_Initialize 1748                         __end_of_main 0776  
                       __end_of_rand 15FC              __end_of_TMR2_Initialize 1932  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 00FA  
                             ??_rand 002B                        __activetblptr 000003  
              ?_EUSART1_Transmit_ISR 0001            __size_of_process_data_opt 02EC  
                             _CCPR1H 000FBF                               _CCPR1L 000FBE  
                             ?_srand 00F8                               _ANSELA 000F38  
                             ?_putch 0001                               _ANSELB 000F39  
                             _ANSELC 000F3A                               i2l2501 1774  
                             i2l2413 1606                               i2l2511 1226  
                             i2l2415 160A                               i2l2431 139E  
                             i2l2423 133C                               i2l2513 122E  
                             i2l2433 13A6                               i2l2427 136A  
                             i2l2523 12B6                               i2l2531 131A  
                             i2l2517 12A8                               i2l2445 1690  
                     __CFG_WDTEN$OFF 000000                               i2l2439 1676  
                             i2l2535 1330                               i2l2711 1048  
                             i2l2529 12F0                               i2l2705 17D0  
                             i2l2491 174C                               i2l2733 10AE  
                             i2l2727 107A                               i2l2735 10B2  
                             i2l2719 1068                               i2l2761 1154  
                             i2l2737 10B8                               i2l2763 1170  
                             i2l2755 112E                               i2l2747 10FA  
                             i2l2757 1132                               _RCREG1 000FAE  
                             _RCSTA1 000FAB                  process_data_opt@lsb 00F5  
                             _OSCCON 000FD3                  process_data_opt@msb 01A8  
                process_data_opt@raw 01AB                               _SPBRG1 000FAF  
                             _TRISC3 007CA3                               _TRISC4 007CA4  
                             _TXREG1 000FAD                            ??_InitI2C 0025  
                             _TXSTA1 000FAC                       __CFG_XINST$OFF 000000  
                       _CCPTMRS0bits 000F49                        _I2C_Read_Byte 0EFE  
                             ___lmul 13C0                       __CFG_STVREN$ON 000000  
                          ??___awmod 002B                            ??___lwdiv 0029  
                          ??___lwmod 0029                               clear_0 1554  
                             clear_1 1560                               clear_2 156C  
                             clear_3 1578                      ___awmod@divisor 00EA  
                          ??_getUUID 002B                      ___awmod@counter 00EC  
                             _printf 0A62                               _strchr 1676  
                             _strcmp 1224                               _strcpy 177C  
                             _strlen 15FC                               _strtol 0CB8  
                             _strstr 12B4                     __end_of_wait_5ms 16E0  
                       __pdataCOMRAM 0036                            ??_isalpha 0028  
                          ??_isdigit 0025                            ?_I2C_Stop 0001  
                       __mediumconst FEA2                            ??_isspace 0025  
                             tblptrh 000FF7                            ??_isupper 0025  
                             tblptrl 000FF6                               tblptru 000FF8  
                             srand@x 00F8                      ??_EUSART1_Write 0025  
            __end_of_TMR2_StartTimer 1980                      _eusart1RxBuffer 0200  
                          ??_strncmp 000D                            ??_toupper 0025  
      __size_of_INTERRUPT_Initialize 000A                      _eusart1TxBuffer 0100  
                  _SYSTEM_Initialize 18F2                           __accesstop 0060  
            __end_of__initialization 159E                      I2C_Write_Byte@i 0029  
                 ?_SYSTEM_Initialize 0001                        ___rparam_used 000001  
                     ?_I2C_Read_Byte 0001                    ?_EPWM1_Initialize 0001  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0025  
                 ??_EPWM1_Initialize 0025         process_data_opt@Illumination 01AD  
                      __end_of_srand 1940                        __end_of_putch 1964  
                   ?_TMR2_Initialize 0001                 __end_of_EUSART1_Read 177C  
             ??_EUSART1_Transmit_ISR 0001                           ??_I2C_Stop 0025  
        __end_of_EUSART1_Receive_ISR 1182            __end_of_SYSTEM_Initialize 190C  
                            ??_srand 002B                              ??_putch 0026  
                      _eusart1RxHead 002E                        _eusart1TxHead 0030  
                      _eusart1RxTail 002F                           __pbssBANK0 0060  
                         __pbssBANK1 0100                           __pbssBANK2 0200  
                      _eusart1TxTail 0031                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 003A                   __size_of_read_line 000C  
                 __CFG_CCP2MX$PORTC1 000000                              ?___lmul 00E0  
                 __CFG_CCP3MX$PORTB5 000000                              _CCP1CON 000FBD  
                            _ECCP1AS 000FB6              __size_of_I2C_Write_Byte 0068  
                     ___lmul@product 0025                              ?_printf 00E7  
                            ?_strchr 0001                              ?_strcmp 0001  
                            ?_strcpy 0025                              ?_strlen 0001  
                            ?_strtol 00E8                              ?_strstr 0010  
                I2C_Read_Byte@RxData 0025                              _OSCCON2 000FD2  
                            _OSCTUNE 000F9B                              _PWM1CON 000FB7  
                   _process_data_opt 0776                              _SPBRGH1 000FB0  
                   ?_TMR2_StartTimer 0001                              _InitI2C 196E  
                          _I2C_Start 18D6                      ??_I2C_Read_Byte 0025  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                            ?_wait_5ms 0025  
                    __size_of___lmul 006C                              ___awmod 1182  
                            ___lwdiv 1494                              ___lwmod 14F2  
                            __pcinit 154E                              _getUUID 17D8  
                            __ramtop 1000                              __ptext0 0098  
                            __ptext1 16AC                              __ptext2 0CB8  
                            __ptext3 190C                              __ptext4 1854  
                            __ptext5 189A                              __ptext6 182C  
                            __ptext7 18B8                              __ptext8 1932  
                            __ptext9 15A8                      __size_of_printf 0256  
                    __size_of_strchr 0036                      __size_of_strcmp 0090  
                    __size_of_strcpy 002E                      __size_of_strlen 0040  
                  __end_of_hexpowers FEB5                      __size_of_strtol 0246  
                    __size_of_strstr 0086                              _dpowers FEA3  
              _OSCILLATOR_Initialize 1940                            _T2CONbits 000FBA  
                            _isalpha 182C                              _isdigit 189A  
                   ___awmod@dividend 00E8                    __end_of_read_line 195A  
                 _EUSART1_Initialize 1714             ??_PIN_MANAGER_Initialize 0025  
                            _isspace 1854                              _isupper 18B8  
         __size_of_SYSTEM_Initialize 001A                              main@lsb 00FE  
                            main@msb 00FD                              _strncmp 133A  
                            _toupper 190C                 end_of_initialization 159E  
                ?_EUSART1_Initialize 0001                           ?_I2C_Start 0001  
                         ??_wait_5ms 0027               process_data_opt@result 01B1  
                            printf@c 00F4                              printf@f 00E7  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
              __size_of_EUSART1_Read 0034                 ??_EUSART1_Initialize 0025  
                            strcmp@r 0006                              strlen@s 0001  
                            strtol@a 00F3                              strtol@c 00F7  
                            strtol@s 00E8                            _PORTCbits 000F82  
                       strtol@endptr 00EA                    __size_of_I2C_Stop 002A  
                EUSART1_Write@txData 0025                         _EUSART1_Read 1748  
       __end_of_INTERRUPT_Initialize 196E                       _I2C_Write_Byte 142C  
                     __end_of___lmul 142C                        __pidataCOMRAM 1978  
             ?_OSCILLATOR_Initialize 0001                       __end_of_printf 0CB8  
                     __end_of_strchr 16AC                       __end_of_strcmp 12B4  
                     __end_of_strcpy 17AA                       __end_of_strlen 163C  
                     __end_of_strtol 0EFE                       __end_of_strstr 133A  
                start_initialization 154E            __size_of_EPWM1_Initialize 0020  
    __size_of_PIN_MANAGER_Initialize 0034                          putch@txData 0026  
              __end_of_EUSART1_Write 1676                          ??_I2C_Start 0025  
             __end_of_I2C_Write_Byte 1494             __end_of_process_data_opt 0A62  
                           ??___lmul 0025                             ??_printf 002A  
                           ??_strchr 0005                             ??_strcmp 0005  
                           ??_strcpy 0029                             ??_strlen 0003  
                           ??_strtol 00EE                       _eusart1RxCount 002D  
                           ??_strstr 0014                          __pbssCOMRAM 002B  
      __size_of_EUSART1_Transmit_ISR 002E                        __pcstackBANK0 00E0  
                      __pcstackBANK1 01A8                         _isalpha$1462 0029  
           __size_of_TMR2_Initialize 0012                         _isdigit$1465 0026  
       __size_of_EUSART1_Receive_ISR 0142                             ?_InitI2C 0001  
                   ___lwdiv@dividend 0025               _PIN_MANAGER_Initialize 16E0  
                    ?_I2C_Write_Byte 0001                            __pintcode 0008  
                      __pmediumconst FEA2                             ?___awmod 00E8  
                  __size_of_wait_5ms 0034                             ?___lwdiv 0025  
                           ?___lwmod 00E3                             ?_getUUID 0001  
       ??_INTERRUPT_InterruptManager 0017                     __CFG_PRICLKEN$ON 000000  
                           _BAUDCON1 000FB8                             ?_isalpha 0001  
                           ?_isdigit 0001                             _I2C_Stop 1802  
                           ?_isspace 0001                             ?_isupper 0001  
           EUSART1_Receive_ISR@state 0015                            _hexpowers FEAD  
                   ___lwdiv@quotient 00E1                             ?_strncmp 0007  
                          _read_line 194E                             ?_toupper 0001  
                     __size_of_srand 000E                       __size_of_putch 000A  
               _INTERRUPT_Initialize 1964                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D             __size_of_TMR2_StartTimer 0004  
                           i2u141_40 12A2                             i2u141_47 1298  
__size_of_INTERRUPT_InterruptManager 008C                             i2u138_40 1250  
                           i2u138_47 1246                             i2u139_40 1274  
                           i2u139_47 126A                             _PIR1bits 000F9E  
              __end_of_I2C_Read_Byte 1040                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                            _uartState 0034  
                           _PSTR1CON 000FB9                           printf@flag 00F1  
                          main@delay 00FB                           printf@prec 00F0  
                   _EPWM1_Initialize 187A                         _isspace$1468 0026  
                  ___lmul@multiplier 00E0                          _INTCON2bits 000FF1  
                         ?_read_line 0001                            copy_data0 1592  
              ?_INTERRUPT_Initialize 0001                    ??_TMR2_Initialize 0025  
              EUSART1_Read@readValue 0001                     __size_of_InitI2C 000A  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTB5 000000  
            ??_OSCILLATOR_Initialize 0025                     __size_of___awmod 00A2  
        __size_of_EUSART1_Initialize 0034                     __size_of___lwdiv 005E  
                   __size_of___lwmod 005C                     __size_of_getUUID 002A  
                         _ANSELCbits 000F3A                         _isupper$1471 0026  
                   __size_of_isalpha 0028                     __size_of_isdigit 001E  
                    ___lwdiv@divisor 0027                     __size_of_isspace 0026  
                    ___lwdiv@counter 00E0                             __ptext10 13C0  
                           __ptext11 0776                             __ptext20 1182  
                           __ptext12 17D8                             __ptext21 18F2  
                           __ptext13 177C                             __ptext30 142C  
                           __ptext22 1920                             __ptext14 194E  
                           __ptext31 1802                             __ptext23 197C  
                           __ptext15 0A62                             __ptext40 1676  
                           __ptext32 18D6                             __ptext24 16E0  
                           __ptext16 195A                             __ptext41 1224  
                           __ptext33 0EFE                             __ptext25 1940  
                           __ptext17 163C                             __ptext42 1748  
                           __ptext26 1964                             __ptext18 14F2  
                           __ptext35 17AA                             __ptext27 1714  
                           __ptext19 1494                             __ptext36 1040  
                           __ptext28 187A                             __ptext37 12B4  
                           __ptext29 196E                             __ptext38 133A  
                           __ptext39 15FC                     __size_of_isupper 001E  
                   __size_of_strncmp 0086                     __size_of_toupper 0014  
                         strcpy@from 0027                        __size_of_main 06DE  
                      __size_of_rand 0054                            wait_5ms@i 002A  
                          wait_5ms@j 0025                           strncmp@len 000B  
           process_data_opt@exponent 01A9                             _wait_5ms 16AC  
                  ?_process_data_opt 00F5                             int$flags 003B  
                         strtol@base 00EC                           strtol@sign 00F2  
                  ??_TMR2_StartTimer 0025   __end_of_INTERRUPT_InterruptManager 0094  
         _INTERRUPT_InterruptManager 0008                            printf@idx 00ED  
                          printf@val 00F2                   ??_process_data_opt 00F6  
                _EUSART1_Receive_ISR 1040                           _INTCONbits 000FF2  
                           isalpha@c 002A                             isdigit@c 0027  
             ??_INTERRUPT_Initialize 0025                          ??_read_line 0025  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 0001  
                          strchr@chr 0003                     ___lwmod@dividend 00E3  
                          strchr@ptr 0001                             isspace@c 0027  
            ?_PIN_MANAGER_Initialize 0001                     ??_I2C_Write_Byte 0025  
                         _RCSTA1bits 000FAB                             isupper@c 0027  
       __end_of_EUSART1_Transmit_ISR 17D8                            strncmp@s1 0007  
                          strncmp@s2 0009                             printf@ap 00EE  
             __size_of_EUSART1_Write 003A                             strcmp@s1 0001  
                           strcmp@s2 0003                      ___lwmod@divisor 00E5  
                           strcpy@cp 0029                             strlen@cp 0005  
                           strcpy@to 0025                      ___lwmod@counter 0029  
                           toupper@c 0025                    __CFG_T3CMX$PORTC0 000000  
                           strstr@s1 0010                             strstr@s2 0012  
              ??_EUSART1_Receive_ISR 0014       __end_of_PIN_MANAGER_Initialize 1714  
                  __CFG_FOSC$INTIO67 000000             __end_of_EPWM1_Initialize 189A  
