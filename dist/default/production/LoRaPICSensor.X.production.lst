

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Mar 17 21:48:49 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           	psect	idataCOMRAM
    73  001904                     __pidataCOMRAM:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _randx
    77  001904  0001               	dw	1
    78  001906  0000               	dw	0
    79                           
    80                           	psect	mediumconst
    81  00FEA2                     __pmediumconst:
    82                           	opt stack 0
    83  00FEA2  00                 	db	0
    84  00FEA3                     _dpowers:
    85                           	opt stack 0
    86  00FEA3  0001               	dw	1
    87  00FEA5  000A               	dw	10
    88  00FEA7  0064               	dw	100
    89  00FEA9  03E8               	dw	1000
    90  00FEAB  2710               	dw	10000
    91  00FEAD                     __end_of_dpowers:
    92                           	opt stack 0
    93  00FEAD                     _hexpowers:
    94                           	opt stack 0
    95  00FEAD  0001               	dw	1
    96  00FEAF  0010               	dw	16
    97  00FEB1  0100               	dw	256
    98  00FEB3  1000               	dw	4096
    99  00FEB5                     __end_of_hexpowers:
   100                           	opt stack 0
   101  00FEB5                     STR_22:
   102  00FEB5  73                 	db	115	;'s'
   103  00FEB6  79                 	db	121	;'y'
   104  00FEB7  73                 	db	115	;'s'
   105  00FEB8  20                 	db	32
   106  00FEB9  73                 	db	115	;'s'
   107  00FEBA  6C                 	db	108	;'l'
   108  00FEBB  65                 	db	101	;'e'
   109  00FEBC  65                 	db	101	;'e'
   110  00FEBD  70                 	db	112	;'p'
   111  00FEBE  20                 	db	32
   112  00FEBF  31                 	db	49	;'1'
   113  00FEC0  30                 	db	48	;'0'
   114  00FEC1  30                 	db	48	;'0'
   115  00FEC2  30                 	db	48	;'0'
   116  00FEC3  30                 	db	48	;'0'
   117  00FEC4  30                 	db	48	;'0'
   118  00FEC5  0D                 	db	13
   119  00FEC6  0A                 	db	10
   120  00FEC7  00                 	db	0
   121  00FEC8                     STR_17:
   122  00FEC8  72                 	db	114	;'r'
   123  00FEC9  61                 	db	97	;'a'
   124  00FECA  64                 	db	100	;'d'
   125  00FECB  69                 	db	105	;'i'
   126  00FECC  6F                 	db	111	;'o'
   127  00FECD  20                 	db	32
   128  00FECE  73                 	db	115	;'s'
   129  00FECF  65                 	db	101	;'e'
   130  00FED0  74                 	db	116	;'t'
   131  00FED1  20                 	db	32
   132  00FED2  62                 	db	98	;'b'
   133  00FED3  77                 	db	119	;'w'
   134  00FED4  20                 	db	32
   135  00FED5  35                 	db	53	;'5'
   136  00FED6  30                 	db	48	;'0'
   137  00FED7  30                 	db	48	;'0'
   138  00FED8  0D                 	db	13
   139  00FED9  0A                 	db	10
   140  00FEDA  00                 	db	0
   141  00FEDB                     STR_16:
   142  00FEDB  72                 	db	114	;'r'
   143  00FEDC  61                 	db	97	;'a'
   144  00FEDD  64                 	db	100	;'d'
   145  00FEDE  69                 	db	105	;'i'
   146  00FEDF  6F                 	db	111	;'o'
   147  00FEE0  20                 	db	32
   148  00FEE1  73                 	db	115	;'s'
   149  00FEE2  65                 	db	101	;'e'
   150  00FEE3  74                 	db	116	;'t'
   151  00FEE4  20                 	db	32
   152  00FEE5  70                 	db	112	;'p'
   153  00FEE6  77                 	db	119	;'w'
   154  00FEE7  72                 	db	114	;'r'
   155  00FEE8  20                 	db	32
   156  00FEE9  2D                 	db	45
   157  00FEEA  32                 	db	50	;'2'
   158  00FEEB  0D                 	db	13
   159  00FEEC  0A                 	db	10
   160  00FEED  00                 	db	0
   161  00FEEE                     STR_18:
   162  00FEEE  72                 	db	114	;'r'
   163  00FEEF  61                 	db	97	;'a'
   164  00FEF0  64                 	db	100	;'d'
   165  00FEF1  69                 	db	105	;'i'
   166  00FEF2  6F                 	db	111	;'o'
   167  00FEF3  20                 	db	32
   168  00FEF4  73                 	db	115	;'s'
   169  00FEF5  65                 	db	101	;'e'
   170  00FEF6  74                 	db	116	;'t'
   171  00FEF7  20                 	db	32
   172  00FEF8  73                 	db	115	;'s'
   173  00FEF9  66                 	db	102	;'f'
   174  00FEFA  20                 	db	32
   175  00FEFB  73                 	db	115	;'s'
   176  00FEFC  66                 	db	102	;'f'
   177  00FEFD  37                 	db	55	;'7'
   178  00FEFE  0D                 	db	13
   179  00FEFF  0A                 	db	10
   180  00FF00  00                 	db	0
   181  00FF01                     STR_19:
   182  00FF01  72                 	db	114	;'r'
   183  00FF02  61                 	db	97	;'a'
   184  00FF03  64                 	db	100	;'d'
   185  00FF04  69                 	db	105	;'i'
   186  00FF05  6F                 	db	111	;'o'
   187  00FF06  20                 	db	32
   188  00FF07  73                 	db	115	;'s'
   189  00FF08  65                 	db	101	;'e'
   190  00FF09  74                 	db	116	;'t'
   191  00FF0A  20                 	db	32
   192  00FF0B  63                 	db	99	;'c'
   193  00FF0C  72                 	db	114	;'r'
   194  00FF0D  20                 	db	32
   195  00FF0E  34                 	db	52	;'4'
   196  00FF0F  2F                 	db	47
   197  00FF10  38                 	db	56	;'8'
   198  00FF11  0D                 	db	13
   199  00FF12  0A                 	db	10
   200  00FF13  00                 	db	0
   201  00FF14                     STR_21:
   202  00FF14  72                 	db	114	;'r'
   203  00FF15  61                 	db	97	;'a'
   204  00FF16  64                 	db	100	;'d'
   205  00FF17  69                 	db	105	;'i'
   206  00FF18  6F                 	db	111	;'o'
   207  00FF19  20                 	db	32
   208  00FF1A  73                 	db	115	;'s'
   209  00FF1B  65                 	db	101	;'e'
   210  00FF1C  74                 	db	116	;'t'
   211  00FF1D  20                 	db	32
   212  00FF1E  77                 	db	119	;'w'
   213  00FF1F  64                 	db	100	;'d'
   214  00FF20  74                 	db	116	;'t'
   215  00FF21  20                 	db	32
   216  00FF22  25                 	db	37
   217  00FF23  64                 	db	100	;'d'
   218  00FF24  0D                 	db	13
   219  00FF25  0A                 	db	10
   220  00FF26  00                 	db	0
   221  00FF27                     STR_20:
   222  00FF27  72                 	db	114	;'r'
   223  00FF28  61                 	db	97	;'a'
   224  00FF29  64                 	db	100	;'d'
   225  00FF2A  69                 	db	105	;'i'
   226  00FF2B  6F                 	db	111	;'o'
   227  00FF2C  20                 	db	32
   228  00FF2D  73                 	db	115	;'s'
   229  00FF2E  65                 	db	101	;'e'
   230  00FF2F  74                 	db	116	;'t'
   231  00FF30  20                 	db	32
   232  00FF31  63                 	db	99	;'c'
   233  00FF32  72                 	db	114	;'r'
   234  00FF33  63                 	db	99	;'c'
   235  00FF34  20                 	db	32
   236  00FF35  6F                 	db	111	;'o'
   237  00FF36  6E                 	db	110	;'n'
   238  00FF37  0D                 	db	13
   239  00FF38  0A                 	db	10
   240  00FF39  00                 	db	0
   241  00FF3A                     STR_13:
   242  00FF3A  72                 	db	114	;'r'
   243  00FF3B  61                 	db	97	;'a'
   244  00FF3C  64                 	db	100	;'d'
   245  00FF3D  69                 	db	105	;'i'
   246  00FF3E  6F                 	db	111	;'o'
   247  00FF3F  20                 	db	32
   248  00FF40  67                 	db	103	;'g'
   249  00FF41  65                 	db	101	;'e'
   250  00FF42  74                 	db	116	;'t'
   251  00FF43  20                 	db	32
   252  00FF44  70                 	db	112	;'p'
   253  00FF45  72                 	db	114	;'r'
   254  00FF46  6C                 	db	108	;'l'
   255  00FF47  65                 	db	101	;'e'
   256  00FF48  6E                 	db	110	;'n'
   257  00FF49  0D                 	db	13
   258  00FF4A  0A                 	db	10
   259  00FF4B  00                 	db	0
   260  00FF4C                     STR_23:
   261  00FF4C  30                 	db	48	;'0'
   262  00FF4D  31                 	db	49	;'1'
   263  00FF4E  32                 	db	50	;'2'
   264  00FF4F  33                 	db	51	;'3'
   265  00FF50  34                 	db	52	;'4'
   266  00FF51  35                 	db	53	;'5'
   267  00FF52  36                 	db	54	;'6'
   268  00FF53  37                 	db	55	;'7'
   269  00FF54  38                 	db	56	;'8'
   270  00FF55  39                 	db	57	;'9'
   271  00FF56  61                 	db	97	;'a'
   272  00FF57  62                 	db	98	;'b'
   273  00FF58  63                 	db	99	;'c'
   274  00FF59  64                 	db	100	;'d'
   275  00FF5A  65                 	db	101	;'e'
   276  00FF5B  66                 	db	102	;'f'
   277  00FF5C  00                 	db	0
   278  00FF5D                     STR_5:
   279  00FF5D  73                 	db	115	;'s'
   280  00FF5E  79                 	db	121	;'y'
   281  00FF5F  73                 	db	115	;'s'
   282  00FF60  20                 	db	32
   283  00FF61  67                 	db	103	;'g'
   284  00FF62  65                 	db	101	;'e'
   285  00FF63  74                 	db	116	;'t'
   286  00FF64  20                 	db	32
   287  00FF65  68                 	db	104	;'h'
   288  00FF66  77                 	db	119	;'w'
   289  00FF67  65                 	db	101	;'e'
   290  00FF68  75                 	db	117	;'u'
   291  00FF69  69                 	db	105	;'i'
   292  00FF6A  0D                 	db	13
   293  00FF6B  0A                 	db	10
   294  00FF6C  00                 	db	0
   295  00FF6D                     STR_14:
   296  00FF6D  72                 	db	114	;'r'
   297  00FF6E  61                 	db	97	;'a'
   298  00FF6F  64                 	db	100	;'d'
   299  00FF70  69                 	db	105	;'i'
   300  00FF71  6F                 	db	111	;'o'
   301  00FF72  20                 	db	32
   302  00FF73  67                 	db	103	;'g'
   303  00FF74  65                 	db	101	;'e'
   304  00FF75  74                 	db	116	;'t'
   305  00FF76  20                 	db	32
   306  00FF77  70                 	db	112	;'p'
   307  00FF78  77                 	db	119	;'w'
   308  00FF79  72                 	db	114	;'r'
   309  00FF7A  0D                 	db	13
   310  00FF7B  0A                 	db	10
   311  00FF7C  00                 	db	0
   312  00FF7D                     STR_10:
   313  00FF7D  72                 	db	114	;'r'
   314  00FF7E  61                 	db	97	;'a'
   315  00FF7F  64                 	db	100	;'d'
   316  00FF80  69                 	db	105	;'i'
   317  00FF81  6F                 	db	111	;'o'
   318  00FF82  20                 	db	32
   319  00FF83  67                 	db	103	;'g'
   320  00FF84  65                 	db	101	;'e'
   321  00FF85  74                 	db	116	;'t'
   322  00FF86  20                 	db	32
   323  00FF87  73                 	db	115	;'s'
   324  00FF88  66                 	db	102	;'f'
   325  00FF89  0D                 	db	13
   326  00FF8A  0A                 	db	10
   327  00FF8B  00                 	db	0
   328  00FF8C                     STR_12:
   329  00FF8C  72                 	db	114	;'r'
   330  00FF8D  61                 	db	97	;'a'
   331  00FF8E  64                 	db	100	;'d'
   332  00FF8F  69                 	db	105	;'i'
   333  00FF90  6F                 	db	111	;'o'
   334  00FF91  20                 	db	32
   335  00FF92  67                 	db	103	;'g'
   336  00FF93  65                 	db	101	;'e'
   337  00FF94  74                 	db	116	;'t'
   338  00FF95  20                 	db	32
   339  00FF96  63                 	db	99	;'c'
   340  00FF97  72                 	db	114	;'r'
   341  00FF98  0D                 	db	13
   342  00FF99  0A                 	db	10
   343  00FF9A  00                 	db	0
   344  00FF9B                     STR_11:
   345  00FF9B  72                 	db	114	;'r'
   346  00FF9C  61                 	db	97	;'a'
   347  00FF9D  64                 	db	100	;'d'
   348  00FF9E  69                 	db	105	;'i'
   349  00FF9F  6F                 	db	111	;'o'
   350  00FFA0  20                 	db	32
   351  00FFA1  67                 	db	103	;'g'
   352  00FFA2  65                 	db	101	;'e'
   353  00FFA3  74                 	db	116	;'t'
   354  00FFA4  20                 	db	32
   355  00FFA5  62                 	db	98	;'b'
   356  00FFA6  77                 	db	119	;'w'
   357  00FFA7  0D                 	db	13
   358  00FFA8  0A                 	db	10
   359  00FFA9  00                 	db	0
   360  00FFAA                     STR_9:
   361  00FFAA  73                 	db	115	;'s'
   362  00FFAB  79                 	db	121	;'y'
   363  00FFAC  73                 	db	115	;'s'
   364  00FFAD  20                 	db	32
   365  00FFAE  67                 	db	103	;'g'
   366  00FFAF  65                 	db	101	;'e'
   367  00FFB0  74                 	db	116	;'t'
   368  00FFB1  20                 	db	32
   369  00FFB2  76                 	db	118	;'v'
   370  00FFB3  65                 	db	101	;'e'
   371  00FFB4  72                 	db	114	;'r'
   372  00FFB5  0D                 	db	13
   373  00FFB6  0A                 	db	10
   374  00FFB7  00                 	db	0
   375  00FFB8                     STR_15:
   376  00FFB8  6D                 	db	109	;'m'
   377  00FFB9  61                 	db	97	;'a'
   378  00FFBA  63                 	db	99	;'c'
   379  00FFBB  20                 	db	32
   380  00FFBC  70                 	db	112	;'p'
   381  00FFBD  61                 	db	97	;'a'
   382  00FFBE  75                 	db	117	;'u'
   383  00FFBF  73                 	db	115	;'s'
   384  00FFC0  65                 	db	101	;'e'
   385  00FFC1  0D                 	db	13
   386  00FFC2  0A                 	db	10
   387  00FFC3  00                 	db	0
   388  00FFC4                     STR_8:
   389  00FFC4  73                 	db	115	;'s'
   390  00FFC5  79                 	db	121	;'y'
   391  00FFC6  73                 	db	115	;'s'
   392  00FFC7  20                 	db	32
   393  00FFC8  72                 	db	114	;'r'
   394  00FFC9  65                 	db	101	;'e'
   395  00FFCA  73                 	db	115	;'s'
   396  00FFCB  65                 	db	101	;'e'
   397  00FFCC  74                 	db	116	;'t'
   398  00FFCD  0D                 	db	13
   399  00FFCE  0A                 	db	10
   400  00FFCF  00                 	db	0
   401  00FFD0                     STR_3:
   402  00FFD0  72                 	db	114	;'r'
   403  00FFD1  61                 	db	97	;'a'
   404  00FFD2  64                 	db	100	;'d'
   405  00FFD3  69                 	db	105	;'i'
   406  00FFD4  6F                 	db	111	;'o'
   407  00FFD5  5F                 	db	95	;'_'
   408  00FFD6  74                 	db	116	;'t'
   409  00FFD7  78                 	db	120	;'x'
   410  00FFD8  5F                 	db	95	;'_'
   411  00FFD9  6F                 	db	111	;'o'
   412  00FFDA  6B                 	db	107	;'k'
   413  00FFDB  00                 	db	0
   414  00FFDC                     STR_1:
   415  00FFDC  72                 	db	114	;'r'
   416  00FFDD  61                 	db	97	;'a'
   417  00FFDE  64                 	db	100	;'d'
   418  00FFDF  69                 	db	105	;'i'
   419  00FFE0  6F                 	db	111	;'o'
   420  00FFE1  5F                 	db	95	;'_'
   421  00FFE2  65                 	db	101	;'e'
   422  00FFE3  72                 	db	114	;'r'
   423  00FFE4  72                 	db	114	;'r'
   424  00FFE5  00                 	db	0
   425  00FFE6                     STR_2:
   426  00FFE6  72                 	db	114	;'r'
   427  00FFE7  61                 	db	97	;'a'
   428  00FFE8  64                 	db	100	;'d'
   429  00FFE9  69                 	db	105	;'i'
   430  00FFEA  6F                 	db	111	;'o'
   431  00FFEB  5F                 	db	95	;'_'
   432  00FFEC  72                 	db	114	;'r'
   433  00FFED  78                 	db	120	;'x'
   434  00FFEE  00                 	db	0
   435  00FFEF                     STR_7:
   436  00FFEF  25                 	db	37
   437  00FFF0  78                 	db	120	;'x'
   438  00FFF1  20                 	db	32
   439  00FFF2  25                 	db	37
   440  00FFF3  78                 	db	120	;'x'
   441  00FFF4  0D                 	db	13
   442  00FFF5  0A                 	db	10
   443  00FFF6  00                 	db	0
   444  00FFF7                     STR_6:
   445  00FFF7  3E                 	db	62	;'>'
   446  00FFF8  20                 	db	32
   447  00FFF9  25                 	db	37
   448  00FFFA  64                 	db	100	;'d'
   449  00FFFB  0D                 	db	13
   450  00FFFC  0A                 	db	10
   451  00FFFD  00                 	db	0
   452  0000                     
   453                           ; #config settings
   454  00FFFE  00                 	db	0	; dummy byte at the end
   455  0000                     
   456                           	psect	nvCOMRAM
   457  00003A                     __pnvCOMRAM:
   458                           	opt stack 0
   459  00003A                     _eusart1TxBufferRemaining:
   460                           	opt stack 0
   461  00003A                     	ds	1
   462  0000                     _ANSELA	set	3896
   463  0000                     _ANSELB	set	3897
   464  0000                     _ANSELC	set	3898
   465  0000                     _ANSELCbits	set	3898
   466  0000                     _CCPTMRS0bits	set	3913
   467  0000                     _BAUDCON1	set	4024
   468  0000                     _CCP1CON	set	4029
   469  0000                     _CCPR1H	set	4031
   470  0000                     _CCPR1L	set	4030
   471  0000                     _ECCP1AS	set	4022
   472  0000                     _INTCON2bits	set	4081
   473  0000                     _INTCONbits	set	4082
   474  0000                     _IPR1bits	set	3999
   475  0000                     _LATA	set	3977
   476  0000                     _LATB	set	3978
   477  0000                     _LATC	set	3979
   478  0000                     _OSCCON	set	4051
   479  0000                     _OSCCON2	set	4050
   480  0000                     _OSCTUNE	set	3995
   481  0000                     _PIE1bits	set	3997
   482  0000                     _PIR1bits	set	3998
   483  0000                     _PORTCbits	set	3970
   484  0000                     _PR2	set	4027
   485  0000                     _PSTR1CON	set	4025
   486  0000                     _PWM1CON	set	4023
   487  0000                     _RCONbits	set	4048
   488  0000                     _RCREG1	set	4014
   489  0000                     _RCSTA1	set	4011
   490  0000                     _RCSTA1bits	set	4011
   491  0000                     _SPBRG1	set	4015
   492  0000                     _SPBRGH1	set	4016
   493  0000                     _T2CON	set	4026
   494  0000                     _T2CONbits	set	4026
   495  0000                     _TMR2	set	4028
   496  0000                     _TRISA	set	3986
   497  0000                     _TRISB	set	3987
   498  0000                     _TRISC	set	3988
   499  0000                     _TXREG1	set	4013
   500  0000                     _TXSTA1	set	4012
   501  0000                     _WPUB	set	3937
   502  0000                     _LATC3	set	31835
   503  0000                     _LATC4	set	31836
   504  0000                     _TRISC3	set	31907
   505  0000                     _TRISC4	set	31908
   506                           
   507                           	psect	cinit
   508  0014B2                     __pcinit:
   509                           	opt stack 0
   510  0014B2                     start_initialization:
   511                           	opt stack 0
   512  0014B2                     __initialization:
   513                           	opt stack 0
   514                           
   515                           ; Clear objects allocated to BANK2 (128 bytes)
   516  0014B2  EE02  F000         	lfsr	0,__pbssBANK2
   517  0014B6  0E80               	movlw	128
   518  0014B8                     clear_0:
   519  0014B8  6AEE               	clrf	postinc0,c
   520  0014BA  06E8               	decf	wreg,f,c
   521  0014BC  E1FD               	bnz	clear_0
   522                           
   523                           ; Clear objects allocated to BANK1 (168 bytes)
   524  0014BE  EE01  F000         	lfsr	0,__pbssBANK1
   525  0014C2  0EA8               	movlw	168
   526  0014C4                     clear_1:
   527  0014C4  6AEE               	clrf	postinc0,c
   528  0014C6  06E8               	decf	wreg,f,c
   529  0014C8  E1FD               	bnz	clear_1
   530                           
   531                           ; Clear objects allocated to BANK0 (128 bytes)
   532  0014CA  EE00  F060         	lfsr	0,__pbssBANK0
   533  0014CE  0E80               	movlw	128
   534  0014D0                     clear_2:
   535  0014D0  6AEE               	clrf	postinc0,c
   536  0014D2  06E8               	decf	wreg,f,c
   537  0014D4  E1FD               	bnz	clear_2
   538                           
   539                           ; Clear objects allocated to COMRAM (11 bytes)
   540  0014D6  EE00  F02B         	lfsr	0,__pbssCOMRAM
   541  0014DA  0E0B               	movlw	11
   542  0014DC                     clear_3:
   543  0014DC  6AEE               	clrf	postinc0,c
   544  0014DE  06E8               	decf	wreg,f,c
   545  0014E0  E1FD               	bnz	clear_3
   546                           
   547                           ; Initialize objects allocated to COMRAM (4 bytes)
   548                           ; load TBLPTR registers with __pidataCOMRAM
   549  0014E2  0E04               	movlw	low __pidataCOMRAM
   550  0014E4  6EF6               	movwf	tblptrl,c
   551  0014E6  0E19               	movlw	high __pidataCOMRAM
   552  0014E8  6EF7               	movwf	tblptrh,c
   553  0014EA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   554  0014EC  6EF8               	movwf	tblptru,c
   555  0014EE  EE00  F036         	lfsr	0,__pdataCOMRAM
   556  0014F2  EE10 F004          	lfsr	1,4
   557  0014F6                     copy_data0:
   558  0014F6  0009               	tblrd		*+
   559  0014F8  CFF5 FFEE          	movff	tablat,postinc0
   560  0014FC  50E5               	movf	postdec1,w,c
   561  0014FE  50E1               	movf	fsr1l,w,c
   562  001500  E1FA               	bnz	copy_data0
   563  001502                     end_of_initialization:
   564                           	opt stack 0
   565  001502                     __end_of__initialization:
   566                           	opt stack 0
   567  001502  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   568  001504  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   569  001506  0100               	movlb	0
   570  001508  EF4C  F000         	goto	_main	;jump to C main() function
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           postdec1	equ	0xFE5
   578                           fsr1l	equ	0xFE1
   579                           
   580                           	psect	bssCOMRAM
   581  00002B                     __pbssCOMRAM:
   582                           	opt stack 0
   583  00002B                     _index:
   584                           	opt stack 0
   585  00002B                     	ds	2
   586  00002D                     _eusart1RxCount:
   587                           	opt stack 0
   588  00002D                     	ds	1
   589  00002E                     _eusart1RxHead:
   590                           	opt stack 0
   591  00002E                     	ds	1
   592  00002F                     _eusart1RxTail:
   593                           	opt stack 0
   594  00002F                     	ds	1
   595  000030                     _eusart1TxHead:
   596                           	opt stack 0
   597  000030                     	ds	1
   598  000031                     _eusart1TxTail:
   599                           	opt stack 0
   600  000031                     	ds	1
   601  000032                     _inc:
   602                           	opt stack 0
   603  000032                     	ds	1
   604  000033                     _ready:
   605                           	opt stack 0
   606  000033                     	ds	1
   607  000034                     _uartState:
   608                           	opt stack 0
   609  000034                     	ds	1
   610  000035                     _val:
   611                           	opt stack 0
   612  000035                     	ds	1
   613                           tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           postinc0	equ	0xFEE
   618                           wreg	equ	0xFE8
   619                           postdec1	equ	0xFE5
   620                           fsr1l	equ	0xFE1
   621                           
   622                           	psect	dataCOMRAM
   623  000036                     __pdataCOMRAM:
   624                           	opt stack 0
   625  000036                     _randx:
   626                           	opt stack 0
   627  000036                     	ds	4
   628                           tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           postinc0	equ	0xFEE
   633                           wreg	equ	0xFE8
   634                           postdec1	equ	0xFE5
   635                           fsr1l	equ	0xFE1
   636                           
   637                           	psect	bssBANK0
   638  000060                     __pbssBANK0:
   639                           	opt stack 0
   640  000060                     _line:
   641                           	opt stack 0
   642  000060                     	ds	128
   643                           tblptru	equ	0xFF8
   644                           tblptrh	equ	0xFF7
   645                           tblptrl	equ	0xFF6
   646                           tablat	equ	0xFF5
   647                           postinc0	equ	0xFEE
   648                           wreg	equ	0xFE8
   649                           postdec1	equ	0xFE5
   650                           fsr1l	equ	0xFE1
   651                           
   652                           	psect	bssBANK1
   653  000100                     __pbssBANK1:
   654                           	opt stack 0
   655  000100                     _eusart1TxBuffer:
   656                           	opt stack 0
   657  000100                     	ds	128
   658  000180                     _uuid:
   659                           	opt stack 0
   660  000180                     	ds	40
   661                           tblptru	equ	0xFF8
   662                           tblptrh	equ	0xFF7
   663                           tblptrl	equ	0xFF6
   664                           tablat	equ	0xFF5
   665                           postinc0	equ	0xFEE
   666                           wreg	equ	0xFE8
   667                           postdec1	equ	0xFE5
   668                           fsr1l	equ	0xFE1
   669                           
   670                           	psect	bssBANK2
   671  000200                     __pbssBANK2:
   672                           	opt stack 0
   673  000200                     _eusart1RxBuffer:
   674                           	opt stack 0
   675  000200                     	ds	128
   676                           tblptru	equ	0xFF8
   677                           tblptrh	equ	0xFF7
   678                           tblptrl	equ	0xFF6
   679                           tablat	equ	0xFF5
   680                           postinc0	equ	0xFEE
   681                           wreg	equ	0xFE8
   682                           postdec1	equ	0xFE5
   683                           fsr1l	equ	0xFE1
   684                           
   685                           	psect	cstackBANK1
   686  0001A8                     __pcstackBANK1:
   687                           	opt stack 0
   688  0001A8                     process_data_opt@msb:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x0
   692  0001A8                     	ds	1
   693  0001A9                     process_data_opt@exponent:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x1
   697  0001A9                     	ds	2
   698  0001AB                     process_data_opt@raw:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x3
   702  0001AB                     	ds	2
   703  0001AD                     process_data_opt@Illumination:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x5
   707  0001AD                     	ds	4
   708  0001B1                     process_data_opt@result:
   709                           	opt stack 0
   710                           
   711                           ; 4 bytes @ 0x9
   712  0001B1                     	ds	4
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           postinc0	equ	0xFEE
   718                           wreg	equ	0xFE8
   719                           postdec1	equ	0xFE5
   720                           fsr1l	equ	0xFE1
   721                           
   722                           	psect	cstackBANK0
   723  0000E0                     __pcstackBANK0:
   724                           	opt stack 0
   725  0000E0                     ?___lmul:
   726                           	opt stack 0
   727  0000E0                     ___lwdiv@counter:
   728                           	opt stack 0
   729  0000E0                     ___lmul@multiplier:
   730                           	opt stack 0
   731                           
   732                           ; 4 bytes @ 0x0
   733  0000E0                     	ds	1
   734  0000E1                     ___lwdiv@quotient:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x1
   738  0000E1                     	ds	2
   739  0000E3                     ?___lwmod:
   740                           	opt stack 0
   741  0000E3                     ___lwmod@dividend:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x3
   745  0000E3                     	ds	1
   746  0000E4                     ___lmul@multiplicand:
   747                           	opt stack 0
   748                           
   749                           ; 4 bytes @ 0x4
   750  0000E4                     	ds	1
   751  0000E5                     ___lwmod@divisor:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x5
   755  0000E5                     	ds	2
   756  0000E7                     ?_printf:
   757                           	opt stack 0
   758  0000E7                     printf@f:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x7
   762  0000E7                     	ds	1
   763  0000E8                     ?___awmod:
   764                           	opt stack 0
   765  0000E8                     ?_strtol:
   766                           	opt stack 0
   767  0000E8                     ___awmod@dividend:
   768                           	opt stack 0
   769  0000E8                     strtol@s:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x8
   773  0000E8                     	ds	2
   774  0000EA                     ___awmod@divisor:
   775                           	opt stack 0
   776  0000EA                     strtol@endptr:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0xA
   780  0000EA                     	ds	2
   781  0000EC                     ___awmod@counter:
   782                           	opt stack 0
   783  0000EC                     strtol@base:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0xC
   787  0000EC                     	ds	1
   788  0000ED                     printf@idx:
   789                           	opt stack 0
   790  0000ED                     ___awmod@sign:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0xD
   794  0000ED                     	ds	1
   795  0000EE                     ??_strtol:
   796  0000EE                     printf@ap:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0xE
   800  0000EE                     	ds	2
   801  0000F0                     printf@prec:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x10
   805  0000F0                     	ds	1
   806  0000F1                     printf@flag:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x11
   810  0000F1                     	ds	1
   811  0000F2                     strtol@sign:
   812                           	opt stack 0
   813  0000F2                     printf@val:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x12
   817  0000F2                     	ds	1
   818  0000F3                     strtol@a:
   819                           	opt stack 0
   820                           
   821                           ; 4 bytes @ 0x13
   822  0000F3                     	ds	1
   823  0000F4                     printf@c:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x14
   827  0000F4                     	ds	1
   828  0000F5                     process_data_opt@lsb:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0x15
   832  0000F5                     	ds	1
   833  0000F6                     ??_process_data_opt:
   834                           
   835                           ; 1 bytes @ 0x16
   836  0000F6                     	ds	1
   837  0000F7                     strtol@c:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x17
   841  0000F7                     	ds	1
   842  0000F8                     srand@x:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x18
   846  0000F8                     	ds	2
   847  0000FA                     ??_main:
   848                           
   849                           ; 1 bytes @ 0x1A
   850  0000FA                     	ds	1
   851  0000FB                     main@delay:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x1B
   855  0000FB                     	ds	2
   856  0000FD                     main@msb:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x1D
   860  0000FD                     	ds	1
   861  0000FE                     main@lsb:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0x1E
   865  0000FE                     	ds	1
   866                           tblptru	equ	0xFF8
   867                           tblptrh	equ	0xFF7
   868                           tblptrl	equ	0xFF6
   869                           tablat	equ	0xFF5
   870                           postinc0	equ	0xFEE
   871                           wreg	equ	0xFE8
   872                           postdec1	equ	0xFE5
   873                           fsr1l	equ	0xFE1
   874                           
   875                           	psect	cstackCOMRAM
   876  000001                     __pcstackCOMRAM:
   877                           	opt stack 0
   878  000001                     ?_strcmp:
   879                           	opt stack 0
   880  000001                     ?_strlen:
   881                           	opt stack 0
   882  000001                     ?_strchr:
   883                           	opt stack 0
   884  000001                     EUSART1_Read@readValue:
   885                           	opt stack 0
   886  000001                     strcmp@s1:
   887                           	opt stack 0
   888  000001                     strchr@ptr:
   889                           	opt stack 0
   890  000001                     strlen@s:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x0
   894  000001                     	ds	2
   895  000003                     ??_strlen:
   896  000003                     strcmp@s2:
   897                           	opt stack 0
   898  000003                     strchr@chr:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x2
   902  000003                     	ds	2
   903  000005                     ??_strcmp:
   904  000005                     strlen@cp:
   905                           	opt stack 0
   906                           
   907                           ; 2 bytes @ 0x4
   908  000005                     	ds	1
   909  000006                     strcmp@r:
   910                           	opt stack 0
   911                           
   912                           ; 1 bytes @ 0x5
   913  000006                     	ds	1
   914  000007                     ?_strncmp:
   915                           	opt stack 0
   916  000007                     strncmp@s1:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x6
   920  000007                     	ds	2
   921  000009                     strncmp@s2:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x8
   925  000009                     	ds	2
   926  00000B                     strncmp@len:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0xA
   930  00000B                     	ds	2
   931  00000D                     ??_strncmp:
   932                           
   933                           ; 1 bytes @ 0xC
   934  00000D                     	ds	3
   935  000010                     ?_strstr:
   936                           	opt stack 0
   937  000010                     strstr@s1:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0xF
   941  000010                     	ds	2
   942  000012                     strstr@s2:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0x11
   946  000012                     	ds	2
   947  000014                     ??_EUSART1_Receive_ISR:
   948  000014                     
   949                           ; 1 bytes @ 0x13
   950  000014                     	ds	1
   951  000015                     EUSART1_Receive_ISR@state:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x14
   955  000015                     	ds	2
   956  000017                     ??_INTERRUPT_InterruptManager:
   957                           
   958                           ; 1 bytes @ 0x16
   959  000017                     	ds	14
   960  000025                     ??_Soft_I2C_Init:
   961  000025                     ??_isspace:
   962  000025                     ??_isdigit:
   963  000025                     ??_isupper:
   964  000025                     ?___lwdiv:
   965                           	opt stack 0
   966  000025                     EUSART1_Write@txData:
   967                           	opt stack 0
   968  000025                     Soft_I2C_WriteByte@byt:
   969                           	opt stack 0
   970  000025                     Soft_I2C_ReadByte@ack:
   971                           	opt stack 0
   972  000025                     toupper@c:
   973                           	opt stack 0
   974  000025                     wait_5ms@j:
   975                           	opt stack 0
   976  000025                     ___lwdiv@dividend:
   977                           	opt stack 0
   978  000025                     strcpy@to:
   979                           	opt stack 0
   980  000025                     ___lmul@product:
   981                           	opt stack 0
   982                           
   983                           ; 4 bytes @ 0x24
   984  000025                     	ds	1
   985  000026                     putch@txData:
   986                           	opt stack 0
   987  000026                     Soft_I2C_WriteByte@i:
   988                           	opt stack 0
   989  000026                     Soft_I2C_ReadByte@val:
   990                           	opt stack 0
   991  000026                     _isdigit$1480:
   992                           	opt stack 0
   993  000026                     _isspace$1483:
   994                           	opt stack 0
   995  000026                     _isupper$1486:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x25
   999  000026                     	ds	1
  1000  000027                     ??_wait_5ms:
  1001  000027                     Soft_I2C_ReadByte@i:
  1002                           	opt stack 0
  1003  000027                     isdigit@c:
  1004                           	opt stack 0
  1005  000027                     isspace@c:
  1006                           	opt stack 0
  1007  000027                     isupper@c:
  1008                           	opt stack 0
  1009  000027                     ___lwdiv@divisor:
  1010                           	opt stack 0
  1011  000027                     strcpy@from:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x26
  1015  000027                     	ds	1
  1016  000028                     ??_isalpha:
  1017                           
  1018                           ; 1 bytes @ 0x27
  1019  000028                     	ds	1
  1020  000029                     ?_rand:
  1021                           	opt stack 0
  1022  000029                     ___lwmod@counter:
  1023                           	opt stack 0
  1024  000029                     _isalpha$1477:
  1025                           	opt stack 0
  1026  000029                     strcpy@cp:
  1027                           	opt stack 0
  1028                           
  1029                           ; 2 bytes @ 0x28
  1030  000029                     	ds	1
  1031  00002A                     ??_printf:
  1032  00002A                     wait_5ms@i:
  1033                           	opt stack 0
  1034  00002A                     isalpha@c:
  1035                           	opt stack 0
  1036                           
  1037                           ; 1 bytes @ 0x29
  1038  00002A                     	ds	1
  1039  00002B                     tblptru	equ	0xFF8
  1040                           tblptrh	equ	0xFF7
  1041                           tblptrl	equ	0xFF6
  1042                           tablat	equ	0xFF5
  1043                           postinc0	equ	0xFEE
  1044                           wreg	equ	0xFE8
  1045                           postdec1	equ	0xFE5
  1046                           fsr1l	equ	0xFE1
  1047                           
  1048                           ; 1 bytes @ 0x2A
  1049 ;;
  1050 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1051 ;;
  1052 ;; *************** function _main *****************
  1053 ;; Defined at:
  1054 ;;		line 111 in file "main.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  lsb             1   30[BANK0 ] unsigned char 
  1059 ;;  msb             1   29[BANK0 ] unsigned char 
  1060 ;;  delay           2   27[BANK0 ] int 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;Total ram usage:        5 bytes
  1075 ;; Hardware stack levels required when called:    8
  1076 ;; This function calls:
  1077 ;;		_SYSTEM_Initialize
  1078 ;;		_Soft_I2C_Init
  1079 ;;		_Soft_I2C_ReadByte
  1080 ;;		_Soft_I2C_Start
  1081 ;;		_Soft_I2C_Stop
  1082 ;;		_Soft_I2C_WriteByte
  1083 ;;		___awmod
  1084 ;;		_getUUID
  1085 ;;		_printf
  1086 ;;		_process_data_opt
  1087 ;;		_rand
  1088 ;;		_read_line
  1089 ;;		_srand
  1090 ;;		_strtol
  1091 ;;		_wait_5ms
  1092 ;; This function is called by:
  1093 ;;		Startup code after reset
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text0
  1098  000098                     __ptext0:
  1099                           	opt stack 0
  1100  000098                     _main:
  1101                           	opt stack 23
  1102                           
  1103                           ;main.c: 112: SYSTEM_Initialize();
  1104                           
  1105                           ;incstack = 0
  1106  000098  EC3E  F00C         	call	_SYSTEM_Initialize	;wreg free
  1107                           
  1108                           ;main.c: 113: (INTCONbits.GIE = 1);
  1109  00009C  8EF2               	bsf	intcon,7,c	;volatile
  1110                           
  1111                           ;main.c: 114: (INTCONbits.PEIE = 1);
  1112  00009E  8CF2               	bsf	intcon,6,c	;volatile
  1113                           
  1114                           ;main.c: 115: ANSELCbits.ANSC4=0;
  1115  0000A0  010F               	movlb	15	; () banked
  1116  0000A2  993A               	bcf	58,4,b	;volatile
  1117                           
  1118                           ; BSR set to: 15
  1119                           ;main.c: 118: Soft_I2C_Init();
  1120  0000A4  ECF1  F00B         	call	_Soft_I2C_Init	;wreg free
  1121                           
  1122                           ;main.c: 120: Soft_I2C_Start();
  1123  0000A8  EC87  F00B         	call	_Soft_I2C_Start	;wreg free
  1124                           
  1125                           ;main.c: 121: Soft_I2C_WriteByte(0x88);
  1126  0000AC  0E88               	movlw	136
  1127  0000AE  EC8E  F009         	call	_Soft_I2C_WriteByte
  1128                           
  1129                           ;main.c: 122: Soft_I2C_WriteByte(0x01);
  1130  0000B2  0E01               	movlw	1
  1131  0000B4  EC8E  F009         	call	_Soft_I2C_WriteByte
  1132                           
  1133                           ;main.c: 123: Soft_I2C_WriteByte(0xC4);
  1134  0000B8  0EC4               	movlw	196
  1135  0000BA  EC8E  F009         	call	_Soft_I2C_WriteByte
  1136                           
  1137                           ;main.c: 124: Soft_I2C_WriteByte(0x10);
  1138  0000BE  0E10               	movlw	16
  1139  0000C0  EC8E  F009         	call	_Soft_I2C_WriteByte
  1140                           
  1141                           ;main.c: 125: Soft_I2C_Stop();
  1142  0000C4  EC2F  F00C         	call	_Soft_I2C_Stop	;wreg free
  1143                           
  1144                           ;main.c: 127: _delay((unsigned long)((1)*(64000000/4000.0)));
  1145  0000C8  0E15               	movlw	21
  1146  0000CA  0100               	movlb	0	; () banked
  1147  0000CC  6FFA               	movwf	??_main& (0+255),b
  1148  0000CE  0EC6               	movlw	198
  1149  0000D0                     u2827:
  1150  0000D0  2EE8               	decfsz	wreg,f,c
  1151  0000D2  D7FE               	goto	u2827
  1152  0000D4  2FFA               	decfsz	??_main& (0+255),f,b
  1153  0000D6  D7FC               	goto	u2827
  1154  0000D8  D000               	nop2	
  1155  0000DA                     l3709:
  1156                           
  1157                           ;main.c: 131: Soft_I2C_Start();
  1158  0000DA  EC87  F00B         	call	_Soft_I2C_Start	;wreg free
  1159                           
  1160                           ;main.c: 132: Soft_I2C_WriteByte(0x88);
  1161  0000DE  0E88               	movlw	136
  1162  0000E0  EC8E  F009         	call	_Soft_I2C_WriteByte
  1163                           
  1164                           ;main.c: 133: Soft_I2C_WriteByte(0x7E);
  1165  0000E4  0E7E               	movlw	126
  1166  0000E6  EC8E  F009         	call	_Soft_I2C_WriteByte
  1167                           
  1168                           ;main.c: 134: Soft_I2C_Start();
  1169  0000EA  EC87  F00B         	call	_Soft_I2C_Start	;wreg free
  1170                           
  1171                           ;main.c: 135: Soft_I2C_WriteByte(0x89);
  1172  0000EE  0E89               	movlw	137
  1173  0000F0  EC8E  F009         	call	_Soft_I2C_WriteByte
  1174                           
  1175                           ;main.c: 136: uint8_t msb = Soft_I2C_ReadByte(1);
  1176  0000F4  0E01               	movlw	1
  1177  0000F6  EC73  F008         	call	_Soft_I2C_ReadByte
  1178  0000FA  0100               	movlb	0	; () banked
  1179  0000FC  6FFD               	movwf	main@msb& (0+255),b
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;main.c: 137: uint8_t lsb = Soft_I2C_ReadByte(0);
  1183  0000FE  0E00               	movlw	0
  1184  000100  EC73  F008         	call	_Soft_I2C_ReadByte
  1185  000104  0100               	movlb	0	; () banked
  1186  000106  6FFE               	movwf	main@lsb& (0+255),b
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;main.c: 138: Soft_I2C_Stop();
  1190  000108  EC2F  F00C         	call	_Soft_I2C_Stop	;wreg free
  1191                           
  1192                           ;main.c: 139: printf("%x %x\r\n",msb,lsb);
  1193  00010C  0EEF               	movlw	low STR_7
  1194  00010E  0100               	movlb	0	; () banked
  1195  000110  6FE7               	movwf	printf@f& (0+255),b
  1196  000112  0EFF               	movlw	high STR_7
  1197  000114  0100               	movlb	0	; () banked
  1198  000116  6FE8               	movwf	(printf@f+1)& (0+255),b
  1199  000118  C0FD  F0E9         	movff	main@msb,?_printf+2
  1200  00011C  0100               	movlb	0	; () banked
  1201  00011E  6BEA               	clrf	(?_printf+3)& (0+255),b
  1202  000120  C0FE  F0EB         	movff	main@lsb,?_printf+4
  1203  000124  0100               	movlb	0	; () banked
  1204  000126  6BEC               	clrf	(?_printf+5)& (0+255),b
  1205  000128  EC33  F005         	call	_printf	;wreg free
  1206                           
  1207                           ;main.c: 140: process_data_opt(msb,lsb);
  1208  00012C  C0FE  F0F5         	movff	main@lsb,process_data_opt@lsb
  1209  000130  0100               	movlb	0	; () banked
  1210  000132  51FD               	movf	main@msb& (0+255),w,b
  1211  000134  ECBD  F003         	call	_process_data_opt
  1212                           
  1213                           ;main.c: 142: _delay((unsigned long)((10)*(64000000/4000.0)));
  1214  000138  0ED0               	movlw	208
  1215  00013A  0100               	movlb	0	; () banked
  1216  00013C  6FFA               	movwf	??_main& (0+255),b
  1217  00013E  0ECA               	movlw	202
  1218  000140                     u2837:
  1219  000140  2EE8               	decfsz	wreg,f,c
  1220  000142  D7FE               	goto	u2837
  1221  000144  2FFA               	decfsz	??_main& (0+255),f,b
  1222  000146  D7FC               	goto	u2837
  1223                           
  1224                           ;main.c: 143: _delay((unsigned long)((10)*(64000000/4000.0)));
  1225  000148  0ED0               	movlw	208
  1226  00014A  0100               	movlb	0	; () banked
  1227  00014C  6FFA               	movwf	??_main& (0+255),b
  1228  00014E  0ECA               	movlw	202
  1229  000150                     u2847:
  1230  000150  2EE8               	decfsz	wreg,f,c
  1231  000152  D7FE               	goto	u2847
  1232  000154  2FFA               	decfsz	??_main& (0+255),f,b
  1233  000156  D7FC               	goto	u2847
  1234                           
  1235                           ;main.c: 144: _delay((unsigned long)((10)*(64000000/4000.0)));
  1236  000158  0ED0               	movlw	208
  1237  00015A  0100               	movlb	0	; () banked
  1238  00015C  6FFA               	movwf	??_main& (0+255),b
  1239  00015E  0ECA               	movlw	202
  1240  000160                     u2857:
  1241  000160  2EE8               	decfsz	wreg,f,c
  1242  000162  D7FE               	goto	u2857
  1243  000164  2FFA               	decfsz	??_main& (0+255),f,b
  1244  000166  D7FC               	goto	u2857
  1245                           
  1246                           ;main.c: 145: _delay((unsigned long)((10)*(64000000/4000.0)));
  1247  000168  0ED0               	movlw	208
  1248  00016A  0100               	movlb	0	; () banked
  1249  00016C  6FFA               	movwf	??_main& (0+255),b
  1250  00016E  0ECA               	movlw	202
  1251  000170                     u2867:
  1252  000170  2EE8               	decfsz	wreg,f,c
  1253  000172  D7FE               	goto	u2867
  1254  000174  2FFA               	decfsz	??_main& (0+255),f,b
  1255  000176  D7FC               	goto	u2867
  1256                           
  1257                           ;main.c: 146: _delay((unsigned long)((10)*(64000000/4000.0)));
  1258  000178  0ED0               	movlw	208
  1259  00017A  0100               	movlb	0	; () banked
  1260  00017C  6FFA               	movwf	??_main& (0+255),b
  1261  00017E  0ECA               	movlw	202
  1262  000180                     u2877:
  1263  000180  2EE8               	decfsz	wreg,f,c
  1264  000182  D7FE               	goto	u2877
  1265  000184  2FFA               	decfsz	??_main& (0+255),f,b
  1266  000186  D7FC               	goto	u2877
  1267                           
  1268                           ;main.c: 147: _delay((unsigned long)((10)*(64000000/4000.0)));
  1269  000188  0ED0               	movlw	208
  1270  00018A  0100               	movlb	0	; () banked
  1271  00018C  6FFA               	movwf	??_main& (0+255),b
  1272  00018E  0ECA               	movlw	202
  1273  000190                     u2887:
  1274  000190  2EE8               	decfsz	wreg,f,c
  1275  000192  D7FE               	goto	u2887
  1276  000194  2FFA               	decfsz	??_main& (0+255),f,b
  1277  000196  D7FC               	goto	u2887
  1278                           
  1279                           ;main.c: 148: _delay((unsigned long)((10)*(64000000/4000.0)));
  1280  000198  0ED0               	movlw	208
  1281  00019A  0100               	movlb	0	; () banked
  1282  00019C  6FFA               	movwf	??_main& (0+255),b
  1283  00019E  0ECA               	movlw	202
  1284  0001A0                     u2897:
  1285  0001A0  2EE8               	decfsz	wreg,f,c
  1286  0001A2  D7FE               	goto	u2897
  1287  0001A4  2FFA               	decfsz	??_main& (0+255),f,b
  1288  0001A6  D7FC               	goto	u2897
  1289                           
  1290                           ;main.c: 149: _delay((unsigned long)((10)*(64000000/4000.0)));
  1291  0001A8  0ED0               	movlw	208
  1292  0001AA  0100               	movlb	0	; () banked
  1293  0001AC  6FFA               	movwf	??_main& (0+255),b
  1294  0001AE  0ECA               	movlw	202
  1295  0001B0                     u2907:
  1296  0001B0  2EE8               	decfsz	wreg,f,c
  1297  0001B2  D7FE               	goto	u2907
  1298  0001B4  2FFA               	decfsz	??_main& (0+255),f,b
  1299  0001B6  D7FC               	goto	u2907
  1300                           
  1301                           ;main.c: 150: _delay((unsigned long)((10)*(64000000/4000.0)));
  1302  0001B8  0ED0               	movlw	208
  1303  0001BA  0100               	movlb	0	; () banked
  1304  0001BC  6FFA               	movwf	??_main& (0+255),b
  1305  0001BE  0ECA               	movlw	202
  1306  0001C0                     u2917:
  1307  0001C0  2EE8               	decfsz	wreg,f,c
  1308  0001C2  D7FE               	goto	u2917
  1309  0001C4  2FFA               	decfsz	??_main& (0+255),f,b
  1310  0001C6  D7FC               	goto	u2917
  1311                           
  1312                           ;main.c: 151: _delay((unsigned long)((10)*(64000000/4000.0)));
  1313  0001C8  0ED0               	movlw	208
  1314  0001CA  0100               	movlb	0	; () banked
  1315  0001CC  6FFA               	movwf	??_main& (0+255),b
  1316  0001CE  0ECA               	movlw	202
  1317  0001D0                     u2927:
  1318  0001D0  2EE8               	decfsz	wreg,f,c
  1319  0001D2  D7FE               	goto	u2927
  1320  0001D4  2FFA               	decfsz	??_main& (0+255),f,b
  1321  0001D6  D7FC               	goto	u2927
  1322                           
  1323                           ;main.c: 152: _delay((unsigned long)((10)*(64000000/4000.0)));
  1324  0001D8  0ED0               	movlw	208
  1325  0001DA  0100               	movlb	0	; () banked
  1326  0001DC  6FFA               	movwf	??_main& (0+255),b
  1327  0001DE  0ECA               	movlw	202
  1328  0001E0                     u2937:
  1329  0001E0  2EE8               	decfsz	wreg,f,c
  1330  0001E2  D7FE               	goto	u2937
  1331  0001E4  2FFA               	decfsz	??_main& (0+255),f,b
  1332  0001E6  D7FC               	goto	u2937
  1333                           
  1334                           ;main.c: 153: _delay((unsigned long)((10)*(64000000/4000.0)));
  1335  0001E8  0ED0               	movlw	208
  1336  0001EA  0100               	movlb	0	; () banked
  1337  0001EC  6FFA               	movwf	??_main& (0+255),b
  1338  0001EE  0ECA               	movlw	202
  1339  0001F0                     u2947:
  1340  0001F0  2EE8               	decfsz	wreg,f,c
  1341  0001F2  D7FE               	goto	u2947
  1342  0001F4  2FFA               	decfsz	??_main& (0+255),f,b
  1343  0001F6  D7FC               	goto	u2947
  1344                           
  1345                           ;main.c: 154: _delay((unsigned long)((10)*(64000000/4000.0)));
  1346  0001F8  0ED0               	movlw	208
  1347  0001FA  0100               	movlb	0	; () banked
  1348  0001FC  6FFA               	movwf	??_main& (0+255),b
  1349  0001FE  0ECA               	movlw	202
  1350  000200                     u2957:
  1351  000200  2EE8               	decfsz	wreg,f,c
  1352  000202  D7FE               	goto	u2957
  1353  000204  2FFA               	decfsz	??_main& (0+255),f,b
  1354  000206  D7FC               	goto	u2957
  1355                           
  1356                           ;main.c: 155: _delay((unsigned long)((10)*(64000000/4000.0)));
  1357  000208  0ED0               	movlw	208
  1358  00020A  0100               	movlb	0	; () banked
  1359  00020C  6FFA               	movwf	??_main& (0+255),b
  1360  00020E  0ECA               	movlw	202
  1361  000210                     u2967:
  1362  000210  2EE8               	decfsz	wreg,f,c
  1363  000212  D7FE               	goto	u2967
  1364  000214  2FFA               	decfsz	??_main& (0+255),f,b
  1365  000216  D7FC               	goto	u2967
  1366                           
  1367                           ;main.c: 156: _delay((unsigned long)((10)*(64000000/4000.0)));
  1368  000218  0ED0               	movlw	208
  1369  00021A  0100               	movlb	0	; () banked
  1370  00021C  6FFA               	movwf	??_main& (0+255),b
  1371  00021E  0ECA               	movlw	202
  1372  000220                     u2977:
  1373  000220  2EE8               	decfsz	wreg,f,c
  1374  000222  D7FE               	goto	u2977
  1375  000224  2FFA               	decfsz	??_main& (0+255),f,b
  1376  000226  D7FC               	goto	u2977
  1377                           
  1378                           ;main.c: 157: _delay((unsigned long)((10)*(64000000/4000.0)));
  1379  000228  0ED0               	movlw	208
  1380  00022A  0100               	movlb	0	; () banked
  1381  00022C  6FFA               	movwf	??_main& (0+255),b
  1382  00022E  0ECA               	movlw	202
  1383  000230                     u2987:
  1384  000230  2EE8               	decfsz	wreg,f,c
  1385  000232  D7FE               	goto	u2987
  1386  000234  2FFA               	decfsz	??_main& (0+255),f,b
  1387  000236  D7FC               	goto	u2987
  1388                           
  1389                           ;main.c: 158: _delay((unsigned long)((10)*(64000000/4000.0)));
  1390  000238  0ED0               	movlw	208
  1391  00023A  0100               	movlb	0	; () banked
  1392  00023C  6FFA               	movwf	??_main& (0+255),b
  1393  00023E  0ECA               	movlw	202
  1394  000240                     u2997:
  1395  000240  2EE8               	decfsz	wreg,f,c
  1396  000242  D7FE               	goto	u2997
  1397  000244  2FFA               	decfsz	??_main& (0+255),f,b
  1398  000246  D7FC               	goto	u2997
  1399                           
  1400                           ;main.c: 159: _delay((unsigned long)((10)*(64000000/4000.0)));
  1401  000248  0ED0               	movlw	208
  1402  00024A  0100               	movlb	0	; () banked
  1403  00024C  6FFA               	movwf	??_main& (0+255),b
  1404  00024E  0ECA               	movlw	202
  1405  000250                     u3007:
  1406  000250  2EE8               	decfsz	wreg,f,c
  1407  000252  D7FE               	goto	u3007
  1408  000254  2FFA               	decfsz	??_main& (0+255),f,b
  1409  000256  D7FC               	goto	u3007
  1410                           
  1411                           ;main.c: 160: _delay((unsigned long)((10)*(64000000/4000.0)));
  1412  000258  0ED0               	movlw	208
  1413  00025A  0100               	movlb	0	; () banked
  1414  00025C  6FFA               	movwf	??_main& (0+255),b
  1415  00025E  0ECA               	movlw	202
  1416  000260                     u3017:
  1417  000260  2EE8               	decfsz	wreg,f,c
  1418  000262  D7FE               	goto	u3017
  1419  000264  2FFA               	decfsz	??_main& (0+255),f,b
  1420  000266  D7FC               	goto	u3017
  1421                           
  1422                           ;main.c: 161: _delay((unsigned long)((10)*(64000000/4000.0)));
  1423  000268  0ED0               	movlw	208
  1424  00026A  0100               	movlb	0	; () banked
  1425  00026C  6FFA               	movwf	??_main& (0+255),b
  1426  00026E  0ECA               	movlw	202
  1427  000270                     u3027:
  1428  000270  2EE8               	decfsz	wreg,f,c
  1429  000272  D7FE               	goto	u3027
  1430  000274  2FFA               	decfsz	??_main& (0+255),f,b
  1431  000276  D7FC               	goto	u3027
  1432                           
  1433                           ;main.c: 162: _delay((unsigned long)((10)*(64000000/4000.0)));
  1434  000278  0ED0               	movlw	208
  1435  00027A  0100               	movlb	0	; () banked
  1436  00027C  6FFA               	movwf	??_main& (0+255),b
  1437  00027E  0ECA               	movlw	202
  1438  000280                     u3037:
  1439  000280  2EE8               	decfsz	wreg,f,c
  1440  000282  D7FE               	goto	u3037
  1441  000284  2FFA               	decfsz	??_main& (0+255),f,b
  1442  000286  D7FC               	goto	u3037
  1443                           
  1444                           ;main.c: 163: _delay((unsigned long)((10)*(64000000/4000.0)));
  1445  000288  0ED0               	movlw	208
  1446  00028A  0100               	movlb	0	; () banked
  1447  00028C  6FFA               	movwf	??_main& (0+255),b
  1448  00028E  0ECA               	movlw	202
  1449  000290                     u3047:
  1450  000290  2EE8               	decfsz	wreg,f,c
  1451  000292  D7FE               	goto	u3047
  1452  000294  2FFA               	decfsz	??_main& (0+255),f,b
  1453  000296  D7FC               	goto	u3047
  1454                           
  1455                           ;main.c: 164: _delay((unsigned long)((10)*(64000000/4000.0)));
  1456  000298  0ED0               	movlw	208
  1457  00029A  0100               	movlb	0	; () banked
  1458  00029C  6FFA               	movwf	??_main& (0+255),b
  1459  00029E  0ECA               	movlw	202
  1460  0002A0                     u3057:
  1461  0002A0  2EE8               	decfsz	wreg,f,c
  1462  0002A2  D7FE               	goto	u3057
  1463  0002A4  2FFA               	decfsz	??_main& (0+255),f,b
  1464  0002A6  D7FC               	goto	u3057
  1465                           
  1466                           ;main.c: 165: _delay((unsigned long)((10)*(64000000/4000.0)));
  1467  0002A8  0ED0               	movlw	208
  1468  0002AA  0100               	movlb	0	; () banked
  1469  0002AC  6FFA               	movwf	??_main& (0+255),b
  1470  0002AE  0ECA               	movlw	202
  1471  0002B0                     u3067:
  1472  0002B0  2EE8               	decfsz	wreg,f,c
  1473  0002B2  D7FE               	goto	u3067
  1474  0002B4  2FFA               	decfsz	??_main& (0+255),f,b
  1475  0002B6  D7FC               	goto	u3067
  1476                           
  1477                           ;main.c: 166: _delay((unsigned long)((10)*(64000000/4000.0)));
  1478  0002B8  0ED0               	movlw	208
  1479  0002BA  0100               	movlb	0	; () banked
  1480  0002BC  6FFA               	movwf	??_main& (0+255),b
  1481  0002BE  0ECA               	movlw	202
  1482  0002C0                     u3077:
  1483  0002C0  2EE8               	decfsz	wreg,f,c
  1484  0002C2  D7FE               	goto	u3077
  1485  0002C4  2FFA               	decfsz	??_main& (0+255),f,b
  1486  0002C6  D7FC               	goto	u3077
  1487                           
  1488                           ;main.c: 167: _delay((unsigned long)((10)*(64000000/4000.0)));
  1489  0002C8  0ED0               	movlw	208
  1490  0002CA  0100               	movlb	0	; () banked
  1491  0002CC  6FFA               	movwf	??_main& (0+255),b
  1492  0002CE  0ECA               	movlw	202
  1493  0002D0                     u3087:
  1494  0002D0  2EE8               	decfsz	wreg,f,c
  1495  0002D2  D7FE               	goto	u3087
  1496  0002D4  2FFA               	decfsz	??_main& (0+255),f,b
  1497  0002D6  D7FC               	goto	u3087
  1498                           
  1499                           ;main.c: 168: _delay((unsigned long)((10)*(64000000/4000.0)));
  1500  0002D8  0ED0               	movlw	208
  1501  0002DA  0100               	movlb	0	; () banked
  1502  0002DC  6FFA               	movwf	??_main& (0+255),b
  1503  0002DE  0ECA               	movlw	202
  1504  0002E0                     u3097:
  1505  0002E0  2EE8               	decfsz	wreg,f,c
  1506  0002E2  D7FE               	goto	u3097
  1507  0002E4  2FFA               	decfsz	??_main& (0+255),f,b
  1508  0002E6  D7FC               	goto	u3097
  1509                           
  1510                           ;main.c: 169: _delay((unsigned long)((10)*(64000000/4000.0)));
  1511  0002E8  0ED0               	movlw	208
  1512  0002EA  0100               	movlb	0	; () banked
  1513  0002EC  6FFA               	movwf	??_main& (0+255),b
  1514  0002EE  0ECA               	movlw	202
  1515  0002F0                     u3107:
  1516  0002F0  2EE8               	decfsz	wreg,f,c
  1517  0002F2  D7FE               	goto	u3107
  1518  0002F4  2FFA               	decfsz	??_main& (0+255),f,b
  1519  0002F6  D7FC               	goto	u3107
  1520                           
  1521                           ;main.c: 170: _delay((unsigned long)((10)*(64000000/4000.0)));
  1522  0002F8  0ED0               	movlw	208
  1523  0002FA  0100               	movlb	0	; () banked
  1524  0002FC  6FFA               	movwf	??_main& (0+255),b
  1525  0002FE  0ECA               	movlw	202
  1526  000300                     u3117:
  1527  000300  2EE8               	decfsz	wreg,f,c
  1528  000302  D7FE               	goto	u3117
  1529  000304  2FFA               	decfsz	??_main& (0+255),f,b
  1530  000306  D7FC               	goto	u3117
  1531                           
  1532                           ;main.c: 171: _delay((unsigned long)((10)*(64000000/4000.0)));
  1533  000308  0ED0               	movlw	208
  1534  00030A  0100               	movlb	0	; () banked
  1535  00030C  6FFA               	movwf	??_main& (0+255),b
  1536  00030E  0ECA               	movlw	202
  1537  000310                     u3127:
  1538  000310  2EE8               	decfsz	wreg,f,c
  1539  000312  D7FE               	goto	u3127
  1540  000314  2FFA               	decfsz	??_main& (0+255),f,b
  1541  000316  D7FC               	goto	u3127
  1542                           
  1543                           ;main.c: 172: _delay((unsigned long)((10)*(64000000/4000.0)));
  1544  000318  0ED0               	movlw	208
  1545  00031A  0100               	movlb	0	; () banked
  1546  00031C  6FFA               	movwf	??_main& (0+255),b
  1547  00031E  0ECA               	movlw	202
  1548  000320                     u3137:
  1549  000320  2EE8               	decfsz	wreg,f,c
  1550  000322  D7FE               	goto	u3137
  1551  000324  2FFA               	decfsz	??_main& (0+255),f,b
  1552  000326  D7FC               	goto	u3137
  1553                           
  1554                           ;main.c: 173: _delay((unsigned long)((10)*(64000000/4000.0)));
  1555  000328  0ED0               	movlw	208
  1556  00032A  0100               	movlb	0	; () banked
  1557  00032C  6FFA               	movwf	??_main& (0+255),b
  1558  00032E  0ECA               	movlw	202
  1559  000330                     u3147:
  1560  000330  2EE8               	decfsz	wreg,f,c
  1561  000332  D7FE               	goto	u3147
  1562  000334  2FFA               	decfsz	??_main& (0+255),f,b
  1563  000336  D7FC               	goto	u3147
  1564                           
  1565                           ;main.c: 174: _delay((unsigned long)((10)*(64000000/4000.0)));
  1566  000338  0ED0               	movlw	208
  1567  00033A  0100               	movlb	0	; () banked
  1568  00033C  6FFA               	movwf	??_main& (0+255),b
  1569  00033E  0ECA               	movlw	202
  1570  000340                     u3157:
  1571  000340  2EE8               	decfsz	wreg,f,c
  1572  000342  D7FE               	goto	u3157
  1573  000344  2FFA               	decfsz	??_main& (0+255),f,b
  1574  000346  D7FC               	goto	u3157
  1575                           
  1576                           ;main.c: 175: _delay((unsigned long)((10)*(64000000/4000.0)));
  1577  000348  0ED0               	movlw	208
  1578  00034A  0100               	movlb	0	; () banked
  1579  00034C  6FFA               	movwf	??_main& (0+255),b
  1580  00034E  0ECA               	movlw	202
  1581  000350                     u3167:
  1582  000350  2EE8               	decfsz	wreg,f,c
  1583  000352  D7FE               	goto	u3167
  1584  000354  2FFA               	decfsz	??_main& (0+255),f,b
  1585  000356  D7FC               	goto	u3167
  1586                           
  1587                           ;main.c: 176: _delay((unsigned long)((10)*(64000000/4000.0)));
  1588  000358  0ED0               	movlw	208
  1589  00035A  0100               	movlb	0	; () banked
  1590  00035C  6FFA               	movwf	??_main& (0+255),b
  1591  00035E  0ECA               	movlw	202
  1592  000360                     u3177:
  1593  000360  2EE8               	decfsz	wreg,f,c
  1594  000362  D7FE               	goto	u3177
  1595  000364  2FFA               	decfsz	??_main& (0+255),f,b
  1596  000366  D7FC               	goto	u3177
  1597                           
  1598                           ;main.c: 177: _delay((unsigned long)((10)*(64000000/4000.0)));
  1599  000368  0ED0               	movlw	208
  1600  00036A  0100               	movlb	0	; () banked
  1601  00036C  6FFA               	movwf	??_main& (0+255),b
  1602  00036E  0ECA               	movlw	202
  1603  000370                     u3187:
  1604  000370  2EE8               	decfsz	wreg,f,c
  1605  000372  D7FE               	goto	u3187
  1606  000374  2FFA               	decfsz	??_main& (0+255),f,b
  1607  000376  D7FC               	goto	u3187
  1608                           
  1609                           ;main.c: 178: _delay((unsigned long)((10)*(64000000/4000.0)));
  1610  000378  0ED0               	movlw	208
  1611  00037A  0100               	movlb	0	; () banked
  1612  00037C  6FFA               	movwf	??_main& (0+255),b
  1613  00037E  0ECA               	movlw	202
  1614  000380                     u3197:
  1615  000380  2EE8               	decfsz	wreg,f,c
  1616  000382  D7FE               	goto	u3197
  1617  000384  2FFA               	decfsz	??_main& (0+255),f,b
  1618  000386  D7FC               	goto	u3197
  1619                           
  1620                           ;main.c: 179: _delay((unsigned long)((10)*(64000000/4000.0)));
  1621  000388  0ED0               	movlw	208
  1622  00038A  0100               	movlb	0	; () banked
  1623  00038C  6FFA               	movwf	??_main& (0+255),b
  1624  00038E  0ECA               	movlw	202
  1625  000390                     u3207:
  1626  000390  2EE8               	decfsz	wreg,f,c
  1627  000392  D7FE               	goto	u3207
  1628  000394  2FFA               	decfsz	??_main& (0+255),f,b
  1629  000396  D7FC               	goto	u3207
  1630                           
  1631                           ;main.c: 180: _delay((unsigned long)((10)*(64000000/4000.0)));
  1632  000398  0ED0               	movlw	208
  1633  00039A  0100               	movlb	0	; () banked
  1634  00039C  6FFA               	movwf	??_main& (0+255),b
  1635  00039E  0ECA               	movlw	202
  1636  0003A0                     u3217:
  1637  0003A0  2EE8               	decfsz	wreg,f,c
  1638  0003A2  D7FE               	goto	u3217
  1639  0003A4  2FFA               	decfsz	??_main& (0+255),f,b
  1640  0003A6  D7FC               	goto	u3217
  1641                           
  1642                           ;main.c: 181: _delay((unsigned long)((10)*(64000000/4000.0)));
  1643  0003A8  0ED0               	movlw	208
  1644  0003AA  0100               	movlb	0	; () banked
  1645  0003AC  6FFA               	movwf	??_main& (0+255),b
  1646  0003AE  0ECA               	movlw	202
  1647  0003B0                     u3227:
  1648  0003B0  2EE8               	decfsz	wreg,f,c
  1649  0003B2  D7FE               	goto	u3227
  1650  0003B4  2FFA               	decfsz	??_main& (0+255),f,b
  1651  0003B6  D7FC               	goto	u3227
  1652                           
  1653                           ;main.c: 182: _delay((unsigned long)((10)*(64000000/4000.0)));
  1654  0003B8  0ED0               	movlw	208
  1655  0003BA  0100               	movlb	0	; () banked
  1656  0003BC  6FFA               	movwf	??_main& (0+255),b
  1657  0003BE  0ECA               	movlw	202
  1658  0003C0                     u3237:
  1659  0003C0  2EE8               	decfsz	wreg,f,c
  1660  0003C2  D7FE               	goto	u3237
  1661  0003C4  2FFA               	decfsz	??_main& (0+255),f,b
  1662  0003C6  D7FC               	goto	u3237
  1663                           
  1664                           ;main.c: 183: _delay((unsigned long)((10)*(64000000/4000.0)));
  1665  0003C8  0ED0               	movlw	208
  1666  0003CA  0100               	movlb	0	; () banked
  1667  0003CC  6FFA               	movwf	??_main& (0+255),b
  1668  0003CE  0ECA               	movlw	202
  1669  0003D0                     u3247:
  1670  0003D0  2EE8               	decfsz	wreg,f,c
  1671  0003D2  D7FE               	goto	u3247
  1672  0003D4  2FFA               	decfsz	??_main& (0+255),f,b
  1673  0003D6  D7FC               	goto	u3247
  1674                           
  1675                           ;main.c: 184: _delay((unsigned long)((10)*(64000000/4000.0)));
  1676  0003D8  0ED0               	movlw	208
  1677  0003DA  0100               	movlb	0	; () banked
  1678  0003DC  6FFA               	movwf	??_main& (0+255),b
  1679  0003DE  0ECA               	movlw	202
  1680  0003E0                     u3257:
  1681  0003E0  2EE8               	decfsz	wreg,f,c
  1682  0003E2  D7FE               	goto	u3257
  1683  0003E4  2FFA               	decfsz	??_main& (0+255),f,b
  1684  0003E6  D7FC               	goto	u3257
  1685                           
  1686                           ;main.c: 185: _delay((unsigned long)((10)*(64000000/4000.0)));
  1687  0003E8  0ED0               	movlw	208
  1688  0003EA  0100               	movlb	0	; () banked
  1689  0003EC  6FFA               	movwf	??_main& (0+255),b
  1690  0003EE  0ECA               	movlw	202
  1691  0003F0                     u3267:
  1692  0003F0  2EE8               	decfsz	wreg,f,c
  1693  0003F2  D7FE               	goto	u3267
  1694  0003F4  2FFA               	decfsz	??_main& (0+255),f,b
  1695  0003F6  D7FC               	goto	u3267
  1696                           
  1697                           ;main.c: 186: _delay((unsigned long)((10)*(64000000/4000.0)));
  1698  0003F8  0ED0               	movlw	208
  1699  0003FA  0100               	movlb	0	; () banked
  1700  0003FC  6FFA               	movwf	??_main& (0+255),b
  1701  0003FE  0ECA               	movlw	202
  1702  000400                     u3277:
  1703  000400  2EE8               	decfsz	wreg,f,c
  1704  000402  D7FE               	goto	u3277
  1705  000404  2FFA               	decfsz	??_main& (0+255),f,b
  1706  000406  D7FC               	goto	u3277
  1707                           
  1708                           ;main.c: 187: _delay((unsigned long)((10)*(64000000/4000.0)));
  1709  000408  0ED0               	movlw	208
  1710  00040A  0100               	movlb	0	; () banked
  1711  00040C  6FFA               	movwf	??_main& (0+255),b
  1712  00040E  0ECA               	movlw	202
  1713  000410                     u3287:
  1714  000410  2EE8               	decfsz	wreg,f,c
  1715  000412  D7FE               	goto	u3287
  1716  000414  2FFA               	decfsz	??_main& (0+255),f,b
  1717  000416  D7FC               	goto	u3287
  1718                           
  1719                           ;main.c: 188: _delay((unsigned long)((10)*(64000000/4000.0)));
  1720  000418  0ED0               	movlw	208
  1721  00041A  0100               	movlb	0	; () banked
  1722  00041C  6FFA               	movwf	??_main& (0+255),b
  1723  00041E  0ECA               	movlw	202
  1724  000420                     u3297:
  1725  000420  2EE8               	decfsz	wreg,f,c
  1726  000422  D7FE               	goto	u3297
  1727  000424  2FFA               	decfsz	??_main& (0+255),f,b
  1728  000426  D7FC               	goto	u3297
  1729                           
  1730                           ;main.c: 189: _delay((unsigned long)((10)*(64000000/4000.0)));
  1731  000428  0ED0               	movlw	208
  1732  00042A  0100               	movlb	0	; () banked
  1733  00042C  6FFA               	movwf	??_main& (0+255),b
  1734  00042E  0ECA               	movlw	202
  1735  000430                     u3307:
  1736  000430  2EE8               	decfsz	wreg,f,c
  1737  000432  D7FE               	goto	u3307
  1738  000434  2FFA               	decfsz	??_main& (0+255),f,b
  1739  000436  D7FC               	goto	u3307
  1740                           
  1741                           ;main.c: 190: _delay((unsigned long)((10)*(64000000/4000.0)));
  1742  000438  0ED0               	movlw	208
  1743  00043A  0100               	movlb	0	; () banked
  1744  00043C  6FFA               	movwf	??_main& (0+255),b
  1745  00043E  0ECA               	movlw	202
  1746  000440                     u3317:
  1747  000440  2EE8               	decfsz	wreg,f,c
  1748  000442  D7FE               	goto	u3317
  1749  000444  2FFA               	decfsz	??_main& (0+255),f,b
  1750  000446  D7FC               	goto	u3317
  1751                           
  1752                           ;main.c: 191: _delay((unsigned long)((10)*(64000000/4000.0)));
  1753  000448  0ED0               	movlw	208
  1754  00044A  0100               	movlb	0	; () banked
  1755  00044C  6FFA               	movwf	??_main& (0+255),b
  1756  00044E  0ECA               	movlw	202
  1757  000450                     u3327:
  1758  000450  2EE8               	decfsz	wreg,f,c
  1759  000452  D7FE               	goto	u3327
  1760  000454  2FFA               	decfsz	??_main& (0+255),f,b
  1761  000456  D7FC               	goto	u3327
  1762                           
  1763                           ;main.c: 192: _delay((unsigned long)((10)*(64000000/4000.0)));
  1764  000458  0ED0               	movlw	208
  1765  00045A  0100               	movlb	0	; () banked
  1766  00045C  6FFA               	movwf	??_main& (0+255),b
  1767  00045E  0ECA               	movlw	202
  1768  000460                     u3337:
  1769  000460  2EE8               	decfsz	wreg,f,c
  1770  000462  D7FE               	goto	u3337
  1771  000464  2FFA               	decfsz	??_main& (0+255),f,b
  1772  000466  D7FC               	goto	u3337
  1773                           
  1774                           ;main.c: 193: _delay((unsigned long)((10)*(64000000/4000.0)));
  1775  000468  0ED0               	movlw	208
  1776  00046A  0100               	movlb	0	; () banked
  1777  00046C  6FFA               	movwf	??_main& (0+255),b
  1778  00046E  0ECA               	movlw	202
  1779  000470                     u3347:
  1780  000470  2EE8               	decfsz	wreg,f,c
  1781  000472  D7FE               	goto	u3347
  1782  000474  2FFA               	decfsz	??_main& (0+255),f,b
  1783  000476  D7FC               	goto	u3347
  1784                           
  1785                           ;main.c: 194: _delay((unsigned long)((10)*(64000000/4000.0)));
  1786  000478  0ED0               	movlw	208
  1787  00047A  0100               	movlb	0	; () banked
  1788  00047C  6FFA               	movwf	??_main& (0+255),b
  1789  00047E  0ECA               	movlw	202
  1790  000480                     u3357:
  1791  000480  2EE8               	decfsz	wreg,f,c
  1792  000482  D7FE               	goto	u3357
  1793  000484  2FFA               	decfsz	??_main& (0+255),f,b
  1794  000486  D7FC               	goto	u3357
  1795                           
  1796                           ;main.c: 195: _delay((unsigned long)((10)*(64000000/4000.0)));
  1797  000488  0ED0               	movlw	208
  1798  00048A  0100               	movlb	0	; () banked
  1799  00048C  6FFA               	movwf	??_main& (0+255),b
  1800  00048E  0ECA               	movlw	202
  1801  000490                     u3367:
  1802  000490  2EE8               	decfsz	wreg,f,c
  1803  000492  D7FE               	goto	u3367
  1804  000494  2FFA               	decfsz	??_main& (0+255),f,b
  1805  000496  D7FC               	goto	u3367
  1806                           
  1807                           ;main.c: 196: _delay((unsigned long)((10)*(64000000/4000.0)));
  1808  000498  0ED0               	movlw	208
  1809  00049A  0100               	movlb	0	; () banked
  1810  00049C  6FFA               	movwf	??_main& (0+255),b
  1811  00049E  0ECA               	movlw	202
  1812  0004A0                     u3377:
  1813  0004A0  2EE8               	decfsz	wreg,f,c
  1814  0004A2  D7FE               	goto	u3377
  1815  0004A4  2FFA               	decfsz	??_main& (0+255),f,b
  1816  0004A6  D7FC               	goto	u3377
  1817                           
  1818                           ;main.c: 197: _delay((unsigned long)((10)*(64000000/4000.0)));
  1819  0004A8  0ED0               	movlw	208
  1820  0004AA  0100               	movlb	0	; () banked
  1821  0004AC  6FFA               	movwf	??_main& (0+255),b
  1822  0004AE  0ECA               	movlw	202
  1823  0004B0                     u3387:
  1824  0004B0  2EE8               	decfsz	wreg,f,c
  1825  0004B2  D7FE               	goto	u3387
  1826  0004B4  2FFA               	decfsz	??_main& (0+255),f,b
  1827  0004B6  D7FC               	goto	u3387
  1828                           
  1829                           ;main.c: 198: _delay((unsigned long)((10)*(64000000/4000.0)));
  1830  0004B8  0ED0               	movlw	208
  1831  0004BA  0100               	movlb	0	; () banked
  1832  0004BC  6FFA               	movwf	??_main& (0+255),b
  1833  0004BE  0ECA               	movlw	202
  1834  0004C0                     u3397:
  1835  0004C0  2EE8               	decfsz	wreg,f,c
  1836  0004C2  D7FE               	goto	u3397
  1837  0004C4  2FFA               	decfsz	??_main& (0+255),f,b
  1838  0004C6  D7FC               	goto	u3397
  1839                           
  1840                           ;main.c: 199: _delay((unsigned long)((10)*(64000000/4000.0)));
  1841  0004C8  0ED0               	movlw	208
  1842  0004CA  0100               	movlb	0	; () banked
  1843  0004CC  6FFA               	movwf	??_main& (0+255),b
  1844  0004CE  0ECA               	movlw	202
  1845  0004D0                     u3407:
  1846  0004D0  2EE8               	decfsz	wreg,f,c
  1847  0004D2  D7FE               	goto	u3407
  1848  0004D4  2FFA               	decfsz	??_main& (0+255),f,b
  1849  0004D6  D7FC               	goto	u3407
  1850                           
  1851                           ;main.c: 200: _delay((unsigned long)((10)*(64000000/4000.0)));
  1852  0004D8  0ED0               	movlw	208
  1853  0004DA  0100               	movlb	0	; () banked
  1854  0004DC  6FFA               	movwf	??_main& (0+255),b
  1855  0004DE  0ECA               	movlw	202
  1856  0004E0                     u3417:
  1857  0004E0  2EE8               	decfsz	wreg,f,c
  1858  0004E2  D7FE               	goto	u3417
  1859  0004E4  2FFA               	decfsz	??_main& (0+255),f,b
  1860  0004E6  D7FC               	goto	u3417
  1861                           
  1862                           ;main.c: 201: _delay((unsigned long)((10)*(64000000/4000.0)));
  1863  0004E8  0ED0               	movlw	208
  1864  0004EA  0100               	movlb	0	; () banked
  1865  0004EC  6FFA               	movwf	??_main& (0+255),b
  1866  0004EE  0ECA               	movlw	202
  1867  0004F0                     u3427:
  1868  0004F0  2EE8               	decfsz	wreg,f,c
  1869  0004F2  D7FE               	goto	u3427
  1870  0004F4  2FFA               	decfsz	??_main& (0+255),f,b
  1871  0004F6  D7FC               	goto	u3427
  1872                           
  1873                           ;main.c: 202: _delay((unsigned long)((10)*(64000000/4000.0)));
  1874  0004F8  0ED0               	movlw	208
  1875  0004FA  0100               	movlb	0	; () banked
  1876  0004FC  6FFA               	movwf	??_main& (0+255),b
  1877  0004FE  0ECA               	movlw	202
  1878  000500                     u3437:
  1879  000500  2EE8               	decfsz	wreg,f,c
  1880  000502  D7FE               	goto	u3437
  1881  000504  2FFA               	decfsz	??_main& (0+255),f,b
  1882  000506  D7FC               	goto	u3437
  1883                           
  1884                           ;main.c: 203: _delay((unsigned long)((10)*(64000000/4000.0)));
  1885  000508  0ED0               	movlw	208
  1886  00050A  0100               	movlb	0	; () banked
  1887  00050C  6FFA               	movwf	??_main& (0+255),b
  1888  00050E  0ECA               	movlw	202
  1889  000510                     u3447:
  1890  000510  2EE8               	decfsz	wreg,f,c
  1891  000512  D7FE               	goto	u3447
  1892  000514  2FFA               	decfsz	??_main& (0+255),f,b
  1893  000516  D7FC               	goto	u3447
  1894                           
  1895                           ;main.c: 204: _delay((unsigned long)((10)*(64000000/4000.0)));
  1896  000518  0ED0               	movlw	208
  1897  00051A  0100               	movlb	0	; () banked
  1898  00051C  6FFA               	movwf	??_main& (0+255),b
  1899  00051E  0ECA               	movlw	202
  1900  000520                     u3457:
  1901  000520  2EE8               	decfsz	wreg,f,c
  1902  000522  D7FE               	goto	u3457
  1903  000524  2FFA               	decfsz	??_main& (0+255),f,b
  1904  000526  D7FC               	goto	u3457
  1905                           
  1906                           ;main.c: 205: _delay((unsigned long)((10)*(64000000/4000.0)));
  1907  000528  0ED0               	movlw	208
  1908  00052A  0100               	movlb	0	; () banked
  1909  00052C  6FFA               	movwf	??_main& (0+255),b
  1910  00052E  0ECA               	movlw	202
  1911  000530                     u3467:
  1912  000530  2EE8               	decfsz	wreg,f,c
  1913  000532  D7FE               	goto	u3467
  1914  000534  2FFA               	decfsz	??_main& (0+255),f,b
  1915  000536  D7FC               	goto	u3467
  1916                           
  1917                           ;main.c: 206: _delay((unsigned long)((10)*(64000000/4000.0)));
  1918  000538  0ED0               	movlw	208
  1919  00053A  0100               	movlb	0	; () banked
  1920  00053C  6FFA               	movwf	??_main& (0+255),b
  1921  00053E  0ECA               	movlw	202
  1922  000540                     u3477:
  1923  000540  2EE8               	decfsz	wreg,f,c
  1924  000542  D7FE               	goto	u3477
  1925  000544  2FFA               	decfsz	??_main& (0+255),f,b
  1926  000546  D7FC               	goto	u3477
  1927                           
  1928                           ;main.c: 207: _delay((unsigned long)((10)*(64000000/4000.0)));
  1929  000548  0ED0               	movlw	208
  1930  00054A  0100               	movlb	0	; () banked
  1931  00054C  6FFA               	movwf	??_main& (0+255),b
  1932  00054E  0ECA               	movlw	202
  1933  000550                     u3487:
  1934  000550  2EE8               	decfsz	wreg,f,c
  1935  000552  D7FE               	goto	u3487
  1936  000554  2FFA               	decfsz	??_main& (0+255),f,b
  1937  000556  D7FC               	goto	u3487
  1938                           
  1939                           ;main.c: 208: _delay((unsigned long)((10)*(64000000/4000.0)));
  1940  000558  0ED0               	movlw	208
  1941  00055A  0100               	movlb	0	; () banked
  1942  00055C  6FFA               	movwf	??_main& (0+255),b
  1943  00055E  0ECA               	movlw	202
  1944  000560                     u3497:
  1945  000560  2EE8               	decfsz	wreg,f,c
  1946  000562  D7FE               	goto	u3497
  1947  000564  2FFA               	decfsz	??_main& (0+255),f,b
  1948  000566  D7FC               	goto	u3497
  1949                           
  1950                           ;main.c: 209: _delay((unsigned long)((10)*(64000000/4000.0)));
  1951  000568  0ED0               	movlw	208
  1952  00056A  0100               	movlb	0	; () banked
  1953  00056C  6FFA               	movwf	??_main& (0+255),b
  1954  00056E  0ECA               	movlw	202
  1955  000570                     u3507:
  1956  000570  2EE8               	decfsz	wreg,f,c
  1957  000572  D7FE               	goto	u3507
  1958  000574  2FFA               	decfsz	??_main& (0+255),f,b
  1959  000576  D7FC               	goto	u3507
  1960                           
  1961                           ;main.c: 210: _delay((unsigned long)((10)*(64000000/4000.0)));
  1962  000578  0ED0               	movlw	208
  1963  00057A  0100               	movlb	0	; () banked
  1964  00057C  6FFA               	movwf	??_main& (0+255),b
  1965  00057E  0ECA               	movlw	202
  1966  000580                     u3517:
  1967  000580  2EE8               	decfsz	wreg,f,c
  1968  000582  D7FE               	goto	u3517
  1969  000584  2FFA               	decfsz	??_main& (0+255),f,b
  1970  000586  D7FC               	goto	u3517
  1971                           
  1972                           ;main.c: 211: _delay((unsigned long)((10)*(64000000/4000.0)));
  1973  000588  0ED0               	movlw	208
  1974  00058A  0100               	movlb	0	; () banked
  1975  00058C  6FFA               	movwf	??_main& (0+255),b
  1976  00058E  0ECA               	movlw	202
  1977  000590                     u3527:
  1978  000590  2EE8               	decfsz	wreg,f,c
  1979  000592  D7FE               	goto	u3527
  1980  000594  2FFA               	decfsz	??_main& (0+255),f,b
  1981  000596  D7FC               	goto	u3527
  1982                           
  1983                           ;main.c: 212: _delay((unsigned long)((10)*(64000000/4000.0)));
  1984  000598  0ED0               	movlw	208
  1985  00059A  0100               	movlb	0	; () banked
  1986  00059C  6FFA               	movwf	??_main& (0+255),b
  1987  00059E  0ECA               	movlw	202
  1988  0005A0                     u3537:
  1989  0005A0  2EE8               	decfsz	wreg,f,c
  1990  0005A2  D7FE               	goto	u3537
  1991  0005A4  2FFA               	decfsz	??_main& (0+255),f,b
  1992  0005A6  D7FC               	goto	u3537
  1993                           
  1994                           ;main.c: 213: _delay((unsigned long)((10)*(64000000/4000.0)));
  1995  0005A8  0ED0               	movlw	208
  1996  0005AA  0100               	movlb	0	; () banked
  1997  0005AC  6FFA               	movwf	??_main& (0+255),b
  1998  0005AE  0ECA               	movlw	202
  1999  0005B0                     u3547:
  2000  0005B0  2EE8               	decfsz	wreg,f,c
  2001  0005B2  D7FE               	goto	u3547
  2002  0005B4  2FFA               	decfsz	??_main& (0+255),f,b
  2003  0005B6  D7FC               	goto	u3547
  2004                           
  2005                           ;main.c: 214: _delay((unsigned long)((10)*(64000000/4000.0)));
  2006  0005B8  0ED0               	movlw	208
  2007  0005BA  0100               	movlb	0	; () banked
  2008  0005BC  6FFA               	movwf	??_main& (0+255),b
  2009  0005BE  0ECA               	movlw	202
  2010  0005C0                     u3557:
  2011  0005C0  2EE8               	decfsz	wreg,f,c
  2012  0005C2  D7FE               	goto	u3557
  2013  0005C4  2FFA               	decfsz	??_main& (0+255),f,b
  2014  0005C6  D7FC               	goto	u3557
  2015                           
  2016                           ;main.c: 215: _delay((unsigned long)((10)*(64000000/4000.0)));
  2017  0005C8  0ED0               	movlw	208
  2018  0005CA  0100               	movlb	0	; () banked
  2019  0005CC  6FFA               	movwf	??_main& (0+255),b
  2020  0005CE  0ECA               	movlw	202
  2021  0005D0                     u3567:
  2022  0005D0  2EE8               	decfsz	wreg,f,c
  2023  0005D2  D7FE               	goto	u3567
  2024  0005D4  2FFA               	decfsz	??_main& (0+255),f,b
  2025  0005D6  D7FC               	goto	u3567
  2026                           
  2027                           ;main.c: 216: _delay((unsigned long)((10)*(64000000/4000.0)));
  2028  0005D8  0ED0               	movlw	208
  2029  0005DA  0100               	movlb	0	; () banked
  2030  0005DC  6FFA               	movwf	??_main& (0+255),b
  2031  0005DE  0ECA               	movlw	202
  2032  0005E0                     u3577:
  2033  0005E0  2EE8               	decfsz	wreg,f,c
  2034  0005E2  D7FE               	goto	u3577
  2035  0005E4  2FFA               	decfsz	??_main& (0+255),f,b
  2036  0005E6  D7FC               	goto	u3577
  2037                           
  2038                           ;main.c: 217: _delay((unsigned long)((10)*(64000000/4000.0)));
  2039  0005E8  0ED0               	movlw	208
  2040  0005EA  0100               	movlb	0	; () banked
  2041  0005EC  6FFA               	movwf	??_main& (0+255),b
  2042  0005EE  0ECA               	movlw	202
  2043  0005F0                     u3587:
  2044  0005F0  2EE8               	decfsz	wreg,f,c
  2045  0005F2  D7FE               	goto	u3587
  2046  0005F4  2FFA               	decfsz	??_main& (0+255),f,b
  2047  0005F6  D7FC               	goto	u3587
  2048                           
  2049                           ;main.c: 218: _delay((unsigned long)((10)*(64000000/4000.0)));
  2050  0005F8  0ED0               	movlw	208
  2051  0005FA  0100               	movlb	0	; () banked
  2052  0005FC  6FFA               	movwf	??_main& (0+255),b
  2053  0005FE  0ECA               	movlw	202
  2054  000600                     u3597:
  2055  000600  2EE8               	decfsz	wreg,f,c
  2056  000602  D7FE               	goto	u3597
  2057  000604  2FFA               	decfsz	??_main& (0+255),f,b
  2058  000606  D7FC               	goto	u3597
  2059                           
  2060                           ;main.c: 219: _delay((unsigned long)((10)*(64000000/4000.0)));
  2061  000608  0ED0               	movlw	208
  2062  00060A  0100               	movlb	0	; () banked
  2063  00060C  6FFA               	movwf	??_main& (0+255),b
  2064  00060E  0ECA               	movlw	202
  2065  000610                     u3607:
  2066  000610  2EE8               	decfsz	wreg,f,c
  2067  000612  D7FE               	goto	u3607
  2068  000614  2FFA               	decfsz	??_main& (0+255),f,b
  2069  000616  D7FC               	goto	u3607
  2070                           
  2071                           ;main.c: 220: _delay((unsigned long)((10)*(64000000/4000.0)));
  2072  000618  0ED0               	movlw	208
  2073  00061A  0100               	movlb	0	; () banked
  2074  00061C  6FFA               	movwf	??_main& (0+255),b
  2075  00061E  0ECA               	movlw	202
  2076  000620                     u3617:
  2077  000620  2EE8               	decfsz	wreg,f,c
  2078  000622  D7FE               	goto	u3617
  2079  000624  2FFA               	decfsz	??_main& (0+255),f,b
  2080  000626  D7FC               	goto	u3617
  2081                           
  2082                           ;main.c: 221: _delay((unsigned long)((10)*(64000000/4000.0)));
  2083  000628  0ED0               	movlw	208
  2084  00062A  0100               	movlb	0	; () banked
  2085  00062C  6FFA               	movwf	??_main& (0+255),b
  2086  00062E  0ECA               	movlw	202
  2087  000630                     u3627:
  2088  000630  2EE8               	decfsz	wreg,f,c
  2089  000632  D7FE               	goto	u3627
  2090  000634  2FFA               	decfsz	??_main& (0+255),f,b
  2091  000636  D7FC               	goto	u3627
  2092                           
  2093                           ;main.c: 222: _delay((unsigned long)((10)*(64000000/4000.0)));
  2094  000638  0ED0               	movlw	208
  2095  00063A  0100               	movlb	0	; () banked
  2096  00063C  6FFA               	movwf	??_main& (0+255),b
  2097  00063E  0ECA               	movlw	202
  2098  000640                     u3637:
  2099  000640  2EE8               	decfsz	wreg,f,c
  2100  000642  D7FE               	goto	u3637
  2101  000644  2FFA               	decfsz	??_main& (0+255),f,b
  2102  000646  D7FC               	goto	u3637
  2103                           
  2104                           ;main.c: 223: _delay((unsigned long)((10)*(64000000/4000.0)));
  2105  000648  0ED0               	movlw	208
  2106  00064A  0100               	movlb	0	; () banked
  2107  00064C  6FFA               	movwf	??_main& (0+255),b
  2108  00064E  0ECA               	movlw	202
  2109  000650                     u3647:
  2110  000650  2EE8               	decfsz	wreg,f,c
  2111  000652  D7FE               	goto	u3647
  2112  000654  2FFA               	decfsz	??_main& (0+255),f,b
  2113  000656  D7FC               	goto	u3647
  2114                           
  2115                           ;main.c: 224: _delay((unsigned long)((10)*(64000000/4000.0)));
  2116  000658  0ED0               	movlw	208
  2117  00065A  0100               	movlb	0	; () banked
  2118  00065C  6FFA               	movwf	??_main& (0+255),b
  2119  00065E  0ECA               	movlw	202
  2120  000660                     u3657:
  2121  000660  2EE8               	decfsz	wreg,f,c
  2122  000662  D7FE               	goto	u3657
  2123  000664  2FFA               	decfsz	??_main& (0+255),f,b
  2124  000666  D7FC               	goto	u3657
  2125                           
  2126                           ;main.c: 225: _delay((unsigned long)((10)*(64000000/4000.0)));
  2127  000668  0ED0               	movlw	208
  2128  00066A  0100               	movlb	0	; () banked
  2129  00066C  6FFA               	movwf	??_main& (0+255),b
  2130  00066E  0ECA               	movlw	202
  2131  000670                     u3667:
  2132  000670  2EE8               	decfsz	wreg,f,c
  2133  000672  D7FE               	goto	u3667
  2134  000674  2FFA               	decfsz	??_main& (0+255),f,b
  2135  000676  D7FC               	goto	u3667
  2136                           
  2137                           ;main.c: 226: _delay((unsigned long)((10)*(64000000/4000.0)));
  2138  000678  0ED0               	movlw	208
  2139  00067A  0100               	movlb	0	; () banked
  2140  00067C  6FFA               	movwf	??_main& (0+255),b
  2141  00067E  0ECA               	movlw	202
  2142  000680                     u3677:
  2143  000680  2EE8               	decfsz	wreg,f,c
  2144  000682  D7FE               	goto	u3677
  2145  000684  2FFA               	decfsz	??_main& (0+255),f,b
  2146  000686  D7FC               	goto	u3677
  2147                           
  2148                           ;main.c: 227: _delay((unsigned long)((10)*(64000000/4000.0)));
  2149  000688  0ED0               	movlw	208
  2150  00068A  0100               	movlb	0	; () banked
  2151  00068C  6FFA               	movwf	??_main& (0+255),b
  2152  00068E  0ECA               	movlw	202
  2153  000690                     u3687:
  2154  000690  2EE8               	decfsz	wreg,f,c
  2155  000692  D7FE               	goto	u3687
  2156  000694  2FFA               	decfsz	??_main& (0+255),f,b
  2157  000696  D7FC               	goto	u3687
  2158                           
  2159                           ;main.c: 228: _delay((unsigned long)((10)*(64000000/4000.0)));
  2160  000698  0ED0               	movlw	208
  2161  00069A  0100               	movlb	0	; () banked
  2162  00069C  6FFA               	movwf	??_main& (0+255),b
  2163  00069E  0ECA               	movlw	202
  2164  0006A0                     u3697:
  2165  0006A0  2EE8               	decfsz	wreg,f,c
  2166  0006A2  D7FE               	goto	u3697
  2167  0006A4  2FFA               	decfsz	??_main& (0+255),f,b
  2168  0006A6  D7FC               	goto	u3697
  2169                           
  2170                           ;main.c: 229: _delay((unsigned long)((10)*(64000000/4000.0)));
  2171  0006A8  0ED0               	movlw	208
  2172  0006AA  0100               	movlb	0	; () banked
  2173  0006AC  6FFA               	movwf	??_main& (0+255),b
  2174  0006AE  0ECA               	movlw	202
  2175  0006B0                     u3707:
  2176  0006B0  2EE8               	decfsz	wreg,f,c
  2177  0006B2  D7FE               	goto	u3707
  2178  0006B4  2FFA               	decfsz	??_main& (0+255),f,b
  2179  0006B6  D7FC               	goto	u3707
  2180                           
  2181                           ;main.c: 230: _delay((unsigned long)((10)*(64000000/4000.0)));
  2182  0006B8  0ED0               	movlw	208
  2183  0006BA  0100               	movlb	0	; () banked
  2184  0006BC  6FFA               	movwf	??_main& (0+255),b
  2185  0006BE  0ECA               	movlw	202
  2186  0006C0                     u3717:
  2187  0006C0  2EE8               	decfsz	wreg,f,c
  2188  0006C2  D7FE               	goto	u3717
  2189  0006C4  2FFA               	decfsz	??_main& (0+255),f,b
  2190  0006C6  D7FC               	goto	u3717
  2191                           
  2192                           ;main.c: 231: _delay((unsigned long)((10)*(64000000/4000.0)));
  2193  0006C8  0ED0               	movlw	208
  2194  0006CA  0100               	movlb	0	; () banked
  2195  0006CC  6FFA               	movwf	??_main& (0+255),b
  2196  0006CE  0ECA               	movlw	202
  2197  0006D0                     u3727:
  2198  0006D0  2EE8               	decfsz	wreg,f,c
  2199  0006D2  D7FE               	goto	u3727
  2200  0006D4  2FFA               	decfsz	??_main& (0+255),f,b
  2201  0006D6  D7FC               	goto	u3727
  2202                           
  2203                           ;main.c: 232: _delay((unsigned long)((10)*(64000000/4000.0)));
  2204  0006D8  0ED0               	movlw	208
  2205  0006DA  0100               	movlb	0	; () banked
  2206  0006DC  6FFA               	movwf	??_main& (0+255),b
  2207  0006DE  0ECA               	movlw	202
  2208  0006E0                     u3737:
  2209  0006E0  2EE8               	decfsz	wreg,f,c
  2210  0006E2  D7FE               	goto	u3737
  2211  0006E4  2FFA               	decfsz	??_main& (0+255),f,b
  2212  0006E6  D7FC               	goto	u3737
  2213                           
  2214                           ;main.c: 233: _delay((unsigned long)((10)*(64000000/4000.0)));
  2215  0006E8  0ED0               	movlw	208
  2216  0006EA  0100               	movlb	0	; () banked
  2217  0006EC  6FFA               	movwf	??_main& (0+255),b
  2218  0006EE  0ECA               	movlw	202
  2219  0006F0                     u3747:
  2220  0006F0  2EE8               	decfsz	wreg,f,c
  2221  0006F2  D7FE               	goto	u3747
  2222  0006F4  2FFA               	decfsz	??_main& (0+255),f,b
  2223  0006F6  D7FC               	goto	u3747
  2224                           
  2225                           ;main.c: 234: _delay((unsigned long)((10)*(64000000/4000.0)));
  2226  0006F8  0ED0               	movlw	208
  2227  0006FA  0100               	movlb	0	; () banked
  2228  0006FC  6FFA               	movwf	??_main& (0+255),b
  2229  0006FE  0ECA               	movlw	202
  2230  000700                     u3757:
  2231  000700  2EE8               	decfsz	wreg,f,c
  2232  000702  D7FE               	goto	u3757
  2233  000704  2FFA               	decfsz	??_main& (0+255),f,b
  2234  000706  D7FC               	goto	u3757
  2235                           
  2236                           ;main.c: 235: _delay((unsigned long)((10)*(64000000/4000.0)));
  2237  000708  0ED0               	movlw	208
  2238  00070A  0100               	movlb	0	; () banked
  2239  00070C  6FFA               	movwf	??_main& (0+255),b
  2240  00070E  0ECA               	movlw	202
  2241  000710                     u3767:
  2242  000710  2EE8               	decfsz	wreg,f,c
  2243  000712  D7FE               	goto	u3767
  2244  000714  2FFA               	decfsz	??_main& (0+255),f,b
  2245  000716  D7FC               	goto	u3767
  2246                           
  2247                           ;main.c: 236: _delay((unsigned long)((10)*(64000000/4000.0)));
  2248  000718  0ED0               	movlw	208
  2249  00071A  0100               	movlb	0	; () banked
  2250  00071C  6FFA               	movwf	??_main& (0+255),b
  2251  00071E  0ECA               	movlw	202
  2252  000720                     u3777:
  2253  000720  2EE8               	decfsz	wreg,f,c
  2254  000722  D7FE               	goto	u3777
  2255  000724  2FFA               	decfsz	??_main& (0+255),f,b
  2256  000726  D7FC               	goto	u3777
  2257                           
  2258                           ;main.c: 237: _delay((unsigned long)((10)*(64000000/4000.0)));
  2259  000728  0ED0               	movlw	208
  2260  00072A  0100               	movlb	0	; () banked
  2261  00072C  6FFA               	movwf	??_main& (0+255),b
  2262  00072E  0ECA               	movlw	202
  2263  000730                     u3787:
  2264  000730  2EE8               	decfsz	wreg,f,c
  2265  000732  D7FE               	goto	u3787
  2266  000734  2FFA               	decfsz	??_main& (0+255),f,b
  2267  000736  D7FC               	goto	u3787
  2268                           
  2269                           ;main.c: 238: _delay((unsigned long)((10)*(64000000/4000.0)));
  2270  000738  0ED0               	movlw	208
  2271  00073A  0100               	movlb	0	; () banked
  2272  00073C  6FFA               	movwf	??_main& (0+255),b
  2273  00073E  0ECA               	movlw	202
  2274  000740                     u3797:
  2275  000740  2EE8               	decfsz	wreg,f,c
  2276  000742  D7FE               	goto	u3797
  2277  000744  2FFA               	decfsz	??_main& (0+255),f,b
  2278  000746  D7FC               	goto	u3797
  2279                           
  2280                           ;main.c: 239: _delay((unsigned long)((10)*(64000000/4000.0)));
  2281  000748  0ED0               	movlw	208
  2282  00074A  0100               	movlb	0	; () banked
  2283  00074C  6FFA               	movwf	??_main& (0+255),b
  2284  00074E  0ECA               	movlw	202
  2285  000750                     u3807:
  2286  000750  2EE8               	decfsz	wreg,f,c
  2287  000752  D7FE               	goto	u3807
  2288  000754  2FFA               	decfsz	??_main& (0+255),f,b
  2289  000756  D7FC               	goto	u3807
  2290                           
  2291                           ;main.c: 240: _delay((unsigned long)((10)*(64000000/4000.0)));
  2292  000758  0ED0               	movlw	208
  2293  00075A  0100               	movlb	0	; () banked
  2294  00075C  6FFA               	movwf	??_main& (0+255),b
  2295  00075E  0ECA               	movlw	202
  2296  000760                     u3817:
  2297  000760  2EE8               	decfsz	wreg,f,c
  2298  000762  D7FE               	goto	u3817
  2299  000764  2FFA               	decfsz	??_main& (0+255),f,b
  2300  000766  D7FC               	goto	u3817
  2301                           
  2302                           ;main.c: 241: _delay((unsigned long)((10)*(64000000/4000.0)));
  2303  000768  0ED0               	movlw	208
  2304  00076A  0100               	movlb	0	; () banked
  2305  00076C  6FFA               	movwf	??_main& (0+255),b
  2306  00076E  0ECA               	movlw	202
  2307  000770                     u3827:
  2308  000770  2EE8               	decfsz	wreg,f,c
  2309  000772  D7FE               	goto	u3827
  2310  000774  2FFA               	decfsz	??_main& (0+255),f,b
  2311  000776  D7FC               	goto	u3827
  2312  000778  D4B0               	goto	l3709
  2313  00077A                     __end_of_main:
  2314                           	opt stack 0
  2315                           tblptru	equ	0xFF8
  2316                           tblptrh	equ	0xFF7
  2317                           tblptrl	equ	0xFF6
  2318                           tablat	equ	0xFF5
  2319                           intcon	equ	0xFF2
  2320                           postinc0	equ	0xFEE
  2321                           wreg	equ	0xFE8
  2322                           postdec1	equ	0xFE5
  2323                           fsr1l	equ	0xFE1
  2324                           
  2325 ;; *************** function _wait_5ms *****************
  2326 ;; Defined at:
  2327 ;;		line 42 in file "main.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  j               2   36[COMRAM] int 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  i               1   41[COMRAM] unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;Total ram usage:        6 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    4
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_main
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text1
  2356  001610                     __ptext1:
  2357                           	opt stack 0
  2358  001610                     _wait_5ms:
  2359                           	opt stack 26
  2360                           
  2361                           ;main.c: 43: for(uint8_t i=0;i<j;i++) { _delay((unsigned long)((5)*(64000000/4000.0))); 
      +                          }
  2362                           
  2363                           ;incstack = 0
  2364  001610  0E00               	movlw	0
  2365  001612  6E2A               	movwf	wait_5ms@i,c
  2366  001614  D009               	goto	l284
  2367  001616                     l2737:
  2368  001616  0E68               	movlw	104
  2369  001618  6E27               	movwf	??_wait_5ms& (0+255),c
  2370  00161A  0EE4               	movlw	228
  2371  00161C                     u3837:
  2372  00161C  2EE8               	decfsz	wreg,f,c
  2373  00161E  D7FE               	goto	u3837
  2374  001620  2E27               	decfsz	??_wait_5ms& (0+255),f,c
  2375  001622  D7FC               	goto	u3837
  2376  001624  D000               	nop2	
  2377  001626  2A2A               	incf	wait_5ms@i,f,c
  2378  001628                     l284:
  2379  001628  502A               	movf	wait_5ms@i,w,c
  2380  00162A  6E27               	movwf	??_wait_5ms& (0+255),c
  2381  00162C  6A28               	clrf	(??_wait_5ms+1)& (0+255),c
  2382  00162E  5025               	movf	wait_5ms@j,w,c
  2383  001630  5C27               	subwf	??_wait_5ms,w,c
  2384  001632  5028               	movf	??_wait_5ms+1,w,c
  2385  001634  0A80               	xorlw	128
  2386  001636  6E29               	movwf	(??_wait_5ms+2)& (0+255),c
  2387  001638  5026               	movf	wait_5ms@j+1,w,c
  2388  00163A  0A80               	xorlw	128
  2389  00163C  5829               	subwfb	(??_wait_5ms+2)& (0+255),w,c
  2390  00163E  B0D8               	btfsc	status,0,c
  2391  001640  0012               	return	
  2392  001642  D7E9               	goto	l2737
  2393  001644                     __end_of_wait_5ms:
  2394                           	opt stack 0
  2395                           tblptru	equ	0xFF8
  2396                           tblptrh	equ	0xFF7
  2397                           tblptrl	equ	0xFF6
  2398                           tablat	equ	0xFF5
  2399                           intcon	equ	0xFF2
  2400                           postinc0	equ	0xFEE
  2401                           wreg	equ	0xFE8
  2402                           postdec1	equ	0xFE5
  2403                           fsr1l	equ	0xFE1
  2404                           status	equ	0xFD8
  2405                           
  2406 ;; *************** function _strtol *****************
  2407 ;; Defined at:
  2408 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strtol.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  2411 ;;		 -> uuid(40), 
  2412 ;;  endptr          2   10[BANK0 ] PTR PTR unsigned char 
  2413 ;;		 -> NULL(0), 
  2414 ;;  base            2   12[BANK0 ] int 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  a               4   19[BANK0 ] long 
  2417 ;;  c               1   23[BANK0 ] unsigned char 
  2418 ;;  sign            1   18[BANK0 ] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  4    8[BANK0 ] long 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2428 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;Total ram usage:       16 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    6
  2435 ;; This function calls:
  2436 ;;		___lmul
  2437 ;;		_isalpha
  2438 ;;		_isdigit
  2439 ;;		_isspace
  2440 ;;		_toupper
  2441 ;; This function is called by:
  2442 ;;		_main
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text2
  2447  000CBC                     __ptext2:
  2448                           	opt stack 0
  2449  000CBC                     _strtol:
  2450                           	opt stack 24
  2451  000CBC  C0E8  FFD9         	movff	strtol@s,fsr2l
  2452  000CC0  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  2453  000CC4  50DF               	movf	indf2,w,c
  2454  000CC6  0100               	movlb	0	; () banked
  2455  000CC8  6FF7               	movwf	strtol@c& (0+255),b
  2456                           
  2457                           ; BSR set to: 0
  2458  000CCA  0100               	movlb	0	; () banked
  2459  000CCC  4BE8               	infsnz	strtol@s& (0+255),f,b
  2460  000CCE  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  2461                           
  2462                           ; BSR set to: 0
  2463  000CD0  0100               	movlb	0	; () banked
  2464  000CD2  51F7               	movf	strtol@c& (0+255),w,b
  2465  000CD4  ECDE  F00B         	call	_isspace
  2466  000CD8  B0D8               	btfsc	status,0,c
  2467  000CDA  D7F0               	goto	l3563
  2468  000CDC  0E00               	movlw	0
  2469  000CDE  0100               	movlb	0	; () banked
  2470  000CE0  6FF3               	movwf	strtol@a& (0+255),b
  2471  000CE2  0E00               	movlw	0
  2472  000CE4  6FF4               	movwf	(strtol@a+1)& (0+255),b
  2473  000CE6  0E00               	movlw	0
  2474  000CE8  6FF5               	movwf	(strtol@a+2)& (0+255),b
  2475  000CEA  0E00               	movlw	0
  2476  000CEC  6FF6               	movwf	(strtol@a+3)& (0+255),b
  2477  000CEE  0E00               	movlw	0
  2478  000CF0  0100               	movlb	0	; () banked
  2479  000CF2  6FF2               	movwf	strtol@sign& (0+255),b
  2480                           
  2481                           ; BSR set to: 0
  2482  000CF4  0E2D               	movlw	45
  2483  000CF6  0100               	movlb	0	; () banked
  2484  000CF8  19F7               	xorwf	strtol@c& (0+255),w,b
  2485  000CFA  A4D8               	btfss	status,2,c
  2486  000CFC  D008               	goto	l3579
  2487                           
  2488                           ; BSR set to: 0
  2489  000CFE  0E01               	movlw	1
  2490  000D00  0100               	movlb	0	; () banked
  2491  000D02  6FF2               	movwf	strtol@sign& (0+255),b
  2492  000D04  D009               	goto	l3581
  2493  000D06                     l3577:
  2494                           
  2495                           ; BSR set to: 0
  2496  000D06  0100               	movlb	0	; () banked
  2497  000D08  4BE8               	infsnz	strtol@s& (0+255),f,b
  2498  000D0A  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  2499  000D0C  D00D               	goto	l3585
  2500  000D0E                     l3579:
  2501                           
  2502                           ; BSR set to: 0
  2503  000D0E  0E2B               	movlw	43
  2504  000D10  0100               	movlb	0	; () banked
  2505  000D12  19F7               	xorwf	strtol@c& (0+255),w,b
  2506  000D14  A4D8               	btfss	status,2,c
  2507  000D16  D008               	goto	l3585
  2508  000D18                     l3581:
  2509                           
  2510                           ; BSR set to: 0
  2511  000D18  C0E8  FFD9         	movff	strtol@s,fsr2l
  2512  000D1C  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  2513  000D20  50DF               	movf	indf2,w,c
  2514  000D22  0100               	movlb	0	; () banked
  2515  000D24  6FF7               	movwf	strtol@c& (0+255),b
  2516  000D26  D7EF               	goto	l3577
  2517  000D28                     l3585:
  2518                           
  2519                           ; BSR set to: 0
  2520  000D28  0E30               	movlw	48
  2521  000D2A  0100               	movlb	0	; () banked
  2522  000D2C  19F7               	xorwf	strtol@c& (0+255),w,b
  2523  000D2E  A4D8               	btfss	status,2,c
  2524  000D30  D03C               	goto	l3609
  2525                           
  2526                           ; BSR set to: 0
  2527  000D32  C0E8  FFD9         	movff	strtol@s,fsr2l
  2528  000D36  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  2529  000D3A  50DF               	movf	indf2,w,c
  2530  000D3C  0100               	movlb	0	; () banked
  2531  000D3E  6FF7               	movwf	strtol@c& (0+255),b
  2532                           
  2533                           ; BSR set to: 0
  2534  000D40  0100               	movlb	0	; () banked
  2535  000D42  4BE8               	infsnz	strtol@s& (0+255),f,b
  2536  000D44  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  2537                           
  2538                           ; BSR set to: 0
  2539  000D46  0100               	movlb	0	; () banked
  2540  000D48  51EC               	movf	strtol@base& (0+255),w,b
  2541  000D4A  0100               	movlb	0	; () banked
  2542  000D4C  11ED               	iorwf	(strtol@base+1)& (0+255),w,b
  2543  000D4E  B4D8               	btfsc	status,2,c
  2544  000D50  D007               	goto	l3595
  2545                           
  2546                           ; BSR set to: 0
  2547  000D52  0E10               	movlw	16
  2548  000D54  0100               	movlb	0	; () banked
  2549  000D56  19EC               	xorwf	strtol@base& (0+255),w,b
  2550  000D58  0100               	movlb	0	; () banked
  2551  000D5A  11ED               	iorwf	(strtol@base+1)& (0+255),w,b
  2552  000D5C  A4D8               	btfss	status,2,c
  2553  000D5E  D01A               	goto	l3605
  2554  000D60                     l3595:
  2555                           
  2556                           ; BSR set to: 0
  2557  000D60  0E78               	movlw	120
  2558  000D62  0100               	movlb	0	; () banked
  2559  000D64  19F7               	xorwf	strtol@c& (0+255),w,b
  2560  000D66  B4D8               	btfsc	status,2,c
  2561  000D68  D005               	goto	l3599
  2562                           
  2563                           ; BSR set to: 0
  2564  000D6A  0E58               	movlw	88
  2565  000D6C  0100               	movlb	0	; () banked
  2566  000D6E  19F7               	xorwf	strtol@c& (0+255),w,b
  2567  000D70  A4D8               	btfss	status,2,c
  2568  000D72  D010               	goto	l3605
  2569  000D74                     l3599:
  2570                           
  2571                           ; BSR set to: 0
  2572  000D74  0E00               	movlw	0
  2573  000D76  0100               	movlb	0	; () banked
  2574  000D78  6FED               	movwf	(strtol@base+1)& (0+255),b
  2575  000D7A  0E10               	movlw	16
  2576  000D7C  6FEC               	movwf	strtol@base& (0+255),b
  2577                           
  2578                           ; BSR set to: 0
  2579  000D7E  C0E8  FFD9         	movff	strtol@s,fsr2l
  2580  000D82  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  2581  000D86  50DF               	movf	indf2,w,c
  2582  000D88  0100               	movlb	0	; () banked
  2583  000D8A  6FF7               	movwf	strtol@c& (0+255),b
  2584                           
  2585                           ; BSR set to: 0
  2586  000D8C  0100               	movlb	0	; () banked
  2587  000D8E  4BE8               	infsnz	strtol@s& (0+255),f,b
  2588  000D90  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  2589  000D92  D00B               	goto	l3609
  2590  000D94                     l3605:
  2591                           
  2592                           ; BSR set to: 0
  2593  000D94  0100               	movlb	0	; () banked
  2594  000D96  51EC               	movf	strtol@base& (0+255),w,b
  2595  000D98  0100               	movlb	0	; () banked
  2596  000D9A  11ED               	iorwf	(strtol@base+1)& (0+255),w,b
  2597  000D9C  A4D8               	btfss	status,2,c
  2598  000D9E  D005               	goto	l3609
  2599                           
  2600                           ; BSR set to: 0
  2601  000DA0  0E00               	movlw	0
  2602  000DA2  0100               	movlb	0	; () banked
  2603  000DA4  6FED               	movwf	(strtol@base+1)& (0+255),b
  2604  000DA6  0E08               	movlw	8
  2605  000DA8  6FEC               	movwf	strtol@base& (0+255),b
  2606  000DAA                     l3609:
  2607                           
  2608                           ; BSR set to: 0
  2609  000DAA  0100               	movlb	0	; () banked
  2610  000DAC  51EC               	movf	strtol@base& (0+255),w,b
  2611  000DAE  0100               	movlb	0	; () banked
  2612  000DB0  11ED               	iorwf	(strtol@base+1)& (0+255),w,b
  2613  000DB2  A4D8               	btfss	status,2,c
  2614  000DB4  D005               	goto	l3613
  2615                           
  2616                           ; BSR set to: 0
  2617  000DB6  0E00               	movlw	0
  2618  000DB8  0100               	movlb	0	; () banked
  2619  000DBA  6FED               	movwf	(strtol@base+1)& (0+255),b
  2620  000DBC  0E0A               	movlw	10
  2621  000DBE  6FEC               	movwf	strtol@base& (0+255),b
  2622  000DC0                     l3613:
  2623                           
  2624                           ; BSR set to: 0
  2625  000DC0  0100               	movlb	0	; () banked
  2626  000DC2  51F7               	movf	strtol@c& (0+255),w,b
  2627  000DC4  ECCA  F00B         	call	_isalpha
  2628  000DC8  A0D8               	btfss	status,0,c
  2629  000DCA  D008               	goto	l3617
  2630  000DCC  0100               	movlb	0	; () banked
  2631  000DCE  51F7               	movf	strtol@c& (0+255),w,b
  2632  000DD0  EC4B  F00C         	call	_toupper
  2633  000DD4  0FC9               	addlw	201
  2634  000DD6  0100               	movlb	0	; () banked
  2635  000DD8  6FF7               	movwf	strtol@c& (0+255),b
  2636  000DDA  D009               	goto	l3621
  2637  000DDC                     l3617:
  2638  000DDC  0100               	movlb	0	; () banked
  2639  000DDE  51F7               	movf	strtol@c& (0+255),w,b
  2640  000DE0  EC11  F00C         	call	_isdigit
  2641  000DE4  A0D8               	btfss	status,0,c
  2642  000DE6  D04C               	goto	l3631
  2643  000DE8  0E30               	movlw	48
  2644  000DEA  0100               	movlb	0	; () banked
  2645  000DEC  5FF7               	subwf	strtol@c& (0+255),f,b
  2646  000DEE                     l3621:
  2647                           
  2648                           ; BSR set to: 0
  2649  000DEE  0100               	movlb	0	; () banked
  2650  000DF0  51F7               	movf	strtol@c& (0+255),w,b
  2651  000DF2  0100               	movlb	0	; () banked
  2652  000DF4  6FEE               	movwf	??_strtol& (0+255),b
  2653  000DF6  6BEF               	clrf	(??_strtol+1)& (0+255),b
  2654  000DF8  0100               	movlb	0	; () banked
  2655  000DFA  51EC               	movf	strtol@base& (0+255),w,b
  2656  000DFC  0100               	movlb	0	; () banked
  2657  000DFE  5DEE               	subwf	??_strtol& (0+255),w,b
  2658  000E00  0100               	movlb	0	; () banked
  2659  000E02  51EF               	movf	(??_strtol+1)& (0+255),w,b
  2660  000E04  0A80               	xorlw	128
  2661  000E06  0100               	movlb	0	; () banked
  2662  000E08  6FF0               	movwf	(??_strtol+2)& (0+255),b
  2663  000E0A  0100               	movlb	0	; () banked
  2664  000E0C  51ED               	movf	(strtol@base+1)& (0+255),w,b
  2665  000E0E  0A80               	xorlw	128
  2666  000E10  0100               	movlb	0	; () banked
  2667  000E12  59F0               	subwfb	(??_strtol+2)& (0+255),w,b
  2668  000E14  B0D8               	btfsc	status,0,c
  2669  000E16  D034               	goto	l3631
  2670                           
  2671                           ; BSR set to: 0
  2672                           
  2673                           ; BSR set to: 0
  2674                           
  2675                           ; BSR set to: 0
  2676  000E18  C0EC  F0E0         	movff	strtol@base,___lmul@multiplier
  2677  000E1C  C0ED  F0E1         	movff	strtol@base+1,___lmul@multiplier+1
  2678  000E20  0100               	movlb	0	; () banked
  2679  000E22  0E00               	movlw	0
  2680  000E24  BFE1               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  2681  000E26  0EFF               	movlw	-1
  2682  000E28  6FE2               	movwf	(___lmul@multiplier+2)& (0+255),b
  2683  000E2A  6FE3               	movwf	(___lmul@multiplier+3)& (0+255),b
  2684  000E2C  C0F3  F0E4         	movff	strtol@a,___lmul@multiplicand
  2685  000E30  C0F4  F0E5         	movff	strtol@a+1,___lmul@multiplicand+1
  2686  000E34  C0F5  F0E6         	movff	strtol@a+2,___lmul@multiplicand+2
  2687  000E38  C0F6  F0E7         	movff	strtol@a+3,___lmul@multiplicand+3
  2688  000E3C  ECC6  F009         	call	___lmul	;wreg free
  2689  000E40  0100               	movlb	0	; () banked
  2690  000E42  51F7               	movf	strtol@c& (0+255),w,b
  2691  000E44  0100               	movlb	0	; () banked
  2692  000E46  25E0               	addwf	?___lmul& (0+255),w,b
  2693  000E48  0100               	movlb	0	; () banked
  2694  000E4A  6FF3               	movwf	strtol@a& (0+255),b
  2695  000E4C  0E00               	movlw	0
  2696  000E4E  0100               	movlb	0	; () banked
  2697  000E50  21E1               	addwfc	(?___lmul+1)& (0+255),w,b
  2698  000E52  0100               	movlb	0	; () banked
  2699  000E54  6FF4               	movwf	(strtol@a+1)& (0+255),b
  2700  000E56  0E00               	movlw	0
  2701  000E58  0100               	movlb	0	; () banked
  2702  000E5A  21E2               	addwfc	(?___lmul+2)& (0+255),w,b
  2703  000E5C  0100               	movlb	0	; () banked
  2704  000E5E  6FF5               	movwf	(strtol@a+2)& (0+255),b
  2705  000E60  0E00               	movlw	0
  2706  000E62  0100               	movlb	0	; () banked
  2707  000E64  21E3               	addwfc	(?___lmul+3)& (0+255),w,b
  2708  000E66  0100               	movlb	0	; () banked
  2709  000E68  6FF6               	movwf	(strtol@a+3)& (0+255),b
  2710                           
  2711                           ; BSR set to: 0
  2712  000E6A  C0E8  FFD9         	movff	strtol@s,fsr2l
  2713  000E6E  C0E9  FFDA         	movff	strtol@s+1,fsr2h
  2714  000E72  50DF               	movf	indf2,w,c
  2715  000E74  0100               	movlb	0	; () banked
  2716  000E76  6FF7               	movwf	strtol@c& (0+255),b
  2717                           
  2718                           ; BSR set to: 0
  2719  000E78  0100               	movlb	0	; () banked
  2720  000E7A  4BE8               	infsnz	strtol@s& (0+255),f,b
  2721  000E7C  2BE9               	incf	(strtol@s+1)& (0+255),f,b
  2722  000E7E  D7A0               	goto	l3613
  2723  000E80                     l3631:
  2724  000E80  0100               	movlb	0	; () banked
  2725  000E82  51EA               	movf	strtol@endptr& (0+255),w,b
  2726  000E84  0100               	movlb	0	; () banked
  2727  000E86  11EB               	iorwf	(strtol@endptr+1)& (0+255),w,b
  2728  000E88  B4D8               	btfsc	status,2,c
  2729  000E8A  D012               	goto	l3635
  2730                           
  2731                           ; BSR set to: 0
  2732  000E8C  0EFF               	movlw	255
  2733  000E8E  0100               	movlb	0	; () banked
  2734  000E90  25E8               	addwf	strtol@s& (0+255),w,b
  2735  000E92  0100               	movlb	0	; () banked
  2736  000E94  6FEE               	movwf	??_strtol& (0+255),b
  2737  000E96  0EFF               	movlw	255
  2738  000E98  0100               	movlb	0	; () banked
  2739  000E9A  21E9               	addwfc	(strtol@s+1)& (0+255),w,b
  2740  000E9C  0100               	movlb	0	; () banked
  2741  000E9E  6FEF               	movwf	(??_strtol+1)& (0+255),b
  2742  000EA0  C0EA  FFD9         	movff	strtol@endptr,fsr2l
  2743  000EA4  C0EB  FFDA         	movff	strtol@endptr+1,fsr2h
  2744  000EA8  C0EE  FFDE         	movff	??_strtol,postinc2
  2745  000EAC  C0EF  FFDD         	movff	??_strtol+1,postdec2
  2746  000EB0                     l3635:
  2747                           
  2748                           ; BSR set to: 0
  2749  000EB0  0100               	movlb	0	; () banked
  2750  000EB2  51F2               	movf	strtol@sign& (0+255),w,b
  2751  000EB4  0100               	movlb	0	; () banked
  2752  000EB6  B4D8               	btfsc	status,2,c
  2753  000EB8  D01B               	goto	l1042
  2754                           
  2755                           ; BSR set to: 0
  2756  000EBA  C0F3  F0EE         	movff	strtol@a,??_strtol
  2757  000EBE  C0F4  F0EF         	movff	strtol@a+1,??_strtol+1
  2758  000EC2  C0F5  F0F0         	movff	strtol@a+2,??_strtol+2
  2759  000EC6  C0F6  F0F1         	movff	strtol@a+3,??_strtol+3
  2760  000ECA  0100               	movlb	0	; () banked
  2761  000ECC  1FEE               	comf	??_strtol& (0+255),f,b
  2762  000ECE  1FEF               	comf	(??_strtol+1)& (0+255),f,b
  2763  000ED0  1FF0               	comf	(??_strtol+2)& (0+255),f,b
  2764  000ED2  1FF1               	comf	(??_strtol+3)& (0+255),f,b
  2765  000ED4  2BEE               	incf	??_strtol& (0+255),f,b
  2766  000ED6  0E00               	movlw	0
  2767  000ED8  23EF               	addwfc	(??_strtol+1)& (0+255),f,b
  2768  000EDA  23F0               	addwfc	(??_strtol+2)& (0+255),f,b
  2769  000EDC  23F1               	addwfc	(??_strtol+3)& (0+255),f,b
  2770  000EDE  C0EE  F0E8         	movff	??_strtol,?_strtol
  2771  000EE2  C0EF  F0E9         	movff	??_strtol+1,?_strtol+1
  2772  000EE6  C0F0  F0EA         	movff	??_strtol+2,?_strtol+2
  2773  000EEA  C0F1  F0EB         	movff	??_strtol+3,?_strtol+3
  2774                           
  2775                           ; BSR set to: 0
  2776  000EEE  0012               	return	
  2777  000EF0                     l1042:
  2778                           
  2779                           ; BSR set to: 0
  2780  000EF0  C0F3  F0E8         	movff	strtol@a,?_strtol
  2781  000EF4  C0F4  F0E9         	movff	strtol@a+1,?_strtol+1
  2782  000EF8  C0F5  F0EA         	movff	strtol@a+2,?_strtol+2
  2783  000EFC  C0F6  F0EB         	movff	strtol@a+3,?_strtol+3
  2784                           
  2785                           ; BSR set to: 0
  2786  000F00  0012               	return		;funcret
  2787  000F02                     __end_of_strtol:
  2788                           	opt stack 0
  2789                           tblptru	equ	0xFF8
  2790                           tblptrh	equ	0xFF7
  2791                           tblptrl	equ	0xFF6
  2792                           tablat	equ	0xFF5
  2793                           intcon	equ	0xFF2
  2794                           postinc0	equ	0xFEE
  2795                           wreg	equ	0xFE8
  2796                           postdec1	equ	0xFE5
  2797                           fsr1l	equ	0xFE1
  2798                           indf2	equ	0xFDF
  2799                           postinc2	equ	0xFDE
  2800                           postdec2	equ	0xFDD
  2801                           fsr2h	equ	0xFDA
  2802                           fsr2l	equ	0xFD9
  2803                           status	equ	0xFD8
  2804                           
  2805 ;; *************** function _toupper *****************
  2806 ;; Defined at:
  2807 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\toupper.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  c               1    wreg     unsigned char 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  c               1   36[COMRAM] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      unsigned char 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;Total ram usage:        1 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    4
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_strtol
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text3
  2836  001896                     __ptext3:
  2837                           	opt stack 0
  2838  001896                     _toupper:
  2839                           	opt stack 25
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;incstack = 0
  2843                           ;toupper@c stored from wreg
  2844  001896  6E25               	movwf	toupper@c,c
  2845  001898  0E7B               	movlw	123
  2846  00189A  6025               	cpfslt	toupper@c,c
  2847  00189C  D004               	goto	l2637
  2848  00189E  0E60               	movlw	96
  2849  0018A0  6425               	cpfsgt	toupper@c,c
  2850  0018A2  D001               	goto	l2637
  2851  0018A4  9A25               	bcf	toupper@c,5,c
  2852  0018A6                     l2637:
  2853  0018A6  5025               	movf	toupper@c,w,c
  2854  0018A8  0012               	return	
  2855  0018AA                     __end_of_toupper:
  2856                           	opt stack 0
  2857                           tblptru	equ	0xFF8
  2858                           tblptrh	equ	0xFF7
  2859                           tblptrl	equ	0xFF6
  2860                           tablat	equ	0xFF5
  2861                           intcon	equ	0xFF2
  2862                           postinc0	equ	0xFEE
  2863                           wreg	equ	0xFE8
  2864                           postdec1	equ	0xFE5
  2865                           fsr1l	equ	0xFE1
  2866                           indf2	equ	0xFDF
  2867                           postinc2	equ	0xFDE
  2868                           postdec2	equ	0xFDD
  2869                           fsr2h	equ	0xFDA
  2870                           fsr2l	equ	0xFD9
  2871                           status	equ	0xFD8
  2872                           
  2873 ;; *************** function _isspace *****************
  2874 ;; Defined at:
  2875 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isspace.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  c               1    wreg     unsigned char 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  c               1   38[COMRAM] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;		None               void
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;Total ram usage:        3 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    4
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_strtol
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text4
  2904  0017BC                     __ptext4:
  2905                           	opt stack 0
  2906  0017BC                     _isspace:
  2907                           	opt stack 25
  2908                           
  2909                           ;incstack = 0
  2910                           ;isspace@c stored from wreg
  2911  0017BC  6E27               	movwf	isspace@c,c
  2912  0017BE  0E01               	movlw	1
  2913  0017C0  6E26               	movwf	_isspace$1483,c
  2914  0017C2  0E20               	movlw	32
  2915  0017C4  1827               	xorwf	isspace@c,w,c
  2916  0017C6  B4D8               	btfsc	status,2,c
  2917  0017C8  D008               	goto	l2613
  2918  0017CA  0E0E               	movlw	14
  2919  0017CC  6027               	cpfslt	isspace@c,c
  2920  0017CE  D003               	goto	l2611
  2921  0017D0  0E09               	movlw	9
  2922  0017D2  6027               	cpfslt	isspace@c,c
  2923  0017D4  D002               	goto	l2613
  2924  0017D6                     l2611:
  2925  0017D6  0E00               	movlw	0
  2926  0017D8  6E26               	movwf	_isspace$1483,c
  2927  0017DA                     l2613:
  2928  0017DA  C026  F025         	movff	_isspace$1483,??_isspace
  2929  0017DE  3025               	rrcf	??_isspace,w,c
  2930  0017E0  0012               	return	
  2931  0017E2                     __end_of_isspace:
  2932                           	opt stack 0
  2933                           tblptru	equ	0xFF8
  2934                           tblptrh	equ	0xFF7
  2935                           tblptrl	equ	0xFF6
  2936                           tablat	equ	0xFF5
  2937                           intcon	equ	0xFF2
  2938                           postinc0	equ	0xFEE
  2939                           wreg	equ	0xFE8
  2940                           postdec1	equ	0xFE5
  2941                           fsr1l	equ	0xFE1
  2942                           indf2	equ	0xFDF
  2943                           postinc2	equ	0xFDE
  2944                           postdec2	equ	0xFDD
  2945                           fsr2h	equ	0xFDA
  2946                           fsr2l	equ	0xFD9
  2947                           status	equ	0xFD8
  2948                           
  2949 ;; *************** function _isdigit *****************
  2950 ;; Defined at:
  2951 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  c               1    wreg     unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  c               1   38[COMRAM] unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;		None               void
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;Total ram usage:        3 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    4
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_strtol
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text5
  2980  001822                     __ptext5:
  2981                           	opt stack 0
  2982  001822                     _isdigit:
  2983                           	opt stack 25
  2984                           
  2985                           ;incstack = 0
  2986                           ;isdigit@c stored from wreg
  2987  001822  6E27               	movwf	isdigit@c,c
  2988  001824  0E00               	movlw	0
  2989  001826  6E26               	movwf	_isdigit$1480,c
  2990  001828  0E3A               	movlw	58
  2991  00182A  6027               	cpfslt	isdigit@c,c
  2992  00182C  D005               	goto	l2649
  2993  00182E  0E2F               	movlw	47
  2994  001830  6427               	cpfsgt	isdigit@c,c
  2995  001832  D002               	goto	l2649
  2996  001834  0E01               	movlw	1
  2997  001836  6E26               	movwf	_isdigit$1480,c
  2998  001838                     l2649:
  2999  001838  C026  F025         	movff	_isdigit$1480,??_isdigit
  3000  00183C  3025               	rrcf	??_isdigit,w,c
  3001  00183E  0012               	return	
  3002  001840                     __end_of_isdigit:
  3003                           	opt stack 0
  3004                           tblptru	equ	0xFF8
  3005                           tblptrh	equ	0xFF7
  3006                           tblptrl	equ	0xFF6
  3007                           tablat	equ	0xFF5
  3008                           intcon	equ	0xFF2
  3009                           postinc0	equ	0xFEE
  3010                           wreg	equ	0xFE8
  3011                           postdec1	equ	0xFE5
  3012                           fsr1l	equ	0xFE1
  3013                           indf2	equ	0xFDF
  3014                           postinc2	equ	0xFDE
  3015                           postdec2	equ	0xFDD
  3016                           fsr2h	equ	0xFDA
  3017                           fsr2l	equ	0xFD9
  3018                           status	equ	0xFD8
  3019                           
  3020 ;; *************** function _isalpha *****************
  3021 ;; Defined at:
  3022 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isalpha.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  c               1    wreg     unsigned char 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  c               1   41[COMRAM] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;		None               void
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;Total ram usage:        3 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    5
  3043 ;; This function calls:
  3044 ;;		_isupper
  3045 ;; This function is called by:
  3046 ;;		_strtol
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text6
  3051  001794                     __ptext6:
  3052                           	opt stack 0
  3053  001794                     _isalpha:
  3054                           	opt stack 24
  3055                           
  3056                           ;incstack = 0
  3057                           ;isalpha@c stored from wreg
  3058  001794  6E2A               	movwf	isalpha@c,c
  3059  001796  0E01               	movlw	1
  3060  001798  6E29               	movwf	_isalpha$1477,c
  3061  00179A  0E7B               	movlw	123
  3062  00179C  602A               	cpfslt	isalpha@c,c
  3063  00179E  D003               	goto	l2623
  3064  0017A0  0E61               	movlw	97
  3065  0017A2  602A               	cpfslt	isalpha@c,c
  3066  0017A4  D007               	goto	l2627
  3067  0017A6                     l2623:
  3068  0017A6  502A               	movf	isalpha@c,w,c
  3069  0017A8  EC20  F00C         	call	_isupper
  3070  0017AC  B0D8               	btfsc	status,0,c
  3071  0017AE  D002               	goto	l2627
  3072  0017B0  0E00               	movlw	0
  3073  0017B2  6E29               	movwf	_isalpha$1477,c
  3074  0017B4                     l2627:
  3075  0017B4  C029  F028         	movff	_isalpha$1477,??_isalpha
  3076  0017B8  3028               	rrcf	??_isalpha,w,c
  3077  0017BA  0012               	return	
  3078  0017BC                     __end_of_isalpha:
  3079                           	opt stack 0
  3080                           tblptru	equ	0xFF8
  3081                           tblptrh	equ	0xFF7
  3082                           tblptrl	equ	0xFF6
  3083                           tablat	equ	0xFF5
  3084                           intcon	equ	0xFF2
  3085                           postinc0	equ	0xFEE
  3086                           wreg	equ	0xFE8
  3087                           postdec1	equ	0xFE5
  3088                           fsr1l	equ	0xFE1
  3089                           indf2	equ	0xFDF
  3090                           postinc2	equ	0xFDE
  3091                           postdec2	equ	0xFDD
  3092                           fsr2h	equ	0xFDA
  3093                           fsr2l	equ	0xFD9
  3094                           status	equ	0xFD8
  3095                           
  3096 ;; *************** function _isupper *****************
  3097 ;; Defined at:
  3098 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isupper.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  c               1    wreg     unsigned char 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  c               1   38[COMRAM] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;		None               void
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;Total ram usage:        3 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    4
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_isalpha
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text7
  3127  001840                     __ptext7:
  3128                           	opt stack 0
  3129  001840                     _isupper:
  3130                           	opt stack 24
  3131                           
  3132                           ;incstack = 0
  3133                           ;isupper@c stored from wreg
  3134  001840  6E27               	movwf	isupper@c,c
  3135  001842  0E00               	movlw	0
  3136  001844  6E26               	movwf	_isupper$1486,c
  3137  001846  0E5B               	movlw	91
  3138  001848  6027               	cpfslt	isupper@c,c
  3139  00184A  D005               	goto	l2399
  3140  00184C  0E40               	movlw	64
  3141  00184E  6427               	cpfsgt	isupper@c,c
  3142  001850  D002               	goto	l2399
  3143  001852  0E01               	movlw	1
  3144  001854  6E26               	movwf	_isupper$1486,c
  3145  001856                     l2399:
  3146  001856  C026  F025         	movff	_isupper$1486,??_isupper
  3147  00185A  3025               	rrcf	??_isupper,w,c
  3148  00185C  0012               	return	
  3149  00185E                     __end_of_isupper:
  3150                           	opt stack 0
  3151                           tblptru	equ	0xFF8
  3152                           tblptrh	equ	0xFF7
  3153                           tblptrl	equ	0xFF6
  3154                           tablat	equ	0xFF5
  3155                           intcon	equ	0xFF2
  3156                           postinc0	equ	0xFEE
  3157                           wreg	equ	0xFE8
  3158                           postdec1	equ	0xFE5
  3159                           fsr1l	equ	0xFE1
  3160                           indf2	equ	0xFDF
  3161                           postinc2	equ	0xFDE
  3162                           postdec2	equ	0xFDD
  3163                           fsr2h	equ	0xFDA
  3164                           fsr2l	equ	0xFD9
  3165                           status	equ	0xFD8
  3166                           
  3167 ;; *************** function _srand *****************
  3168 ;; Defined at:
  3169 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  x               2   24[BANK0 ] unsigned int 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		status,2
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;Total ram usage:        2 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    4
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text8
  3198  0018BC                     __ptext8:
  3199                           	opt stack 0
  3200  0018BC                     _srand:
  3201                           	opt stack 26
  3202                           
  3203                           ;incstack = 0
  3204  0018BC  C0F8  F036         	movff	srand@x,_randx
  3205  0018C0  C0F9  F037         	movff	srand@x+1,_randx+1
  3206  0018C4  6A38               	clrf	_randx+2,c
  3207  0018C6  6A39               	clrf	_randx+3,c
  3208  0018C8  0012               	return		;funcret
  3209  0018CA                     __end_of_srand:
  3210                           	opt stack 0
  3211                           tblptru	equ	0xFF8
  3212                           tblptrh	equ	0xFF7
  3213                           tblptrl	equ	0xFF6
  3214                           tablat	equ	0xFF5
  3215                           intcon	equ	0xFF2
  3216                           postinc0	equ	0xFEE
  3217                           wreg	equ	0xFE8
  3218                           postdec1	equ	0xFE5
  3219                           fsr1l	equ	0xFE1
  3220                           indf2	equ	0xFDF
  3221                           postinc2	equ	0xFDE
  3222                           postdec2	equ	0xFDD
  3223                           fsr2h	equ	0xFDA
  3224                           fsr2l	equ	0xFD9
  3225                           status	equ	0xFD8
  3226                           
  3227 ;; *************** function _rand *****************
  3228 ;; Defined at:
  3229 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\rand.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  2   40[COMRAM] int 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;Total ram usage:        2 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    5
  3250 ;; This function calls:
  3251 ;;		___lmul
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text9
  3258  00150C                     __ptext9:
  3259                           	opt stack 0
  3260  00150C                     _rand:
  3261                           	opt stack 25
  3262                           
  3263                           ;incstack = 0
  3264  00150C  C036  F0E0         	movff	_randx,___lmul@multiplier
  3265  001510  C037  F0E1         	movff	_randx+1,___lmul@multiplier+1
  3266  001514  C038  F0E2         	movff	_randx+2,___lmul@multiplier+2
  3267  001518  C039  F0E3         	movff	_randx+3,___lmul@multiplier+3
  3268  00151C  0E6D               	movlw	109
  3269  00151E  0100               	movlb	0	; () banked
  3270  001520  6FE4               	movwf	___lmul@multiplicand& (0+255),b
  3271  001522  0E4E               	movlw	78
  3272  001524  6FE5               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3273  001526  0EC6               	movlw	198
  3274  001528  6FE6               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3275  00152A  0E41               	movlw	65
  3276  00152C  6FE7               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3277  00152E  ECC6  F009         	call	___lmul	;wreg free
  3278  001532  C0E0  F036         	movff	?___lmul,_randx
  3279  001536  C0E1  F037         	movff	?___lmul+1,_randx+1
  3280  00153A  C0E2  F038         	movff	?___lmul+2,_randx+2
  3281  00153E  C0E3  F039         	movff	?___lmul+3,_randx+3
  3282  001542  0E39               	movlw	57
  3283  001544  2636               	addwf	_randx,f,c
  3284  001546  0E30               	movlw	48
  3285  001548  2237               	addwfc	_randx+1,f,c
  3286  00154A  0E00               	movlw	0
  3287  00154C  2238               	addwfc	_randx+2,f,c
  3288  00154E  0E00               	movlw	0
  3289  001550  2239               	addwfc	_randx+3,f,c
  3290  001552  0EFF               	movlw	255
  3291  001554  1438               	andwf	_randx+2,w,c
  3292  001556  6E29               	movwf	?_rand,c
  3293  001558  0E7F               	movlw	127
  3294  00155A  1439               	andwf	_randx+3,w,c
  3295  00155C  6E2A               	movwf	?_rand+1,c
  3296  00155E  0012               	return	
  3297  001560                     __end_of_rand:
  3298                           	opt stack 0
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           intcon	equ	0xFF2
  3304                           postinc0	equ	0xFEE
  3305                           wreg	equ	0xFE8
  3306                           postdec1	equ	0xFE5
  3307                           fsr1l	equ	0xFE1
  3308                           indf2	equ	0xFDF
  3309                           postinc2	equ	0xFDE
  3310                           postdec2	equ	0xFDD
  3311                           fsr2h	equ	0xFDA
  3312                           fsr2l	equ	0xFD9
  3313                           status	equ	0xFD8
  3314                           
  3315 ;; *************** function ___lmul *****************
  3316 ;; Defined at:
  3317 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul32.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3320 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  product         4   36[COMRAM] unsigned long 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  4    0[BANK0 ] unsigned long 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3332 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;Total ram usage:       12 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    4
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_rand
  3343 ;;		_strtol
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text10
  3348  00138C                     __ptext10:
  3349                           	opt stack 0
  3350  00138C                     ___lmul:
  3351                           	opt stack 25
  3352                           
  3353                           ;incstack = 0
  3354  00138C  0E00               	movlw	0
  3355  00138E  6E25               	movwf	___lmul@product,c
  3356  001390  0E00               	movlw	0
  3357  001392  6E26               	movwf	___lmul@product+1,c
  3358  001394  0E00               	movlw	0
  3359  001396  6E27               	movwf	___lmul@product+2,c
  3360  001398  0E00               	movlw	0
  3361  00139A  6E28               	movwf	___lmul@product+3,c
  3362  00139C                     l3507:
  3363  00139C  0100               	movlb	0	; () banked
  3364  00139E  A1E0               	btfss	___lmul@multiplier& (0+255),0,b
  3365  0013A0  D00C               	goto	l3511
  3366                           
  3367                           ; BSR set to: 0
  3368  0013A2  0100               	movlb	0	; () banked
  3369  0013A4  51E4               	movf	___lmul@multiplicand& (0+255),w,b
  3370  0013A6  2625               	addwf	___lmul@product,f,c
  3371  0013A8  0100               	movlb	0	; () banked
  3372  0013AA  51E5               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  3373  0013AC  2226               	addwfc	___lmul@product+1,f,c
  3374  0013AE  0100               	movlb	0	; () banked
  3375  0013B0  51E6               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  3376  0013B2  2227               	addwfc	___lmul@product+2,f,c
  3377  0013B4  0100               	movlb	0	; () banked
  3378  0013B6  51E7               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  3379  0013B8  2228               	addwfc	___lmul@product+3,f,c
  3380  0013BA                     l3511:
  3381                           
  3382                           ; BSR set to: 0
  3383  0013BA  0100               	movlb	0	; () banked
  3384  0013BC  90D8               	bcf	status,0,c
  3385  0013BE  37E4               	rlcf	___lmul@multiplicand& (0+255),f,b
  3386  0013C0  37E5               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  3387  0013C2  37E6               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  3388  0013C4  37E7               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  3389                           
  3390                           ; BSR set to: 0
  3391  0013C6  0100               	movlb	0	; () banked
  3392  0013C8  90D8               	bcf	status,0,c
  3393  0013CA  33E3               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  3394  0013CC  33E2               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  3395  0013CE  33E1               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  3396  0013D0  33E0               	rrcf	___lmul@multiplier& (0+255),f,b
  3397  0013D2  0100               	movlb	0	; () banked
  3398  0013D4  51E0               	movf	___lmul@multiplier& (0+255),w,b
  3399  0013D6  0100               	movlb	0	; () banked
  3400  0013D8  11E1               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  3401  0013DA  0100               	movlb	0	; () banked
  3402  0013DC  11E2               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  3403  0013DE  0100               	movlb	0	; () banked
  3404  0013E0  11E3               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  3405  0013E2  A4D8               	btfss	status,2,c
  3406  0013E4  D7DB               	goto	l3507
  3407                           
  3408                           ; BSR set to: 0
  3409  0013E6  C025  F0E0         	movff	___lmul@product,?___lmul
  3410  0013EA  C026  F0E1         	movff	___lmul@product+1,?___lmul+1
  3411  0013EE  C027  F0E2         	movff	___lmul@product+2,?___lmul+2
  3412  0013F2  C028  F0E3         	movff	___lmul@product+3,?___lmul+3
  3413                           
  3414                           ; BSR set to: 0
  3415  0013F6  0012               	return		;funcret
  3416  0013F8                     __end_of___lmul:
  3417                           	opt stack 0
  3418                           tblptru	equ	0xFF8
  3419                           tblptrh	equ	0xFF7
  3420                           tblptrl	equ	0xFF6
  3421                           tablat	equ	0xFF5
  3422                           intcon	equ	0xFF2
  3423                           postinc0	equ	0xFEE
  3424                           wreg	equ	0xFE8
  3425                           postdec1	equ	0xFE5
  3426                           fsr1l	equ	0xFE1
  3427                           indf2	equ	0xFDF
  3428                           postinc2	equ	0xFDE
  3429                           postdec2	equ	0xFDD
  3430                           fsr2h	equ	0xFDA
  3431                           fsr2l	equ	0xFD9
  3432                           status	equ	0xFD8
  3433                           
  3434 ;; *************** function _process_data_opt *****************
  3435 ;; Defined at:
  3436 ;;		line 56 in file "main.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  msb             1    wreg     unsigned char 
  3439 ;;  lsb             1   21[BANK0 ] unsigned char 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  msb             1    0[BANK1 ] unsigned char 
  3442 ;;  result          4    9[BANK1 ] unsigned long 
  3443 ;;  Illumination    4    5[BANK1 ] unsigned long 
  3444 ;;  raw             2    3[BANK1 ] int 
  3445 ;;  exponent        2    1[BANK1 ] unsigned int 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3455 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Totals:         0       5      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;Total ram usage:       18 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    7
  3462 ;; This function calls:
  3463 ;;		_printf
  3464 ;; This function is called by:
  3465 ;;		_main
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text11
  3470  00077A                     __ptext11:
  3471                           	opt stack 0
  3472  00077A                     _process_data_opt:
  3473                           	opt stack 23
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;incstack = 0
  3477                           ;process_data_opt@msb stored from wreg
  3478  00077A  0101               	movlb	1	; () banked
  3479  00077C  6FA8               	movwf	process_data_opt@msb& (0+255),b
  3480                           
  3481                           ;main.c: 57: int16_t raw;
  3482                           ;main.c: 58: uint16_t exponent = 0;
  3483  00077E  0E00               	movlw	0
  3484  000780  0101               	movlb	1	; () banked
  3485  000782  6FAA               	movwf	(process_data_opt@exponent+1)& (0+255),b
  3486  000784  0E00               	movlw	0
  3487  000786  6FA9               	movwf	process_data_opt@exponent& (0+255),b
  3488                           
  3489                           ;main.c: 59: uint32_t result = 0;
  3490  000788  0E00               	movlw	0
  3491  00078A  0101               	movlb	1	; () banked
  3492  00078C  6FB1               	movwf	process_data_opt@result& (0+255),b
  3493  00078E  0E00               	movlw	0
  3494  000790  6FB2               	movwf	(process_data_opt@result+1)& (0+255),b
  3495  000792  0E00               	movlw	0
  3496  000794  6FB3               	movwf	(process_data_opt@result+2)& (0+255),b
  3497  000796  0E00               	movlw	0
  3498  000798  6FB4               	movwf	(process_data_opt@result+3)& (0+255),b
  3499                           
  3500                           ;main.c: 60: uint32_t Illumination = 0;
  3501  00079A  0E00               	movlw	0
  3502  00079C  0101               	movlb	1	; () banked
  3503  00079E  6FAD               	movwf	process_data_opt@Illumination& (0+255),b
  3504  0007A0  0E00               	movlw	0
  3505  0007A2  6FAE               	movwf	(process_data_opt@Illumination+1)& (0+255),b
  3506  0007A4  0E00               	movlw	0
  3507  0007A6  6FAF               	movwf	(process_data_opt@Illumination+2)& (0+255),b
  3508  0007A8  0E00               	movlw	0
  3509  0007AA  6FB0               	movwf	(process_data_opt@Illumination+3)& (0+255),b
  3510                           
  3511                           ; BSR set to: 1
  3512                           ;main.c: 63: raw = ((msb << 8) | lsb);
  3513  0007AC  0100               	movlb	0	; () banked
  3514  0007AE  51F5               	movf	process_data_opt@lsb& (0+255),w,b
  3515  0007B0  C1A8  F0F6         	movff	process_data_opt@msb,??_process_data_opt
  3516  0007B4  0100               	movlb	0	; () banked
  3517  0007B6  6BF7               	clrf	(??_process_data_opt+1)& (0+255),b
  3518  0007B8  C0F6  F0F7         	movff	??_process_data_opt,??_process_data_opt+1
  3519  0007BC  0100               	movlb	0	; () banked
  3520  0007BE  6BF6               	clrf	??_process_data_opt& (0+255),b
  3521  0007C0  0100               	movlb	0	; () banked
  3522  0007C2  11F6               	iorwf	??_process_data_opt& (0+255),w,b
  3523  0007C4  0101               	movlb	1	; () banked
  3524  0007C6  6FAB               	movwf	process_data_opt@raw& (0+255),b
  3525  0007C8  0100               	movlb	0	; () banked
  3526  0007CA  51F7               	movf	(??_process_data_opt+1)& (0+255),w,b
  3527  0007CC  0101               	movlb	1	; () banked
  3528  0007CE  6FAC               	movwf	(process_data_opt@raw+1)& (0+255),b
  3529                           
  3530                           ; BSR set to: 1
  3531                           ;main.c: 65: result = raw&0x0FFF;
  3532  0007D0  0EFF               	movlw	255
  3533  0007D2  0100               	movlb	0	; () banked
  3534  0007D4  6FF6               	movwf	??_process_data_opt& (0+255),b
  3535  0007D6  0E0F               	movlw	15
  3536  0007D8  0100               	movlb	0	; () banked
  3537  0007DA  6FF7               	movwf	(??_process_data_opt+1)& (0+255),b
  3538  0007DC  C1AB  F0F8         	movff	process_data_opt@raw,??_process_data_opt+2
  3539  0007E0  C1AC  F0F9         	movff	process_data_opt@raw+1,??_process_data_opt+3
  3540  0007E4  0100               	movlb	0	; () banked
  3541  0007E6  51F6               	movf	??_process_data_opt& (0+255),w,b
  3542  0007E8  0100               	movlb	0	; () banked
  3543  0007EA  17F8               	andwf	(??_process_data_opt+2)& (0+255),f,b
  3544  0007EC  0100               	movlb	0	; () banked
  3545  0007EE  51F7               	movf	(??_process_data_opt+1)& (0+255),w,b
  3546  0007F0  0100               	movlb	0	; () banked
  3547  0007F2  17F9               	andwf	(??_process_data_opt+3)& (0+255),f,b
  3548  0007F4  C0F8  F1B1         	movff	??_process_data_opt+2,process_data_opt@result
  3549  0007F8  C0F9  F1B2         	movff	??_process_data_opt+3,process_data_opt@result+1
  3550  0007FC  0101               	movlb	1	; () banked
  3551  0007FE  0E00               	movlw	0
  3552  000800  BFB2               	btfsc	(process_data_opt@result+1)& (0+255),7,b
  3553  000802  0EFF               	movlw	-1
  3554  000804  6FB3               	movwf	(process_data_opt@result+2)& (0+255),b
  3555  000806  6FB4               	movwf	(process_data_opt@result+3)& (0+255),b
  3556                           
  3557                           ; BSR set to: 1
  3558                           ;main.c: 66: exponent = (raw>>12)&0x000F;
  3559  000808  C1AB  F0F6         	movff	process_data_opt@raw,??_process_data_opt
  3560  00080C  C1AC  F0F7         	movff	process_data_opt@raw+1,??_process_data_opt+1
  3561  000810  0E0C               	movlw	12
  3562  000812  0100               	movlb	0	; () banked
  3563  000814  6FF8               	movwf	(??_process_data_opt+2)& (0+255),b
  3564  000816                     u2515:
  3565  000816  0100               	movlb	0	; () banked
  3566  000818  35F7               	rlcf	(??_process_data_opt+1)& (0+255),w,b
  3567  00081A  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3568  00081C  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3569  00081E  0100               	movlb	0	; () banked
  3570  000820  2FF8               	decfsz	(??_process_data_opt+2)& (0+255),f,b
  3571  000822  D7F9               	goto	u2515
  3572  000824  0E0F               	movlw	15
  3573  000826  0100               	movlb	0	; () banked
  3574  000828  15F6               	andwf	??_process_data_opt& (0+255),w,b
  3575  00082A  0101               	movlb	1	; () banked
  3576  00082C  6FA9               	movwf	process_data_opt@exponent& (0+255),b
  3577  00082E  0101               	movlb	1	; () banked
  3578  000830  6BAA               	clrf	(process_data_opt@exponent+1)& (0+255),b
  3579                           
  3580                           ;main.c: 68: switch(exponent){
  3581  000832  D0D9               	goto	l3553
  3582  000834                     l3529:
  3583                           
  3584                           ;main.c: 70: Illumination = result>>6;
  3585  000834  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3586  000838  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3587  00083C  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3588  000840  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3589  000844  0E07               	movlw	7
  3590  000846  D006               	goto	u2520
  3591  000848                     u2525:
  3592  000848  0100               	movlb	0	; () banked
  3593  00084A  90D8               	bcf	status,0,c
  3594  00084C  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  3595  00084E  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  3596  000850  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3597  000852  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3598  000854                     u2520:
  3599  000854  2EE8               	decfsz	wreg,f,c
  3600  000856  D7F8               	goto	u2525
  3601  000858  D0BD               	goto	L9
  3602  00085A                     l3531:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;main.c: 73: Illumination = result>>5;
  3606  00085A  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3607  00085E  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3608  000862  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3609  000866  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3610  00086A  0E06               	movlw	6
  3611  00086C  D006               	goto	u2530
  3612  00086E                     u2535:
  3613  00086E  0100               	movlb	0	; () banked
  3614  000870  90D8               	bcf	status,0,c
  3615  000872  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  3616  000874  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  3617  000876  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3618  000878  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3619  00087A                     u2530:
  3620  00087A  2EE8               	decfsz	wreg,f,c
  3621  00087C  D7F8               	goto	u2535
  3622  00087E  D0AA               	goto	L9
  3623  000880                     l3533:
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;main.c: 76: Illumination = result>>4;
  3627  000880  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3628  000884  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3629  000888  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3630  00088C  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3631  000890  0E05               	movlw	5
  3632  000892  D006               	goto	u2540
  3633  000894                     u2545:
  3634  000894  0100               	movlb	0	; () banked
  3635  000896  90D8               	bcf	status,0,c
  3636  000898  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  3637  00089A  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  3638  00089C  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3639  00089E  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3640  0008A0                     u2540:
  3641  0008A0  2EE8               	decfsz	wreg,f,c
  3642  0008A2  D7F8               	goto	u2545
  3643  0008A4  D097               	goto	L9
  3644  0008A6                     l3535:
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;main.c: 79: Illumination = result>>3;
  3648  0008A6  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3649  0008AA  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3650  0008AE  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3651  0008B2  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3652  0008B6  0E04               	movlw	4
  3653  0008B8  D006               	goto	u2550
  3654  0008BA                     u2555:
  3655  0008BA  0100               	movlb	0	; () banked
  3656  0008BC  90D8               	bcf	status,0,c
  3657  0008BE  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  3658  0008C0  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  3659  0008C2  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3660  0008C4  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3661  0008C6                     u2550:
  3662  0008C6  2EE8               	decfsz	wreg,f,c
  3663  0008C8  D7F8               	goto	u2555
  3664  0008CA  D084               	goto	L9
  3665  0008CC                     l3537:
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;main.c: 82: Illumination = result>>2;
  3669  0008CC  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3670  0008D0  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3671  0008D4  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3672  0008D8  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3673  0008DC  0E03               	movlw	3
  3674  0008DE  D006               	goto	u2560
  3675  0008E0                     u2565:
  3676  0008E0  0100               	movlb	0	; () banked
  3677  0008E2  90D8               	bcf	status,0,c
  3678  0008E4  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  3679  0008E6  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  3680  0008E8  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3681  0008EA  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3682  0008EC                     u2560:
  3683  0008EC  2EE8               	decfsz	wreg,f,c
  3684  0008EE  D7F8               	goto	u2565
  3685  0008F0  D071               	goto	L9
  3686  0008F2                     l3539:
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;main.c: 85: Illumination = result>>1;
  3690  0008F2  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3691  0008F6  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3692  0008FA  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3693  0008FE  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3694  000902  0100               	movlb	0	; () banked
  3695  000904  90D8               	bcf	status,0,c
  3696  000906  33F9               	rrcf	(??_process_data_opt+3)& (0+255),f,b
  3697  000908  33F8               	rrcf	(??_process_data_opt+2)& (0+255),f,b
  3698  00090A  33F7               	rrcf	(??_process_data_opt+1)& (0+255),f,b
  3699  00090C  33F6               	rrcf	??_process_data_opt& (0+255),f,b
  3700  00090E  D062               	goto	L9
  3701  000910                     l307:
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;main.c: 88: Illumination = result;
  3705  000910  C1B1  F1AD         	movff	process_data_opt@result,process_data_opt@Illumination
  3706  000914  C1B2  F1AE         	movff	process_data_opt@result+1,process_data_opt@Illumination+1
  3707  000918  C1B3  F1AF         	movff	process_data_opt@result+2,process_data_opt@Illumination+2
  3708  00091C  C1B4  F1B0         	movff	process_data_opt@result+3,process_data_opt@Illumination+3
  3709                           
  3710                           ;main.c: 89: break;
  3711  000920  D091               	goto	l3555
  3712  000922                     l3541:
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;main.c: 91: Illumination = result<<1;
  3716  000922  90D8               	bcf	status,0,c
  3717  000924  0101               	movlb	1	; () banked
  3718  000926  35B1               	rlcf	process_data_opt@result& (0+255),w,b
  3719  000928  0101               	movlb	1	; () banked
  3720  00092A  6FAD               	movwf	process_data_opt@Illumination& (0+255),b
  3721  00092C  0101               	movlb	1	; () banked
  3722  00092E  35B2               	rlcf	(process_data_opt@result+1)& (0+255),w,b
  3723  000930  0101               	movlb	1	; () banked
  3724  000932  6FAE               	movwf	(process_data_opt@Illumination+1)& (0+255),b
  3725  000934  0101               	movlb	1	; () banked
  3726  000936  35B3               	rlcf	(process_data_opt@result+2)& (0+255),w,b
  3727  000938  0101               	movlb	1	; () banked
  3728  00093A  6FAF               	movwf	(process_data_opt@Illumination+2)& (0+255),b
  3729  00093C  0101               	movlb	1	; () banked
  3730  00093E  35B4               	rlcf	(process_data_opt@result+3)& (0+255),w,b
  3731  000940  0101               	movlb	1	; () banked
  3732  000942  6FB0               	movwf	(process_data_opt@Illumination+3)& (0+255),b
  3733                           
  3734                           ;main.c: 92: break;
  3735  000944  D07F               	goto	l3555
  3736  000946                     l3543:
  3737                           
  3738                           ;main.c: 94: Illumination = result<<2;
  3739  000946  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3740  00094A  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3741  00094E  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3742  000952  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3743  000956  0E02               	movlw	2
  3744  000958                     u2575:
  3745  000958  90D8               	bcf	status,0,c
  3746  00095A  0100               	movlb	0	; () banked
  3747  00095C  37F6               	rlcf	??_process_data_opt& (0+255),f,b
  3748  00095E  37F7               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  3749  000960  37F8               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  3750  000962  37F9               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  3751  000964  2EE8               	decfsz	wreg,f,c
  3752  000966  D7F8               	goto	u2575
  3753  000968  D035               	goto	L9
  3754  00096A                     l3545:
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;main.c: 97: Illumination = result<<3;
  3758  00096A  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3759  00096E  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3760  000972  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3761  000976  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3762  00097A  0E03               	movlw	3
  3763  00097C                     u2585:
  3764  00097C  90D8               	bcf	status,0,c
  3765  00097E  0100               	movlb	0	; () banked
  3766  000980  37F6               	rlcf	??_process_data_opt& (0+255),f,b
  3767  000982  37F7               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  3768  000984  37F8               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  3769  000986  37F9               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  3770  000988  2EE8               	decfsz	wreg,f,c
  3771  00098A  D7F8               	goto	u2585
  3772  00098C  D023               	goto	L9
  3773  00098E                     l3547:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;main.c: 100: Illumination = result<<4;
  3777  00098E  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3778  000992  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3779  000996  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3780  00099A  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3781  00099E  0E04               	movlw	4
  3782  0009A0                     u2595:
  3783  0009A0  90D8               	bcf	status,0,c
  3784  0009A2  0100               	movlb	0	; () banked
  3785  0009A4  37F6               	rlcf	??_process_data_opt& (0+255),f,b
  3786  0009A6  37F7               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  3787  0009A8  37F8               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  3788  0009AA  37F9               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  3789  0009AC  2EE8               	decfsz	wreg,f,c
  3790  0009AE  D7F8               	goto	u2595
  3791  0009B0  D011               	goto	L9
  3792  0009B2                     l3549:
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;main.c: 103: Illumination = result<<5;
  3796  0009B2  C1B1  F0F6         	movff	process_data_opt@result,??_process_data_opt
  3797  0009B6  C1B2  F0F7         	movff	process_data_opt@result+1,??_process_data_opt+1
  3798  0009BA  C1B3  F0F8         	movff	process_data_opt@result+2,??_process_data_opt+2
  3799  0009BE  C1B4  F0F9         	movff	process_data_opt@result+3,??_process_data_opt+3
  3800  0009C2  0E05               	movlw	5
  3801  0009C4                     u2605:
  3802  0009C4  90D8               	bcf	status,0,c
  3803  0009C6  0100               	movlb	0	; () banked
  3804  0009C8  37F6               	rlcf	??_process_data_opt& (0+255),f,b
  3805  0009CA  37F7               	rlcf	(??_process_data_opt+1)& (0+255),f,b
  3806  0009CC  37F8               	rlcf	(??_process_data_opt+2)& (0+255),f,b
  3807  0009CE  37F9               	rlcf	(??_process_data_opt+3)& (0+255),f,b
  3808  0009D0  2EE8               	decfsz	wreg,f,c
  3809  0009D2  D7F8               	goto	u2605
  3810  0009D4                     L9:
  3811  0009D4  C0F6  F1AD         	movff	??_process_data_opt,process_data_opt@Illumination
  3812  0009D8  C0F7  F1AE         	movff	??_process_data_opt+1,process_data_opt@Illumination+1
  3813  0009DC  C0F8  F1AF         	movff	??_process_data_opt+2,process_data_opt@Illumination+2
  3814  0009E0  C0F9  F1B0         	movff	??_process_data_opt+3,process_data_opt@Illumination+3
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;main.c: 105: }
  3818                           
  3819                           ;main.c: 104: break;
  3820  0009E4  D02F               	goto	l3555
  3821  0009E6                     l3553:
  3822  0009E6  C1A9  F0F6         	movff	process_data_opt@exponent,??_process_data_opt
  3823  0009EA  C1AA  F0F7         	movff	process_data_opt@exponent+1,??_process_data_opt+1
  3824                           
  3825                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3826                           ; Switch size 1, requested type "space"
  3827                           ; Number of cases is 1, Range of values is 0 to 0
  3828                           ; switch strategies available:
  3829                           ; Name         Instructions Cycles
  3830                           ; simple_byte            4     3 (average)
  3831                           ;	Chosen strategy is simple_byte
  3832  0009EE  0100               	movlb	0	; () banked
  3833  0009F0  51F7               	movf	(??_process_data_opt+1)& (0+255),w,b
  3834  0009F2  0A00               	xorlw	0	; case 0
  3835  0009F4  A4D8               	btfss	status,2,c
  3836  0009F6  D026               	goto	l3555
  3837                           
  3838                           ; BSR set to: 0
  3839                           ; Switch size 1, requested type "space"
  3840                           ; Number of cases is 12, Range of values is 0 to 11
  3841                           ; switch strategies available:
  3842                           ; Name         Instructions Cycles
  3843                           ; simple_byte           37    19 (average)
  3844                           ;	Chosen strategy is simple_byte
  3845  0009F8  0100               	movlb	0	; () banked
  3846  0009FA  51F6               	movf	??_process_data_opt& (0+255),w,b
  3847  0009FC  0A00               	xorlw	0	; case 0
  3848  0009FE  B4D8               	btfsc	status,2,c
  3849  000A00  D719               	goto	l3529
  3850  000A02  0A01               	xorlw	1	; case 1
  3851  000A04  B4D8               	btfsc	status,2,c
  3852  000A06  D729               	goto	l3531
  3853  000A08  0A03               	xorlw	3	; case 2
  3854  000A0A  B4D8               	btfsc	status,2,c
  3855  000A0C  D739               	goto	l3533
  3856  000A0E  0A01               	xorlw	1	; case 3
  3857  000A10  B4D8               	btfsc	status,2,c
  3858  000A12  D749               	goto	l3535
  3859  000A14  0A07               	xorlw	7	; case 4
  3860  000A16  B4D8               	btfsc	status,2,c
  3861  000A18  D759               	goto	l3537
  3862  000A1A  0A01               	xorlw	1	; case 5
  3863  000A1C  B4D8               	btfsc	status,2,c
  3864  000A1E  D769               	goto	l3539
  3865  000A20  0A03               	xorlw	3	; case 6
  3866  000A22  B4D8               	btfsc	status,2,c
  3867  000A24  D775               	goto	l307
  3868  000A26  0A01               	xorlw	1	; case 7
  3869  000A28  B4D8               	btfsc	status,2,c
  3870  000A2A  D77B               	goto	l3541
  3871  000A2C  0A0F               	xorlw	15	; case 8
  3872  000A2E  B4D8               	btfsc	status,2,c
  3873  000A30  D78A               	goto	l3543
  3874  000A32  0A01               	xorlw	1	; case 9
  3875  000A34  B4D8               	btfsc	status,2,c
  3876  000A36  D799               	goto	l3545
  3877  000A38  0A03               	xorlw	3	; case 10
  3878  000A3A  B4D8               	btfsc	status,2,c
  3879  000A3C  D7A8               	goto	l3547
  3880  000A3E  0A01               	xorlw	1	; case 11
  3881  000A40  B4D8               	btfsc	status,2,c
  3882  000A42  D7B7               	goto	l3549
  3883  000A44                     l3555:
  3884                           
  3885                           ;main.c: 106: printf("> %d\r\n",Illumination);
  3886  000A44  0EF7               	movlw	low STR_6
  3887  000A46  0100               	movlb	0	; () banked
  3888  000A48  6FE7               	movwf	printf@f& (0+255),b
  3889  000A4A  0EFF               	movlw	high STR_6
  3890  000A4C  0100               	movlb	0	; () banked
  3891  000A4E  6FE8               	movwf	(printf@f+1)& (0+255),b
  3892  000A50  C1AD  F0E9         	movff	process_data_opt@Illumination,?_printf+2
  3893  000A54  C1AE  F0EA         	movff	process_data_opt@Illumination+1,?_printf+3
  3894  000A58  C1AF  F0EB         	movff	process_data_opt@Illumination+2,?_printf+4
  3895  000A5C  C1B0  F0EC         	movff	process_data_opt@Illumination+3,?_printf+5
  3896  000A60  EC33  F005         	call	_printf	;wreg free
  3897  000A64  0012               	return		;funcret
  3898  000A66                     __end_of_process_data_opt:
  3899                           	opt stack 0
  3900                           tblptru	equ	0xFF8
  3901                           tblptrh	equ	0xFF7
  3902                           tblptrl	equ	0xFF6
  3903                           tablat	equ	0xFF5
  3904                           intcon	equ	0xFF2
  3905                           postinc0	equ	0xFEE
  3906                           wreg	equ	0xFE8
  3907                           postdec1	equ	0xFE5
  3908                           fsr1l	equ	0xFE1
  3909                           indf2	equ	0xFDF
  3910                           postinc2	equ	0xFDE
  3911                           postdec2	equ	0xFDD
  3912                           fsr2h	equ	0xFDA
  3913                           fsr2l	equ	0xFD9
  3914                           status	equ	0xFD8
  3915                           
  3916 ;; *************** function _getUUID *****************
  3917 ;; Defined at:
  3918 ;;		line 50 in file "main.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;Total ram usage:        0 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    7
  3939 ;; This function calls:
  3940 ;;		_printf
  3941 ;;		_read_line
  3942 ;;		_strcpy
  3943 ;; This function is called by:
  3944 ;;		_main
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text12
  3949  00176A                     __ptext12:
  3950                           	opt stack 0
  3951  00176A                     _getUUID:
  3952                           	opt stack 23
  3953                           
  3954                           ;main.c: 51: printf("sys get hweui\r\n");
  3955                           
  3956                           ;incstack = 0
  3957  00176A  0E5D               	movlw	low STR_5
  3958  00176C  0100               	movlb	0	; () banked
  3959  00176E  6FE7               	movwf	printf@f& (0+255),b
  3960  001770  0EFF               	movlw	high STR_5
  3961  001772  0100               	movlb	0	; () banked
  3962  001774  6FE8               	movwf	(printf@f+1)& (0+255),b
  3963  001776  EC33  F005         	call	_printf	;wreg free
  3964                           
  3965                           ;main.c: 52: read_line();
  3966  00177A  EC6C  F00C         	call	_read_line	;wreg free
  3967                           
  3968                           ;main.c: 53: strcpy(uuid,line);
  3969  00177E  0E80               	movlw	low _uuid
  3970  001780  6E25               	movwf	strcpy@to,c
  3971  001782  0E01               	movlw	high _uuid
  3972  001784  6E26               	movwf	strcpy@to+1,c
  3973  001786  0E60               	movlw	low _line
  3974  001788  6E27               	movwf	strcpy@from,c
  3975  00178A  0E00               	movlw	high _line
  3976  00178C  6E28               	movwf	strcpy@from+1,c
  3977  00178E  EC70  F00B         	call	_strcpy	;wreg free
  3978  001792  0012               	return		;funcret
  3979  001794                     __end_of_getUUID:
  3980                           	opt stack 0
  3981                           tblptru	equ	0xFF8
  3982                           tblptrh	equ	0xFF7
  3983                           tblptrl	equ	0xFF6
  3984                           tablat	equ	0xFF5
  3985                           intcon	equ	0xFF2
  3986                           postinc0	equ	0xFEE
  3987                           wreg	equ	0xFE8
  3988                           postdec1	equ	0xFE5
  3989                           fsr1l	equ	0xFE1
  3990                           indf2	equ	0xFDF
  3991                           postinc2	equ	0xFDE
  3992                           postdec2	equ	0xFDD
  3993                           fsr2h	equ	0xFDA
  3994                           fsr2l	equ	0xFD9
  3995                           status	equ	0xFD8
  3996                           
  3997 ;; *************** function _strcpy *****************
  3998 ;; Defined at:
  3999 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcpy.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  to              2   36[COMRAM] PTR unsigned char 
  4002 ;;		 -> uuid(40), 
  4003 ;;  from            2   38[COMRAM] PTR const unsigned char 
  4004 ;;		 -> line(128), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  cp              2   40[COMRAM] PTR unsigned char 
  4007 ;;		 -> uuid(40), 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  2   36[COMRAM] PTR unsigned char 
  4010 ;; Registers used:
  4011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;Total ram usage:        6 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:    4
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_getUUID
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text13
  4032  0016E0                     __ptext13:
  4033                           	opt stack 0
  4034  0016E0                     _strcpy:
  4035                           	opt stack 25
  4036                           
  4037                           ;incstack = 0
  4038  0016E0  C025  F029         	movff	strcpy@to,strcpy@cp
  4039  0016E4  C026  F02A         	movff	strcpy@to+1,strcpy@cp+1
  4040  0016E8  D004               	goto	l2573
  4041  0016EA                     l2571:
  4042  0016EA  4A29               	infsnz	strcpy@cp,f,c
  4043  0016EC  2A2A               	incf	strcpy@cp+1,f,c
  4044  0016EE  4A27               	infsnz	strcpy@from,f,c
  4045  0016F0  2A28               	incf	strcpy@from+1,f,c
  4046  0016F2                     l2573:
  4047  0016F2  C027  FFD9         	movff	strcpy@from,fsr2l
  4048  0016F6  C028  FFDA         	movff	strcpy@from+1,fsr2h
  4049  0016FA  C029  FFE1         	movff	strcpy@cp,fsr1l
  4050  0016FE  C02A  FFE2         	movff	strcpy@cp+1,fsr1h
  4051  001702  CFDF FFE7          	movff	indf2,indf1
  4052  001706  50E7               	movf	indf1,w,c
  4053  001708  B4D8               	btfsc	status,2,c
  4054  00170A  0012               	return	
  4055  00170C  D7EE               	goto	l2571
  4056  00170E                     __end_of_strcpy:
  4057                           	opt stack 0
  4058                           tblptru	equ	0xFF8
  4059                           tblptrh	equ	0xFF7
  4060                           tblptrl	equ	0xFF6
  4061                           tablat	equ	0xFF5
  4062                           intcon	equ	0xFF2
  4063                           postinc0	equ	0xFEE
  4064                           wreg	equ	0xFE8
  4065                           indf1	equ	0xFE7
  4066                           postdec1	equ	0xFE5
  4067                           fsr1h	equ	0xFE2
  4068                           fsr1l	equ	0xFE1
  4069                           indf2	equ	0xFDF
  4070                           postinc2	equ	0xFDE
  4071                           postdec2	equ	0xFDD
  4072                           fsr2h	equ	0xFDA
  4073                           fsr2l	equ	0xFD9
  4074                           status	equ	0xFD8
  4075                           
  4076 ;; *************** function _read_line *****************
  4077 ;; Defined at:
  4078 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  2  147[None  ] int 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;Total ram usage:        0 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    4
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_getUUID
  4103 ;;		_main
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text14
  4108  0018D8                     __ptext14:
  4109                           	opt stack 0
  4110  0018D8                     _read_line:
  4111                           	opt stack 26
  4112  0018D8                     l2481:
  4113  0018D8  0433               	decf	_ready,w,c	;volatile
  4114  0018DA  A4D8               	btfss	status,2,c
  4115  0018DC  D7FD               	goto	l2481
  4116                           
  4117                           ;eusart1.c: 252: }
  4118                           ;eusart1.c: 253: ready=0;
  4119  0018DE  0E00               	movlw	0
  4120  0018E0  6E33               	movwf	_ready,c	;volatile
  4121  0018E2  0012               	return	
  4122  0018E4                     __end_of_read_line:
  4123                           	opt stack 0
  4124                           tblptru	equ	0xFF8
  4125                           tblptrh	equ	0xFF7
  4126                           tblptrl	equ	0xFF6
  4127                           tablat	equ	0xFF5
  4128                           intcon	equ	0xFF2
  4129                           postinc0	equ	0xFEE
  4130                           wreg	equ	0xFE8
  4131                           indf1	equ	0xFE7
  4132                           postdec1	equ	0xFE5
  4133                           fsr1h	equ	0xFE2
  4134                           fsr1l	equ	0xFE1
  4135                           indf2	equ	0xFDF
  4136                           postinc2	equ	0xFDE
  4137                           postdec2	equ	0xFDD
  4138                           fsr2h	equ	0xFDA
  4139                           fsr2l	equ	0xFD9
  4140                           status	equ	0xFD8
  4141                           
  4142 ;; *************** function _printf *****************
  4143 ;; Defined at:
  4144 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  f               2    7[BANK0 ] PTR const unsigned char 
  4147 ;;		 -> STR_22(19), STR_21(19), STR_20(19), STR_19(19), 
  4148 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(12), 
  4149 ;;		 -> STR_14(16), STR_13(18), STR_12(15), STR_11(15), 
  4150 ;;		 -> STR_10(15), STR_9(14), STR_8(12), STR_7(8), 
  4151 ;;		 -> STR_6(7), STR_5(16), 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;  idx             1   13[BANK0 ] unsigned char 
  4154 ;;  tmpval          4    0        struct .
  4155 ;;  cp              3    0        PTR const unsigned char 
  4156 ;;  val             2   18[BANK0 ] unsigned int 
  4157 ;;  ap              2   14[BANK0 ] PTR void [1]
  4158 ;;		 -> ?_printf(2), 
  4159 ;;  len             2    0        unsigned int 
  4160 ;;  c               1   20[BANK0 ] char 
  4161 ;;  flag            1   17[BANK0 ] unsigned char 
  4162 ;;  prec            1   16[BANK0 ] char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  2    7[BANK0 ] int 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4172 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;Total ram usage:       15 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    6
  4179 ;; This function calls:
  4180 ;;		___lwdiv
  4181 ;;		___lwmod
  4182 ;;		_putch
  4183 ;; This function is called by:
  4184 ;;		_getUUID
  4185 ;;		_process_data_opt
  4186 ;;		_main
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	text15
  4191  000A66                     __ptext15:
  4192                           	opt stack 0
  4193  000A66                     _printf:
  4194                           	opt stack 23
  4195                           
  4196                           ;doprnt.c: 466: va_list ap;
  4197                           ;doprnt.c: 499: signed char c;
  4198                           ;doprnt.c: 506: signed char prec;
  4199                           ;doprnt.c: 508: unsigned char flag;
  4200                           ;doprnt.c: 523: union {
  4201                           ;doprnt.c: 524: unsigned long vd;
  4202                           ;doprnt.c: 525: double integ;
  4203                           ;doprnt.c: 526: } tmpval;
  4204                           ;doprnt.c: 528: unsigned int val;
  4205                           ;doprnt.c: 529: unsigned len;
  4206                           ;doprnt.c: 530: const char * cp;
  4207                           ;doprnt.c: 533: *ap = __va_start();
  4208                           
  4209                           ;incstack = 0
  4210  000A66  0EE9               	movlw	low (?_printf+2)
  4211  000A68  0100               	movlb	0	; () banked
  4212  000A6A  6FEE               	movwf	printf@ap& (0+255),b
  4213  000A6C  0E00               	movlw	high (?_printf+2)
  4214  000A6E  0100               	movlb	0	; () banked
  4215  000A70  6FEF               	movwf	(printf@ap+1)& (0+255),b
  4216                           
  4217                           ;doprnt.c: 536: while(c = *f++) {
  4218  000A72  D114               	goto	l3503
  4219  000A74                     l3425:
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;doprnt.c: 538: if(c != '%')
  4223  000A74  0E25               	movlw	37
  4224  000A76  0100               	movlb	0	; () banked
  4225  000A78  19F4               	xorwf	printf@c& (0+255),w,b
  4226  000A7A  B4D8               	btfsc	status,2,c
  4227  000A7C  D005               	goto	l3429
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;doprnt.c: 540: {
  4231                           ;doprnt.c: 541: (putch(c) );
  4232  000A7E  0100               	movlb	0	; () banked
  4233  000A80  51F4               	movf	printf@c& (0+255),w,b
  4234  000A82  EC78  F00C         	call	_putch
  4235                           
  4236                           ;doprnt.c: 542: continue;
  4237  000A86  D10A               	goto	l3503
  4238  000A88                     l3429:
  4239                           
  4240                           ;doprnt.c: 543: }
  4241                           ;doprnt.c: 548: flag = 0;
  4242  000A88  0E00               	movlw	0
  4243  000A8A  0100               	movlb	0	; () banked
  4244  000A8C  6FF1               	movwf	printf@flag& (0+255),b
  4245                           
  4246                           ;doprnt.c: 635: switch(c = *f++) {
  4247  000A8E  D003               	goto	l3435
  4248  000A90                     l3431:
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;doprnt.c: 721: flag |= 0x80;
  4252  000A90  0100               	movlb	0	; () banked
  4253  000A92  8FF1               	bsf	printf@flag& (0+255),7,b
  4254                           
  4255                           ;doprnt.c: 723: break;
  4256  000A94  D01A               	goto	l402
  4257  000A96                     l3435:
  4258                           
  4259                           ; BSR set to: 0
  4260  000A96  C0E7  FFF6         	movff	printf@f,tblptrl
  4261  000A9A  C0E8  FFF7         	movff	printf@f+1,tblptrh
  4262  000A9E  0100               	movlb	0	; () banked
  4263  000AA0  4BE7               	infsnz	printf@f& (0+255),f,b
  4264  000AA2  2BE8               	incf	(printf@f+1)& (0+255),f,b
  4265  000AA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4266  000AA4  6AF8               	clrf	tblptru,c
  4267  000AA6                     	endif
  4268  000AA6                     	if	0	;tblptru may be non-zero
  4269  000AA6                     	endif
  4270  000AA6  0008               	tblrd		*
  4271  000AA8  CFF5 F0F4          	movff	tablat,printf@c
  4272  000AAC  0100               	movlb	0	; () banked
  4273  000AAE  51F4               	movf	printf@c& (0+255),w,b
  4274                           
  4275                           ; Switch size 1, requested type "space"
  4276                           ; Number of cases is 4, Range of values is 0 to 120
  4277                           ; switch strategies available:
  4278                           ; Name         Instructions Cycles
  4279                           ; simple_byte           13     7 (average)
  4280                           ;	Chosen strategy is simple_byte
  4281  000AB0  0A00               	xorlw	0	; case 0
  4282  000AB2  B4D8               	btfsc	status,2,c
  4283  000AB4  0012               	return	
  4284  000AB6  0A64               	xorlw	100	; case 100
  4285  000AB8  B4D8               	btfsc	status,2,c
  4286  000ABA  D007               	goto	l402
  4287  000ABC  0A0D               	xorlw	13	; case 105
  4288  000ABE  B4D8               	btfsc	status,2,c
  4289  000AC0  D004               	goto	l402
  4290  000AC2  0A11               	xorlw	17	; case 120
  4291  000AC4  B4D8               	btfsc	status,2,c
  4292  000AC6  D7E4               	goto	l3431
  4293  000AC8  D0E9               	goto	l3503
  4294  000ACA                     l402:
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  4298  000ACA  0100               	movlb	0	; () banked
  4299  000ACC  BFF1               	btfsc	printf@flag& (0+255),7,b
  4300  000ACE  D019               	goto	l3447
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;doprnt.c: 1253: {
  4304                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4305  000AD0  C0EE  FFD9         	movff	printf@ap,fsr2l
  4306  000AD4  C0EF  FFDA         	movff	printf@ap+1,fsr2h
  4307  000AD8  CFDE F0F2          	movff	postinc2,printf@val
  4308  000ADC  CFDD F0F3          	movff	postdec2,printf@val+1
  4309                           
  4310                           ; BSR set to: 0
  4311  000AE0  0E02               	movlw	2
  4312  000AE2  0100               	movlb	0	; () banked
  4313  000AE4  27EE               	addwf	printf@ap& (0+255),f,b
  4314  000AE6  0E00               	movlw	0
  4315  000AE8  23EF               	addwfc	(printf@ap+1)& (0+255),f,b
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;doprnt.c: 1261: if((int)val < 0) {
  4319  000AEA  0100               	movlb	0	; () banked
  4320  000AEC  AFF3               	btfss	(printf@val+1)& (0+255),7,b
  4321  000AEE  D059               	goto	l3481
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;doprnt.c: 1262: flag |= 0x03;
  4325  000AF0  0E03               	movlw	3
  4326  000AF2  0100               	movlb	0	; () banked
  4327  000AF4  13F1               	iorwf	printf@flag& (0+255),f,b
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;doprnt.c: 1263: val = -val;
  4331  000AF6  0100               	movlb	0	; () banked
  4332  000AF8  6DF2               	negf	printf@val& (0+255),b
  4333  000AFA  1FF3               	comf	(printf@val+1)& (0+255),f,b
  4334  000AFC  B0D8               	btfsc	status,0,c
  4335  000AFE  2BF3               	incf	(printf@val+1)& (0+255),f,b
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;doprnt.c: 1264: }
  4339                           ;doprnt.c: 1266: }
  4340  000B00  D050               	goto	l3481
  4341  000B02                     l3447:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;doprnt.c: 1268: else
  4345                           ;doprnt.c: 1273: {
  4346                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4347  000B02  C0EE  FFD9         	movff	printf@ap,fsr2l
  4348  000B06  C0EF  FFDA         	movff	printf@ap+1,fsr2h
  4349  000B0A  CFDE F0F2          	movff	postinc2,printf@val
  4350  000B0E  CFDD F0F3          	movff	postdec2,printf@val+1
  4351                           
  4352                           ; BSR set to: 0
  4353  000B12  0E02               	movlw	2
  4354  000B14  0100               	movlb	0	; () banked
  4355  000B16  27EE               	addwf	printf@ap& (0+255),f,b
  4356  000B18  0E00               	movlw	0
  4357  000B1A  23EF               	addwfc	(printf@ap+1)& (0+255),f,b
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;doprnt.c: 1287: }
  4361                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  4362  000B1C  D042               	goto	l3481
  4363  000B1E                     l3451:
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4367  000B1E  0E01               	movlw	1
  4368  000B20  0100               	movlb	0	; () banked
  4369  000B22  6FF4               	movwf	printf@c& (0+255),b
  4370  000B24                     l3453:
  4371                           
  4372                           ; BSR set to: 0
  4373  000B24  0E05               	movlw	5
  4374  000B26  0100               	movlb	0	; () banked
  4375  000B28  19F4               	xorwf	printf@c& (0+255),w,b
  4376  000B2A  B4D8               	btfsc	status,2,c
  4377  000B2C  D043               	goto	l3483
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;doprnt.c: 1306: if(val < dpowers[c])
  4381                           
  4382                           ; BSR set to: 0
  4383                           
  4384                           ; BSR set to: 0
  4385  000B2E  0100               	movlb	0	; () banked
  4386  000B30  51F4               	movf	printf@c& (0+255),w,b
  4387  000B32  0D02               	mullw	2
  4388  000B34  0EA3               	movlw	low _dpowers
  4389  000B36  24F3               	addwf	prodl,w,c
  4390  000B38  6EF6               	movwf	tblptrl,c
  4391  000B3A  0EFE               	movlw	high _dpowers
  4392  000B3C  20F4               	addwfc	prodh,w,c
  4393  000B3E  6EF7               	movwf	tblptrh,c
  4394  000B40                     	if	1	;There are 3 active tblptr bytes
  4395  000B40  6AF8               	clrf	tblptru,c
  4396  000B42  0E00               	movlw	low (__mediumconst shr (0+16))
  4397  000B44  22F8               	addwfc	tblptru,f,c
  4398  000B46                     	endif
  4399  000B46  0009               	tblrd		*+
  4400  000B48  50F5               	movf	tablat,w,c
  4401  000B4A  0100               	movlb	0	; () banked
  4402  000B4C  5DF2               	subwf	printf@val& (0+255),w,b
  4403  000B4E  0009               	tblrd		*+
  4404  000B50  50F5               	movf	tablat,w,c
  4405  000B52  0100               	movlb	0	; () banked
  4406  000B54  59F3               	subwfb	(printf@val+1)& (0+255),w,b
  4407  000B56  A0D8               	btfss	status,0,c
  4408  000B58  D02D               	goto	l3483
  4409                           
  4410                           ; BSR set to: 0
  4411                           
  4412                           ; BSR set to: 0
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;doprnt.c: 1307: break;
  4416  000B5A  0100               	movlb	0	; () banked
  4417  000B5C  2BF4               	incf	printf@c& (0+255),f,b
  4418  000B5E  D7E2               	goto	l3453
  4419  000B60                     l3465:
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4423  000B60  0E01               	movlw	1
  4424  000B62  0100               	movlb	0	; () banked
  4425  000B64  6FF4               	movwf	printf@c& (0+255),b
  4426  000B66                     l3467:
  4427                           
  4428                           ; BSR set to: 0
  4429  000B66  0E04               	movlw	4
  4430  000B68  0100               	movlb	0	; () banked
  4431  000B6A  19F4               	xorwf	printf@c& (0+255),w,b
  4432  000B6C  B4D8               	btfsc	status,2,c
  4433  000B6E  D022               	goto	l3483
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4437                           
  4438                           ; BSR set to: 0
  4439                           
  4440                           ; BSR set to: 0
  4441  000B70  0100               	movlb	0	; () banked
  4442  000B72  51F4               	movf	printf@c& (0+255),w,b
  4443  000B74  0D02               	mullw	2
  4444  000B76  0EAD               	movlw	low _hexpowers
  4445  000B78  24F3               	addwf	prodl,w,c
  4446  000B7A  6EF6               	movwf	tblptrl,c
  4447  000B7C  0EFE               	movlw	high _hexpowers
  4448  000B7E  20F4               	addwfc	prodh,w,c
  4449  000B80  6EF7               	movwf	tblptrh,c
  4450  000B82                     	if	1	;There are 3 active tblptr bytes
  4451  000B82  6AF8               	clrf	tblptru,c
  4452  000B84  0E00               	movlw	low (__mediumconst shr (0+16))
  4453  000B86  22F8               	addwfc	tblptru,f,c
  4454  000B88                     	endif
  4455  000B88  0009               	tblrd		*+
  4456  000B8A  50F5               	movf	tablat,w,c
  4457  000B8C  0100               	movlb	0	; () banked
  4458  000B8E  5DF2               	subwf	printf@val& (0+255),w,b
  4459  000B90  0009               	tblrd		*+
  4460  000B92  50F5               	movf	tablat,w,c
  4461  000B94  0100               	movlb	0	; () banked
  4462  000B96  59F3               	subwfb	(printf@val+1)& (0+255),w,b
  4463  000B98  A0D8               	btfss	status,0,c
  4464  000B9A  D00C               	goto	l3483
  4465                           
  4466                           ; BSR set to: 0
  4467                           
  4468                           ; BSR set to: 0
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;doprnt.c: 1318: break;
  4472  000B9C  0100               	movlb	0	; () banked
  4473  000B9E  2BF4               	incf	printf@c& (0+255),f,b
  4474  000BA0  D7E2               	goto	l3467
  4475  000BA2                     l3481:
  4476                           
  4477                           ; BSR set to: 0
  4478  000BA2  0100               	movlb	0	; () banked
  4479  000BA4  51F1               	movf	printf@flag& (0+255),w,b
  4480  000BA6  0B80               	andlw	128
  4481                           
  4482                           ; Switch size 1, requested type "space"
  4483                           ; Number of cases is 2, Range of values is 0 to 128
  4484                           ; switch strategies available:
  4485                           ; Name         Instructions Cycles
  4486                           ; simple_byte            7     4 (average)
  4487                           ;	Chosen strategy is simple_byte
  4488  000BA8  0A00               	xorlw	0	; case 0
  4489  000BAA  B4D8               	btfsc	status,2,c
  4490  000BAC  D7B8               	goto	l3451
  4491  000BAE  0A80               	xorlw	128	; case 128
  4492  000BB0  B4D8               	btfsc	status,2,c
  4493  000BB2  D7D6               	goto	l3465
  4494  000BB4                     l3483:
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;doprnt.c: 1422: {
  4498                           ;doprnt.c: 1438: if(flag & 0x03)
  4499  000BB4  C0F1  F02A         	movff	printf@flag,??_printf
  4500  000BB8  0E03               	movlw	3
  4501  000BBA  162A               	andwf	??_printf,f,c
  4502  000BBC  B4D8               	btfsc	status,2,c
  4503  000BBE  D003               	goto	l3487
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;doprnt.c: 1439: (putch('-') );
  4507  000BC0  0E2D               	movlw	45
  4508  000BC2  EC78  F00C         	call	_putch
  4509  000BC6                     l3487:
  4510                           
  4511                           ;doprnt.c: 1469: }
  4512                           ;doprnt.c: 1472: prec = c;
  4513  000BC6  C0F4  F0F0         	movff	printf@c,printf@prec
  4514                           
  4515                           ;doprnt.c: 1474: while(prec--) {
  4516  000BCA  D062               	goto	l3501
  4517  000BCC                     l3489:
  4518                           
  4519                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4520  000BCC  0100               	movlb	0	; () banked
  4521  000BCE  51F0               	movf	printf@prec& (0+255),w,b
  4522  000BD0  0D02               	mullw	2
  4523  000BD2  0EA3               	movlw	low _dpowers
  4524  000BD4  24F3               	addwf	prodl,w,c
  4525  000BD6  6EF6               	movwf	tblptrl,c
  4526  000BD8  0EFE               	movlw	high _dpowers
  4527  000BDA  20F4               	addwfc	prodh,w,c
  4528  000BDC  6EF7               	movwf	tblptrh,c
  4529  000BDE                     	if	1	;There are 3 active tblptr bytes
  4530  000BDE  6AF8               	clrf	tblptru,c
  4531  000BE0  0E00               	movlw	low (__mediumconst shr (0+16))
  4532  000BE2  22F8               	addwfc	tblptru,f,c
  4533  000BE4                     	endif
  4534  000BE4  0009               	tblrd		*+
  4535  000BE6  CFF5 F027          	movff	tablat,___lwdiv@divisor
  4536  000BEA  000A               	tblrd		*-
  4537  000BEC  CFF5 F028          	movff	tablat,___lwdiv@divisor+1
  4538  000BF0  C0F2  F025         	movff	printf@val,___lwdiv@dividend
  4539  000BF4  C0F3  F026         	movff	printf@val+1,___lwdiv@dividend+1
  4540  000BF8  ECFC  F009         	call	___lwdiv	;wreg free
  4541  000BFC  C025  F0E3         	movff	?___lwdiv,___lwmod@dividend
  4542  000C00  C026  F0E4         	movff	?___lwdiv+1,___lwmod@dividend+1
  4543  000C04  0E00               	movlw	0
  4544  000C06  0100               	movlb	0	; () banked
  4545  000C08  6FE6               	movwf	(___lwmod@divisor+1)& (0+255),b
  4546  000C0A  0E0A               	movlw	10
  4547  000C0C  6FE5               	movwf	___lwmod@divisor& (0+255),b
  4548  000C0E  EC2B  F00A         	call	___lwmod	;wreg free
  4549  000C12  0100               	movlb	0	; () banked
  4550  000C14  51E3               	movf	?___lwmod& (0+255),w,b
  4551  000C16  0F30               	addlw	48
  4552  000C18  0100               	movlb	0	; () banked
  4553  000C1A  6FF4               	movwf	printf@c& (0+255),b
  4554                           
  4555                           ;doprnt.c: 1491: break;
  4556  000C1C  D035               	goto	l3499
  4557  000C1E                     l3491:
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;doprnt.c: 1499: {
  4561                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4562  000C1E  C0F2  F025         	movff	printf@val,___lwdiv@dividend
  4563  000C22  C0F3  F026         	movff	printf@val+1,___lwdiv@dividend+1
  4564  000C26  0100               	movlb	0	; () banked
  4565  000C28  51F0               	movf	printf@prec& (0+255),w,b
  4566  000C2A  0D02               	mullw	2
  4567  000C2C  0EAD               	movlw	low _hexpowers
  4568  000C2E  24F3               	addwf	prodl,w,c
  4569  000C30  6EF6               	movwf	tblptrl,c
  4570  000C32  0EFE               	movlw	high _hexpowers
  4571  000C34  20F4               	addwfc	prodh,w,c
  4572  000C36  6EF7               	movwf	tblptrh,c
  4573  000C38                     	if	1	;There are 3 active tblptr bytes
  4574  000C38  6AF8               	clrf	tblptru,c
  4575  000C3A  0E00               	movlw	low (__mediumconst shr (0+16))
  4576  000C3C  22F8               	addwfc	tblptru,f,c
  4577  000C3E                     	endif
  4578  000C3E  0009               	tblrd		*+
  4579  000C40  CFF5 F027          	movff	tablat,___lwdiv@divisor
  4580  000C44  000A               	tblrd		*-
  4581  000C46  CFF5 F028          	movff	tablat,___lwdiv@divisor+1
  4582  000C4A  ECFC  F009         	call	___lwdiv	;wreg free
  4583  000C4E  5025               	movf	?___lwdiv,w,c
  4584  000C50  0B0F               	andlw	15
  4585  000C52  0100               	movlb	0	; () banked
  4586  000C54  6FED               	movwf	printf@idx& (0+255),b
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  4590  000C56  0100               	movlb	0	; () banked
  4591  000C58  51ED               	movf	printf@idx& (0+255),w,b
  4592  000C5A  0D01               	mullw	1
  4593  000C5C  0E4C               	movlw	low STR_23
  4594  000C5E  24F3               	addwf	prodl,w,c
  4595  000C60  6EF6               	movwf	tblptrl,c
  4596  000C62  0EFF               	movlw	high STR_23
  4597  000C64  20F4               	addwfc	prodh,w,c
  4598  000C66  6EF7               	movwf	tblptrh,c
  4599  000C68                     	if	1	;There are 3 active tblptr bytes
  4600  000C68  6AF8               	clrf	tblptru,c
  4601  000C6A  0E00               	movlw	low (__mediumconst shr (0+16))
  4602  000C6C  22F8               	addwfc	tblptru,f,c
  4603  000C6E                     	endif
  4604  000C6E  0008               	tblrd		*
  4605  000C70  CFF5 F0F4          	movff	tablat,printf@c
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;doprnt.c: 1523: }
  4609                           
  4610                           ;doprnt.c: 1508: }
  4611                           ;doprnt.c: 1510: break;
  4612  000C74  D009               	goto	l3499
  4613  000C76                     l3497:
  4614  000C76  0100               	movlb	0	; () banked
  4615  000C78  51F1               	movf	printf@flag& (0+255),w,b
  4616  000C7A  0B80               	andlw	128
  4617                           
  4618                           ; Switch size 1, requested type "space"
  4619                           ; Number of cases is 2, Range of values is 0 to 128
  4620                           ; switch strategies available:
  4621                           ; Name         Instructions Cycles
  4622                           ; simple_byte            7     4 (average)
  4623                           ;	Chosen strategy is simple_byte
  4624  000C7C  0A00               	xorlw	0	; case 0
  4625  000C7E  B4D8               	btfsc	status,2,c
  4626  000C80  D7A5               	goto	l3489
  4627  000C82  0A80               	xorlw	128	; case 128
  4628  000C84  B4D8               	btfsc	status,2,c
  4629  000C86  D7CB               	goto	l3491
  4630  000C88                     l3499:
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;doprnt.c: 1524: (putch(c) );
  4634  000C88  0100               	movlb	0	; () banked
  4635  000C8A  51F4               	movf	printf@c& (0+255),w,b
  4636  000C8C  EC78  F00C         	call	_putch
  4637  000C90                     l3501:
  4638  000C90  0100               	movlb	0	; () banked
  4639  000C92  07F0               	decf	printf@prec& (0+255),f,b
  4640  000C94  0100               	movlb	0	; () banked
  4641  000C96  29F0               	incf	printf@prec& (0+255),w,b
  4642  000C98  A4D8               	btfss	status,2,c
  4643  000C9A  D7ED               	goto	l3497
  4644  000C9C                     l3503:
  4645  000C9C  C0E7  FFF6         	movff	printf@f,tblptrl
  4646  000CA0  C0E8  FFF7         	movff	printf@f+1,tblptrh
  4647  000CA4  0100               	movlb	0	; () banked
  4648  000CA6  4BE7               	infsnz	printf@f& (0+255),f,b
  4649  000CA8  2BE8               	incf	(printf@f+1)& (0+255),f,b
  4650  000CAA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4651  000CAA  6AF8               	clrf	tblptru,c
  4652  000CAC                     	endif
  4653  000CAC                     	if	0	;tblptru may be non-zero
  4654  000CAC                     	endif
  4655  000CAC  0008               	tblrd		*
  4656  000CAE  CFF5 F0F4          	movff	tablat,printf@c
  4657  000CB2  0100               	movlb	0	; () banked
  4658  000CB4  51F4               	movf	printf@c& (0+255),w,b
  4659  000CB6  B4D8               	btfsc	status,2,c
  4660  000CB8  0012               	return	
  4661  000CBA  D6DC               	goto	l3425
  4662  000CBC                     __end_of_printf:
  4663                           	opt stack 0
  4664                           tblptru	equ	0xFF8
  4665                           tblptrh	equ	0xFF7
  4666                           tblptrl	equ	0xFF6
  4667                           tablat	equ	0xFF5
  4668                           prodh	equ	0xFF4
  4669                           prodl	equ	0xFF3
  4670                           intcon	equ	0xFF2
  4671                           postinc0	equ	0xFEE
  4672                           wreg	equ	0xFE8
  4673                           indf1	equ	0xFE7
  4674                           postdec1	equ	0xFE5
  4675                           fsr1h	equ	0xFE2
  4676                           fsr1l	equ	0xFE1
  4677                           indf2	equ	0xFDF
  4678                           postinc2	equ	0xFDE
  4679                           postdec2	equ	0xFDD
  4680                           fsr2h	equ	0xFDA
  4681                           fsr2l	equ	0xFD9
  4682                           status	equ	0xFD8
  4683                           
  4684 ;; *************** function _putch *****************
  4685 ;; Defined at:
  4686 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  txData          1    wreg     unsigned char 
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;  txData          1   37[COMRAM] unsigned char 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1    wreg      void 
  4693 ;; Registers used:
  4694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;Total ram usage:        1 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:    5
  4707 ;; This function calls:
  4708 ;;		_EUSART1_Write
  4709 ;; This function is called by:
  4710 ;;		_printf
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text16
  4715  0018F0                     __ptext16:
  4716                           	opt stack 0
  4717  0018F0                     _putch:
  4718                           	opt stack 23
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;incstack = 0
  4722                           ;putch@txData stored from wreg
  4723  0018F0  6E26               	movwf	putch@txData,c
  4724                           
  4725                           ;eusart1.c: 172: EUSART1_Write(txData);
  4726  0018F2  5026               	movf	putch@txData,w,c
  4727  0018F4  ECD0  F00A         	call	_EUSART1_Write
  4728  0018F8  0012               	return		;funcret
  4729  0018FA                     __end_of_putch:
  4730                           	opt stack 0
  4731                           tblptru	equ	0xFF8
  4732                           tblptrh	equ	0xFF7
  4733                           tblptrl	equ	0xFF6
  4734                           tablat	equ	0xFF5
  4735                           prodh	equ	0xFF4
  4736                           prodl	equ	0xFF3
  4737                           intcon	equ	0xFF2
  4738                           postinc0	equ	0xFEE
  4739                           wreg	equ	0xFE8
  4740                           indf1	equ	0xFE7
  4741                           postdec1	equ	0xFE5
  4742                           fsr1h	equ	0xFE2
  4743                           fsr1l	equ	0xFE1
  4744                           indf2	equ	0xFDF
  4745                           postinc2	equ	0xFDE
  4746                           postdec2	equ	0xFDD
  4747                           fsr2h	equ	0xFDA
  4748                           fsr2l	equ	0xFD9
  4749                           status	equ	0xFD8
  4750                           
  4751 ;; *************** function _EUSART1_Write *****************
  4752 ;; Defined at:
  4753 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  txData          1    wreg     unsigned char 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  txData          1   36[COMRAM] unsigned char 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;Total ram usage:        1 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:    4
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_putch
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text17
  4782  0015A0                     __ptext17:
  4783                           	opt stack 0
  4784  0015A0                     _EUSART1_Write:
  4785                           	opt stack 23
  4786                           
  4787                           ;incstack = 0
  4788                           ;EUSART1_Write@txData stored from wreg
  4789  0015A0  6E25               	movwf	EUSART1_Write@txData,c
  4790  0015A2                     l3367:
  4791  0015A2  503A               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  4792  0015A4  B4D8               	btfsc	status,2,c
  4793  0015A6  D7FD               	goto	l3367
  4794                           
  4795                           ;eusart1.c: 146: }
  4796                           ;eusart1.c: 148: if(0 == PIE1bits.TX1IE)
  4797  0015A8  B89D               	btfsc	3997,4,c	;volatile
  4798  0015AA  D003               	goto	l110
  4799                           
  4800                           ;eusart1.c: 149: {
  4801                           ;eusart1.c: 150: TXREG1 = txData;
  4802  0015AC  C025  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4803                           
  4804                           ;eusart1.c: 151: }
  4805  0015B0  D012               	goto	l3381
  4806  0015B2                     l110:
  4807                           
  4808                           ;eusart1.c: 152: else
  4809                           ;eusart1.c: 153: {
  4810                           ;eusart1.c: 154: PIE1bits.TX1IE = 0;
  4811  0015B2  989D               	bcf	3997,4,c	;volatile
  4812                           
  4813                           ;eusart1.c: 155: eusart1TxBuffer[eusart1TxHead++] = txData;
  4814  0015B4  5030               	movf	_eusart1TxHead,w,c
  4815  0015B6  0D01               	mullw	1
  4816  0015B8  0E00               	movlw	low _eusart1TxBuffer
  4817  0015BA  24F3               	addwf	prodl,w,c
  4818  0015BC  6ED9               	movwf	fsr2l,c
  4819  0015BE  0E01               	movlw	high _eusart1TxBuffer
  4820  0015C0  20F4               	addwfc	prodh,w,c
  4821  0015C2  6EDA               	movwf	fsr2h,c
  4822  0015C4  C025  FFDF         	movff	EUSART1_Write@txData,indf2
  4823  0015C8  2A30               	incf	_eusart1TxHead,f,c
  4824                           
  4825                           ;eusart1.c: 156: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  4826  0015CA  0E7F               	movlw	127
  4827  0015CC  6430               	cpfsgt	_eusart1TxHead,c
  4828  0015CE  D002               	goto	l3379
  4829                           
  4830                           ;eusart1.c: 157: {
  4831                           ;eusart1.c: 158: eusart1TxHead = 0;
  4832  0015D0  0E00               	movlw	0
  4833  0015D2  6E30               	movwf	_eusart1TxHead,c
  4834  0015D4                     l3379:
  4835                           
  4836                           ;eusart1.c: 159: }
  4837                           ;eusart1.c: 160: eusart1TxBufferRemaining--;
  4838  0015D4  063A               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  4839  0015D6                     l3381:
  4840                           
  4841                           ;eusart1.c: 161: }
  4842                           ;eusart1.c: 162: PIE1bits.TX1IE = 1;
  4843  0015D6  889D               	bsf	3997,4,c	;volatile
  4844  0015D8  0012               	return		;funcret
  4845  0015DA                     __end_of_EUSART1_Write:
  4846                           	opt stack 0
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           prodh	equ	0xFF4
  4852                           prodl	equ	0xFF3
  4853                           intcon	equ	0xFF2
  4854                           postinc0	equ	0xFEE
  4855                           wreg	equ	0xFE8
  4856                           indf1	equ	0xFE7
  4857                           postdec1	equ	0xFE5
  4858                           fsr1h	equ	0xFE2
  4859                           fsr1l	equ	0xFE1
  4860                           indf2	equ	0xFDF
  4861                           postinc2	equ	0xFDE
  4862                           postdec2	equ	0xFDD
  4863                           fsr2h	equ	0xFDA
  4864                           fsr2l	equ	0xFD9
  4865                           status	equ	0xFD8
  4866                           
  4867 ;; *************** function ___lwmod *****************
  4868 ;; Defined at:
  4869 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  dividend        2    3[BANK0 ] unsigned int 
  4872 ;;  divisor         2    5[BANK0 ] unsigned int 
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;  counter         1   40[COMRAM] unsigned char 
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  2    3[BANK0 ] unsigned int 
  4877 ;; Registers used:
  4878 ;;		wreg, status,2, status,0
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4884 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;Total ram usage:        5 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    4
  4891 ;; This function calls:
  4892 ;;		Nothing
  4893 ;; This function is called by:
  4894 ;;		_printf
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text18
  4899  001456                     __ptext18:
  4900                           	opt stack 0
  4901  001456                     ___lwmod:
  4902                           	opt stack 24
  4903                           
  4904                           ;incstack = 0
  4905  001456  0100               	movlb	0	; () banked
  4906  001458  51E5               	movf	___lwmod@divisor& (0+255),w,b
  4907  00145A  0100               	movlb	0	; () banked
  4908  00145C  11E6               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  4909  00145E  B4D8               	btfsc	status,2,c
  4910  001460  D023               	goto	l840
  4911                           
  4912                           ; BSR set to: 0
  4913  001462  0E01               	movlw	1
  4914  001464  6E29               	movwf	___lwmod@counter,c
  4915  001466  D005               	goto	l3413
  4916  001468                     l3411:
  4917                           
  4918                           ; BSR set to: 0
  4919  001468  0100               	movlb	0	; () banked
  4920  00146A  90D8               	bcf	status,0,c
  4921  00146C  37E5               	rlcf	___lwmod@divisor& (0+255),f,b
  4922  00146E  37E6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  4923  001470  2A29               	incf	___lwmod@counter,f,c
  4924  001472                     l3413:
  4925                           
  4926                           ; BSR set to: 0
  4927  001472  0100               	movlb	0	; () banked
  4928  001474  AFE6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  4929  001476  D7F8               	goto	l3411
  4930  001478                     l3415:
  4931                           
  4932                           ; BSR set to: 0
  4933  001478  0100               	movlb	0	; () banked
  4934  00147A  51E5               	movf	___lwmod@divisor& (0+255),w,b
  4935  00147C  0100               	movlb	0	; () banked
  4936  00147E  5DE3               	subwf	___lwmod@dividend& (0+255),w,b
  4937  001480  0100               	movlb	0	; () banked
  4938  001482  51E6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4939  001484  0100               	movlb	0	; () banked
  4940  001486  59E4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  4941  001488  A0D8               	btfss	status,0,c
  4942  00148A  D008               	goto	l3419
  4943                           
  4944                           ; BSR set to: 0
  4945  00148C  0100               	movlb	0	; () banked
  4946  00148E  51E5               	movf	___lwmod@divisor& (0+255),w,b
  4947  001490  0100               	movlb	0	; () banked
  4948  001492  5FE3               	subwf	___lwmod@dividend& (0+255),f,b
  4949  001494  0100               	movlb	0	; () banked
  4950  001496  51E6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4951  001498  0100               	movlb	0	; () banked
  4952  00149A  5BE4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  4953  00149C                     l3419:
  4954                           
  4955                           ; BSR set to: 0
  4956  00149C  0100               	movlb	0	; () banked
  4957  00149E  90D8               	bcf	status,0,c
  4958  0014A0  33E6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  4959  0014A2  33E5               	rrcf	___lwmod@divisor& (0+255),f,b
  4960                           
  4961                           ; BSR set to: 0
  4962  0014A4  2E29               	decfsz	___lwmod@counter,f,c
  4963  0014A6  D7E8               	goto	l3415
  4964  0014A8                     l840:
  4965                           
  4966                           ; BSR set to: 0
  4967  0014A8  C0E3  F0E3         	movff	___lwmod@dividend,?___lwmod
  4968  0014AC  C0E4  F0E4         	movff	___lwmod@dividend+1,?___lwmod+1
  4969                           
  4970                           ; BSR set to: 0
  4971  0014B0  0012               	return		;funcret
  4972  0014B2                     __end_of___lwmod:
  4973                           	opt stack 0
  4974                           tblptru	equ	0xFF8
  4975                           tblptrh	equ	0xFF7
  4976                           tblptrl	equ	0xFF6
  4977                           tablat	equ	0xFF5
  4978                           prodh	equ	0xFF4
  4979                           prodl	equ	0xFF3
  4980                           intcon	equ	0xFF2
  4981                           postinc0	equ	0xFEE
  4982                           wreg	equ	0xFE8
  4983                           indf1	equ	0xFE7
  4984                           postdec1	equ	0xFE5
  4985                           fsr1h	equ	0xFE2
  4986                           fsr1l	equ	0xFE1
  4987                           indf2	equ	0xFDF
  4988                           postinc2	equ	0xFDE
  4989                           postdec2	equ	0xFDD
  4990                           fsr2h	equ	0xFDA
  4991                           fsr2l	equ	0xFD9
  4992                           status	equ	0xFD8
  4993                           
  4994 ;; *************** function ___lwdiv *****************
  4995 ;; Defined at:
  4996 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  dividend        2   36[COMRAM] unsigned int 
  4999 ;;  divisor         2   38[COMRAM] unsigned int 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  quotient        2    1[BANK0 ] unsigned int 
  5002 ;;  counter         1    0[BANK0 ] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  2   36[COMRAM] unsigned int 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5012 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;Total ram usage:        7 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    4
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_printf
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text19
  5027  0013F8                     __ptext19:
  5028                           	opt stack 0
  5029  0013F8                     ___lwdiv:
  5030                           	opt stack 24
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;incstack = 0
  5034  0013F8  0E00               	movlw	0
  5035  0013FA  0100               	movlb	0	; () banked
  5036  0013FC  6FE2               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5037  0013FE  0E00               	movlw	0
  5038  001400  6FE1               	movwf	___lwdiv@quotient& (0+255),b
  5039                           
  5040                           ; BSR set to: 0
  5041  001402  5027               	movf	___lwdiv@divisor,w,c
  5042  001404  1028               	iorwf	___lwdiv@divisor+1,w,c
  5043  001406  B4D8               	btfsc	status,2,c
  5044  001408  D021               	goto	l830
  5045                           
  5046                           ; BSR set to: 0
  5047  00140A  0E01               	movlw	1
  5048  00140C  0100               	movlb	0	; () banked
  5049  00140E  6FE0               	movwf	___lwdiv@counter& (0+255),b
  5050  001410  D005               	goto	l3393
  5051  001412                     l3391:
  5052                           
  5053                           ; BSR set to: 0
  5054  001412  90D8               	bcf	status,0,c
  5055  001414  3627               	rlcf	___lwdiv@divisor,f,c
  5056  001416  3628               	rlcf	___lwdiv@divisor+1,f,c
  5057  001418  0100               	movlb	0	; () banked
  5058  00141A  2BE0               	incf	___lwdiv@counter& (0+255),f,b
  5059  00141C                     l3393:
  5060                           
  5061                           ; BSR set to: 0
  5062  00141C  AE28               	btfss	___lwdiv@divisor+1,7,c
  5063  00141E  D7F9               	goto	l3391
  5064  001420                     l3395:
  5065                           
  5066                           ; BSR set to: 0
  5067  001420  0100               	movlb	0	; () banked
  5068  001422  90D8               	bcf	status,0,c
  5069  001424  37E1               	rlcf	___lwdiv@quotient& (0+255),f,b
  5070  001426  37E2               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5071                           
  5072                           ; BSR set to: 0
  5073  001428  5027               	movf	___lwdiv@divisor,w,c
  5074  00142A  5C25               	subwf	___lwdiv@dividend,w,c
  5075  00142C  5028               	movf	___lwdiv@divisor+1,w,c
  5076  00142E  5826               	subwfb	___lwdiv@dividend+1,w,c
  5077  001430  A0D8               	btfss	status,0,c
  5078  001432  D006               	goto	l3403
  5079                           
  5080                           ; BSR set to: 0
  5081  001434  5027               	movf	___lwdiv@divisor,w,c
  5082  001436  5E25               	subwf	___lwdiv@dividend,f,c
  5083  001438  5028               	movf	___lwdiv@divisor+1,w,c
  5084  00143A  5A26               	subwfb	___lwdiv@dividend+1,f,c
  5085                           
  5086                           ; BSR set to: 0
  5087  00143C  0100               	movlb	0	; () banked
  5088  00143E  81E1               	bsf	___lwdiv@quotient& (0+255),0,b
  5089  001440                     l3403:
  5090                           
  5091                           ; BSR set to: 0
  5092  001440  90D8               	bcf	status,0,c
  5093  001442  3228               	rrcf	___lwdiv@divisor+1,f,c
  5094  001444  3227               	rrcf	___lwdiv@divisor,f,c
  5095                           
  5096                           ; BSR set to: 0
  5097  001446  0100               	movlb	0	; () banked
  5098  001448  2FE0               	decfsz	___lwdiv@counter& (0+255),f,b
  5099  00144A  D7EA               	goto	l3395
  5100  00144C                     l830:
  5101                           
  5102                           ; BSR set to: 0
  5103  00144C  C0E1  F025         	movff	___lwdiv@quotient,?___lwdiv
  5104  001450  C0E2  F026         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5105                           
  5106                           ; BSR set to: 0
  5107  001454  0012               	return		;funcret
  5108  001456                     __end_of___lwdiv:
  5109                           	opt stack 0
  5110                           tblptru	equ	0xFF8
  5111                           tblptrh	equ	0xFF7
  5112                           tblptrl	equ	0xFF6
  5113                           tablat	equ	0xFF5
  5114                           prodh	equ	0xFF4
  5115                           prodl	equ	0xFF3
  5116                           intcon	equ	0xFF2
  5117                           postinc0	equ	0xFEE
  5118                           wreg	equ	0xFE8
  5119                           indf1	equ	0xFE7
  5120                           postdec1	equ	0xFE5
  5121                           fsr1h	equ	0xFE2
  5122                           fsr1l	equ	0xFE1
  5123                           indf2	equ	0xFDF
  5124                           postinc2	equ	0xFDE
  5125                           postdec2	equ	0xFDD
  5126                           fsr2h	equ	0xFDA
  5127                           fsr2l	equ	0xFD9
  5128                           status	equ	0xFD8
  5129                           
  5130 ;; *************** function ___awmod *****************
  5131 ;; Defined at:
  5132 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  dividend        2    8[BANK0 ] int 
  5135 ;;  divisor         2   10[BANK0 ] int 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  sign            1   13[BANK0 ] unsigned char 
  5138 ;;  counter         1   12[BANK0 ] unsigned char 
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  2    8[BANK0 ] int 
  5141 ;; Registers used:
  5142 ;;		wreg, status,2, status,0
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5148 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;Total ram usage:        6 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    4
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_main
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text20
  5163  001044                     __ptext20:
  5164                           	opt stack 0
  5165  001044                     ___awmod:
  5166                           	opt stack 26
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;incstack = 0
  5170  001044  0E00               	movlw	0
  5171  001046  0100               	movlb	0	; () banked
  5172  001048  6FED               	movwf	___awmod@sign& (0+255),b
  5173                           
  5174                           ; BSR set to: 0
  5175  00104A  0100               	movlb	0	; () banked
  5176  00104C  AFE9               	btfss	(___awmod@dividend+1)& (0+255),7,b
  5177  00104E  D008               	goto	l3657
  5178                           
  5179                           ; BSR set to: 0
  5180  001050  0100               	movlb	0	; () banked
  5181  001052  6DE8               	negf	___awmod@dividend& (0+255),b
  5182  001054  1FE9               	comf	(___awmod@dividend+1)& (0+255),f,b
  5183  001056  B0D8               	btfsc	status,0,c
  5184  001058  2BE9               	incf	(___awmod@dividend+1)& (0+255),f,b
  5185                           
  5186                           ; BSR set to: 0
  5187  00105A  0E01               	movlw	1
  5188  00105C  0100               	movlb	0	; () banked
  5189  00105E  6FED               	movwf	___awmod@sign& (0+255),b
  5190  001060                     l3657:
  5191                           
  5192                           ; BSR set to: 0
  5193  001060  0100               	movlb	0	; () banked
  5194  001062  AFEB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5195  001064  D005               	goto	l3661
  5196                           
  5197                           ; BSR set to: 0
  5198  001066  0100               	movlb	0	; () banked
  5199  001068  6DEA               	negf	___awmod@divisor& (0+255),b
  5200  00106A  1FEB               	comf	(___awmod@divisor+1)& (0+255),f,b
  5201  00106C  B0D8               	btfsc	status,0,c
  5202  00106E  2BEB               	incf	(___awmod@divisor+1)& (0+255),f,b
  5203  001070                     l3661:
  5204                           
  5205                           ; BSR set to: 0
  5206  001070  0100               	movlb	0	; () banked
  5207  001072  51EA               	movf	___awmod@divisor& (0+255),w,b
  5208  001074  0100               	movlb	0	; () banked
  5209  001076  11EB               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  5210  001078  B4D8               	btfsc	status,2,c
  5211  00107A  D026               	goto	l3677
  5212                           
  5213                           ; BSR set to: 0
  5214  00107C  0E01               	movlw	1
  5215  00107E  0100               	movlb	0	; () banked
  5216  001080  6FEC               	movwf	___awmod@counter& (0+255),b
  5217  001082  D006               	goto	l3667
  5218  001084                     l3665:
  5219                           
  5220                           ; BSR set to: 0
  5221  001084  0100               	movlb	0	; () banked
  5222  001086  90D8               	bcf	status,0,c
  5223  001088  37EA               	rlcf	___awmod@divisor& (0+255),f,b
  5224  00108A  37EB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5225  00108C  0100               	movlb	0	; () banked
  5226  00108E  2BEC               	incf	___awmod@counter& (0+255),f,b
  5227  001090                     l3667:
  5228                           
  5229                           ; BSR set to: 0
  5230  001090  0100               	movlb	0	; () banked
  5231  001092  AFEB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5232  001094  D7F7               	goto	l3665
  5233  001096                     l3669:
  5234                           
  5235                           ; BSR set to: 0
  5236  001096  0100               	movlb	0	; () banked
  5237  001098  51EA               	movf	___awmod@divisor& (0+255),w,b
  5238  00109A  0100               	movlb	0	; () banked
  5239  00109C  5DE8               	subwf	___awmod@dividend& (0+255),w,b
  5240  00109E  0100               	movlb	0	; () banked
  5241  0010A0  51EB               	movf	(___awmod@divisor+1)& (0+255),w,b
  5242  0010A2  0100               	movlb	0	; () banked
  5243  0010A4  59E9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5244  0010A6  A0D8               	btfss	status,0,c
  5245  0010A8  D008               	goto	l3673
  5246                           
  5247                           ; BSR set to: 0
  5248  0010AA  0100               	movlb	0	; () banked
  5249  0010AC  51EA               	movf	___awmod@divisor& (0+255),w,b
  5250  0010AE  0100               	movlb	0	; () banked
  5251  0010B0  5FE8               	subwf	___awmod@dividend& (0+255),f,b
  5252  0010B2  0100               	movlb	0	; () banked
  5253  0010B4  51EB               	movf	(___awmod@divisor+1)& (0+255),w,b
  5254  0010B6  0100               	movlb	0	; () banked
  5255  0010B8  5BE9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5256  0010BA                     l3673:
  5257                           
  5258                           ; BSR set to: 0
  5259  0010BA  0100               	movlb	0	; () banked
  5260  0010BC  90D8               	bcf	status,0,c
  5261  0010BE  33EB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5262  0010C0  33EA               	rrcf	___awmod@divisor& (0+255),f,b
  5263                           
  5264                           ; BSR set to: 0
  5265  0010C2  0100               	movlb	0	; () banked
  5266  0010C4  2FEC               	decfsz	___awmod@counter& (0+255),f,b
  5267  0010C6  D7E7               	goto	l3669
  5268  0010C8                     l3677:
  5269                           
  5270                           ; BSR set to: 0
  5271  0010C8  0100               	movlb	0	; () banked
  5272  0010CA  51ED               	movf	___awmod@sign& (0+255),w,b
  5273  0010CC  0100               	movlb	0	; () banked
  5274  0010CE  B4D8               	btfsc	status,2,c
  5275  0010D0  D005               	goto	l3681
  5276                           
  5277                           ; BSR set to: 0
  5278  0010D2  0100               	movlb	0	; () banked
  5279  0010D4  6DE8               	negf	___awmod@dividend& (0+255),b
  5280  0010D6  1FE9               	comf	(___awmod@dividend+1)& (0+255),f,b
  5281  0010D8  B0D8               	btfsc	status,0,c
  5282  0010DA  2BE9               	incf	(___awmod@dividend+1)& (0+255),f,b
  5283  0010DC                     l3681:
  5284                           
  5285                           ; BSR set to: 0
  5286  0010DC  C0E8  F0E8         	movff	___awmod@dividend,?___awmod
  5287  0010E0  C0E9  F0E9         	movff	___awmod@dividend+1,?___awmod+1
  5288  0010E4  0012               	return	
  5289  0010E6                     __end_of___awmod:
  5290                           	opt stack 0
  5291                           tblptru	equ	0xFF8
  5292                           tblptrh	equ	0xFF7
  5293                           tblptrl	equ	0xFF6
  5294                           tablat	equ	0xFF5
  5295                           prodh	equ	0xFF4
  5296                           prodl	equ	0xFF3
  5297                           intcon	equ	0xFF2
  5298                           postinc0	equ	0xFEE
  5299                           wreg	equ	0xFE8
  5300                           indf1	equ	0xFE7
  5301                           postdec1	equ	0xFE5
  5302                           fsr1h	equ	0xFE2
  5303                           fsr1l	equ	0xFE1
  5304                           indf2	equ	0xFDF
  5305                           postinc2	equ	0xFDE
  5306                           postdec2	equ	0xFDD
  5307                           fsr2h	equ	0xFDA
  5308                           fsr2l	equ	0xFD9
  5309                           status	equ	0xFD8
  5310                           
  5311 ;; *************** function _Soft_I2C_WriteByte *****************
  5312 ;; Defined at:
  5313 ;;		line 61 in file "soft_i2c.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;  byt             1    wreg     unsigned char 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  byt             1   36[COMRAM] unsigned char 
  5318 ;;  i               1   37[COMRAM] unsigned char 
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, status,2, status,0, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;Total ram usage:        2 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:    5
  5335 ;; This function calls:
  5336 ;;		_I2C_SCL_CLEAR
  5337 ;;		_I2C_SCL_SET
  5338 ;;		_I2C_SDA_CLEAR
  5339 ;;		_I2C_SDA_IN_SET
  5340 ;;		_I2C_SDA_OUT_SET
  5341 ;;		_I2C_SDA_SET
  5342 ;; This function is called by:
  5343 ;;		_main
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text21
  5348  00131C                     __ptext21:
  5349                           	opt stack 0
  5350  00131C                     _Soft_I2C_WriteByte:
  5351                           	opt stack 25
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;incstack = 0
  5355                           ;Soft_I2C_WriteByte@byt stored from wreg
  5356  00131C  6E25               	movwf	Soft_I2C_WriteByte@byt,c
  5357                           
  5358                           ;soft_i2c.c: 63: char i;
  5359                           ;soft_i2c.c: 64: I2C_SDA_OUT_SET();
  5360  00131E  EC8C  F00C         	call	_I2C_SDA_OUT_SET	;wreg free
  5361                           
  5362                           ;soft_i2c.c: 66: for(i=0;i<8;i++)
  5363  001322  0E00               	movlw	0
  5364  001324  6E26               	movwf	Soft_I2C_WriteByte@i,c
  5365  001326                     l2807:
  5366  001326  0E07               	movlw	7
  5367  001328  6426               	cpfsgt	Soft_I2C_WriteByte@i,c
  5368  00132A  D001               	goto	l367
  5369  00132C  D01E               	goto	l2831
  5370  00132E                     l367:
  5371                           
  5372                           ;soft_i2c.c: 67: {
  5373                           ;soft_i2c.c: 68: if(byt & 0x80)
  5374  00132E  AE25               	btfss	Soft_I2C_WriteByte@byt,7,c
  5375  001330  D006               	goto	l2815
  5376                           
  5377                           ;soft_i2c.c: 69: {
  5378                           ;soft_i2c.c: 70: I2C_SDA_SET();
  5379  001332  EC8A  F00C         	call	_I2C_SDA_SET	;wreg free
  5380                           
  5381                           ;soft_i2c.c: 71: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5382  001336  0E6A               	movlw	106
  5383  001338                     u3847:
  5384  001338  2EE8               	decfsz	wreg,f,c
  5385  00133A  D7FE               	goto	u3847
  5386  00133C  D005               	goto	L10
  5387  00133E                     l2815:
  5388                           
  5389                           ;soft_i2c.c: 73: else
  5390                           ;soft_i2c.c: 74: {
  5391                           ;soft_i2c.c: 75: I2C_SDA_CLEAR();
  5392  00133E  EC86  F00C         	call	_I2C_SDA_CLEAR	;wreg free
  5393                           
  5394                           ;soft_i2c.c: 76: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5395  001342  0E6A               	movlw	106
  5396  001344                     u3857:
  5397  001344  2EE8               	decfsz	wreg,f,c
  5398  001346  D7FE               	goto	u3857
  5399  001348                     L10:
  5400  001348  D000               	nop2		;nop
  5401                           
  5402                           ;soft_i2c.c: 77: }
  5403                           ;soft_i2c.c: 79: I2C_SCL_SET();
  5404  00134A  EC8E  F00C         	call	_I2C_SCL_SET	;wreg free
  5405                           
  5406                           ;soft_i2c.c: 80: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5407  00134E  0E6A               	movlw	106
  5408  001350                     u3867:
  5409  001350  2EE8               	decfsz	wreg,f,c
  5410  001352  D7FE               	goto	u3867
  5411  001354  D000               	nop2		;nop
  5412                           
  5413                           ;soft_i2c.c: 81: I2C_SCL_CLEAR();
  5414  001356  EC88  F00C         	call	_I2C_SCL_CLEAR	;wreg free
  5415                           
  5416                           ;soft_i2c.c: 82: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5417  00135A  0E6A               	movlw	106
  5418  00135C                     u3877:
  5419  00135C  2EE8               	decfsz	wreg,f,c
  5420  00135E  D7FE               	goto	u3877
  5421  001360  D000               	nop2		;nop
  5422                           
  5423                           ;soft_i2c.c: 83: byt<<=1;
  5424  001362  90D8               	bcf	status,0,c
  5425  001364  3625               	rlcf	Soft_I2C_WriteByte@byt,f,c
  5426  001366  2A26               	incf	Soft_I2C_WriteByte@i,f,c
  5427  001368  D7DE               	goto	l2807
  5428  00136A                     l2831:
  5429                           
  5430                           ;soft_i2c.c: 84: }
  5431                           ;soft_i2c.c: 85: I2C_SDA_IN_SET();
  5432  00136A  EC84  F00C         	call	_I2C_SDA_IN_SET	;wreg free
  5433                           
  5434                           ;soft_i2c.c: 86: I2C_SCL_SET();
  5435  00136E  EC8E  F00C         	call	_I2C_SCL_SET	;wreg free
  5436                           
  5437                           ;soft_i2c.c: 87: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5438  001372  0E6A               	movlw	106
  5439  001374                     u3887:
  5440  001374  2EE8               	decfsz	wreg,f,c
  5441  001376  D7FE               	goto	u3887
  5442  001378  D000               	nop2		;nop
  5443                           
  5444                           ;soft_i2c.c: 88: I2C_SCL_CLEAR();
  5445  00137A  EC88  F00C         	call	_I2C_SCL_CLEAR	;wreg free
  5446                           
  5447                           ;soft_i2c.c: 89: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5448  00137E  0E6A               	movlw	106
  5449  001380                     u3897:
  5450  001380  2EE8               	decfsz	wreg,f,c
  5451  001382  D7FE               	goto	u3897
  5452  001384  D000               	nop2		;nop
  5453                           
  5454                           ;soft_i2c.c: 91: I2C_SDA_OUT_SET();
  5455  001386  EC8C  F00C         	call	_I2C_SDA_OUT_SET	;wreg free
  5456  00138A  0012               	return		;funcret
  5457  00138C                     __end_of_Soft_I2C_WriteByte:
  5458                           	opt stack 0
  5459                           tblptru	equ	0xFF8
  5460                           tblptrh	equ	0xFF7
  5461                           tblptrl	equ	0xFF6
  5462                           tablat	equ	0xFF5
  5463                           prodh	equ	0xFF4
  5464                           prodl	equ	0xFF3
  5465                           intcon	equ	0xFF2
  5466                           postinc0	equ	0xFEE
  5467                           wreg	equ	0xFE8
  5468                           indf1	equ	0xFE7
  5469                           postdec1	equ	0xFE5
  5470                           fsr1h	equ	0xFE2
  5471                           fsr1l	equ	0xFE1
  5472                           indf2	equ	0xFDF
  5473                           postinc2	equ	0xFDE
  5474                           postdec2	equ	0xFDD
  5475                           fsr2h	equ	0xFDA
  5476                           fsr2l	equ	0xFD9
  5477                           status	equ	0xFD8
  5478                           
  5479 ;; *************** function _Soft_I2C_Stop *****************
  5480 ;; Defined at:
  5481 ;;		line 50 in file "soft_i2c.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;		None
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;		None
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		wreg, cstack
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;Total ram usage:        0 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    5
  5502 ;; This function calls:
  5503 ;;		_I2C_SCL_SET
  5504 ;;		_I2C_SDA_OUT_SET
  5505 ;;		_I2C_SDA_SET
  5506 ;; This function is called by:
  5507 ;;		_main
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text22
  5512  00185E                     __ptext22:
  5513                           	opt stack 0
  5514  00185E                     _Soft_I2C_Stop:
  5515                           	opt stack 25
  5516                           
  5517                           ;soft_i2c.c: 52: I2C_SDA_OUT_SET();
  5518                           
  5519                           ;incstack = 0
  5520  00185E  EC8C  F00C         	call	_I2C_SDA_OUT_SET	;wreg free
  5521                           
  5522                           ;soft_i2c.c: 55: I2C_SCL_SET();
  5523  001862  EC8E  F00C         	call	_I2C_SCL_SET	;wreg free
  5524                           
  5525                           ;soft_i2c.c: 56: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5526  001866  0E6A               	movlw	106
  5527  001868                     u3907:
  5528  001868  2EE8               	decfsz	wreg,f,c
  5529  00186A  D7FE               	goto	u3907
  5530  00186C  D000               	nop2		;nop
  5531                           
  5532                           ;soft_i2c.c: 57: I2C_SDA_SET();
  5533  00186E  EC8A  F00C         	call	_I2C_SDA_SET	;wreg free
  5534                           
  5535                           ;soft_i2c.c: 58: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5536  001872  0E6A               	movlw	106
  5537  001874                     u3917:
  5538  001874  2EE8               	decfsz	wreg,f,c
  5539  001876  D7FE               	goto	u3917
  5540  001878  D000               	nop2		;nop
  5541  00187A  0012               	return		;funcret
  5542  00187C                     __end_of_Soft_I2C_Stop:
  5543                           	opt stack 0
  5544                           tblptru	equ	0xFF8
  5545                           tblptrh	equ	0xFF7
  5546                           tblptrl	equ	0xFF6
  5547                           tablat	equ	0xFF5
  5548                           prodh	equ	0xFF4
  5549                           prodl	equ	0xFF3
  5550                           intcon	equ	0xFF2
  5551                           postinc0	equ	0xFEE
  5552                           wreg	equ	0xFE8
  5553                           indf1	equ	0xFE7
  5554                           postdec1	equ	0xFE5
  5555                           fsr1h	equ	0xFE2
  5556                           fsr1l	equ	0xFE1
  5557                           indf2	equ	0xFDF
  5558                           postinc2	equ	0xFDE
  5559                           postdec2	equ	0xFDD
  5560                           fsr2h	equ	0xFDA
  5561                           fsr2l	equ	0xFD9
  5562                           status	equ	0xFD8
  5563                           
  5564 ;; *************** function _Soft_I2C_Start *****************
  5565 ;; Defined at:
  5566 ;;		line 34 in file "soft_i2c.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;		None
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      void 
  5573 ;; Registers used:
  5574 ;;		wreg, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;Total ram usage:        0 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    5
  5587 ;; This function calls:
  5588 ;;		_I2C_SCL_CLEAR
  5589 ;;		_I2C_SCL_SET
  5590 ;;		_I2C_SDA_CLEAR
  5591 ;;		_I2C_SDA_OUT_SET
  5592 ;;		_I2C_SDA_SET
  5593 ;; This function is called by:
  5594 ;;		_main
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text23
  5599  00170E                     __ptext23:
  5600                           	opt stack 0
  5601  00170E                     _Soft_I2C_Start:
  5602                           	opt stack 25
  5603                           
  5604                           ;soft_i2c.c: 36: I2C_SDA_OUT_SET();
  5605                           
  5606                           ;incstack = 0
  5607  00170E  EC8C  F00C         	call	_I2C_SDA_OUT_SET	;wreg free
  5608                           
  5609                           ;soft_i2c.c: 39: I2C_SDA_SET();
  5610  001712  EC8A  F00C         	call	_I2C_SDA_SET	;wreg free
  5611                           
  5612                           ;soft_i2c.c: 40: I2C_SCL_SET();
  5613  001716  EC8E  F00C         	call	_I2C_SCL_SET	;wreg free
  5614                           
  5615                           ;soft_i2c.c: 41: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5616  00171A  0E6A               	movlw	106
  5617  00171C                     u3927:
  5618  00171C  2EE8               	decfsz	wreg,f,c
  5619  00171E  D7FE               	goto	u3927
  5620  001720  D000               	nop2		;nop
  5621                           
  5622                           ;soft_i2c.c: 44: I2C_SDA_CLEAR();
  5623  001722  EC86  F00C         	call	_I2C_SDA_CLEAR	;wreg free
  5624                           
  5625                           ;soft_i2c.c: 45: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5626  001726  0E6A               	movlw	106
  5627  001728                     u3937:
  5628  001728  2EE8               	decfsz	wreg,f,c
  5629  00172A  D7FE               	goto	u3937
  5630  00172C  D000               	nop2		;nop
  5631                           
  5632                           ;soft_i2c.c: 46: I2C_SCL_CLEAR();
  5633  00172E  EC88  F00C         	call	_I2C_SCL_CLEAR	;wreg free
  5634                           
  5635                           ;soft_i2c.c: 47: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5636  001732  0E6A               	movlw	106
  5637  001734                     u3947:
  5638  001734  2EE8               	decfsz	wreg,f,c
  5639  001736  D7FE               	goto	u3947
  5640  001738  D000               	nop2		;nop
  5641  00173A  0012               	return		;funcret
  5642  00173C                     __end_of_Soft_I2C_Start:
  5643                           	opt stack 0
  5644                           tblptru	equ	0xFF8
  5645                           tblptrh	equ	0xFF7
  5646                           tblptrl	equ	0xFF6
  5647                           tablat	equ	0xFF5
  5648                           prodh	equ	0xFF4
  5649                           prodl	equ	0xFF3
  5650                           intcon	equ	0xFF2
  5651                           postinc0	equ	0xFEE
  5652                           wreg	equ	0xFE8
  5653                           indf1	equ	0xFE7
  5654                           postdec1	equ	0xFE5
  5655                           fsr1h	equ	0xFE2
  5656                           fsr1l	equ	0xFE1
  5657                           indf2	equ	0xFDF
  5658                           postinc2	equ	0xFDE
  5659                           postdec2	equ	0xFDD
  5660                           fsr2h	equ	0xFDA
  5661                           fsr2l	equ	0xFD9
  5662                           status	equ	0xFD8
  5663                           
  5664 ;; *************** function _Soft_I2C_ReadByte *****************
  5665 ;; Defined at:
  5666 ;;		line 98 in file "soft_i2c.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  ack             1    wreg     unsigned char 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  ack             1   36[COMRAM] unsigned char 
  5671 ;;  i               1   38[COMRAM] unsigned char 
  5672 ;;  val             1   37[COMRAM] unsigned char 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      unsigned char 
  5675 ;; Registers used:
  5676 ;;		wreg, status,2, status,0, cstack
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;Total ram usage:        3 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    5
  5689 ;; This function calls:
  5690 ;;		_I2C_SCL_CLEAR
  5691 ;;		_I2C_SCL_SET
  5692 ;;		_I2C_SDA_CLEAR
  5693 ;;		_I2C_SDA_IN_SET
  5694 ;;		_I2C_SDA_OUT_SET
  5695 ;;		_I2C_SDA_READ
  5696 ;;		_I2C_SDA_SET
  5697 ;; This function is called by:
  5698 ;;		_main
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text24
  5703  0010E6                     __ptext24:
  5704                           	opt stack 0
  5705  0010E6                     _Soft_I2C_ReadByte:
  5706                           	opt stack 25
  5707                           
  5708                           ;incstack = 0
  5709                           ;Soft_I2C_ReadByte@ack stored from wreg
  5710  0010E6  6E25               	movwf	Soft_I2C_ReadByte@ack,c
  5711                           
  5712                           ;soft_i2c.c: 100: char i;
  5713                           ;soft_i2c.c: 101: char val = 0;
  5714  0010E8  0E00               	movlw	0
  5715  0010EA  6E26               	movwf	Soft_I2C_ReadByte@val,c
  5716                           
  5717                           ;soft_i2c.c: 102: I2C_SDA_IN_SET();
  5718  0010EC  EC84  F00C         	call	_I2C_SDA_IN_SET	;wreg free
  5719                           
  5720                           ;soft_i2c.c: 117: for(i=0;i<8;i++)
  5721  0010F0  0E00               	movlw	0
  5722  0010F2  6E27               	movwf	Soft_I2C_ReadByte@i,c
  5723  0010F4                     l2851:
  5724  0010F4  0E07               	movlw	7
  5725  0010F6  6427               	cpfsgt	Soft_I2C_ReadByte@i,c
  5726  0010F8  D001               	goto	l2855
  5727  0010FA  D01F               	goto	l2879
  5728  0010FC                     l2855:
  5729                           
  5730                           ;soft_i2c.c: 118: {
  5731                           ;soft_i2c.c: 119: if(i!=0) { val>>=1; }
  5732  0010FC  5027               	movf	Soft_I2C_ReadByte@i,w,c
  5733  0010FE  B4D8               	btfsc	status,2,c
  5734  001100  D002               	goto	l2859
  5735  001102  90D8               	bcf	status,0,c
  5736  001104  3226               	rrcf	Soft_I2C_ReadByte@val,f,c
  5737  001106                     l2859:
  5738                           
  5739                           ;soft_i2c.c: 120: I2C_SCL_SET();
  5740  001106  EC8E  F00C         	call	_I2C_SCL_SET	;wreg free
  5741                           
  5742                           ;soft_i2c.c: 121: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5743  00110A  0E6A               	movlw	106
  5744  00110C                     u3957:
  5745  00110C  2EE8               	decfsz	wreg,f,c
  5746  00110E  D7FE               	goto	u3957
  5747  001110  D000               	nop2		;nop
  5748                           
  5749                           ;soft_i2c.c: 122: if(I2C_SDA_READ()!=0)
  5750  001112  EC72  F00C         	call	_I2C_SDA_READ	;wreg free
  5751  001116  0900               	iorlw	0
  5752  001118  B4D8               	btfsc	status,2,c
  5753  00111A  D002               	goto	l2867
  5754                           
  5755                           ;soft_i2c.c: 123: {
  5756                           ;soft_i2c.c: 124: val |= 0x80;
  5757  00111C  8E26               	bsf	Soft_I2C_ReadByte@val,7,c
  5758                           
  5759                           ;soft_i2c.c: 125: }
  5760  00111E  D001               	goto	l2869
  5761  001120                     l2867:
  5762                           
  5763                           ;soft_i2c.c: 126: else
  5764                           ;soft_i2c.c: 127: {
  5765                           ;soft_i2c.c: 128: val &= 0x7F;
  5766  001120  9E26               	bcf	Soft_I2C_ReadByte@val,7,c
  5767  001122                     l2869:
  5768                           
  5769                           ;soft_i2c.c: 130: }
  5770                           ;soft_i2c.c: 131: _delay((unsigned long)((10)*(64000000/4000000.0)));
  5771  001122  0E35               	movlw	53
  5772  001124                     u3967:
  5773  001124  2EE8               	decfsz	wreg,f,c
  5774  001126  D7FE               	goto	u3967
  5775  001128  F000               	nop	
  5776                           
  5777                           ;soft_i2c.c: 132: I2C_SCL_CLEAR();
  5778  00112A  EC88  F00C         	call	_I2C_SCL_CLEAR	;wreg free
  5779                           
  5780                           ;soft_i2c.c: 133: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5781  00112E  0E6A               	movlw	106
  5782  001130                     u3977:
  5783  001130  2EE8               	decfsz	wreg,f,c
  5784  001132  D7FE               	goto	u3977
  5785  001134  D000               	nop2		;nop
  5786  001136  2A27               	incf	Soft_I2C_ReadByte@i,f,c
  5787  001138  D7DD               	goto	l2851
  5788  00113A                     l2879:
  5789                           
  5790                           ;soft_i2c.c: 134: }
  5791                           ;soft_i2c.c: 136: I2C_SDA_OUT_SET();
  5792  00113A  EC8C  F00C         	call	_I2C_SDA_OUT_SET	;wreg free
  5793                           
  5794                           ;soft_i2c.c: 139: if(ack)
  5795  00113E  5025               	movf	Soft_I2C_ReadByte@ack,w,c
  5796  001140  B4D8               	btfsc	status,2,c
  5797  001142  D00E               	goto	l2889
  5798                           
  5799                           ;soft_i2c.c: 140: {
  5800                           ;soft_i2c.c: 141: I2C_SDA_CLEAR();
  5801  001144  EC86  F00C         	call	_I2C_SDA_CLEAR	;wreg free
  5802                           
  5803                           ;soft_i2c.c: 142: I2C_SCL_SET();
  5804  001148  EC8E  F00C         	call	_I2C_SCL_SET	;wreg free
  5805                           
  5806                           ;soft_i2c.c: 143: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5807  00114C  0E6A               	movlw	106
  5808  00114E                     u3987:
  5809  00114E  2EE8               	decfsz	wreg,f,c
  5810  001150  D7FE               	goto	u3987
  5811  001152  D000               	nop2		;nop
  5812                           
  5813                           ;soft_i2c.c: 144: I2C_SCL_CLEAR();
  5814  001154  EC88  F00C         	call	_I2C_SCL_CLEAR	;wreg free
  5815                           
  5816                           ;soft_i2c.c: 145: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5817  001158  0E6A               	movlw	106
  5818  00115A                     u3997:
  5819  00115A  2EE8               	decfsz	wreg,f,c
  5820  00115C  D7FE               	goto	u3997
  5821  00115E  D00D               	goto	L11
  5822  001160                     l2889:
  5823                           
  5824                           ;soft_i2c.c: 147: else
  5825                           ;soft_i2c.c: 148: {
  5826                           ;soft_i2c.c: 149: I2C_SDA_SET();
  5827  001160  EC8A  F00C         	call	_I2C_SDA_SET	;wreg free
  5828                           
  5829                           ;soft_i2c.c: 150: I2C_SCL_SET();
  5830  001164  EC8E  F00C         	call	_I2C_SCL_SET	;wreg free
  5831                           
  5832                           ;soft_i2c.c: 151: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5833  001168  0E6A               	movlw	106
  5834  00116A                     u4007:
  5835  00116A  2EE8               	decfsz	wreg,f,c
  5836  00116C  D7FE               	goto	u4007
  5837  00116E  D000               	nop2		;nop
  5838                           
  5839                           ;soft_i2c.c: 152: I2C_SCL_CLEAR();
  5840  001170  EC88  F00C         	call	_I2C_SCL_CLEAR	;wreg free
  5841                           
  5842                           ;soft_i2c.c: 153: _delay((unsigned long)((20)*(64000000/4000000.0)));
  5843  001174  0E6A               	movlw	106
  5844  001176                     u4017:
  5845  001176  2EE8               	decfsz	wreg,f,c
  5846  001178  D7FE               	goto	u4017
  5847  00117A                     L11:
  5848  00117A  D000               	nop2		;nop
  5849                           
  5850                           ;soft_i2c.c: 154: }
  5851                           ;soft_i2c.c: 156: return val;
  5852  00117C  5026               	movf	Soft_I2C_ReadByte@val,w,c
  5853  00117E  0012               	return	
  5854  001180                     __end_of_Soft_I2C_ReadByte:
  5855                           	opt stack 0
  5856                           tblptru	equ	0xFF8
  5857                           tblptrh	equ	0xFF7
  5858                           tblptrl	equ	0xFF6
  5859                           tablat	equ	0xFF5
  5860                           prodh	equ	0xFF4
  5861                           prodl	equ	0xFF3
  5862                           intcon	equ	0xFF2
  5863                           postinc0	equ	0xFEE
  5864                           wreg	equ	0xFE8
  5865                           indf1	equ	0xFE7
  5866                           postdec1	equ	0xFE5
  5867                           fsr1h	equ	0xFE2
  5868                           fsr1l	equ	0xFE1
  5869                           indf2	equ	0xFDF
  5870                           postinc2	equ	0xFDE
  5871                           postdec2	equ	0xFDD
  5872                           fsr2h	equ	0xFDA
  5873                           fsr2l	equ	0xFD9
  5874                           status	equ	0xFD8
  5875                           
  5876 ;; *************** function _I2C_SDA_READ *****************
  5877 ;; Defined at:
  5878 ;;		line 22 in file "soft_i2c.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;		None
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;		None
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      unsigned char 
  5885 ;; Registers used:
  5886 ;;		wreg
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;Total ram usage:        0 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    4
  5899 ;; This function calls:
  5900 ;;		Nothing
  5901 ;; This function is called by:
  5902 ;;		_Soft_I2C_ReadByte
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           	psect	text25
  5907  0018E4                     __ptext25:
  5908                           	opt stack 0
  5909  0018E4                     _I2C_SDA_READ:
  5910                           	opt stack 25
  5911                           
  5912                           ;incstack = 0
  5913  0018E4  A882               	btfss	3970,4,c	;volatile
  5914  0018E6  D002               	goto	u1570
  5915  0018E8  0E01               	movlw	1
  5916  0018EA  0012               	return	
  5917  0018EC                     u1570:
  5918  0018EC  0E00               	movlw	0
  5919  0018EE  0012               	return	
  5920  0018F0                     __end_of_I2C_SDA_READ:
  5921                           	opt stack 0
  5922                           tblptru	equ	0xFF8
  5923                           tblptrh	equ	0xFF7
  5924                           tblptrl	equ	0xFF6
  5925                           tablat	equ	0xFF5
  5926                           prodh	equ	0xFF4
  5927                           prodl	equ	0xFF3
  5928                           intcon	equ	0xFF2
  5929                           postinc0	equ	0xFEE
  5930                           wreg	equ	0xFE8
  5931                           indf1	equ	0xFE7
  5932                           postdec1	equ	0xFE5
  5933                           fsr1h	equ	0xFE2
  5934                           fsr1l	equ	0xFE1
  5935                           indf2	equ	0xFDF
  5936                           postinc2	equ	0xFDE
  5937                           postdec2	equ	0xFDD
  5938                           fsr2h	equ	0xFDA
  5939                           fsr2l	equ	0xFD9
  5940                           status	equ	0xFD8
  5941                           
  5942 ;; *************** function _I2C_SDA_IN_SET *****************
  5943 ;; Defined at:
  5944 ;;		line 14 in file "soft_i2c.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;		None
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  1    wreg      void 
  5951 ;; Registers used:
  5952 ;;		None
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;Total ram usage:        0 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    4
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_Soft_I2C_WriteByte
  5969 ;;		_Soft_I2C_ReadByte
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text26
  5974  001908                     __ptext26:
  5975                           	opt stack 0
  5976  001908                     _I2C_SDA_IN_SET:
  5977                           	opt stack 25
  5978                           
  5979                           ;incstack = 0
  5980  001908  8894               	bsf	3988,4,c	;volatile
  5981  00190A  0012               	return		;funcret
  5982  00190C                     __end_of_I2C_SDA_IN_SET:
  5983                           	opt stack 0
  5984                           tblptru	equ	0xFF8
  5985                           tblptrh	equ	0xFF7
  5986                           tblptrl	equ	0xFF6
  5987                           tablat	equ	0xFF5
  5988                           prodh	equ	0xFF4
  5989                           prodl	equ	0xFF3
  5990                           intcon	equ	0xFF2
  5991                           postinc0	equ	0xFEE
  5992                           wreg	equ	0xFE8
  5993                           indf1	equ	0xFE7
  5994                           postdec1	equ	0xFE5
  5995                           fsr1h	equ	0xFE2
  5996                           fsr1l	equ	0xFE1
  5997                           indf2	equ	0xFDF
  5998                           postinc2	equ	0xFDE
  5999                           postdec2	equ	0xFDD
  6000                           fsr2h	equ	0xFDA
  6001                           fsr2l	equ	0xFD9
  6002                           status	equ	0xFD8
  6003                           
  6004 ;; *************** function _I2C_SDA_CLEAR *****************
  6005 ;; Defined at:
  6006 ;;		line 12 in file "soft_i2c.c"
  6007 ;; Parameters:    Size  Location     Type
  6008 ;;		None
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;		None
  6011 ;; Return value:  Size  Location     Type
  6012 ;;                  1    wreg      void 
  6013 ;; Registers used:
  6014 ;;		None
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 0/0
  6018 ;;		Unchanged: 0/0
  6019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6024 ;;Total ram usage:        0 bytes
  6025 ;; Hardware stack levels used:    1
  6026 ;; Hardware stack levels required when called:    4
  6027 ;; This function calls:
  6028 ;;		Nothing
  6029 ;; This function is called by:
  6030 ;;		_Soft_I2C_Start
  6031 ;;		_Soft_I2C_WriteByte
  6032 ;;		_Soft_I2C_ReadByte
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036                           	psect	text27
  6037  00190C                     __ptext27:
  6038                           	opt stack 0
  6039  00190C                     _I2C_SDA_CLEAR:
  6040                           	opt stack 25
  6041                           
  6042                           ;incstack = 0
  6043  00190C  988B               	bcf	3979,4,c	;volatile
  6044  00190E  0012               	return		;funcret
  6045  001910                     __end_of_I2C_SDA_CLEAR:
  6046                           	opt stack 0
  6047                           tblptru	equ	0xFF8
  6048                           tblptrh	equ	0xFF7
  6049                           tblptrl	equ	0xFF6
  6050                           tablat	equ	0xFF5
  6051                           prodh	equ	0xFF4
  6052                           prodl	equ	0xFF3
  6053                           intcon	equ	0xFF2
  6054                           postinc0	equ	0xFEE
  6055                           wreg	equ	0xFE8
  6056                           indf1	equ	0xFE7
  6057                           postdec1	equ	0xFE5
  6058                           fsr1h	equ	0xFE2
  6059                           fsr1l	equ	0xFE1
  6060                           indf2	equ	0xFDF
  6061                           postinc2	equ	0xFDE
  6062                           postdec2	equ	0xFDD
  6063                           fsr2h	equ	0xFDA
  6064                           fsr2l	equ	0xFD9
  6065                           status	equ	0xFD8
  6066                           
  6067 ;; *************** function _I2C_SCL_CLEAR *****************
  6068 ;; Defined at:
  6069 ;;		line 18 in file "soft_i2c.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		None
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;Total ram usage:        0 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    4
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_Soft_I2C_Start
  6094 ;;		_Soft_I2C_WriteByte
  6095 ;;		_Soft_I2C_ReadByte
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text28
  6100  001910                     __ptext28:
  6101                           	opt stack 0
  6102  001910                     _I2C_SCL_CLEAR:
  6103                           	opt stack 25
  6104                           
  6105                           ;incstack = 0
  6106  001910  968B               	bcf	3979,3,c	;volatile
  6107  001912  0012               	return		;funcret
  6108  001914                     __end_of_I2C_SCL_CLEAR:
  6109                           	opt stack 0
  6110                           tblptru	equ	0xFF8
  6111                           tblptrh	equ	0xFF7
  6112                           tblptrl	equ	0xFF6
  6113                           tablat	equ	0xFF5
  6114                           prodh	equ	0xFF4
  6115                           prodl	equ	0xFF3
  6116                           intcon	equ	0xFF2
  6117                           postinc0	equ	0xFEE
  6118                           wreg	equ	0xFE8
  6119                           indf1	equ	0xFE7
  6120                           postdec1	equ	0xFE5
  6121                           fsr1h	equ	0xFE2
  6122                           fsr1l	equ	0xFE1
  6123                           indf2	equ	0xFDF
  6124                           postinc2	equ	0xFDE
  6125                           postdec2	equ	0xFDD
  6126                           fsr2h	equ	0xFDA
  6127                           fsr2l	equ	0xFD9
  6128                           status	equ	0xFD8
  6129                           
  6130 ;; *************** function _Soft_I2C_Init *****************
  6131 ;; Defined at:
  6132 ;;		line 25 in file "soft_i2c.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;		None
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;		None
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  1    wreg      void 
  6139 ;; Registers used:
  6140 ;;		wreg, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6150 ;;Total ram usage:        1 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:    5
  6153 ;; This function calls:
  6154 ;;		_I2C_SCL_OUT_SET
  6155 ;;		_I2C_SCL_SET
  6156 ;;		_I2C_SDA_OUT_SET
  6157 ;;		_I2C_SDA_SET
  6158 ;; This function is called by:
  6159 ;;		_main
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text29
  6164  0017E2                     __ptext29:
  6165                           	opt stack 0
  6166  0017E2                     _Soft_I2C_Init:
  6167                           	opt stack 25
  6168                           
  6169                           ;soft_i2c.c: 27: I2C_SDA_OUT_SET();
  6170                           
  6171                           ;incstack = 0
  6172  0017E2  EC8C  F00C         	call	_I2C_SDA_OUT_SET	;wreg free
  6173                           
  6174                           ;soft_i2c.c: 28: I2C_SCL_OUT_SET();
  6175  0017E6  EC90  F00C         	call	_I2C_SCL_OUT_SET	;wreg free
  6176                           
  6177                           ;soft_i2c.c: 29: I2C_SCL_SET();
  6178  0017EA  EC8E  F00C         	call	_I2C_SCL_SET	;wreg free
  6179                           
  6180                           ;soft_i2c.c: 30: I2C_SDA_SET();
  6181  0017EE  EC8A  F00C         	call	_I2C_SDA_SET	;wreg free
  6182                           
  6183                           ;soft_i2c.c: 31: _delay((unsigned long)((10)*(64000000/4000.0)));
  6184  0017F2  0ED0               	movlw	208
  6185  0017F4  6E25               	movwf	??_Soft_I2C_Init& (0+255),c
  6186  0017F6  0ECA               	movlw	202
  6187  0017F8                     u4027:
  6188  0017F8  2EE8               	decfsz	wreg,f,c
  6189  0017FA  D7FE               	goto	u4027
  6190  0017FC  2E25               	decfsz	??_Soft_I2C_Init& (0+255),f,c
  6191  0017FE  D7FC               	goto	u4027
  6192  001800  0012               	return		;funcret
  6193  001802                     __end_of_Soft_I2C_Init:
  6194                           	opt stack 0
  6195                           tblptru	equ	0xFF8
  6196                           tblptrh	equ	0xFF7
  6197                           tblptrl	equ	0xFF6
  6198                           tablat	equ	0xFF5
  6199                           prodh	equ	0xFF4
  6200                           prodl	equ	0xFF3
  6201                           intcon	equ	0xFF2
  6202                           postinc0	equ	0xFEE
  6203                           wreg	equ	0xFE8
  6204                           indf1	equ	0xFE7
  6205                           postdec1	equ	0xFE5
  6206                           fsr1h	equ	0xFE2
  6207                           fsr1l	equ	0xFE1
  6208                           indf2	equ	0xFDF
  6209                           postinc2	equ	0xFDE
  6210                           postdec2	equ	0xFDD
  6211                           fsr2h	equ	0xFDA
  6212                           fsr2l	equ	0xFD9
  6213                           status	equ	0xFD8
  6214                           
  6215 ;; *************** function _I2C_SDA_SET *****************
  6216 ;; Defined at:
  6217 ;;		line 11 in file "soft_i2c.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;		None
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;		None
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  1    wreg      void 
  6224 ;; Registers used:
  6225 ;;		None
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;Total ram usage:        0 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; Hardware stack levels required when called:    4
  6238 ;; This function calls:
  6239 ;;		Nothing
  6240 ;; This function is called by:
  6241 ;;		_Soft_I2C_Init
  6242 ;;		_Soft_I2C_Start
  6243 ;;		_Soft_I2C_Stop
  6244 ;;		_Soft_I2C_WriteByte
  6245 ;;		_Soft_I2C_ReadByte
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           	psect	text30
  6250  001914                     __ptext30:
  6251                           	opt stack 0
  6252  001914                     _I2C_SDA_SET:
  6253                           	opt stack 25
  6254                           
  6255                           ;incstack = 0
  6256  001914  888B               	bsf	3979,4,c	;volatile
  6257  001916  0012               	return		;funcret
  6258  001918                     __end_of_I2C_SDA_SET:
  6259                           	opt stack 0
  6260                           tblptru	equ	0xFF8
  6261                           tblptrh	equ	0xFF7
  6262                           tblptrl	equ	0xFF6
  6263                           tablat	equ	0xFF5
  6264                           prodh	equ	0xFF4
  6265                           prodl	equ	0xFF3
  6266                           intcon	equ	0xFF2
  6267                           postinc0	equ	0xFEE
  6268                           wreg	equ	0xFE8
  6269                           indf1	equ	0xFE7
  6270                           postdec1	equ	0xFE5
  6271                           fsr1h	equ	0xFE2
  6272                           fsr1l	equ	0xFE1
  6273                           indf2	equ	0xFDF
  6274                           postinc2	equ	0xFDE
  6275                           postdec2	equ	0xFDD
  6276                           fsr2h	equ	0xFDA
  6277                           fsr2l	equ	0xFD9
  6278                           status	equ	0xFD8
  6279                           
  6280 ;; *************** function _I2C_SDA_OUT_SET *****************
  6281 ;; Defined at:
  6282 ;;		line 15 in file "soft_i2c.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;		None
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;		None
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      void 
  6289 ;; Registers used:
  6290 ;;		None
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;Total ram usage:        0 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    4
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_Soft_I2C_Init
  6307 ;;		_Soft_I2C_Start
  6308 ;;		_Soft_I2C_Stop
  6309 ;;		_Soft_I2C_WriteByte
  6310 ;;		_Soft_I2C_ReadByte
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           	psect	text31
  6315  001918                     __ptext31:
  6316                           	opt stack 0
  6317  001918                     _I2C_SDA_OUT_SET:
  6318                           	opt stack 25
  6319                           
  6320                           ;incstack = 0
  6321  001918  9894               	bcf	3988,4,c	;volatile
  6322  00191A  0012               	return		;funcret
  6323  00191C                     __end_of_I2C_SDA_OUT_SET:
  6324                           	opt stack 0
  6325                           tblptru	equ	0xFF8
  6326                           tblptrh	equ	0xFF7
  6327                           tblptrl	equ	0xFF6
  6328                           tablat	equ	0xFF5
  6329                           prodh	equ	0xFF4
  6330                           prodl	equ	0xFF3
  6331                           intcon	equ	0xFF2
  6332                           postinc0	equ	0xFEE
  6333                           wreg	equ	0xFE8
  6334                           indf1	equ	0xFE7
  6335                           postdec1	equ	0xFE5
  6336                           fsr1h	equ	0xFE2
  6337                           fsr1l	equ	0xFE1
  6338                           indf2	equ	0xFDF
  6339                           postinc2	equ	0xFDE
  6340                           postdec2	equ	0xFDD
  6341                           fsr2h	equ	0xFDA
  6342                           fsr2l	equ	0xFD9
  6343                           status	equ	0xFD8
  6344                           
  6345 ;; *************** function _I2C_SCL_SET *****************
  6346 ;; Defined at:
  6347 ;;		line 17 in file "soft_i2c.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;		None
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;		None
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  1    wreg      void 
  6354 ;; Registers used:
  6355 ;;		None
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;Total ram usage:        0 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; Hardware stack levels required when called:    4
  6368 ;; This function calls:
  6369 ;;		Nothing
  6370 ;; This function is called by:
  6371 ;;		_Soft_I2C_Init
  6372 ;;		_Soft_I2C_Start
  6373 ;;		_Soft_I2C_Stop
  6374 ;;		_Soft_I2C_WriteByte
  6375 ;;		_Soft_I2C_ReadByte
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text32
  6380  00191C                     __ptext32:
  6381                           	opt stack 0
  6382  00191C                     _I2C_SCL_SET:
  6383                           	opt stack 25
  6384                           
  6385                           ;incstack = 0
  6386  00191C  868B               	bsf	3979,3,c	;volatile
  6387  00191E  0012               	return		;funcret
  6388  001920                     __end_of_I2C_SCL_SET:
  6389                           	opt stack 0
  6390                           tblptru	equ	0xFF8
  6391                           tblptrh	equ	0xFF7
  6392                           tblptrl	equ	0xFF6
  6393                           tablat	equ	0xFF5
  6394                           prodh	equ	0xFF4
  6395                           prodl	equ	0xFF3
  6396                           intcon	equ	0xFF2
  6397                           postinc0	equ	0xFEE
  6398                           wreg	equ	0xFE8
  6399                           indf1	equ	0xFE7
  6400                           postdec1	equ	0xFE5
  6401                           fsr1h	equ	0xFE2
  6402                           fsr1l	equ	0xFE1
  6403                           indf2	equ	0xFDF
  6404                           postinc2	equ	0xFDE
  6405                           postdec2	equ	0xFDD
  6406                           fsr2h	equ	0xFDA
  6407                           fsr2l	equ	0xFD9
  6408                           status	equ	0xFD8
  6409                           
  6410 ;; *************** function _I2C_SCL_OUT_SET *****************
  6411 ;; Defined at:
  6412 ;;		line 20 in file "soft_i2c.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;		None
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;		None
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      void 
  6419 ;; Registers used:
  6420 ;;		None
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;Total ram usage:        0 bytes
  6431 ;; Hardware stack levels used:    1
  6432 ;; Hardware stack levels required when called:    4
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_Soft_I2C_Init
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text33
  6441  001920                     __ptext33:
  6442                           	opt stack 0
  6443  001920                     _I2C_SCL_OUT_SET:
  6444                           	opt stack 25
  6445                           
  6446                           ;incstack = 0
  6447  001920  9694               	bcf	3988,3,c	;volatile
  6448  001922  0012               	return		;funcret
  6449  001924                     __end_of_I2C_SCL_OUT_SET:
  6450                           	opt stack 0
  6451                           tblptru	equ	0xFF8
  6452                           tblptrh	equ	0xFF7
  6453                           tblptrl	equ	0xFF6
  6454                           tablat	equ	0xFF5
  6455                           prodh	equ	0xFF4
  6456                           prodl	equ	0xFF3
  6457                           intcon	equ	0xFF2
  6458                           postinc0	equ	0xFEE
  6459                           wreg	equ	0xFE8
  6460                           indf1	equ	0xFE7
  6461                           postdec1	equ	0xFE5
  6462                           fsr1h	equ	0xFE2
  6463                           fsr1l	equ	0xFE1
  6464                           indf2	equ	0xFDF
  6465                           postinc2	equ	0xFDE
  6466                           postdec2	equ	0xFDD
  6467                           fsr2h	equ	0xFDA
  6468                           fsr2l	equ	0xFD9
  6469                           status	equ	0xFD8
  6470                           
  6471 ;; *************** function _SYSTEM_Initialize *****************
  6472 ;; Defined at:
  6473 ;;		line 112 in file "mcc_generated_files/mcc.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;		None
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;		None
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, cstack
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;Total ram usage:        0 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    6
  6494 ;; This function calls:
  6495 ;;		_EPWM1_Initialize
  6496 ;;		_EUSART1_Initialize
  6497 ;;		_INTERRUPT_Initialize
  6498 ;;		_OSCILLATOR_Initialize
  6499 ;;		_PIN_MANAGER_Initialize
  6500 ;;		_TMR2_Initialize
  6501 ;; This function is called by:
  6502 ;;		_main
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text34
  6507  00187C                     __ptext34:
  6508                           	opt stack 0
  6509  00187C                     _SYSTEM_Initialize:
  6510                           	opt stack 24
  6511                           
  6512                           ;mcc.c: 115: INTERRUPT_Initialize();
  6513                           
  6514                           ;incstack = 0
  6515  00187C  EC7D  F00C         	call	_INTERRUPT_Initialize	;wreg free
  6516                           
  6517                           ;mcc.c: 116: PIN_MANAGER_Initialize();
  6518  001880  EC22  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  6519                           
  6520                           ;mcc.c: 117: OSCILLATOR_Initialize();
  6521  001884  EC65  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  6522                           
  6523                           ;mcc.c: 118: EPWM1_Initialize();
  6524  001888  EC01  F00C         	call	_EPWM1_Initialize	;wreg free
  6525                           
  6526                           ;mcc.c: 119: TMR2_Initialize();
  6527  00188C  EC55  F00C         	call	_TMR2_Initialize	;wreg free
  6528                           
  6529                           ;mcc.c: 120: EUSART1_Initialize();
  6530  001890  EC3C  F00B         	call	_EUSART1_Initialize	;wreg free
  6531  001894  0012               	return		;funcret
  6532  001896                     __end_of_SYSTEM_Initialize:
  6533                           	opt stack 0
  6534                           tblptru	equ	0xFF8
  6535                           tblptrh	equ	0xFF7
  6536                           tblptrl	equ	0xFF6
  6537                           tablat	equ	0xFF5
  6538                           prodh	equ	0xFF4
  6539                           prodl	equ	0xFF3
  6540                           intcon	equ	0xFF2
  6541                           postinc0	equ	0xFEE
  6542                           wreg	equ	0xFE8
  6543                           indf1	equ	0xFE7
  6544                           postdec1	equ	0xFE5
  6545                           fsr1h	equ	0xFE2
  6546                           fsr1l	equ	0xFE1
  6547                           indf2	equ	0xFDF
  6548                           postinc2	equ	0xFDE
  6549                           postdec2	equ	0xFDD
  6550                           fsr2h	equ	0xFDA
  6551                           fsr2l	equ	0xFD9
  6552                           status	equ	0xFD8
  6553                           
  6554 ;; *************** function _TMR2_Initialize *****************
  6555 ;; Defined at:
  6556 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;		None
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;		None
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  1    wreg      void 
  6563 ;; Registers used:
  6564 ;;		wreg, status,2, cstack
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;Total ram usage:        0 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    5
  6577 ;; This function calls:
  6578 ;;		_TMR2_StartTimer
  6579 ;; This function is called by:
  6580 ;;		_SYSTEM_Initialize
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           	psect	text35
  6585  0018AA                     __ptext35:
  6586                           	opt stack 0
  6587  0018AA                     _TMR2_Initialize:
  6588                           	opt stack 24
  6589                           
  6590                           ;tmr2.c: 63: T2CON = 0x00;
  6591                           
  6592                           ;incstack = 0
  6593  0018AA  0E00               	movlw	0
  6594  0018AC  6EBA               	movwf	4026,c	;volatile
  6595                           
  6596                           ;tmr2.c: 66: PR2 = 0xFF;
  6597  0018AE  68BB               	setf	4027,c	;volatile
  6598                           
  6599                           ;tmr2.c: 69: TMR2 = 0x00;
  6600  0018B0  0E00               	movlw	0
  6601  0018B2  6EBC               	movwf	4028,c	;volatile
  6602                           
  6603                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  6604  0018B4  929E               	bcf	3998,1,c	;volatile
  6605                           
  6606                           ;tmr2.c: 75: TMR2_StartTimer();
  6607  0018B6  EC92  F00C         	call	_TMR2_StartTimer	;wreg free
  6608  0018BA  0012               	return		;funcret
  6609  0018BC                     __end_of_TMR2_Initialize:
  6610                           	opt stack 0
  6611                           tblptru	equ	0xFF8
  6612                           tblptrh	equ	0xFF7
  6613                           tblptrl	equ	0xFF6
  6614                           tablat	equ	0xFF5
  6615                           prodh	equ	0xFF4
  6616                           prodl	equ	0xFF3
  6617                           intcon	equ	0xFF2
  6618                           postinc0	equ	0xFEE
  6619                           wreg	equ	0xFE8
  6620                           indf1	equ	0xFE7
  6621                           postdec1	equ	0xFE5
  6622                           fsr1h	equ	0xFE2
  6623                           fsr1l	equ	0xFE1
  6624                           indf2	equ	0xFDF
  6625                           postinc2	equ	0xFDE
  6626                           postdec2	equ	0xFDD
  6627                           fsr2h	equ	0xFDA
  6628                           fsr2l	equ	0xFD9
  6629                           status	equ	0xFD8
  6630                           
  6631 ;; *************** function _TMR2_StartTimer *****************
  6632 ;; Defined at:
  6633 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		None
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6651 ;;Total ram usage:        0 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    4
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_TMR2_Initialize
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text36
  6662  001924                     __ptext36:
  6663                           	opt stack 0
  6664  001924                     _TMR2_StartTimer:
  6665                           	opt stack 24
  6666                           
  6667                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  6668                           
  6669                           ;incstack = 0
  6670  001924  84BA               	bsf	4026,2,c	;volatile
  6671  001926  0012               	return		;funcret
  6672  001928                     __end_of_TMR2_StartTimer:
  6673                           	opt stack 0
  6674                           tblptru	equ	0xFF8
  6675                           tblptrh	equ	0xFF7
  6676                           tblptrl	equ	0xFF6
  6677                           tablat	equ	0xFF5
  6678                           prodh	equ	0xFF4
  6679                           prodl	equ	0xFF3
  6680                           intcon	equ	0xFF2
  6681                           postinc0	equ	0xFEE
  6682                           wreg	equ	0xFE8
  6683                           indf1	equ	0xFE7
  6684                           postdec1	equ	0xFE5
  6685                           fsr1h	equ	0xFE2
  6686                           fsr1l	equ	0xFE1
  6687                           indf2	equ	0xFDF
  6688                           postinc2	equ	0xFDE
  6689                           postdec2	equ	0xFDD
  6690                           fsr2h	equ	0xFDA
  6691                           fsr2l	equ	0xFD9
  6692                           status	equ	0xFD8
  6693                           
  6694 ;; *************** function _PIN_MANAGER_Initialize *****************
  6695 ;; Defined at:
  6696 ;;		line 49 in file "mcc_generated_files/pin_manager.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      void 
  6703 ;; Registers used:
  6704 ;;		wreg, status,2
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;Total ram usage:        0 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; Hardware stack levels required when called:    4
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_SYSTEM_Initialize
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text37
  6725  001644                     __ptext37:
  6726                           	opt stack 0
  6727  001644                     _PIN_MANAGER_Initialize:
  6728                           	opt stack 25
  6729                           
  6730                           ;pin_manager.c: 51: LATB = 0x0;
  6731                           
  6732                           ;incstack = 0
  6733  001644  0E00               	movlw	0
  6734  001646  6E8A               	movwf	3978,c	;volatile
  6735                           
  6736                           ;pin_manager.c: 52: LATA = 0x0;
  6737  001648  0E00               	movlw	0
  6738  00164A  6E89               	movwf	3977,c	;volatile
  6739                           
  6740                           ;pin_manager.c: 53: LATC = 0x0;
  6741  00164C  0E00               	movlw	0
  6742  00164E  6E8B               	movwf	3979,c	;volatile
  6743                           
  6744                           ;pin_manager.c: 54: ANSELA = 0x2F;
  6745  001650  0E2F               	movlw	47
  6746  001652  010F               	movlb	15	; () banked
  6747  001654  6F38               	movwf	56,b	;volatile
  6748                           
  6749                           ;pin_manager.c: 55: ANSELB = 0x3E;
  6750  001656  0E3E               	movlw	62
  6751  001658  010F               	movlb	15	; () banked
  6752  00165A  6F39               	movwf	57,b	;volatile
  6753                           
  6754                           ;pin_manager.c: 56: ANSELC = 0x38;
  6755  00165C  0E38               	movlw	56
  6756  00165E  010F               	movlb	15	; () banked
  6757  001660  6F3A               	movwf	58,b	;volatile
  6758                           
  6759                           ;pin_manager.c: 57: TRISB = 0xC8;
  6760  001662  0EC8               	movlw	200
  6761  001664  6E93               	movwf	3987,c	;volatile
  6762                           
  6763                           ;pin_manager.c: 58: TRISC = 0xF9;
  6764  001666  0EF9               	movlw	249
  6765  001668  6E94               	movwf	3988,c	;volatile
  6766                           
  6767                           ;pin_manager.c: 59: WPUB = 0xFE;
  6768  00166A  0EFE               	movlw	254
  6769  00166C  6E61               	movwf	3937,c	;volatile
  6770                           
  6771                           ;pin_manager.c: 60: TRISA = 0xEF;
  6772  00166E  0EEF               	movlw	239
  6773  001670  6E92               	movwf	3986,c	;volatile
  6774                           
  6775                           ; BSR set to: 15
  6776                           ;pin_manager.c: 62: INTCON2bits.nRBPU = 0x1;
  6777  001672  8EF1               	bsf	intcon2,7,c	;volatile
  6778                           
  6779                           ; BSR set to: 15
  6780                           ;pin_manager.c: 66: INTCONbits.RBIE = 0;
  6781  001674  96F2               	bcf	intcon,3,c	;volatile
  6782                           
  6783                           ; BSR set to: 15
  6784  001676  0012               	return		;funcret
  6785  001678                     __end_of_PIN_MANAGER_Initialize:
  6786                           	opt stack 0
  6787                           tblptru	equ	0xFF8
  6788                           tblptrh	equ	0xFF7
  6789                           tblptrl	equ	0xFF6
  6790                           tablat	equ	0xFF5
  6791                           prodh	equ	0xFF4
  6792                           prodl	equ	0xFF3
  6793                           intcon	equ	0xFF2
  6794                           intcon2	equ	0xFF1
  6795                           postinc0	equ	0xFEE
  6796                           wreg	equ	0xFE8
  6797                           indf1	equ	0xFE7
  6798                           postdec1	equ	0xFE5
  6799                           fsr1h	equ	0xFE2
  6800                           fsr1l	equ	0xFE1
  6801                           indf2	equ	0xFDF
  6802                           postinc2	equ	0xFDE
  6803                           postdec2	equ	0xFDD
  6804                           fsr2h	equ	0xFDA
  6805                           fsr2l	equ	0xFD9
  6806                           status	equ	0xFD8
  6807                           
  6808 ;; *************** function _OSCILLATOR_Initialize *****************
  6809 ;; Defined at:
  6810 ;;		line 123 in file "mcc_generated_files/mcc.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;		None
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  1    wreg      void 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6828 ;;Total ram usage:        0 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; Hardware stack levels required when called:    4
  6831 ;; This function calls:
  6832 ;;		Nothing
  6833 ;; This function is called by:
  6834 ;;		_SYSTEM_Initialize
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text38
  6839  0018CA                     __ptext38:
  6840                           	opt stack 0
  6841  0018CA                     _OSCILLATOR_Initialize:
  6842                           	opt stack 25
  6843                           
  6844                           ;mcc.c: 126: OSCCON = 0x70;
  6845                           
  6846                           ; BSR set to: 15
  6847                           ;incstack = 0
  6848  0018CA  0E70               	movlw	112
  6849  0018CC  6ED3               	movwf	4051,c	;volatile
  6850                           
  6851                           ;mcc.c: 128: OSCCON2 = 0x04;
  6852  0018CE  0E04               	movlw	4
  6853  0018D0  6ED2               	movwf	4050,c	;volatile
  6854                           
  6855                           ;mcc.c: 130: OSCTUNE = 0x40;
  6856  0018D2  0E40               	movlw	64
  6857  0018D4  6E9B               	movwf	3995,c	;volatile
  6858  0018D6  0012               	return		;funcret
  6859  0018D8                     __end_of_OSCILLATOR_Initialize:
  6860                           	opt stack 0
  6861                           tblptru	equ	0xFF8
  6862                           tblptrh	equ	0xFF7
  6863                           tblptrl	equ	0xFF6
  6864                           tablat	equ	0xFF5
  6865                           prodh	equ	0xFF4
  6866                           prodl	equ	0xFF3
  6867                           intcon	equ	0xFF2
  6868                           intcon2	equ	0xFF1
  6869                           postinc0	equ	0xFEE
  6870                           wreg	equ	0xFE8
  6871                           indf1	equ	0xFE7
  6872                           postdec1	equ	0xFE5
  6873                           fsr1h	equ	0xFE2
  6874                           fsr1l	equ	0xFE1
  6875                           indf2	equ	0xFDF
  6876                           postinc2	equ	0xFDE
  6877                           postdec2	equ	0xFDD
  6878                           fsr2h	equ	0xFDA
  6879                           fsr2l	equ	0xFD9
  6880                           status	equ	0xFD8
  6881                           
  6882 ;; *************** function _INTERRUPT_Initialize *****************
  6883 ;; Defined at:
  6884 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;		None
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;		None
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  1    wreg      void 
  6891 ;; Registers used:
  6892 ;;		None
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;Total ram usage:        0 bytes
  6903 ;; Hardware stack levels used:    1
  6904 ;; Hardware stack levels required when called:    4
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_SYSTEM_Initialize
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text39
  6913  0018FA                     __ptext39:
  6914                           	opt stack 0
  6915  0018FA                     _INTERRUPT_Initialize:
  6916                           	opt stack 25
  6917                           
  6918                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  6919                           
  6920                           ;incstack = 0
  6921  0018FA  9ED0               	bcf	4048,7,c	;volatile
  6922                           
  6923                           ;interrupt_manager.c: 60: INTCON2bits.TMR0IP = 0;
  6924  0018FC  94F1               	bcf	intcon2,2,c	;volatile
  6925                           
  6926                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  6927  0018FE  989F               	bcf	3999,4,c	;volatile
  6928                           
  6929                           ;interrupt_manager.c: 64: IPR1bits.RC1IP = 0;
  6930  001900  9A9F               	bcf	3999,5,c	;volatile
  6931  001902  0012               	return		;funcret
  6932  001904                     __end_of_INTERRUPT_Initialize:
  6933                           	opt stack 0
  6934                           tblptru	equ	0xFF8
  6935                           tblptrh	equ	0xFF7
  6936                           tblptrl	equ	0xFF6
  6937                           tablat	equ	0xFF5
  6938                           prodh	equ	0xFF4
  6939                           prodl	equ	0xFF3
  6940                           intcon	equ	0xFF2
  6941                           intcon2	equ	0xFF1
  6942                           postinc0	equ	0xFEE
  6943                           wreg	equ	0xFE8
  6944                           indf1	equ	0xFE7
  6945                           postdec1	equ	0xFE5
  6946                           fsr1h	equ	0xFE2
  6947                           fsr1l	equ	0xFE1
  6948                           indf2	equ	0xFDF
  6949                           postinc2	equ	0xFDE
  6950                           postdec2	equ	0xFDD
  6951                           fsr2h	equ	0xFDA
  6952                           fsr2l	equ	0xFD9
  6953                           status	equ	0xFD8
  6954                           
  6955 ;; *************** function _EUSART1_Initialize *****************
  6956 ;; Defined at:
  6957 ;;		line 84 in file "mcc_generated_files/eusart1.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;		None
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;		None
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  1    wreg      void 
  6964 ;; Registers used:
  6965 ;;		wreg, status,2
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;Total ram usage:        0 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:    4
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_SYSTEM_Initialize
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text40
  6986  001678                     __ptext40:
  6987                           	opt stack 0
  6988  001678                     _EUSART1_Initialize:
  6989                           	opt stack 25
  6990                           
  6991                           ;eusart1.c: 87: PIE1bits.RC1IE = 0;
  6992                           
  6993                           ;incstack = 0
  6994  001678  9A9D               	bcf	3997,5,c	;volatile
  6995                           
  6996                           ;eusart1.c: 88: PIE1bits.TX1IE = 0;
  6997  00167A  989D               	bcf	3997,4,c	;volatile
  6998                           
  6999                           ;eusart1.c: 93: BAUDCON1 = 0x00;
  7000  00167C  0E00               	movlw	0
  7001  00167E  6EB8               	movwf	4024,c	;volatile
  7002                           
  7003                           ;eusart1.c: 96: RCSTA1 = 0x90;
  7004  001680  0E90               	movlw	144
  7005  001682  6EAB               	movwf	4011,c	;volatile
  7006                           
  7007                           ;eusart1.c: 99: TXSTA1 = 0x20;
  7008  001684  0E20               	movlw	32
  7009  001686  6EAC               	movwf	4012,c	;volatile
  7010                           
  7011                           ;eusart1.c: 102: SPBRG1 = 0x10;
  7012  001688  0E10               	movlw	16
  7013  00168A  6EAF               	movwf	4015,c	;volatile
  7014                           
  7015                           ;eusart1.c: 105: SPBRGH1 = 0x00;
  7016  00168C  0E00               	movlw	0
  7017  00168E  6EB0               	movwf	4016,c	;volatile
  7018                           
  7019                           ;eusart1.c: 109: eusart1TxHead = 0;
  7020  001690  0E00               	movlw	0
  7021  001692  6E30               	movwf	_eusart1TxHead,c
  7022                           
  7023                           ;eusart1.c: 110: eusart1TxTail = 0;
  7024  001694  0E00               	movlw	0
  7025  001696  6E31               	movwf	_eusart1TxTail,c
  7026                           
  7027                           ;eusart1.c: 111: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  7028  001698  0E80               	movlw	128
  7029  00169A  6E3A               	movwf	_eusart1TxBufferRemaining,c	;volatile
  7030                           
  7031                           ;eusart1.c: 113: eusart1RxHead = 0;
  7032  00169C  0E00               	movlw	0
  7033  00169E  6E2E               	movwf	_eusart1RxHead,c
  7034                           
  7035                           ;eusart1.c: 114: eusart1RxTail = 0;
  7036  0016A0  0E00               	movlw	0
  7037  0016A2  6E2F               	movwf	_eusart1RxTail,c
  7038                           
  7039                           ;eusart1.c: 115: eusart1RxCount = 0;
  7040  0016A4  0E00               	movlw	0
  7041  0016A6  6E2D               	movwf	_eusart1RxCount,c	;volatile
  7042                           
  7043                           ;eusart1.c: 118: PIE1bits.RC1IE = 1;
  7044  0016A8  8A9D               	bsf	3997,5,c	;volatile
  7045  0016AA  0012               	return		;funcret
  7046  0016AC                     __end_of_EUSART1_Initialize:
  7047                           	opt stack 0
  7048                           tblptru	equ	0xFF8
  7049                           tblptrh	equ	0xFF7
  7050                           tblptrl	equ	0xFF6
  7051                           tablat	equ	0xFF5
  7052                           prodh	equ	0xFF4
  7053                           prodl	equ	0xFF3
  7054                           intcon	equ	0xFF2
  7055                           intcon2	equ	0xFF1
  7056                           postinc0	equ	0xFEE
  7057                           wreg	equ	0xFE8
  7058                           indf1	equ	0xFE7
  7059                           postdec1	equ	0xFE5
  7060                           fsr1h	equ	0xFE2
  7061                           fsr1l	equ	0xFE1
  7062                           indf2	equ	0xFDF
  7063                           postinc2	equ	0xFDE
  7064                           postdec2	equ	0xFDD
  7065                           fsr2h	equ	0xFDA
  7066                           fsr2l	equ	0xFD9
  7067                           status	equ	0xFD8
  7068                           
  7069 ;; *************** function _EPWM1_Initialize *****************
  7070 ;; Defined at:
  7071 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;		None
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, status,2
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7089 ;;Total ram usage:        0 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; Hardware stack levels required when called:    4
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_SYSTEM_Initialize
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           	psect	text41
  7100  001802                     __ptext41:
  7101                           	opt stack 0
  7102  001802                     _EPWM1_Initialize:
  7103                           	opt stack 25
  7104                           
  7105                           ;epwm1.c: 69: CCP1CON = 0x0E;
  7106                           
  7107                           ;incstack = 0
  7108  001802  0E0E               	movlw	14
  7109  001804  6EBD               	movwf	4029,c	;volatile
  7110                           
  7111                           ;epwm1.c: 72: ECCP1AS = 0x00;
  7112  001806  0E00               	movlw	0
  7113  001808  6EB6               	movwf	4022,c	;volatile
  7114                           
  7115                           ;epwm1.c: 75: PWM1CON = 0x82;
  7116  00180A  0E82               	movlw	130
  7117  00180C  6EB7               	movwf	4023,c	;volatile
  7118                           
  7119                           ;epwm1.c: 78: PSTR1CON = 0x01;
  7120  00180E  0E01               	movlw	1
  7121  001810  6EB9               	movwf	4025,c	;volatile
  7122                           
  7123                           ;epwm1.c: 81: CCPR1L = 0x00;
  7124  001812  0E00               	movlw	0
  7125  001814  6EBE               	movwf	4030,c	;volatile
  7126                           
  7127                           ;epwm1.c: 84: CCPR1H = 0x00;
  7128  001816  0E00               	movlw	0
  7129  001818  6EBF               	movwf	4031,c	;volatile
  7130                           
  7131                           ;epwm1.c: 88: CCPTMRS0bits.C1TSEL = 0x0;
  7132  00181A  0EFC               	movlw	-4
  7133  00181C  010F               	movlb	15	; () banked
  7134  00181E  1749               	andwf	73,f,b	;volatile
  7135                           
  7136                           ; BSR set to: 15
  7137  001820  0012               	return		;funcret
  7138  001822                     __end_of_EPWM1_Initialize:
  7139                           	opt stack 0
  7140                           tblptru	equ	0xFF8
  7141                           tblptrh	equ	0xFF7
  7142                           tblptrl	equ	0xFF6
  7143                           tablat	equ	0xFF5
  7144                           prodh	equ	0xFF4
  7145                           prodl	equ	0xFF3
  7146                           intcon	equ	0xFF2
  7147                           intcon2	equ	0xFF1
  7148                           postinc0	equ	0xFEE
  7149                           wreg	equ	0xFE8
  7150                           indf1	equ	0xFE7
  7151                           postdec1	equ	0xFE5
  7152                           fsr1h	equ	0xFE2
  7153                           fsr1l	equ	0xFE1
  7154                           indf2	equ	0xFDF
  7155                           postinc2	equ	0xFDE
  7156                           postdec2	equ	0xFDD
  7157                           fsr2h	equ	0xFDA
  7158                           fsr2l	equ	0xFD9
  7159                           status	equ	0xFD8
  7160                           
  7161 ;; *************** function _INTERRUPT_InterruptManager *****************
  7162 ;; Defined at:
  7163 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;		None
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;		None
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  1    wreg      void 
  7170 ;; Registers used:
  7171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7179 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7180 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7181 ;;Total ram usage:       14 bytes
  7182 ;; Hardware stack levels used:    1
  7183 ;; Hardware stack levels required when called:    3
  7184 ;; This function calls:
  7185 ;;		_EUSART1_Receive_ISR
  7186 ;;		_EUSART1_Transmit_ISR
  7187 ;; This function is called by:
  7188 ;;		Interrupt level 2
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           	psect	intcode
  7193  000008                     __pintcode:
  7194                           	opt stack 0
  7195  000008                     _INTERRUPT_InterruptManager:
  7196                           	opt stack 23
  7197                           
  7198                           ; BSR set to: 15
  7199                           ;incstack = 0
  7200  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7201  00000A  CFFA F017          	movff	pclath,??_INTERRUPT_InterruptManager
  7202  00000E  CFFB F018          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7203  000012  CFE9 F019          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  7204  000016  CFEA F01A          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  7205  00001A  CFE1 F01B          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  7206  00001E  CFE2 F01C          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  7207  000022  CFD9 F01D          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  7208  000026  CFDA F01E          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  7209  00002A  CFF3 F01F          	movff	prodl,??_INTERRUPT_InterruptManager+8
  7210  00002E  CFF4 F020          	movff	prodh,??_INTERRUPT_InterruptManager+9
  7211  000032  CFF6 F021          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  7212  000036  CFF7 F022          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  7213  00003A  CFF8 F023          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  7214  00003E  CFF5 F024          	movff	tablat,??_INTERRUPT_InterruptManager+13
  7215                           
  7216                           ;interrupt_manager.c: 77: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  7217  000042  B89D               	btfsc	3997,4,c	;volatile
  7218  000044  A89E               	btfss	3998,4,c	;volatile
  7219  000046  D003               	goto	i2l20
  7220                           
  7221                           ;interrupt_manager.c: 78: {
  7222                           ;interrupt_manager.c: 79: EUSART1_Transmit_ISR();
  7223  000048  EC9E  F00B         	call	_EUSART1_Transmit_ISR	;wreg free
  7224                           
  7225                           ;interrupt_manager.c: 80: }
  7226  00004C  D005               	goto	i2l24
  7227  00004E                     i2l20:
  7228                           
  7229                           ;interrupt_manager.c: 81: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  7230  00004E  BA9D               	btfsc	3997,5,c	;volatile
  7231  000050  AA9E               	btfss	3998,5,c	;volatile
  7232  000052  D002               	goto	i2l24
  7233                           
  7234                           ;interrupt_manager.c: 82: {
  7235                           ;interrupt_manager.c: 83: EUSART1_Receive_ISR();
  7236  000054  EC81  F007         	call	_EUSART1_Receive_ISR	;wreg free
  7237  000058                     i2l24:
  7238  000058  C024  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  7239  00005C  C023  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  7240  000060  C022  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  7241  000064  C021  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  7242  000068  C020  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  7243  00006C  C01F  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  7244  000070  C01E  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  7245  000074  C01D  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  7246  000078  C01C  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  7247  00007C  C01B  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  7248  000080  C01A  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  7249  000084  C019  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  7250  000088  C018  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7251  00008C  C017  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7252  000090  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7253  000092  0011               	retfie		f
  7254  000094                     __end_of_INTERRUPT_InterruptManager:
  7255                           	opt stack 0
  7256                           pclatu	equ	0xFFB
  7257                           pclath	equ	0xFFA
  7258                           tblptru	equ	0xFF8
  7259                           tblptrh	equ	0xFF7
  7260                           tblptrl	equ	0xFF6
  7261                           tablat	equ	0xFF5
  7262                           prodh	equ	0xFF4
  7263                           prodl	equ	0xFF3
  7264                           intcon	equ	0xFF2
  7265                           intcon2	equ	0xFF1
  7266                           postinc0	equ	0xFEE
  7267                           fsr0h	equ	0xFEA
  7268                           fsr0l	equ	0xFE9
  7269                           wreg	equ	0xFE8
  7270                           indf1	equ	0xFE7
  7271                           postdec1	equ	0xFE5
  7272                           fsr1h	equ	0xFE2
  7273                           fsr1l	equ	0xFE1
  7274                           indf2	equ	0xFDF
  7275                           postinc2	equ	0xFDE
  7276                           postdec2	equ	0xFDD
  7277                           fsr2h	equ	0xFDA
  7278                           fsr2l	equ	0xFD9
  7279                           status	equ	0xFD8
  7280                           
  7281 ;; *************** function _EUSART1_Transmit_ISR *****************
  7282 ;; Defined at:
  7283 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;		None
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;		None
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  1    wreg      void 
  7290 ;; Registers used:
  7291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7301 ;;Total ram usage:        0 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; This function calls:
  7304 ;;		Nothing
  7305 ;; This function is called by:
  7306 ;;		_INTERRUPT_InterruptManager
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           	psect	text43
  7311  00173C                     __ptext43:
  7312                           	opt stack 0
  7313  00173C                     _EUSART1_Transmit_ISR:
  7314                           	opt stack 25
  7315                           
  7316                           ;eusart1.c: 179: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  7317                           
  7318                           ;incstack = 0
  7319  00173C  0E80               	movlw	128
  7320  00173E  603A               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  7321  001740  D012               	goto	i2l122
  7322                           
  7323                           ;eusart1.c: 180: {
  7324                           ;eusart1.c: 181: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  7325  001742  5031               	movf	_eusart1TxTail,w,c
  7326  001744  0D01               	mullw	1
  7327  001746  0E00               	movlw	low _eusart1TxBuffer
  7328  001748  24F3               	addwf	prodl,w,c
  7329  00174A  6ED9               	movwf	fsr2l,c
  7330  00174C  0E01               	movlw	high _eusart1TxBuffer
  7331  00174E  20F4               	addwfc	prodh,w,c
  7332  001750  6EDA               	movwf	fsr2h,c
  7333  001752  50DF               	movf	indf2,w,c
  7334  001754  6EAD               	movwf	4013,c	;volatile
  7335  001756  2A31               	incf	_eusart1TxTail,f,c
  7336                           
  7337                           ;eusart1.c: 182: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  7338  001758  0E7F               	movlw	127
  7339  00175A  6431               	cpfsgt	_eusart1TxTail,c
  7340  00175C  D002               	goto	i2l2663
  7341                           
  7342                           ;eusart1.c: 183: {
  7343                           ;eusart1.c: 184: eusart1TxTail = 0;
  7344  00175E  0E00               	movlw	0
  7345  001760  6E31               	movwf	_eusart1TxTail,c
  7346  001762                     i2l2663:
  7347                           
  7348                           ;eusart1.c: 185: }
  7349                           ;eusart1.c: 186: eusart1TxBufferRemaining++;
  7350  001762  2A3A               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  7351                           
  7352                           ;eusart1.c: 187: }
  7353  001764  0012               	return	
  7354  001766                     i2l122:
  7355                           
  7356                           ;eusart1.c: 188: else
  7357                           ;eusart1.c: 189: {
  7358                           ;eusart1.c: 190: PIE1bits.TX1IE = 0;
  7359  001766  989D               	bcf	3997,4,c	;volatile
  7360  001768  0012               	return	
  7361  00176A                     __end_of_EUSART1_Transmit_ISR:
  7362                           	opt stack 0
  7363                           pclatu	equ	0xFFB
  7364                           pclath	equ	0xFFA
  7365                           tblptru	equ	0xFF8
  7366                           tblptrh	equ	0xFF7
  7367                           tblptrl	equ	0xFF6
  7368                           tablat	equ	0xFF5
  7369                           prodh	equ	0xFF4
  7370                           prodl	equ	0xFF3
  7371                           intcon	equ	0xFF2
  7372                           intcon2	equ	0xFF1
  7373                           postinc0	equ	0xFEE
  7374                           fsr0h	equ	0xFEA
  7375                           fsr0l	equ	0xFE9
  7376                           wreg	equ	0xFE8
  7377                           indf1	equ	0xFE7
  7378                           postdec1	equ	0xFE5
  7379                           fsr1h	equ	0xFE2
  7380                           fsr1l	equ	0xFE1
  7381                           indf2	equ	0xFDF
  7382                           postinc2	equ	0xFDE
  7383                           postdec2	equ	0xFDD
  7384                           fsr2h	equ	0xFDA
  7385                           fsr2l	equ	0xFD9
  7386                           status	equ	0xFD8
  7387                           
  7388 ;; *************** function _EUSART1_Receive_ISR *****************
  7389 ;; Defined at:
  7390 ;;		line 194 in file "mcc_generated_files/eusart1.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;		None
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;  state           2   20[COMRAM] int 
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      void 
  7397 ;; Registers used:
  7398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7405 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7407 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7408 ;;Total ram usage:        3 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; Hardware stack levels required when called:    2
  7411 ;; This function calls:
  7412 ;;		_EUSART1_Read
  7413 ;;		_strcmp
  7414 ;;		_strstr
  7415 ;; This function is called by:
  7416 ;;		_INTERRUPT_InterruptManager
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text44
  7421  000F02                     __ptext44:
  7422                           	opt stack 0
  7423  000F02                     _EUSART1_Receive_ISR:
  7424                           	opt stack 23
  7425                           
  7426                           ;eusart1.c: 196: if(1 == RCSTA1bits.OERR)
  7427                           
  7428                           ;incstack = 0
  7429  000F02  A2AB               	btfss	4011,1,c	;volatile
  7430  000F04  D002               	goto	i2l2669
  7431                           
  7432                           ;eusart1.c: 197: {
  7433                           ;eusart1.c: 200: RCSTA1bits.CREN = 0;
  7434  000F06  98AB               	bcf	4011,4,c	;volatile
  7435                           
  7436                           ;eusart1.c: 201: RCSTA1bits.CREN = 1;
  7437  000F08  88AB               	bsf	4011,4,c	;volatile
  7438  000F0A                     i2l2669:
  7439                           
  7440                           ;eusart1.c: 202: }
  7441                           ;eusart1.c: 207: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7442  000F0A  502E               	movf	_eusart1RxHead,w,c
  7443  000F0C  0D01               	mullw	1
  7444  000F0E  0E00               	movlw	low _eusart1RxBuffer
  7445  000F10  24F3               	addwf	prodl,w,c
  7446  000F12  6ED9               	movwf	fsr2l,c
  7447  000F14  0E02               	movlw	high _eusart1RxBuffer
  7448  000F16  20F4               	addwfc	prodh,w,c
  7449  000F18  6EDA               	movwf	fsr2h,c
  7450  000F1A  CFAE FFDF          	movff	4014,indf2	;volatile
  7451  000F1E  2A2E               	incf	_eusart1RxHead,f,c
  7452                           
  7453                           ;eusart1.c: 208: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7454  000F20  0E7F               	movlw	127
  7455  000F22  642E               	cpfsgt	_eusart1RxHead,c
  7456  000F24  D002               	goto	i2l2677
  7457                           
  7458                           ;eusart1.c: 209: {
  7459                           ;eusart1.c: 210: eusart1RxHead = 0;
  7460  000F26  0E00               	movlw	0
  7461  000F28  6E2E               	movwf	_eusart1RxHead,c
  7462  000F2A                     i2l2677:
  7463                           
  7464                           ;eusart1.c: 211: }
  7465                           ;eusart1.c: 212: eusart1RxCount++;
  7466  000F2A  2A2D               	incf	_eusart1RxCount,f,c	;volatile
  7467                           
  7468                           ;eusart1.c: 214: int state = 0;
  7469  000F2C  0E00               	movlw	0
  7470  000F2E  6E16               	movwf	EUSART1_Receive_ISR@state+1,c
  7471  000F30  0E00               	movlw	0
  7472  000F32  6E15               	movwf	EUSART1_Receive_ISR@state,c
  7473                           
  7474                           ;eusart1.c: 216: if(ready)return;
  7475  000F34  5033               	movf	_ready,w,c	;volatile
  7476  000F36  A4D8               	btfss	status,2,c
  7477  000F38  0012               	return	
  7478  000F3A  D01C               	goto	i2l2693
  7479  000F3C                     i2l2685:
  7480                           
  7481                           ;eusart1.c: 219: line[index]=EUSART1_Read();
  7482  000F3C  EC56  F00B         	call	_EUSART1_Read	;wreg free
  7483  000F40  6E14               	movwf	??_EUSART1_Receive_ISR& (0+255),c
  7484  000F42  0E60               	movlw	low _line
  7485  000F44  242B               	addwf	_index,w,c
  7486  000F46  6ED9               	movwf	fsr2l,c
  7487  000F48  0E00               	movlw	high _line
  7488  000F4A  202C               	addwfc	_index+1,w,c
  7489  000F4C  6EDA               	movwf	fsr2h,c
  7490  000F4E  C014  FFDF         	movff	??_EUSART1_Receive_ISR,indf2
  7491                           
  7492                           ;eusart1.c: 220: if (line[index] == '\n'){
  7493  000F52  0E60               	movlw	low _line
  7494  000F54  242B               	addwf	_index,w,c
  7495  000F56  6ED9               	movwf	fsr2l,c
  7496  000F58  0E00               	movlw	high _line
  7497  000F5A  202C               	addwfc	_index+1,w,c
  7498  000F5C  6EDA               	movwf	fsr2h,c
  7499  000F5E  0E0A               	movlw	10
  7500  000F60  18DE               	xorwf	postinc2,w,c
  7501  000F62  A4D8               	btfss	status,2,c
  7502  000F64  D005               	goto	i2l2691
  7503                           
  7504                           ;eusart1.c: 221: state=1;
  7505  000F66  0E00               	movlw	0
  7506  000F68  6E16               	movwf	EUSART1_Receive_ISR@state+1,c
  7507  000F6A  0E01               	movlw	1
  7508  000F6C  6E15               	movwf	EUSART1_Receive_ISR@state,c
  7509                           
  7510                           ;eusart1.c: 222: break;
  7511  000F6E  D005               	goto	i2l2695
  7512  000F70                     i2l2691:
  7513                           
  7514                           ;eusart1.c: 223: }
  7515                           ;eusart1.c: 224: index++;
  7516  000F70  4A2B               	infsnz	_index,f,c
  7517  000F72  2A2C               	incf	_index+1,f,c
  7518  000F74                     i2l2693:
  7519  000F74  502D               	movf	_eusart1RxCount,w,c	;volatile
  7520  000F76  A4D8               	btfss	status,2,c
  7521  000F78  D7E1               	goto	i2l2685
  7522  000F7A                     i2l2695:
  7523                           
  7524                           ;eusart1.c: 225: }
  7525                           ;eusart1.c: 227: if(state==1){
  7526  000F7A  0415               	decf	EUSART1_Receive_ISR@state,w,c
  7527  000F7C  1016               	iorwf	EUSART1_Receive_ISR@state+1,w,c
  7528  000F7E  A4D8               	btfss	status,2,c
  7529  000F80  0012               	return	
  7530                           
  7531                           ;eusart1.c: 228: line[--index] = '\0';
  7532  000F82  062B               	decf	_index,f,c
  7533  000F84  A0D8               	btfss	status,0,c
  7534  000F86  062C               	decf	_index+1,f,c
  7535  000F88  0E60               	movlw	low _line
  7536  000F8A  242B               	addwf	_index,w,c
  7537  000F8C  6ED9               	movwf	fsr2l,c
  7538  000F8E  0E00               	movlw	high _line
  7539  000F90  202C               	addwfc	_index+1,w,c
  7540  000F92  6EDA               	movwf	fsr2h,c
  7541  000F94  0E00               	movlw	0
  7542  000F96  6EDF               	movwf	indf2,c
  7543                           
  7544                           ;eusart1.c: 229: uartState=0;
  7545  000F98  0E00               	movlw	0
  7546  000F9A  6E34               	movwf	_uartState,c	;volatile
  7547                           
  7548                           ;eusart1.c: 230: if(!strcmp("radio_err",line)){
  7549  000F9C  0EDC               	movlw	low STR_1
  7550  000F9E  6E01               	movwf	strcmp@s1,c
  7551  000FA0  0EFF               	movlw	high STR_1
  7552  000FA2  6E02               	movwf	strcmp@s1+1,c
  7553  000FA4  0E60               	movlw	low _line
  7554  000FA6  6E03               	movwf	strcmp@s2,c
  7555  000FA8  0E00               	movlw	high _line
  7556  000FAA  6E04               	movwf	strcmp@s2+1,c
  7557  000FAC  ECC0  F008         	call	_strcmp	;wreg free
  7558  000FB0  5001               	movf	?_strcmp,w,c
  7559  000FB2  1002               	iorwf	?_strcmp+1,w,c
  7560  000FB4  A4D8               	btfss	status,2,c
  7561  000FB6  D002               	goto	i2l2705
  7562                           
  7563                           ;eusart1.c: 231: uartState=5;
  7564  000FB8  0E05               	movlw	5
  7565  000FBA  D02B               	goto	L14
  7566  000FBC                     i2l2705:
  7567  000FBC  0E60               	movlw	low _line
  7568  000FBE  6E10               	movwf	strstr@s1,c
  7569  000FC0  0E00               	movlw	high _line
  7570  000FC2  6E11               	movwf	strstr@s1+1,c
  7571  000FC4  0EE6               	movlw	low STR_2
  7572  000FC6  6E12               	movwf	strstr@s2,c
  7573  000FC8  0EFF               	movlw	high STR_2
  7574  000FCA  6E13               	movwf	strstr@s2+1,c
  7575  000FCC  EC08  F009         	call	_strstr	;wreg free
  7576  000FD0  5010               	movf	?_strstr,w,c
  7577  000FD2  1011               	iorwf	?_strstr+1,w,c
  7578  000FD4  B4D8               	btfsc	status,2,c
  7579  000FD6  D00E               	goto	i2l2715
  7580                           
  7581                           ;eusart1.c: 233: if(line[10]=='4'&&line[11]=='3'){
  7582  000FD8  0E34               	movlw	52
  7583  000FDA  0100               	movlb	0	; () banked
  7584  000FDC  196A               	xorwf	(_line+10)& (0+255),w,b	;volatile
  7585  000FDE  A4D8               	btfss	status,2,c
  7586  000FE0  D007               	goto	i2l2713
  7587                           
  7588                           ; BSR set to: 0
  7589  000FE2  0E33               	movlw	51
  7590  000FE4  0100               	movlb	0	; () banked
  7591  000FE6  196B               	xorwf	(_line+11)& (0+255),w,b	;volatile
  7592  000FE8  A4D8               	btfss	status,2,c
  7593  000FEA  D002               	goto	i2l2713
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;eusart1.c: 234: uartState=4;
  7597  000FEC  0E04               	movlw	4
  7598  000FEE  D011               	goto	L14
  7599  000FF0                     i2l2713:
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;eusart1.c: 236: uartState=3;
  7603  000FF0  0E03               	movlw	3
  7604  000FF2  D00F               	goto	L14
  7605  000FF4                     i2l2715:
  7606  000FF4  0E60               	movlw	low _line
  7607  000FF6  6E01               	movwf	strcmp@s1,c
  7608  000FF8  0E00               	movlw	high _line
  7609  000FFA  6E02               	movwf	strcmp@s1+1,c
  7610  000FFC  0ED0               	movlw	low STR_3
  7611  000FFE  6E03               	movwf	strcmp@s2,c
  7612  001000  0EFF               	movlw	high STR_3
  7613  001002  6E04               	movwf	strcmp@s2+1,c
  7614  001004  ECC0  F008         	call	_strcmp	;wreg free
  7615  001008  5001               	movf	?_strcmp,w,c
  7616  00100A  1002               	iorwf	?_strcmp+1,w,c
  7617  00100C  A4D8               	btfss	status,2,c
  7618  00100E  D003               	goto	i2l2719
  7619  001010  D010               	goto	i2l2721
  7620  001012                     L14:
  7621  001012  6E34               	movwf	_uartState,c	;volatile
  7622                           
  7623                           ;eusart1.c: 240: } else if (!strcmp(line, "ok") != (0)) {
  7624  001014  D010               	goto	i2l138
  7625  001016                     i2l2719:
  7626  001016  0E60               	movlw	low _line
  7627  001018  6E01               	movwf	strcmp@s1,c
  7628  00101A  0E00               	movlw	high _line
  7629  00101C  6E02               	movwf	strcmp@s1+1,c
  7630  00101E  0ED9               	movlw	low (STR_3+9)
  7631  001020  6E03               	movwf	strcmp@s2,c
  7632  001022  0EFF               	movlw	high (STR_3+9)
  7633  001024  6E04               	movwf	strcmp@s2+1,c
  7634  001026  ECC0  F008         	call	_strcmp	;wreg free
  7635  00102A  5001               	movf	?_strcmp,w,c
  7636  00102C  1002               	iorwf	?_strcmp+1,w,c
  7637  00102E  A4D8               	btfss	status,2,c
  7638  001030  D002               	goto	i2l138
  7639  001032                     i2l2721:
  7640                           
  7641                           ;eusart1.c: 241: uartState=1;
  7642  001032  0E01               	movlw	1
  7643  001034  D7EE               	goto	L14
  7644  001036                     i2l138:
  7645                           
  7646                           ;eusart1.c: 242: }
  7647                           ;eusart1.c: 243: index=0;
  7648  001036  0E00               	movlw	0
  7649  001038  6E2C               	movwf	_index+1,c
  7650  00103A  0E00               	movlw	0
  7651  00103C  6E2B               	movwf	_index,c
  7652                           
  7653                           ;eusart1.c: 244: ready=1;
  7654  00103E  0E01               	movlw	1
  7655  001040  6E33               	movwf	_ready,c	;volatile
  7656  001042  0012               	return	
  7657  001044                     __end_of_EUSART1_Receive_ISR:
  7658                           	opt stack 0
  7659                           pclatu	equ	0xFFB
  7660                           pclath	equ	0xFFA
  7661                           tblptru	equ	0xFF8
  7662                           tblptrh	equ	0xFF7
  7663                           tblptrl	equ	0xFF6
  7664                           tablat	equ	0xFF5
  7665                           prodh	equ	0xFF4
  7666                           prodl	equ	0xFF3
  7667                           intcon	equ	0xFF2
  7668                           intcon2	equ	0xFF1
  7669                           postinc0	equ	0xFEE
  7670                           fsr0h	equ	0xFEA
  7671                           fsr0l	equ	0xFE9
  7672                           wreg	equ	0xFE8
  7673                           indf1	equ	0xFE7
  7674                           postdec1	equ	0xFE5
  7675                           fsr1h	equ	0xFE2
  7676                           fsr1l	equ	0xFE1
  7677                           indf2	equ	0xFDF
  7678                           postinc2	equ	0xFDE
  7679                           postdec2	equ	0xFDD
  7680                           fsr2h	equ	0xFDA
  7681                           fsr2l	equ	0xFD9
  7682                           status	equ	0xFD8
  7683                           
  7684 ;; *************** function _strstr *****************
  7685 ;; Defined at:
  7686 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strstr.c"
  7687 ;; Parameters:    Size  Location     Type
  7688 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  7689 ;;		 -> NULL(0), line(128), 
  7690 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  7691 ;;		 -> STR_2(9), 
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;		None
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  2   15[COMRAM] PTR unsigned char 
  7696 ;; Registers used:
  7697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7703 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;Total ram usage:        4 bytes
  7708 ;; Hardware stack levels used:    1
  7709 ;; Hardware stack levels required when called:    1
  7710 ;; This function calls:
  7711 ;;		_strchr
  7712 ;;		_strlen
  7713 ;;		_strncmp
  7714 ;; This function is called by:
  7715 ;;		_EUSART1_Receive_ISR
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text45
  7720  001210                     __ptext45:
  7721                           	opt stack 0
  7722  001210                     _strstr:
  7723                           	opt stack 23
  7724                           
  7725                           ;incstack = 0
  7726  001210  D032               	goto	i2l2471
  7727  001212                     i2l2463:
  7728  001212  C010  F007         	movff	strstr@s1,strncmp@s1
  7729  001216  C011  F008         	movff	strstr@s1+1,strncmp@s1+1
  7730  00121A  C012  F009         	movff	strstr@s2,strncmp@s2
  7731  00121E  C013  F00A         	movff	strstr@s2+1,strncmp@s2+1
  7732  001222  C012  F001         	movff	strstr@s2,strlen@s
  7733  001226  C013  F002         	movff	strstr@s2+1,strlen@s+1
  7734  00122A  ECB0  F00A         	call	_strlen	;wreg free
  7735  00122E  C001  F00B         	movff	?_strlen,strncmp@len
  7736  001232  C002  F00C         	movff	?_strlen+1,strncmp@len+1
  7737  001236  EC4B  F009         	call	_strncmp	;wreg free
  7738  00123A  5007               	movf	?_strncmp,w,c
  7739  00123C  1008               	iorwf	?_strncmp+1,w,c
  7740  00123E  A4D8               	btfss	status,2,c
  7741  001240  D005               	goto	i2l2469
  7742  001242  C010  F010         	movff	strstr@s1,?_strstr
  7743  001246  C011  F011         	movff	strstr@s1+1,?_strstr+1
  7744  00124A  0012               	return	
  7745  00124C                     i2l2469:
  7746  00124C  0E01               	movlw	1
  7747  00124E  2410               	addwf	strstr@s1,w,c
  7748  001250  6E01               	movwf	strchr@ptr,c
  7749  001252  0E00               	movlw	0
  7750  001254  2011               	addwfc	strstr@s1+1,w,c
  7751  001256  6E02               	movwf	strchr@ptr+1,c
  7752  001258  C012  FFF6         	movff	strstr@s2,tblptrl
  7753  00125C  C013  FFF7         	movff	strstr@s2+1,tblptrh
  7754  001260                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7755  001260  6AF8               	clrf	tblptru,c
  7756  001262                     	endif
  7757  001262                     	if	0	;tblptru may be non-zero
  7758  001262                     	endif
  7759  001262  0008               	tblrd		*
  7760  001264  50F5               	movf	tablat,w,c
  7761  001266  6E03               	movwf	strchr@chr,c
  7762  001268  6A04               	clrf	strchr@chr+1,c
  7763  00126A  ECED  F00A         	call	_strchr	;wreg free
  7764  00126E  C001  F010         	movff	?_strchr,strstr@s1
  7765  001272  C002  F011         	movff	?_strchr+1,strstr@s1+1
  7766  001276                     i2l2471:
  7767  001276  5010               	movf	strstr@s1,w,c
  7768  001278  1011               	iorwf	strstr@s1+1,w,c
  7769  00127A  B4D8               	btfsc	status,2,c
  7770  00127C  D007               	goto	i2l2475
  7771  00127E  C010  FFD9         	movff	strstr@s1,fsr2l
  7772  001282  C011  FFDA         	movff	strstr@s1+1,fsr2h
  7773  001286  50DF               	movf	indf2,w,c
  7774  001288  A4D8               	btfss	status,2,c
  7775  00128A  D7C3               	goto	i2l2463
  7776  00128C                     i2l2475:
  7777  00128C  0E00               	movlw	0
  7778  00128E  6E10               	movwf	?_strstr,c
  7779  001290  0E00               	movlw	0
  7780  001292  6E11               	movwf	?_strstr+1,c
  7781  001294  0012               	return	
  7782  001296                     __end_of_strstr:
  7783                           	opt stack 0
  7784                           pclatu	equ	0xFFB
  7785                           pclath	equ	0xFFA
  7786                           tblptru	equ	0xFF8
  7787                           tblptrh	equ	0xFF7
  7788                           tblptrl	equ	0xFF6
  7789                           tablat	equ	0xFF5
  7790                           prodh	equ	0xFF4
  7791                           prodl	equ	0xFF3
  7792                           intcon	equ	0xFF2
  7793                           intcon2	equ	0xFF1
  7794                           postinc0	equ	0xFEE
  7795                           fsr0h	equ	0xFEA
  7796                           fsr0l	equ	0xFE9
  7797                           wreg	equ	0xFE8
  7798                           indf1	equ	0xFE7
  7799                           postdec1	equ	0xFE5
  7800                           fsr1h	equ	0xFE2
  7801                           fsr1l	equ	0xFE1
  7802                           indf2	equ	0xFDF
  7803                           postinc2	equ	0xFDE
  7804                           postdec2	equ	0xFDD
  7805                           fsr2h	equ	0xFDA
  7806                           fsr2l	equ	0xFD9
  7807                           status	equ	0xFD8
  7808                           
  7809 ;; *************** function _strncmp *****************
  7810 ;; Defined at:
  7811 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strncmp.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;  s1              2    6[COMRAM] PTR const unsigned char 
  7814 ;;		 -> NULL(0), line(128), 
  7815 ;;  s2              2    8[COMRAM] PTR const unsigned char 
  7816 ;;		 -> STR_2(9), 
  7817 ;;  len             2   10[COMRAM] unsigned int 
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  2    6[COMRAM] int 
  7822 ;; Registers used:
  7823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7829 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7831 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7832 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7833 ;;Total ram usage:        9 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; This function calls:
  7836 ;;		Nothing
  7837 ;; This function is called by:
  7838 ;;		_strstr
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text46
  7843  001296                     __ptext46:
  7844                           	opt stack 0
  7845  001296                     _strncmp:
  7846                           	opt stack 23
  7847                           
  7848                           ;incstack = 0
  7849  001296  D035               	goto	i2l2373
  7850  001298                     i2l2363:
  7851  001298  C007  FFD9         	movff	strncmp@s1,fsr2l
  7852  00129C  C008  FFDA         	movff	strncmp@s1+1,fsr2h
  7853  0012A0  50DF               	movf	indf2,w,c
  7854  0012A2  B4D8               	btfsc	status,2,c
  7855  0012A4  D010               	goto	i2l2367
  7856  0012A6  C007  FFD9         	movff	strncmp@s1,fsr2l
  7857  0012AA  C008  FFDA         	movff	strncmp@s1+1,fsr2h
  7858  0012AE  50DF               	movf	indf2,w,c
  7859  0012B0  6E0D               	movwf	??_strncmp& (0+255),c
  7860  0012B2  C009  FFF6         	movff	strncmp@s2,tblptrl
  7861  0012B6  C00A  FFF7         	movff	strncmp@s2+1,tblptrh
  7862  0012BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7863  0012BA  6AF8               	clrf	tblptru,c
  7864  0012BC                     	endif
  7865  0012BC                     	if	0	;tblptru may be non-zero
  7866  0012BC                     	endif
  7867  0012BC  0008               	tblrd		*
  7868  0012BE  50F5               	movf	tablat,w,c
  7869  0012C0  180D               	xorwf	??_strncmp,w,c
  7870  0012C2  B4D8               	btfsc	status,2,c
  7871  0012C4  D01A               	goto	i2l2371
  7872  0012C6                     i2l2367:
  7873  0012C6  C009  FFF6         	movff	strncmp@s2,tblptrl
  7874  0012CA  C00A  FFF7         	movff	strncmp@s2+1,tblptrh
  7875  0012CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7876  0012CE  6AF8               	clrf	tblptru,c
  7877  0012D0                     	endif
  7878  0012D0                     	if	0	;tblptru may be non-zero
  7879  0012D0                     	endif
  7880  0012D0  0008               	tblrd		*
  7881  0012D2  50F5               	movf	tablat,w,c
  7882  0012D4  6E0D               	movwf	??_strncmp& (0+255),c
  7883  0012D6  6A0E               	clrf	(??_strncmp+1)& (0+255),c
  7884  0012D8  1E0D               	comf	??_strncmp,f,c
  7885  0012DA  1E0E               	comf	??_strncmp+1,f,c
  7886  0012DC  4A0D               	infsnz	??_strncmp,f,c
  7887  0012DE  2A0E               	incf	??_strncmp+1,f,c
  7888  0012E0  C007  FFD9         	movff	strncmp@s1,fsr2l
  7889  0012E4  C008  FFDA         	movff	strncmp@s1+1,fsr2h
  7890  0012E8  50DF               	movf	indf2,w,c
  7891  0012EA  6E0F               	movwf	(??_strncmp+2)& (0+255),c
  7892  0012EC  500F               	movf	??_strncmp+2,w,c
  7893  0012EE  240D               	addwf	??_strncmp,w,c
  7894  0012F0  6E07               	movwf	?_strncmp,c
  7895  0012F2  0E00               	movlw	0
  7896  0012F4  200E               	addwfc	??_strncmp+1,w,c
  7897  0012F6  6E08               	movwf	?_strncmp+1,c
  7898  0012F8  0012               	return	
  7899  0012FA                     i2l2371:
  7900  0012FA  4A07               	infsnz	strncmp@s1,f,c
  7901  0012FC  2A08               	incf	strncmp@s1+1,f,c
  7902  0012FE  4A09               	infsnz	strncmp@s2,f,c
  7903  001300  2A0A               	incf	strncmp@s2+1,f,c
  7904  001302                     i2l2373:
  7905  001302  060B               	decf	strncmp@len,f,c
  7906  001304  A0D8               	btfss	status,0,c
  7907  001306  060C               	decf	strncmp@len+1,f,c
  7908  001308  280B               	incf	strncmp@len,w,c
  7909  00130A  E1C6               	bnz	i2l2363
  7910  00130C  280C               	incf	strncmp@len+1,w,c
  7911  00130E  A4D8               	btfss	status,2,c
  7912  001310  D7C3               	goto	i2l2363
  7913  001312  0E00               	movlw	0
  7914  001314  6E08               	movwf	?_strncmp+1,c
  7915  001316  0E00               	movlw	0
  7916  001318  6E07               	movwf	?_strncmp,c
  7917  00131A  0012               	return	
  7918  00131C                     __end_of_strncmp:
  7919                           	opt stack 0
  7920                           pclatu	equ	0xFFB
  7921                           pclath	equ	0xFFA
  7922                           tblptru	equ	0xFF8
  7923                           tblptrh	equ	0xFF7
  7924                           tblptrl	equ	0xFF6
  7925                           tablat	equ	0xFF5
  7926                           prodh	equ	0xFF4
  7927                           prodl	equ	0xFF3
  7928                           intcon	equ	0xFF2
  7929                           intcon2	equ	0xFF1
  7930                           postinc0	equ	0xFEE
  7931                           fsr0h	equ	0xFEA
  7932                           fsr0l	equ	0xFE9
  7933                           wreg	equ	0xFE8
  7934                           indf1	equ	0xFE7
  7935                           postdec1	equ	0xFE5
  7936                           fsr1h	equ	0xFE2
  7937                           fsr1l	equ	0xFE1
  7938                           indf2	equ	0xFDF
  7939                           postinc2	equ	0xFDE
  7940                           postdec2	equ	0xFDD
  7941                           fsr2h	equ	0xFDA
  7942                           fsr2l	equ	0xFD9
  7943                           status	equ	0xFD8
  7944                           
  7945 ;; *************** function _strlen *****************
  7946 ;; Defined at:
  7947 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strlen.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7950 ;;		 -> STR_2(9), 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  cp              2    4[COMRAM] PTR const unsigned char 
  7953 ;;		 -> STR_2(9), 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  2    0[COMRAM] unsigned int 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7964 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;Total ram usage:        6 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_strstr
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text47
  7977  001560                     __ptext47:
  7978                           	opt stack 0
  7979  001560                     _strlen:
  7980                           	opt stack 23
  7981                           
  7982                           ;incstack = 0
  7983  001560  C001  F005         	movff	strlen@s,strlen@cp
  7984  001564  C002  F006         	movff	strlen@s+1,strlen@cp+1
  7985  001568  D002               	goto	i2l2355
  7986  00156A                     i2l2353:
  7987  00156A  4A05               	infsnz	strlen@cp,f,c
  7988  00156C  2A06               	incf	strlen@cp+1,f,c
  7989  00156E                     i2l2355:
  7990  00156E  C005  FFF6         	movff	strlen@cp,tblptrl
  7991  001572  C006  FFF7         	movff	strlen@cp+1,tblptrh
  7992  001576                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7993  001576  6AF8               	clrf	tblptru,c
  7994  001578                     	endif
  7995  001578                     	if	0	;tblptru may be non-zero
  7996  001578                     	endif
  7997  001578  0008               	tblrd		*
  7998  00157A  50F5               	movf	tablat,w,c
  7999  00157C  0900               	iorlw	0
  8000  00157E  A4D8               	btfss	status,2,c
  8001  001580  D7F4               	goto	i2l2353
  8002  001582  C001  F003         	movff	strlen@s,??_strlen
  8003  001586  C002  F004         	movff	strlen@s+1,??_strlen+1
  8004  00158A  1E03               	comf	??_strlen,f,c
  8005  00158C  1E04               	comf	??_strlen+1,f,c
  8006  00158E  4A03               	infsnz	??_strlen,f,c
  8007  001590  2A04               	incf	??_strlen+1,f,c
  8008  001592  5005               	movf	strlen@cp,w,c
  8009  001594  2403               	addwf	??_strlen,w,c
  8010  001596  6E01               	movwf	?_strlen,c
  8011  001598  5006               	movf	strlen@cp+1,w,c
  8012  00159A  2004               	addwfc	??_strlen+1,w,c
  8013  00159C  6E02               	movwf	?_strlen+1,c
  8014  00159E  0012               	return	
  8015  0015A0                     __end_of_strlen:
  8016                           	opt stack 0
  8017                           pclatu	equ	0xFFB
  8018                           pclath	equ	0xFFA
  8019                           tblptru	equ	0xFF8
  8020                           tblptrh	equ	0xFF7
  8021                           tblptrl	equ	0xFF6
  8022                           tablat	equ	0xFF5
  8023                           prodh	equ	0xFF4
  8024                           prodl	equ	0xFF3
  8025                           intcon	equ	0xFF2
  8026                           intcon2	equ	0xFF1
  8027                           postinc0	equ	0xFEE
  8028                           fsr0h	equ	0xFEA
  8029                           fsr0l	equ	0xFE9
  8030                           wreg	equ	0xFE8
  8031                           indf1	equ	0xFE7
  8032                           postdec1	equ	0xFE5
  8033                           fsr1h	equ	0xFE2
  8034                           fsr1l	equ	0xFE1
  8035                           indf2	equ	0xFDF
  8036                           postinc2	equ	0xFDE
  8037                           postdec2	equ	0xFDD
  8038                           fsr2h	equ	0xFDA
  8039                           fsr2l	equ	0xFD9
  8040                           status	equ	0xFD8
  8041                           
  8042 ;; *************** function _strchr *****************
  8043 ;; Defined at:
  8044 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strchr.c"
  8045 ;; Parameters:    Size  Location     Type
  8046 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
  8047 ;;		 -> NULL(0), line(128), 
  8048 ;;  chr             2    2[COMRAM] int 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;		None
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  2    0[COMRAM] PTR unsigned char 
  8053 ;; Registers used:
  8054 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8062 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;Total ram usage:        5 bytes
  8065 ;; Hardware stack levels used:    1
  8066 ;; This function calls:
  8067 ;;		Nothing
  8068 ;; This function is called by:
  8069 ;;		_strstr
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text48
  8074  0015DA                     __ptext48:
  8075                           	opt stack 0
  8076  0015DA                     _strchr:
  8077                           	opt stack 23
  8078  0015DA  C001  FFD9         	movff	strchr@ptr,fsr2l
  8079  0015DE  C002  FFDA         	movff	strchr@ptr+1,fsr2h
  8080  0015E2  5003               	movf	strchr@chr,w,c
  8081  0015E4  18DE               	xorwf	postinc2,w,c
  8082  0015E6  A4D8               	btfss	status,2,c
  8083  0015E8  D005               	goto	i2l2385
  8084  0015EA  C001  F001         	movff	strchr@ptr,?_strchr
  8085  0015EE  C002  F002         	movff	strchr@ptr+1,?_strchr+1
  8086  0015F2  0012               	return	
  8087  0015F4                     i2l2385:
  8088  0015F4  C001  FFD9         	movff	strchr@ptr,fsr2l
  8089  0015F8  C002  FFDA         	movff	strchr@ptr+1,fsr2h
  8090  0015FC  4A01               	infsnz	strchr@ptr,f,c
  8091  0015FE  2A02               	incf	strchr@ptr+1,f,c
  8092  001600  50DF               	movf	indf2,w,c
  8093  001602  A4D8               	btfss	status,2,c
  8094  001604  D7EA               	goto	i2l2379
  8095  001606  0E00               	movlw	0
  8096  001608  6E01               	movwf	?_strchr,c
  8097  00160A  0E00               	movlw	0
  8098  00160C  6E02               	movwf	?_strchr+1,c
  8099  00160E  0012               	return	
  8100  001610                     __end_of_strchr:
  8101                           	opt stack 0
  8102                           pclatu	equ	0xFFB
  8103                           pclath	equ	0xFFA
  8104                           tblptru	equ	0xFF8
  8105                           tblptrh	equ	0xFF7
  8106                           tblptrl	equ	0xFF6
  8107                           tablat	equ	0xFF5
  8108                           prodh	equ	0xFF4
  8109                           prodl	equ	0xFF3
  8110                           intcon	equ	0xFF2
  8111                           intcon2	equ	0xFF1
  8112                           postinc0	equ	0xFEE
  8113                           fsr0h	equ	0xFEA
  8114                           fsr0l	equ	0xFE9
  8115                           wreg	equ	0xFE8
  8116                           indf1	equ	0xFE7
  8117                           postdec1	equ	0xFE5
  8118                           fsr1h	equ	0xFE2
  8119                           fsr1l	equ	0xFE1
  8120                           indf2	equ	0xFDF
  8121                           postinc2	equ	0xFDE
  8122                           postdec2	equ	0xFDD
  8123                           fsr2h	equ	0xFDA
  8124                           fsr2l	equ	0xFD9
  8125                           status	equ	0xFD8
  8126                           
  8127 ;; *************** function _strcmp *****************
  8128 ;; Defined at:
  8129 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcmp.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;  s1              2    0[COMRAM] PTR const unsigned char 
  8132 ;;		 -> STR_1(10), line(128), 
  8133 ;;  s2              2    2[COMRAM] PTR const unsigned char 
  8134 ;;		 -> STR_4(3), STR_3(12), line(128), 
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;  r               1    5[COMRAM] char 
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  2    0[COMRAM] int 
  8139 ;; Registers used:
  8140 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8146 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8147 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8149 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8150 ;;Total ram usage:        6 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; This function calls:
  8153 ;;		Nothing
  8154 ;; This function is called by:
  8155 ;;		_EUSART1_Receive_ISR
  8156 ;; This function uses a non-reentrant model
  8157 ;;
  8158                           
  8159                           	psect	text49
  8160  001180                     __ptext49:
  8161                           	opt stack 0
  8162  001180                     _strcmp:
  8163                           	opt stack 24
  8164                           
  8165                           ;incstack = 0
  8166  001180  D004               	goto	i2l2453
  8167  001182                     i2l2451:
  8168  001182  4A01               	infsnz	strcmp@s1,f,c
  8169  001184  2A02               	incf	strcmp@s1+1,f,c
  8170  001186  4A03               	infsnz	strcmp@s2,f,c
  8171  001188  2A04               	incf	strcmp@s2+1,f,c
  8172  00118A                     i2l2453:
  8173  00118A  C001  FFF6         	movff	strcmp@s1,tblptrl
  8174  00118E  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  8175  001192  0E00               	movlw	low (__mediumconst shr (0+16))
  8176  001194  6EF8               	movwf	tblptru,c
  8177  001196  0E0F               	movlw	(high __ramtop+-1)
  8178  001198  64F7               	cpfsgt	tblptrh,c
  8179  00119A  D003               	bra	i2u135_47
  8180  00119C  0008               	tblrd		*
  8181  00119E  50F5               	movf	tablat,w,c
  8182  0011A0  D005               	bra	i2u135_40
  8183  0011A2                     i2u135_47:
  8184  0011A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  8185  0011A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  8186  0011AA  50E7               	movf	indf1,w,c
  8187  0011AC                     i2u135_40:
  8188  0011AC  6E05               	movwf	??_strcmp& (0+255),c
  8189  0011AE  C003  FFF6         	movff	strcmp@s2,tblptrl
  8190  0011B2  C004  FFF7         	movff	strcmp@s2+1,tblptrh
  8191  0011B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8192  0011B8  6EF8               	movwf	tblptru,c
  8193  0011BA  0E0F               	movlw	(high __ramtop+-1)
  8194  0011BC  64F7               	cpfsgt	tblptrh,c
  8195  0011BE  D003               	bra	i2u136_47
  8196  0011C0  0008               	tblrd		*
  8197  0011C2  50F5               	movf	tablat,w,c
  8198  0011C4  D005               	bra	i2u136_40
  8199  0011C6                     i2u136_47:
  8200  0011C6  CFF6 FFE1          	movff	tblptrl,fsr1l
  8201  0011CA  CFF7 FFE2          	movff	tblptrh,fsr1h
  8202  0011CE  50E7               	movf	indf1,w,c
  8203  0011D0                     i2u136_40:
  8204  0011D0  0800               	sublw	0
  8205  0011D2  2405               	addwf	??_strcmp,w,c
  8206  0011D4  6E06               	movwf	strcmp@r,c
  8207  0011D6  5006               	movf	strcmp@r,w,c
  8208  0011D8  A4D8               	btfss	status,2,c
  8209  0011DA  D014               	goto	i2l2457
  8210  0011DC  C001  FFF6         	movff	strcmp@s1,tblptrl
  8211  0011E0  C002  FFF7         	movff	strcmp@s1+1,tblptrh
  8212  0011E4  0E00               	movlw	low (__mediumconst shr (0+16))
  8213  0011E6  6EF8               	movwf	tblptru,c
  8214  0011E8  0E0F               	movlw	(high __ramtop+-1)
  8215  0011EA  64F7               	cpfsgt	tblptrh,c
  8216  0011EC  D003               	bra	i2u138_47
  8217  0011EE  0008               	tblrd		*
  8218  0011F0  50F5               	movf	tablat,w,c
  8219  0011F2  D005               	bra	i2u138_40
  8220  0011F4                     i2u138_47:
  8221  0011F4  CFF6 FFE1          	movff	tblptrl,fsr1l
  8222  0011F8  CFF7 FFE2          	movff	tblptrh,fsr1h
  8223  0011FC  50E7               	movf	indf1,w,c
  8224  0011FE                     i2u138_40:
  8225  0011FE  0900               	iorlw	0
  8226  001200  A4D8               	btfss	status,2,c
  8227  001202  D7BF               	goto	i2l2451
  8228  001204                     i2l2457:
  8229  001204  5006               	movf	strcmp@r,w,c
  8230  001206  6E01               	movwf	?_strcmp,c
  8231  001208  6A02               	clrf	?_strcmp+1,c
  8232  00120A  BE01               	btfsc	?_strcmp,7,c
  8233  00120C  0602               	decf	?_strcmp+1,f,c
  8234  00120E  0012               	return	
  8235  001210                     __end_of_strcmp:
  8236                           	opt stack 0
  8237                           pclatu	equ	0xFFB
  8238                           pclath	equ	0xFFA
  8239                           tblptru	equ	0xFF8
  8240                           tblptrh	equ	0xFF7
  8241                           tblptrl	equ	0xFF6
  8242                           tablat	equ	0xFF5
  8243                           prodh	equ	0xFF4
  8244                           prodl	equ	0xFF3
  8245                           intcon	equ	0xFF2
  8246                           intcon2	equ	0xFF1
  8247                           postinc0	equ	0xFEE
  8248                           fsr0h	equ	0xFEA
  8249                           fsr0l	equ	0xFE9
  8250                           wreg	equ	0xFE8
  8251                           indf1	equ	0xFE7
  8252                           postdec1	equ	0xFE5
  8253                           fsr1h	equ	0xFE2
  8254                           fsr1l	equ	0xFE1
  8255                           indf2	equ	0xFDF
  8256                           postinc2	equ	0xFDE
  8257                           postdec2	equ	0xFDD
  8258                           fsr2h	equ	0xFDA
  8259                           fsr2l	equ	0xFD9
  8260                           status	equ	0xFD8
  8261                           
  8262 ;; *************** function _EUSART1_Read *****************
  8263 ;; Defined at:
  8264 ;;		line 121 in file "mcc_generated_files/eusart1.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;		None
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;  readValue       1    0[COMRAM] unsigned char 
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  1    wreg      unsigned char 
  8271 ;; Registers used:
  8272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8281 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8282 ;;Total ram usage:        1 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_EUSART1_Receive_ISR
  8288 ;;		_getch
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           	psect	text50
  8293  0016AC                     __ptext50:
  8294                           	opt stack 0
  8295  0016AC                     _EUSART1_Read:
  8296                           	opt stack 24
  8297                           
  8298                           ;eusart1.c: 123: uint8_t readValue = 0;
  8299                           
  8300                           ;incstack = 0
  8301  0016AC  0E00               	movlw	0
  8302  0016AE  6E01               	movwf	EUSART1_Read@readValue,c
  8303  0016B0                     i2l2431:
  8304  0016B0  502D               	movf	_eusart1RxCount,w,c	;volatile
  8305  0016B2  B4D8               	btfsc	status,2,c
  8306  0016B4  D7FD               	goto	i2l2431
  8307                           
  8308                           ;eusart1.c: 127: }
  8309                           ;eusart1.c: 129: PIE1bits.RC1IE = 0;
  8310  0016B6  9A9D               	bcf	3997,5,c	;volatile
  8311                           
  8312                           ;eusart1.c: 131: readValue = eusart1RxBuffer[eusart1RxTail++];
  8313  0016B8  502F               	movf	_eusart1RxTail,w,c
  8314  0016BA  0D01               	mullw	1
  8315  0016BC  0E00               	movlw	low _eusart1RxBuffer
  8316  0016BE  24F3               	addwf	prodl,w,c
  8317  0016C0  6ED9               	movwf	fsr2l,c
  8318  0016C2  0E02               	movlw	high _eusart1RxBuffer
  8319  0016C4  20F4               	addwfc	prodh,w,c
  8320  0016C6  6EDA               	movwf	fsr2h,c
  8321  0016C8  50DF               	movf	indf2,w,c
  8322  0016CA  6E01               	movwf	EUSART1_Read@readValue,c
  8323  0016CC  2A2F               	incf	_eusart1RxTail,f,c
  8324                           
  8325                           ;eusart1.c: 132: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  8326  0016CE  0E7F               	movlw	127
  8327  0016D0  642F               	cpfsgt	_eusart1RxTail,c
  8328  0016D2  D002               	goto	i2l2441
  8329                           
  8330                           ;eusart1.c: 133: {
  8331                           ;eusart1.c: 134: eusart1RxTail = 0;
  8332  0016D4  0E00               	movlw	0
  8333  0016D6  6E2F               	movwf	_eusart1RxTail,c
  8334  0016D8                     i2l2441:
  8335                           
  8336                           ;eusart1.c: 135: }
  8337                           ;eusart1.c: 136: eusart1RxCount--;
  8338  0016D8  062D               	decf	_eusart1RxCount,f,c	;volatile
  8339                           
  8340                           ;eusart1.c: 137: PIE1bits.RC1IE = 1;
  8341  0016DA  8A9D               	bsf	3997,5,c	;volatile
  8342                           
  8343                           ;eusart1.c: 139: return readValue;
  8344  0016DC  5001               	movf	EUSART1_Read@readValue,w,c
  8345  0016DE  0012               	return	
  8346  0016E0                     __end_of_EUSART1_Read:
  8347                           	opt stack 0
  8348                           pclatu	equ	0xFFB
  8349                           pclath	equ	0xFFA
  8350                           tblptru	equ	0xFF8
  8351                           tblptrh	equ	0xFF7
  8352                           tblptrl	equ	0xFF6
  8353                           tablat	equ	0xFF5
  8354                           prodh	equ	0xFF4
  8355                           prodl	equ	0xFF3
  8356                           intcon	equ	0xFF2
  8357                           intcon2	equ	0xFF1
  8358                           postinc0	equ	0xFEE
  8359                           fsr0h	equ	0xFEA
  8360                           fsr0l	equ	0xFE9
  8361                           wreg	equ	0xFE8
  8362                           indf1	equ	0xFE7
  8363                           postdec1	equ	0xFE5
  8364                           fsr1h	equ	0xFE2
  8365                           fsr1l	equ	0xFE1
  8366                           indf2	equ	0xFDF
  8367                           postinc2	equ	0xFDE
  8368                           postdec2	equ	0xFDD
  8369                           fsr2h	equ	0xFDA
  8370                           fsr2l	equ	0xFD9
  8371                           status	equ	0xFD8
  8372                           pclatu	equ	0xFFB
  8373                           pclath	equ	0xFFA
  8374                           tblptru	equ	0xFF8
  8375                           tblptrh	equ	0xFF7
  8376                           tblptrl	equ	0xFF6
  8377                           tablat	equ	0xFF5
  8378                           prodh	equ	0xFF4
  8379                           prodl	equ	0xFF3
  8380                           intcon	equ	0xFF2
  8381                           intcon2	equ	0xFF1
  8382                           postinc0	equ	0xFEE
  8383                           fsr0h	equ	0xFEA
  8384                           fsr0l	equ	0xFE9
  8385                           wreg	equ	0xFE8
  8386                           indf1	equ	0xFE7
  8387                           postdec1	equ	0xFE5
  8388                           fsr1h	equ	0xFE2
  8389                           fsr1l	equ	0xFE1
  8390                           indf2	equ	0xFDF
  8391                           postinc2	equ	0xFDE
  8392                           postdec2	equ	0xFDD
  8393                           fsr2h	equ	0xFDA
  8394                           fsr2l	equ	0xFD9
  8395                           status	equ	0xFD8
  8396                           
  8397                           	psect	rparam
  8398  0000                     pclatu	equ	0xFFB
  8399                           pclath	equ	0xFFA
  8400                           tblptru	equ	0xFF8
  8401                           tblptrh	equ	0xFF7
  8402                           tblptrl	equ	0xFF6
  8403                           tablat	equ	0xFF5
  8404                           prodh	equ	0xFF4
  8405                           prodl	equ	0xFF3
  8406                           intcon	equ	0xFF2
  8407                           intcon2	equ	0xFF1
  8408                           postinc0	equ	0xFEE
  8409                           fsr0h	equ	0xFEA
  8410                           fsr0l	equ	0xFE9
  8411                           wreg	equ	0xFE8
  8412                           indf1	equ	0xFE7
  8413                           postdec1	equ	0xFE5
  8414                           fsr1h	equ	0xFE2
  8415                           fsr1l	equ	0xFE1
  8416                           indf2	equ	0xFDF
  8417                           postinc2	equ	0xFDE
  8418                           postdec2	equ	0xFDD
  8419                           fsr2h	equ	0xFDA
  8420                           fsr2l	equ	0xFD9
  8421                           status	equ	0xFD8
  8422                           
  8423                           	psect	temp
  8424  00003B                     btemp:
  8425                           	opt stack 0
  8426  00003B                     	ds	1
  8427  0000                     int$flags	set	btemp
  8428                           pclatu	equ	0xFFB
  8429                           pclath	equ	0xFFA
  8430                           tblptru	equ	0xFF8
  8431                           tblptrh	equ	0xFF7
  8432                           tblptrl	equ	0xFF6
  8433                           tablat	equ	0xFF5
  8434                           prodh	equ	0xFF4
  8435                           prodl	equ	0xFF3
  8436                           intcon	equ	0xFF2
  8437                           intcon2	equ	0xFF1
  8438                           postinc0	equ	0xFEE
  8439                           fsr0h	equ	0xFEA
  8440                           fsr0l	equ	0xFE9
  8441                           wreg	equ	0xFE8
  8442                           indf1	equ	0xFE7
  8443                           postdec1	equ	0xFE5
  8444                           fsr1h	equ	0xFE2
  8445                           fsr1l	equ	0xFE1
  8446                           indf2	equ	0xFDF
  8447                           postinc2	equ	0xFDE
  8448                           postdec2	equ	0xFDD
  8449                           fsr2h	equ	0xFDA
  8450                           fsr2l	equ	0xFD9
  8451                           status	equ	0xFD8


Data Sizes:
    Strings     329
    Constant    18
    Data        4
    BSS         435
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      58
    BANK0           160     31     159
    BANK1           256     13     181
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 40
		 -> uuid(BANK1[40]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 128
		 -> line(BANK0[128]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_4(CODE[3]), STR_3(CODE[12]), line(BANK0[128]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 128
		 -> STR_1(CODE[10]), line(BANK0[128]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_22(CODE[19]), STR_21(CODE[19]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[12]), 
		 -> STR_14(CODE[16]), STR_13(CODE[18]), STR_12(CODE[15]), STR_11(CODE[15]), 
		 -> STR_10(CODE[15]), STR_9(CODE[14]), STR_8(CODE[12]), STR_7(CODE[8]), 
		 -> STR_6(CODE[7]), STR_5(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> uuid(BANK1[40]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), line(BANK0[128]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _main->_rand
    _main->_wait_5ms
    _strtol->_isalpha
    _isalpha->_isupper
    _rand->___lmul
    _process_data_opt->_printf
    _getUUID->_printf
    _getUUID->_strcpy
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    ___awmod->_rand

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Receive_ISR->_strstr
    _strstr->_strncmp
    _strncmp->_strlen

Critical Paths under _main in BANK0

    _main->_process_data_opt
    _main->_srand
    _strtol->___lmul
    _srand->_strtol
    _rand->___lmul
    _process_data_opt->_printf
    _getUUID->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_process_data_opt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   14828
                                             26 BANK0      5     5      0
                  _SYSTEM_Initialize
                      _Soft_I2C_Init
                  _Soft_I2C_ReadByte
                     _Soft_I2C_Start
                      _Soft_I2C_Stop
                 _Soft_I2C_WriteByte
                            ___awmod
                            _getUUID
                             _printf
                   _process_data_opt
                               _rand
                          _read_line
                              _srand
                             _strtol
                           _wait_5ms
 ---------------------------------------------------------------------------------
 (1) _wait_5ms                                             6     4      2     174
                                             36 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _strtol                                              16    10      6    2165
                                              8 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _toupper                                              1     1      0      67
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isspace                                              3     3      0      90
                                             36 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             36 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _isalpha                                              3     3      0     158
                                             39 COMRAM     3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (3) _isupper                                              3     3      0      68
                                             36 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      86
                                             24 BANK0      2     0      2
                             _strtol (ARG)
 ---------------------------------------------------------------------------------
 (1) _rand                                                 2     0      2     558
                                             40 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     558
                                             36 COMRAM     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _process_data_opt                                    18    17      1    4028
                                             21 BANK0      5     4      1
                                              0 BANK1     13    13      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _getUUID                                              0     0      0    3542
                             _printf
                          _read_line
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     203
                                             36 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_line                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _printf                                              24    18      6    3339
                                             41 COMRAM     1     1      0
                                              7 BANK0     14     8      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      93
                                             37 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      62
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             40 COMRAM     1     1      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     549
                                             36 COMRAM     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     587
                                              8 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _Soft_I2C_WriteByte                                   2     2      0      69
                                             36 COMRAM     2     2      0
                      _I2C_SCL_CLEAR
                        _I2C_SCL_SET
                      _I2C_SDA_CLEAR
                     _I2C_SDA_IN_SET
                    _I2C_SDA_OUT_SET
                        _I2C_SDA_SET
 ---------------------------------------------------------------------------------
 (1) _Soft_I2C_Stop                                        0     0      0       0
                        _I2C_SCL_SET
                    _I2C_SDA_OUT_SET
                        _I2C_SDA_SET
 ---------------------------------------------------------------------------------
 (1) _Soft_I2C_Start                                       0     0      0       0
                      _I2C_SCL_CLEAR
                        _I2C_SCL_SET
                      _I2C_SDA_CLEAR
                    _I2C_SDA_OUT_SET
                        _I2C_SDA_SET
 ---------------------------------------------------------------------------------
 (1) _Soft_I2C_ReadByte                                    3     3      0     116
                                             36 COMRAM     3     3      0
                      _I2C_SCL_CLEAR
                        _I2C_SCL_SET
                      _I2C_SDA_CLEAR
                     _I2C_SDA_IN_SET
                    _I2C_SDA_OUT_SET
                       _I2C_SDA_READ
                        _I2C_SDA_SET
 ---------------------------------------------------------------------------------
 (2) _I2C_SDA_READ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SDA_IN_SET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SDA_CLEAR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SCL_CLEAR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Soft_I2C_Init                                        1     1      0       0
                                             36 COMRAM     1     1      0
                    _I2C_SCL_OUT_SET
                        _I2C_SCL_SET
                    _I2C_SDA_OUT_SET
                        _I2C_SDA_SET
 ---------------------------------------------------------------------------------
 (2) _I2C_SDA_SET                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SDA_OUT_SET                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SCL_SET                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SCL_OUT_SET                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0    1524
                                             22 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  3     3      0    1524
                                             19 COMRAM     3     3      0
                       _EUSART1_Read
                             _strcmp
                             _strstr
 ---------------------------------------------------------------------------------
 (7) _strstr                                               4     0      4    1001
                                             15 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (8) _strncmp                                              9     3      6     326
                                              6 COMRAM     9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (8) _strlen                                               6     4      2     154
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strchr                                               5     1      4     216
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) _strcmp                                               6     2      4     475
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Read                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   _Soft_I2C_Init
     _I2C_SCL_OUT_SET
     _I2C_SCL_SET
     _I2C_SDA_OUT_SET
     _I2C_SDA_SET
   _Soft_I2C_ReadByte
     _I2C_SCL_CLEAR
     _I2C_SCL_SET
     _I2C_SDA_CLEAR
     _I2C_SDA_IN_SET
     _I2C_SDA_OUT_SET
     _I2C_SDA_READ
     _I2C_SDA_SET
   _Soft_I2C_Start
     _I2C_SCL_CLEAR
     _I2C_SCL_SET
     _I2C_SDA_CLEAR
     _I2C_SDA_OUT_SET
     _I2C_SDA_SET
   _Soft_I2C_Stop
     _I2C_SCL_SET
     _I2C_SDA_OUT_SET
     _I2C_SDA_SET
   _Soft_I2C_WriteByte
     _I2C_SCL_CLEAR
     _I2C_SCL_SET
     _I2C_SDA_CLEAR
     _I2C_SDA_IN_SET
     _I2C_SDA_OUT_SET
     _I2C_SDA_SET
   ___awmod
     _rand (ARG)
       ___lmul
   _getUUID
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART1_Write
     _read_line
     _strcpy
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART1_Write
   _process_data_opt
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART1_Write
   _rand
     ___lmul
   _read_line
   _srand
     _strtol (ARG)
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _strtol
     ___lmul
     _isalpha
       _isupper
     _isdigit
     _isspace
     _toupper
   _wait_5ms

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _EUSART1_Read
     _strcmp
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      B5       7       70.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1F      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      3A       1       61.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     20E      12        0.0%
DATA                 0      0     20E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Mar 17 21:48:49 2016

               __size_of_I2C_SCL_SET 0004             _eusart1TxBufferRemaining 003A  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l110 15B2                                  l402 0ACA  
                                l307 0910                                  l284 1628  
                                l367 132E                                  l830 144C  
                                l840 14A8                         __CFG_CPB$OFF 000000  
                                _PR2 000FBB                         __CFG_CPD$OFF 000000  
                                _inc 0032                                  _val 0035  
                       ___awmod@sign 00ED                      _TMR2_Initialize 18AA  
           __size_of_I2C_SCL_OUT_SET 0004                                  prod 000FF3  
                                wreg 000FE8                         __CFG_LVP$OFF 000000  
                               l1042 0EF0                                 l3403 1440  
                               l3411 1468                                 l2611 17D6  
                               l3413 1472                                 l3501 0C90  
                               l2613 17DA                                 l3415 1478  
                               l3431 0A90                                 l3503 0C9C  
                               l3511 13BA                                 l2623 17A6  
                               l3425 0A74                                 l2481 18D8  
                               l3419 149C                                 l3451 0B1E  
                               l3435 0A96                                 l2571 16EA  
                               l3531 085A                                 l3507 139C  
                               l2627 17B4                                 l3381 15D6  
                               l3453 0B24                                 l3429 0A88  
                               l2573 16F2                                 l3541 0922  
                               l3533 0880                                 l2637 18A6  
                               l3621 0DEE                                 l3613 0DC0  
                               l3605 0D94                                 l2815 133E  
                               l2831 136A                                 l2807 1326  
                               l3391 1412                                 l3367 15A2  
                               l3447 0B02                                 l3543 0946  
                               l3535 08A6                                 l2399 1856  
                               l3631 0E80                                 l3393 141C  
                               l3465 0B60                                 l3481 0BA2  
                               l3545 096A                                 l3537 08CC  
                               l3529 0834                                 l3553 09E6  
                               l2649 1838                                 l3617 0DDC  
                               l3609 0DAA                                 l2737 1616  
                               l2851 10F4                                 l3395 1420  
                               l3379 15D4                                 l3491 0C1E  
                               l3467 0B66                                 l3483 0BB4  
                               l3547 098E                                 l3539 08F2  
                               l3555 0A44                                 l3635 0EB0  
                               l3563 0CBC                                 l3661 1070  
                               l3549 09B2                                 l3581 0D18  
                               l3709 00DA                                 l2855 10FC  
                               l3487 0BC6                                 l3681 10DC  
                               l3673 10BA                                 l3665 1084  
                               l3657 1060                                 l3489 0BCC  
                               l3497 0C76                                 l3585 0D28  
                               l3577 0D06                                 l2867 1120  
                               l2859 1106                                 l3667 1090  
                               l3499 0C88                                 l3595 0D60  
                               l3579 0D0E                                 l2869 1122  
                               l3669 1096                                 l3677 10C8  
                               l2879 113A                                 l3599 0D74  
                               l2889 1160                                 STR_1 FFDC  
                               STR_2 FFE6                                 STR_3 FFD0  
                               STR_4 FFD9                                 STR_5 FF5D  
                               STR_6 FFF7                                 STR_7 FFEF  
                               STR_8 FFC4                                 STR_9 FFAA  
                               _LATA 000F89                                 _LATB 000F8A  
                               u3007 0250                                 _LATC 000F8B  
                               u3017 0260                                 u3107 02F0  
                               u3027 0270                                 u3117 0300  
                               u3037 0280                                 u4007 116A  
                               u3207 0390                                 u3127 0310  
                               u3047 0290                                 u2520 0854  
                               u4017 1176                                 u3217 03A0  
                               u3137 0320                                 u3057 02A0  
                               u1570 18EC                                 u2530 087A  
                               u4027 17F8                                 u2515 0816  
                               u3307 0430                                 u3227 03B0  
                               u3147 0330                                 u3067 02B0  
                               u2540 08A0                                 u2605 09C4  
                               u2525 0848                                 u3317 0440  
                               u3237 03C0                                 u3157 0340  
                               u3077 02C0                                 u2550 08C6  
                               u2535 086E                                 u3407 04D0  
                               u3327 0450                                 u3247 03D0  
                               u3167 0350                                 u3087 02D0  
                               u2560 08EC                                 u2545 0894  
                               u3417 04E0                                 u3337 0460  
                               u3257 03E0                                 u3177 0360  
                               u3097 02E0                                 u2555 08BA  
                               u3507 0570                                 u3427 04F0  
                               u3347 0470                                 u3267 03F0  
                               u3187 0370                                 u2565 08E0  
                               u3517 0580                                 u3437 0500  
                               u3357 0480                                 u3277 0400  
                               u3197 0380                                 u2575 0958  
                               u3607 0610                                 u3527 0590  
                               u3447 0510                                 u3367 0490  
                               u3287 0410                                 u2585 097C  
                               u3617 0620                                 u3537 05A0  
                               u3457 0520                                 u3377 04A0  
                               u3297 0420                                 u2595 09A0  
                               u3707 06B0                                 u3627 0630  
                               u3547 05B0                                 u3467 0530  
                               u3387 04B0                                 u2907 01B0  
                               u2827 00D0                                 u3717 06C0  
                               u3637 0640                                 u3557 05C0  
                               u3477 0540                                 u3397 04C0  
                               u2917 01C0                                 u2837 0140  
                               u3807 0750                                 u3727 06D0  
                               u3647 0650                                 u3567 05D0  
                               u3487 0550                                 u2927 01D0  
                               u2847 0150                                 u3817 0760  
                               u3737 06E0                                 u3657 0660  
                               u3577 05E0                                 u3497 0560  
                               u2937 01E0                                 u2857 0160  
                               u3907 1868                                 u3827 0770  
                               u3747 06F0                                 u3667 0670  
                               u3587 05F0                                 u2947 01F0  
                               u2867 0170                                 i2l20 004E  
                               u3917 1874                                 u3837 161C  
                               u3757 0700                                 u3677 0680  
                               u3597 0600                                 u2957 0200  
                               u2877 0180                                 u3927 171C  
                               u3847 1338                                 u3767 0710  
                               u3687 0690                                 u2967 0210  
                               u2887 0190                                 i2l24 0058  
                               u3937 1728                                 u3857 1344  
                               u3777 0720                                 u3697 06A0  
                               u2977 0220                                 u2897 01A0  
                               u3947 1734                                 u3867 1350  
                               u3787 0730                                 u2987 0230  
                               u3957 110C                                 u3877 135C  
                               u3797 0740                                 u2997 0240  
                               u3967 1124                                 u3887 1374  
                               u3977 1130                                 u3897 1380  
                               u3987 114E                                 u3997 115A  
                               _TMR2 000FBC                         _I2C_SDA_READ 18E4  
                               _WPUB 000F61                        _EUSART1_Write 15A0  
                               _main 0098                                 _line 0060  
                               _rand 150C                        ?_EUSART1_Read 0001  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               btemp 003B                                 _uuid 0180  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0094                        __CFG_IESO$OFF 000000  
                       ___param_bank 000010       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 18D8                                ?_main 0001  
                              ?_rand 0029                                STR_10 FF7D  
                              STR_11 FF9B                                STR_12 FF8C  
                              STR_20 FF27                                STR_13 FF3A  
                              STR_21 FF14                                STR_14 FF6D  
                              STR_22 FEB5                                STR_15 FFB8  
                              STR_23 FF4C                                STR_16 FEDB  
                              STR_17 FEC8                                STR_18 FEEE  
                              STR_19 FF01                      __end_of___awmod 10E6  
                              _T2CON 000FBA                                _LATC3 007C5B  
                              _LATC4 007C5C                       __CFG_DEBUG$OFF 000000  
                    __end_of___lwdiv 1456                      __end_of___lwmod 14B2  
                              i2l122 1766                        _I2C_SDA_CLEAR 190C  
                              i2l138 1036                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
        __size_of_Soft_I2C_WriteByte 0070              __size_of_Soft_I2C_Start 002E  
                    __end_of_getUUID 1794                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                ___lmul@multiplicand 00E4                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 173C                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      _I2C_SCL_CLEAR 1910                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                      __end_of_dpowers FEAD  
                              _index 002B                      __end_of_isalpha 17BC  
                              _ready 0033                      __end_of_isdigit 1840  
                              _randx 0036                   __CFG_MCLRE$EXTMCLR 000000  
                              _srand 18BC                                _putch 18F0  
                    __end_of_isspace 17E2                       ?_EUSART1_Write 0001  
                    __end_of_isupper 185E                                tablat 000FF5  
                     ??_EUSART1_Read 0001                                status 000FD8  
                     __CFG_HFOFST$ON 000000                      _TMR2_StartTimer 1924  
                    __end_of_strncmp 131C                      __end_of_toupper 18AA  
                     __CFG_PBADEN$ON 000000                  Soft_I2C_WriteByte@i 0026  
                    __initialization 14B2           __end_of_EUSART1_Initialize 16AC  
                       __end_of_main 077A                         __end_of_rand 1560  
                  ??_I2C_SDA_OUT_SET 0025              __end_of_TMR2_Initialize 18BC  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 00FA  
                     ?_I2C_SDA_CLEAR 0001                               ??_rand 002B  
                      __activetblptr 000003                ?_EUSART1_Transmit_ISR 0001  
                     ?_I2C_SCL_CLEAR 0001            __size_of_process_data_opt 02EC  
                             _CCPR1H 000FBF                               _CCPR1L 000FBE  
              __end_of_Soft_I2C_Init 1802                               ?_srand 00F8  
              __end_of_Soft_I2C_Stop 187C                               _ANSELA 000F38  
                             ?_putch 0001                               _ANSELB 000F39  
                             _ANSELC 000F3A                    ??_I2C_SCL_OUT_SET 0025  
                             i2l2431 16B0                               i2l2441 16D8  
                             i2l2353 156A                               i2l2451 1182  
                             i2l2355 156E                               i2l2371 12FA  
                             i2l2363 1298                               i2l2453 118A  
                             i2l2373 1302                       __CFG_WDTEN$OFF 000000  
                             i2l2367 12C6                               i2l2463 1212  
                             i2l2471 1276                               i2l2457 1204  
                             i2l2385 15F4                               i2l2721 1032  
                             i2l2713 0FF0                               i2l2705 0FBC  
                             i2l2379 15DA                               i2l2475 128C  
                             i2l2715 0FF4                               i2l2469 124C  
                             i2l2719 1016                               i2l2663 1762  
                             i2l2691 0F70                               i2l2685 0F3C  
                             i2l2693 0F74                               i2l2677 0F2A  
                             i2l2669 0F0A                               i2l2695 0F7A  
                             _RCREG1 000FAE                               _RCSTA1 000FAB  
                process_data_opt@lsb 00F5                               _OSCCON 000FD3  
                process_data_opt@msb 01A8                  process_data_opt@raw 01AB  
                             _SPBRG1 000FAF                               _TRISC3 007CA3  
                             _TRISC4 007CA4                               _TXREG1 000FAD  
                     _I2C_SDA_IN_SET 1908                               _TXSTA1 000FAC  
                     __CFG_XINST$OFF 000000                         _CCPTMRS0bits 000F49  
                             ___lmul 138C                       __CFG_STVREN$ON 000000  
                          ??___awmod 002B                            ??___lwdiv 0029  
                          ??___lwmod 0029                               clear_0 14B8  
                             clear_1 14C4                               clear_2 14D0  
                             clear_3 14DC                      ___awmod@divisor 00EA  
                          ??_getUUID 002B                      ___awmod@counter 00EC  
                             _printf 0A66                               _strchr 15DA  
                             _strcmp 1180                               _strcpy 16E0  
                             _strlen 1560                               _strtol 0CBC  
                             _strstr 1210                     __end_of_wait_5ms 1644  
                       __pdataCOMRAM 0036                            ??_isalpha 0028  
                          ??_isdigit 0025                         __mediumconst FEA2  
                          ??_isspace 0025                               tblptrh 000FF7  
                          ??_isupper 0025                               tblptrl 000FF6  
                             tblptru 000FF8                               srand@x 00F8  
                    ??_EUSART1_Write 0025              __end_of_TMR2_StartTimer 1928  
                    _eusart1RxBuffer 0200                            ??_strncmp 000D  
                          ??_toupper 0025        __size_of_INTERRUPT_Initialize 000A  
                    _eusart1TxBuffer 0100               __end_of_I2C_SDA_IN_SET 190C  
                  _SYSTEM_Initialize 187C                           __accesstop 0060  
            __end_of__initialization 1502                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 000001                    ?_EPWM1_Initialize 0001  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0025  
                 ??_EPWM1_Initialize 0025         process_data_opt@Illumination 01AD  
                      __end_of_srand 18CA                      ??_I2C_SDA_CLEAR 0025  
                      __end_of_putch 18FA                     ?_TMR2_Initialize 0001  
               __end_of_EUSART1_Read 16E0                      ??_I2C_SCL_CLEAR 0025  
             ??_EUSART1_Transmit_ISR 0001                       _Soft_I2C_Start 170E  
        __end_of_EUSART1_Receive_ISR 1044            __end_of_SYSTEM_Initialize 1896  
                            ??_srand 002B                              ??_putch 0026  
                      _eusart1RxHead 002E                        _eusart1TxHead 0030  
                      _eusart1RxTail 002F                           __pbssBANK0 0060  
                         __pbssBANK1 0100                           __pbssBANK2 0200  
                      _eusart1TxTail 0031                      ?_I2C_SDA_IN_SET 0001  
                    __CFG_PLLCFG$OFF 000000                           __pnvCOMRAM 003A  
                      ??_I2C_SDA_SET 0025                    _Soft_I2C_ReadByte 10E6  
                      ??_I2C_SCL_SET 0025                   __size_of_read_line 000C  
                 ?_Soft_I2C_ReadByte 0001                   __CFG_CCP2MX$PORTC1 000000  
                            ?___lmul 00E0                   __CFG_CCP3MX$PORTB5 000000  
                            _CCP1CON 000FBD                  ??_Soft_I2C_ReadByte 0025  
                            _ECCP1AS 000FB6                       ___lmul@product 0025  
                            ?_printf 00E7               __end_of_Soft_I2C_Start 173C  
                            ?_strchr 0001                              ?_strcmp 0001  
                            ?_strcpy 0025                              ?_strlen 0001  
                            ?_strtol 00E8                              ?_strstr 0010  
                            _OSCCON2 000FD2                              _OSCTUNE 000F9B  
                            _PWM1CON 000FB7                     _process_data_opt 077A  
                            _SPBRGH1 000FB0                     ?_TMR2_StartTimer 0001  
          __end_of_Soft_I2C_ReadByte 1180                      _I2C_SDA_OUT_SET 1918  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                            ?_wait_5ms 0025  
                __end_of_I2C_SDA_SET 1918                      __size_of___lmul 006C  
                            ___awmod 1044                  __end_of_I2C_SCL_SET 1920  
                            ___lwdiv 13F8                              ___lwmod 1456  
                            __pcinit 14B2                              _getUUID 176A  
                            __ramtop 1000           __end_of_Soft_I2C_WriteByte 138C  
                            __ptext0 0098                              __ptext1 1610  
                            __ptext2 0CBC                              __ptext3 1896  
                            __ptext4 17BC                              __ptext5 1822  
                            __ptext6 1794                              __ptext7 1840  
                            __ptext8 18BC                              __ptext9 150C  
                    ?_Soft_I2C_Start 0001                      __size_of_printf 0256  
                    __size_of_strchr 0036                      __size_of_strcmp 0090  
                    __size_of_strcpy 002E                      __size_of_strlen 0040  
                  __end_of_hexpowers FEB5                      _I2C_SCL_OUT_SET 1920  
                    __size_of_strtol 0246                      __size_of_strstr 0086  
                            _dpowers FEA3                _OSCILLATOR_Initialize 18CA  
                          _T2CONbits 000FBA                              _isalpha 1794  
                            _isdigit 1822                     ___awmod@dividend 00E8  
                  __end_of_read_line 18E4                   _EUSART1_Initialize 1678  
           ??_PIN_MANAGER_Initialize 0025                              _isspace 17BC  
                            _isupper 1840           __size_of_SYSTEM_Initialize 001A  
                            main@lsb 00FE                              main@msb 00FD  
                            _strncmp 1296                              _toupper 1896  
               end_of_initialization 1502                  ?_EUSART1_Initialize 0001  
                         ??_wait_5ms 0027               process_data_opt@result 01B1  
                            printf@c 00F4                              printf@f 00E7  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
              __size_of_EUSART1_Read 0034                 ??_EUSART1_Initialize 0025  
                            strcmp@r 0006                              strlen@s 0001  
                            strtol@a 00F3                              strtol@c 00F7  
                            strtol@s 00E8                            _PORTCbits 000F82  
                       strtol@endptr 00EA              __end_of_I2C_SDA_OUT_SET 191C  
                EUSART1_Write@txData 0025           __size_of_Soft_I2C_ReadByte 009A  
              Soft_I2C_WriteByte@byt 0025                         _EUSART1_Read 16AC  
                        _I2C_SDA_SET 1914                          _I2C_SCL_SET 191C  
       __end_of_INTERRUPT_Initialize 1904              __end_of_I2C_SCL_OUT_SET 1924  
                     __end_of___lmul 13F8               __size_of_Soft_I2C_Init 0020  
             __size_of_Soft_I2C_Stop 001E                        __pidataCOMRAM 1904  
             ?_OSCILLATOR_Initialize 0001                       __end_of_printf 0CBC  
                     __end_of_strchr 1610                       __end_of_strcmp 1210  
                     __end_of_strcpy 170E                       __end_of_strlen 15A0  
                     __end_of_strtol 0F02                       __end_of_strstr 1296  
                start_initialization 14B2            __size_of_EPWM1_Initialize 0020  
                   ??_I2C_SDA_IN_SET 0025      __size_of_PIN_MANAGER_Initialize 0034  
                        putch@txData 0026                __end_of_EUSART1_Write 15DA  
                      ?_I2C_SDA_READ 0001             __end_of_process_data_opt 0A66  
                           ??___lmul 0025                             ??_printf 002A  
              __end_of_I2C_SDA_CLEAR 1910                             ??_strchr 0005  
                           ??_strcmp 0005                             ??_strcpy 0029  
                           ??_strlen 0003                             ??_strtol 00EE  
                     _eusart1RxCount 002D                             ??_strstr 0014  
                        __pbssCOMRAM 002B                __end_of_I2C_SCL_CLEAR 1914  
      __size_of_EUSART1_Transmit_ISR 002E                        __pcstackBANK0 00E0  
                      __pcstackBANK1 01A8                         _isalpha$1477 0029  
           __size_of_TMR2_Initialize 0012                     ?_I2C_SDA_OUT_SET 0001  
                       _isdigit$1480 0026                       ??_I2C_SDA_READ 0025  
                      _Soft_I2C_Init 17E2                        _Soft_I2C_Stop 185E  
       __size_of_EUSART1_Receive_ISR 0142                     ___lwdiv@dividend 0025  
             _PIN_MANAGER_Initialize 1644                            __pintcode 0008  
                   ??_Soft_I2C_Start 0025                        __pmediumconst FEA2  
                           ?___awmod 00E8                    __size_of_wait_5ms 0034  
                   ?_I2C_SCL_OUT_SET 0001                             ?___lwdiv 0025  
                           ?___lwmod 00E3                             ?_getUUID 0001  
       ??_INTERRUPT_InterruptManager 0017                     __CFG_PRICLKEN$ON 000000  
                           _BAUDCON1 000FB8                             ?_isalpha 0001  
                           ?_isdigit 0001                             ?_isspace 0001  
                           ?_isupper 0001             EUSART1_Receive_ISR@state 0015  
                          _hexpowers FEAD                     ___lwdiv@quotient 00E1  
               Soft_I2C_ReadByte@ack 0025                       ?_Soft_I2C_Init 0001  
                           ?_strncmp 0007                            _read_line 18D8  
                           ?_toupper 0001                 Soft_I2C_ReadByte@val 0026  
                     ?_Soft_I2C_Stop 0001                       __size_of_srand 000E  
                     __size_of_putch 000A                   _Soft_I2C_WriteByte 131C  
               _INTERRUPT_Initialize 18FA                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D             __size_of_TMR2_StartTimer 0004  
                ?_Soft_I2C_WriteByte 0001                             i2u135_40 11AC  
__size_of_INTERRUPT_InterruptManager 008C                             i2u135_47 11A2  
                           i2u136_40 11D0                             i2u136_47 11C6  
                           i2u138_40 11FE                             i2u138_47 11F4  
                           _PIR1bits 000F9E                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                            _uartState 0034  
                           _PSTR1CON 000FB9                           printf@flag 00F1  
               ??_Soft_I2C_WriteByte 0025                            main@delay 00FB  
                         printf@prec 00F0                     _EPWM1_Initialize 1802  
                       _isspace$1483 0026                    ___lmul@multiplier 00E0  
                        _INTCON2bits 000FF1                           ?_read_line 0001  
                          copy_data0 14F6                ?_INTERRUPT_Initialize 0001  
                  ??_TMR2_Initialize 0025                EUSART1_Read@readValue 0001  
                       ?_I2C_SDA_SET 0001                         ?_I2C_SCL_SET 0001  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTB5 000000  
            ??_OSCILLATOR_Initialize 0025                 __end_of_I2C_SDA_READ 18F0  
                   __size_of___awmod 00A2          __size_of_EUSART1_Initialize 0034  
                   __size_of___lwdiv 005E                     __size_of___lwmod 005C  
                   __size_of_getUUID 002A                           _ANSELCbits 000F3A  
                       _isupper$1486 0026                     __size_of_isalpha 0028  
                   __size_of_isdigit 001E                      ___lwdiv@divisor 0027  
                    ??_Soft_I2C_Init 0025                     __size_of_isspace 0026  
                    ___lwdiv@counter 00E0                      ??_Soft_I2C_Stop 0025  
                           __ptext10 138C                             __ptext11 077A  
                           __ptext20 1044                             __ptext12 176A  
                           __ptext21 131C                             __ptext13 16E0  
                           __ptext30 1914                             __ptext22 185E  
                           __ptext14 18D8                             __ptext31 1918  
                           __ptext23 170E                             __ptext15 0A66  
                           __ptext40 1678                             __ptext32 191C  
                           __ptext24 10E6                             __ptext16 18F0  
                           __ptext41 1802                             __ptext33 1920  
                           __ptext25 18E4                             __ptext17 15A0  
                           __ptext50 16AC                             __ptext34 187C  
                           __ptext26 1908                             __ptext18 1456  
                           __ptext43 173C                             __ptext35 18AA  
                           __ptext27 190C                             __ptext19 13F8  
                           __ptext44 0F02                             __ptext36 1924  
                           __ptext28 1910                             __ptext45 1210  
                           __ptext37 1644                             __ptext29 17E2  
                           __ptext46 1296                             __ptext38 18CA  
                           __ptext47 1560                             __ptext39 18FA  
                           __ptext48 15DA                             __ptext49 1180  
                   __size_of_isupper 001E                     __size_of_strncmp 0086  
                   __size_of_toupper 0014                           strcpy@from 0027  
                      __size_of_main 06E2                        __size_of_rand 0054  
                          wait_5ms@i 002A                            wait_5ms@j 0025  
                         strncmp@len 000B             process_data_opt@exponent 01A9  
                           _wait_5ms 1610                    ?_process_data_opt 00F5  
                           int$flags 003B                           strtol@base 00EC  
                         strtol@sign 00F2                    ??_TMR2_StartTimer 0025  
 __end_of_INTERRUPT_InterruptManager 0094           _INTERRUPT_InterruptManager 0008  
                          printf@idx 00ED                            printf@val 00F2  
                 ??_process_data_opt 00F6                  _EUSART1_Receive_ISR 0F02  
                         _INTCONbits 000FF2                             isalpha@c 002A  
                           isdigit@c 0027               ??_INTERRUPT_Initialize 0025  
                        ??_read_line 0025                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0001                            strchr@chr 0003  
                   ___lwmod@dividend 00E3                            strchr@ptr 0001  
                           isspace@c 0027              ?_PIN_MANAGER_Initialize 0001  
                         _RCSTA1bits 000FAB                             isupper@c 0027  
                 Soft_I2C_ReadByte@i 0027         __end_of_EUSART1_Transmit_ISR 176A  
                          strncmp@s1 0007                            strncmp@s2 0009  
                           printf@ap 00EE               __size_of_EUSART1_Write 003A  
                           strcmp@s1 0001                             strcmp@s2 0003  
                    ___lwmod@divisor 00E5                             strcpy@cp 0029  
                           strlen@cp 0005                             strcpy@to 0025  
                    ___lwmod@counter 0029                             toupper@c 0025  
                  __CFG_T3CMX$PORTC0 000000                             strstr@s1 0010  
                           strstr@s2 0012                ??_EUSART1_Receive_ISR 0014  
     __end_of_PIN_MANAGER_Initialize 1678                    __CFG_FOSC$INTIO67 000000  
           __size_of_I2C_SDA_OUT_SET 0004              __size_of_I2C_SDA_IN_SET 0004  
             __size_of_I2C_SDA_CLEAR 0004                __size_of_I2C_SDA_READ 000C  
           __end_of_EPWM1_Initialize 1822                 __size_of_I2C_SDA_SET 0004  
             __size_of_I2C_SCL_CLEAR 0004  
